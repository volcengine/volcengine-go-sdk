// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeScheduleEventsCommon = "DescribeScheduleEvents"

// DescribeScheduleEventsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeScheduleEventsCommon operation. The "output" return
// value will be populated with the DescribeScheduleEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeScheduleEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeScheduleEventsCommon Send returns without error.
//
// See DescribeScheduleEventsCommon for more information on using the DescribeScheduleEventsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeScheduleEventsCommonRequest method.
//    req, resp := client.DescribeScheduleEventsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeScheduleEventsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeScheduleEventsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeScheduleEventsCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeScheduleEventsCommon for usage and error information.
func (c *VEDBM) DescribeScheduleEventsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeScheduleEventsCommonRequest(input)
	return out, req.Send()
}

// DescribeScheduleEventsCommonWithContext is the same as DescribeScheduleEventsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScheduleEventsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeScheduleEventsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeScheduleEventsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeScheduleEvents = "DescribeScheduleEvents"

// DescribeScheduleEventsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeScheduleEvents operation. The "output" return
// value will be populated with the DescribeScheduleEventsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeScheduleEventsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeScheduleEventsCommon Send returns without error.
//
// See DescribeScheduleEvents for more information on using the DescribeScheduleEvents
// API call, and error handling.
//
//    // Example sending a request using the DescribeScheduleEventsRequest method.
//    req, resp := client.DescribeScheduleEventsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeScheduleEventsRequest(input *DescribeScheduleEventsInput) (req *request.Request, output *DescribeScheduleEventsOutput) {
	op := &request.Operation{
		Name:       opDescribeScheduleEvents,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeScheduleEventsInput{}
	}

	output = &DescribeScheduleEventsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeScheduleEvents API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeScheduleEvents for usage and error information.
func (c *VEDBM) DescribeScheduleEvents(input *DescribeScheduleEventsInput) (*DescribeScheduleEventsOutput, error) {
	req, out := c.DescribeScheduleEventsRequest(input)
	return out, req.Send()
}

// DescribeScheduleEventsWithContext is the same as DescribeScheduleEvents with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeScheduleEvents for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeScheduleEventsWithContext(ctx volcengine.Context, input *DescribeScheduleEventsInput, opts ...request.Option) (*DescribeScheduleEventsOutput, error) {
	req, out := c.DescribeScheduleEventsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeScheduleEventsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	EventId *string `type:"string" json:",omitempty"`

	EventKind []*string `type:"list" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	Limit *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeScheduleEventsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScheduleEventsInput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *DescribeScheduleEventsInput) SetBeginTime(v string) *DescribeScheduleEventsInput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeScheduleEventsInput) SetEndTime(v string) *DescribeScheduleEventsInput {
	s.EndTime = &v
	return s
}

// SetEventId sets the EventId field's value.
func (s *DescribeScheduleEventsInput) SetEventId(v string) *DescribeScheduleEventsInput {
	s.EventId = &v
	return s
}

// SetEventKind sets the EventKind field's value.
func (s *DescribeScheduleEventsInput) SetEventKind(v []*string) *DescribeScheduleEventsInput {
	s.EventKind = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeScheduleEventsInput) SetInstanceId(v string) *DescribeScheduleEventsInput {
	s.InstanceId = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *DescribeScheduleEventsInput) SetLimit(v int32) *DescribeScheduleEventsInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *DescribeScheduleEventsInput) SetOffset(v int32) *DescribeScheduleEventsInput {
	s.Offset = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeScheduleEventsInput) SetProjectName(v string) *DescribeScheduleEventsInput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeScheduleEventsInput) SetStatus(v []*string) *DescribeScheduleEventsInput {
	s.Status = v
	return s
}

type DescribeScheduleEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ScheduleTasksInfo []*ScheduleTasksInfoForDescribeScheduleEventsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeScheduleEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeScheduleEventsOutput) GoString() string {
	return s.String()
}

// SetScheduleTasksInfo sets the ScheduleTasksInfo field's value.
func (s *DescribeScheduleEventsOutput) SetScheduleTasksInfo(v []*ScheduleTasksInfoForDescribeScheduleEventsOutput) *DescribeScheduleEventsOutput {
	s.ScheduleTasksInfo = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeScheduleEventsOutput) SetTotal(v int32) *DescribeScheduleEventsOutput {
	s.Total = &v
	return s
}

type ScheduleTasksInfoForDescribeScheduleEventsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int32 `type:"int32" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	EventId *string `type:"string" json:",omitempty"`

	EventKind *string `type:"string" json:",omitempty" enum:"EnumOfEventKindForDescribeScheduleEventsOutput"`

	InstanceID *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`

	PlannedStartTime *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	ScheduleType *string `type:"string" json:",omitempty" enum:"EnumOfScheduleTypeForDescribeScheduleEventsOutput"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForDescribeScheduleEventsOutput"`
}

// String returns the string representation
func (s ScheduleTasksInfoForDescribeScheduleEventsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduleTasksInfoForDescribeScheduleEventsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetAccountID(v int32) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.AccountID = &v
	return s
}

// SetBeginTime sets the BeginTime field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetBeginTime(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.BeginTime = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetEndTime(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.EndTime = &v
	return s
}

// SetEventId sets the EventId field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetEventId(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.EventId = &v
	return s
}

// SetEventKind sets the EventKind field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetEventKind(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.EventKind = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetInstanceID(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.InstanceID = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetInstanceName(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.InstanceName = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetMessage(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.Message = &v
	return s
}

// SetPlannedStartTime sets the PlannedStartTime field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetPlannedStartTime(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.PlannedStartTime = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetProjectName(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.ProjectName = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetRequestId(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.RequestId = &v
	return s
}

// SetScheduleType sets the ScheduleType field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetScheduleType(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.ScheduleType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ScheduleTasksInfoForDescribeScheduleEventsOutput) SetStatus(v string) *ScheduleTasksInfoForDescribeScheduleEventsOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfEventKindForDescribeScheduleEventsOutputInspection is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputInspection = "Inspection"

	// EnumOfEventKindForDescribeScheduleEventsOutputModifyClusterParams is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputModifyClusterParams = "ModifyClusterParams"

	// EnumOfEventKindForDescribeScheduleEventsOutputModifyDbinstanceParameters is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputModifyDbinstanceParameters = "ModifyDBInstanceParameters"

	// EnumOfEventKindForDescribeScheduleEventsOutputModifyDbinstanceSpec is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputModifyDbinstanceSpec = "ModifyDBInstanceSpec"

	// EnumOfEventKindForDescribeScheduleEventsOutputRestartDbinstance is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputRestartDbinstance = "RestartDBInstance"

	// EnumOfEventKindForDescribeScheduleEventsOutputUpgradeInstance is a EnumOfEventKindForDescribeScheduleEventsOutput enum value
	EnumOfEventKindForDescribeScheduleEventsOutputUpgradeInstance = "UpgradeInstance"
)

const (
	// EnumOfEventKindListForDescribeScheduleEventsInputModifyDbinstanceParameters is a EnumOfEventKindListForDescribeScheduleEventsInput enum value
	EnumOfEventKindListForDescribeScheduleEventsInputModifyDbinstanceParameters = "ModifyDBInstanceParameters"

	// EnumOfEventKindListForDescribeScheduleEventsInputModifyDbinstanceSpec is a EnumOfEventKindListForDescribeScheduleEventsInput enum value
	EnumOfEventKindListForDescribeScheduleEventsInputModifyDbinstanceSpec = "ModifyDBInstanceSpec"

	// EnumOfEventKindListForDescribeScheduleEventsInputRestartDbinstance is a EnumOfEventKindListForDescribeScheduleEventsInput enum value
	EnumOfEventKindListForDescribeScheduleEventsInputRestartDbinstance = "RestartDBInstance"

	// EnumOfEventKindListForDescribeScheduleEventsInputUpgradeInstance is a EnumOfEventKindListForDescribeScheduleEventsInput enum value
	EnumOfEventKindListForDescribeScheduleEventsInputUpgradeInstance = "UpgradeInstance"
)

const (
	// EnumOfScheduleTypeForDescribeScheduleEventsOutputImmediate is a EnumOfScheduleTypeForDescribeScheduleEventsOutput enum value
	EnumOfScheduleTypeForDescribeScheduleEventsOutputImmediate = "Immediate"

	// EnumOfScheduleTypeForDescribeScheduleEventsOutputMaintainTime is a EnumOfScheduleTypeForDescribeScheduleEventsOutput enum value
	EnumOfScheduleTypeForDescribeScheduleEventsOutputMaintainTime = "MaintainTime"

	// EnumOfScheduleTypeForDescribeScheduleEventsOutputSpecifiedTime is a EnumOfScheduleTypeForDescribeScheduleEventsOutput enum value
	EnumOfScheduleTypeForDescribeScheduleEventsOutputSpecifiedTime = "SpecifiedTime"
)

const (
	// EnumOfStatusForDescribeScheduleEventsOutputCancel is a EnumOfStatusForDescribeScheduleEventsOutput enum value
	EnumOfStatusForDescribeScheduleEventsOutputCancel = "cancel"

	// EnumOfStatusForDescribeScheduleEventsOutputExecuting is a EnumOfStatusForDescribeScheduleEventsOutput enum value
	EnumOfStatusForDescribeScheduleEventsOutputExecuting = "executing"

	// EnumOfStatusForDescribeScheduleEventsOutputFailure is a EnumOfStatusForDescribeScheduleEventsOutput enum value
	EnumOfStatusForDescribeScheduleEventsOutputFailure = "failure"

	// EnumOfStatusForDescribeScheduleEventsOutputFinish is a EnumOfStatusForDescribeScheduleEventsOutput enum value
	EnumOfStatusForDescribeScheduleEventsOutputFinish = "finish"

	// EnumOfStatusForDescribeScheduleEventsOutputPending is a EnumOfStatusForDescribeScheduleEventsOutput enum value
	EnumOfStatusForDescribeScheduleEventsOutputPending = "pending"
)

const (
	// EnumOfStatusListForDescribeScheduleEventsInputCancel is a EnumOfStatusListForDescribeScheduleEventsInput enum value
	EnumOfStatusListForDescribeScheduleEventsInputCancel = "cancel"

	// EnumOfStatusListForDescribeScheduleEventsInputExecuting is a EnumOfStatusListForDescribeScheduleEventsInput enum value
	EnumOfStatusListForDescribeScheduleEventsInputExecuting = "executing"

	// EnumOfStatusListForDescribeScheduleEventsInputFailure is a EnumOfStatusListForDescribeScheduleEventsInput enum value
	EnumOfStatusListForDescribeScheduleEventsInputFailure = "failure"

	// EnumOfStatusListForDescribeScheduleEventsInputFinish is a EnumOfStatusListForDescribeScheduleEventsInput enum value
	EnumOfStatusListForDescribeScheduleEventsInputFinish = "finish"

	// EnumOfStatusListForDescribeScheduleEventsInputPending is a EnumOfStatusListForDescribeScheduleEventsInput enum value
	EnumOfStatusListForDescribeScheduleEventsInputPending = "pending"
)
