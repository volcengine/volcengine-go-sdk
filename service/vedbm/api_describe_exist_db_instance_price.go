// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeExistDBInstancePriceCommon = "DescribeExistDBInstancePrice"

// DescribeExistDBInstancePriceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeExistDBInstancePriceCommon operation. The "output" return
// value will be populated with the DescribeExistDBInstancePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeExistDBInstancePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeExistDBInstancePriceCommon Send returns without error.
//
// See DescribeExistDBInstancePriceCommon for more information on using the DescribeExistDBInstancePriceCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeExistDBInstancePriceCommonRequest method.
//    req, resp := client.DescribeExistDBInstancePriceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeExistDBInstancePriceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeExistDBInstancePriceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeExistDBInstancePriceCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeExistDBInstancePriceCommon for usage and error information.
func (c *VEDBM) DescribeExistDBInstancePriceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeExistDBInstancePriceCommonRequest(input)
	return out, req.Send()
}

// DescribeExistDBInstancePriceCommonWithContext is the same as DescribeExistDBInstancePriceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeExistDBInstancePriceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeExistDBInstancePriceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeExistDBInstancePriceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeExistDBInstancePrice = "DescribeExistDBInstancePrice"

// DescribeExistDBInstancePriceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeExistDBInstancePrice operation. The "output" return
// value will be populated with the DescribeExistDBInstancePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeExistDBInstancePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeExistDBInstancePriceCommon Send returns without error.
//
// See DescribeExistDBInstancePrice for more information on using the DescribeExistDBInstancePrice
// API call, and error handling.
//
//    // Example sending a request using the DescribeExistDBInstancePriceRequest method.
//    req, resp := client.DescribeExistDBInstancePriceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeExistDBInstancePriceRequest(input *DescribeExistDBInstancePriceInput) (req *request.Request, output *DescribeExistDBInstancePriceOutput) {
	op := &request.Operation{
		Name:       opDescribeExistDBInstancePrice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeExistDBInstancePriceInput{}
	}

	output = &DescribeExistDBInstancePriceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeExistDBInstancePrice API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeExistDBInstancePrice for usage and error information.
func (c *VEDBM) DescribeExistDBInstancePrice(input *DescribeExistDBInstancePriceInput) (*DescribeExistDBInstancePriceOutput, error) {
	req, out := c.DescribeExistDBInstancePriceRequest(input)
	return out, req.Send()
}

// DescribeExistDBInstancePriceWithContext is the same as DescribeExistDBInstancePrice with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeExistDBInstancePrice for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeExistDBInstancePriceWithContext(ctx volcengine.Context, input *DescribeExistDBInstancePriceInput, opts ...request.Option) (*DescribeExistDBInstancePriceOutput, error) {
	req, out := c.DescribeExistDBInstancePriceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeItemPriceForDescribeExistDBInstancePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemCode *string `type:"string" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`

	UnitPrice *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ChargeItemPriceForDescribeExistDBInstancePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeItemPriceForDescribeExistDBInstancePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *ChargeItemPriceForDescribeExistDBInstancePriceOutput) SetChargeItemCode(v string) *ChargeItemPriceForDescribeExistDBInstancePriceOutput {
	s.ChargeItemCode = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ChargeItemPriceForDescribeExistDBInstancePriceOutput) SetDiscountPrice(v float64) *ChargeItemPriceForDescribeExistDBInstancePriceOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ChargeItemPriceForDescribeExistDBInstancePriceOutput) SetOriginalPrice(v float64) *ChargeItemPriceForDescribeExistDBInstancePriceOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ChargeItemPriceForDescribeExistDBInstancePriceOutput) SetPayablePrice(v float64) *ChargeItemPriceForDescribeExistDBInstancePriceOutput {
	s.PayablePrice = &v
	return s
}

// SetUnitPrice sets the UnitPrice field's value.
func (s *ChargeItemPriceForDescribeExistDBInstancePriceOutput) SetUnitPrice(v float64) *ChargeItemPriceForDescribeExistDBInstancePriceOutput {
	s.UnitPrice = &v
	return s
}

type ConfigItemPriceForDescribeExistDBInstancePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemPrices []*ChargeItemPriceForDescribeExistDBInstancePriceOutput `type:"list" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	CouponAmount *float64 `type:"double" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`

	Quantity *int32 `type:"int32" json:",omitempty"`

	RefundAmount *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ConfigItemPriceForDescribeExistDBInstancePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigItemPriceForDescribeExistDBInstancePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeExistDBInstancePriceOutput) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.ChargeItemPrices = v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetConfigurationCode(v string) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.ConfigurationCode = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetCouponAmount(v float64) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.CouponAmount = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetDiscountPrice(v float64) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.DiscountPrice = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetInstanceID(v string) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.InstanceID = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetOriginalPrice(v float64) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetPayablePrice(v float64) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.PayablePrice = &v
	return s
}

// SetQuantity sets the Quantity field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetQuantity(v int32) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.Quantity = &v
	return s
}

// SetRefundAmount sets the RefundAmount field's value.
func (s *ConfigItemPriceForDescribeExistDBInstancePriceOutput) SetRefundAmount(v float64) *ConfigItemPriceForDescribeExistDBInstancePriceOutput {
	s.RefundAmount = &v
	return s
}

type DescribeExistDBInstancePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty" enum:"EnumOfChargeTypeForDescribeExistDBInstancePriceInput"`

	Instances []*InstanceForDescribeExistDBInstancePriceInput `type:"list" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`

	PeriodUnit *string `type:"string" json:",omitempty" enum:"EnumOfPeriodUnitForDescribeExistDBInstancePriceInput"`

	UserAction *string `type:"string" json:",omitempty" enum:"EnumOfUserActionForDescribeExistDBInstancePriceInput"`
}

// String returns the string representation
func (s DescribeExistDBInstancePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeExistDBInstancePriceInput) GoString() string {
	return s.String()
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeExistDBInstancePriceInput) SetChargeType(v string) *DescribeExistDBInstancePriceInput {
	s.ChargeType = &v
	return s
}

// SetInstances sets the Instances field's value.
func (s *DescribeExistDBInstancePriceInput) SetInstances(v []*InstanceForDescribeExistDBInstancePriceInput) *DescribeExistDBInstancePriceInput {
	s.Instances = v
	return s
}

// SetPeriod sets the Period field's value.
func (s *DescribeExistDBInstancePriceInput) SetPeriod(v int32) *DescribeExistDBInstancePriceInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *DescribeExistDBInstancePriceInput) SetPeriodUnit(v string) *DescribeExistDBInstancePriceInput {
	s.PeriodUnit = &v
	return s
}

// SetUserAction sets the UserAction field's value.
func (s *DescribeExistDBInstancePriceInput) SetUserAction(v string) *DescribeExistDBInstancePriceInput {
	s.UserAction = &v
	return s
}

type DescribeExistDBInstancePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ChargeItemPrices []*ChargeItemPriceForDescribeExistDBInstancePriceOutput `type:"list" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ConfigItemPrices []*ConfigItemPriceForDescribeExistDBInstancePriceOutput `type:"list" json:",omitempty"`

	Currency *string `type:"string" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s DescribeExistDBInstancePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeExistDBInstancePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *DescribeExistDBInstancePriceOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeExistDBInstancePriceOutput) *DescribeExistDBInstancePriceOutput {
	s.ChargeItemPrices = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeExistDBInstancePriceOutput) SetChargeType(v string) *DescribeExistDBInstancePriceOutput {
	s.ChargeType = &v
	return s
}

// SetConfigItemPrices sets the ConfigItemPrices field's value.
func (s *DescribeExistDBInstancePriceOutput) SetConfigItemPrices(v []*ConfigItemPriceForDescribeExistDBInstancePriceOutput) *DescribeExistDBInstancePriceOutput {
	s.ConfigItemPrices = v
	return s
}

// SetCurrency sets the Currency field's value.
func (s *DescribeExistDBInstancePriceOutput) SetCurrency(v string) *DescribeExistDBInstancePriceOutput {
	s.Currency = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *DescribeExistDBInstancePriceOutput) SetDiscountPrice(v float64) *DescribeExistDBInstancePriceOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *DescribeExistDBInstancePriceOutput) SetOriginalPrice(v float64) *DescribeExistDBInstancePriceOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *DescribeExistDBInstancePriceOutput) SetPayablePrice(v float64) *DescribeExistDBInstancePriceOutput {
	s.PayablePrice = &v
	return s
}

type InstanceForDescribeExistDBInstancePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	NodeSpecs []*NodeSpecForDescribeExistDBInstancePriceInput `type:"list" json:",omitempty"`

	PrePaidStorageInGB *int32 `type:"int32" json:",omitempty"`

	StorageChargeType *string `type:"string" json:",omitempty" enum:"EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInput"`
}

// String returns the string representation
func (s InstanceForDescribeExistDBInstancePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForDescribeExistDBInstancePriceInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForDescribeExistDBInstancePriceInput) SetInstanceId(v string) *InstanceForDescribeExistDBInstancePriceInput {
	s.InstanceId = &v
	return s
}

// SetNodeSpecs sets the NodeSpecs field's value.
func (s *InstanceForDescribeExistDBInstancePriceInput) SetNodeSpecs(v []*NodeSpecForDescribeExistDBInstancePriceInput) *InstanceForDescribeExistDBInstancePriceInput {
	s.NodeSpecs = v
	return s
}

// SetPrePaidStorageInGB sets the PrePaidStorageInGB field's value.
func (s *InstanceForDescribeExistDBInstancePriceInput) SetPrePaidStorageInGB(v int32) *InstanceForDescribeExistDBInstancePriceInput {
	s.PrePaidStorageInGB = &v
	return s
}

// SetStorageChargeType sets the StorageChargeType field's value.
func (s *InstanceForDescribeExistDBInstancePriceInput) SetStorageChargeType(v string) *InstanceForDescribeExistDBInstancePriceInput {
	s.StorageChargeType = &v
	return s
}

type NodeSpecForDescribeExistDBInstancePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	NodeNumber *int32 `type:"int32" json:",omitempty"`

	NodeSpec *string `type:"string" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty" enum:"EnumOfNodeTypeForDescribeExistDBInstancePriceInput"`
}

// String returns the string representation
func (s NodeSpecForDescribeExistDBInstancePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeSpecForDescribeExistDBInstancePriceInput) GoString() string {
	return s.String()
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *NodeSpecForDescribeExistDBInstancePriceInput) SetNodeNumber(v int32) *NodeSpecForDescribeExistDBInstancePriceInput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *NodeSpecForDescribeExistDBInstancePriceInput) SetNodeSpec(v string) *NodeSpecForDescribeExistDBInstancePriceInput {
	s.NodeSpec = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeSpecForDescribeExistDBInstancePriceInput) SetNodeType(v string) *NodeSpecForDescribeExistDBInstancePriceInput {
	s.NodeType = &v
	return s
}

const (
	// EnumOfChargeTypeForDescribeExistDBInstancePriceInputPostPaid is a EnumOfChargeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfChargeTypeForDescribeExistDBInstancePriceInputPostPaid = "PostPaid"

	// EnumOfChargeTypeForDescribeExistDBInstancePriceInputPrePaid is a EnumOfChargeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfChargeTypeForDescribeExistDBInstancePriceInputPrePaid = "PrePaid"
)

const (
	// EnumOfNodeTypeForDescribeExistDBInstancePriceInputApworkNode is a EnumOfNodeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfNodeTypeForDescribeExistDBInstancePriceInputApworkNode = "APWorkNode"

	// EnumOfNodeTypeForDescribeExistDBInstancePriceInputDbengine is a EnumOfNodeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfNodeTypeForDescribeExistDBInstancePriceInputDbengine = "DBEngine"
)

const (
	// EnumOfPeriodUnitForDescribeExistDBInstancePriceInputMonth is a EnumOfPeriodUnitForDescribeExistDBInstancePriceInput enum value
	EnumOfPeriodUnitForDescribeExistDBInstancePriceInputMonth = "month"

	// EnumOfPeriodUnitForDescribeExistDBInstancePriceInputYear is a EnumOfPeriodUnitForDescribeExistDBInstancePriceInput enum value
	EnumOfPeriodUnitForDescribeExistDBInstancePriceInputYear = "year"
)

const (
	// EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInputPostPaid is a EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInputPostPaid = "PostPaid"

	// EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInputPrePaid is a EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInput enum value
	EnumOfStorageChargeTypeForDescribeExistDBInstancePriceInputPrePaid = "PrePaid"
)

const (
	// EnumOfUserActionForDescribeExistDBInstancePriceInputModifyDbinstanceChargeType is a EnumOfUserActionForDescribeExistDBInstancePriceInput enum value
	EnumOfUserActionForDescribeExistDBInstancePriceInputModifyDbinstanceChargeType = "ModifyDBInstanceChargeType"

	// EnumOfUserActionForDescribeExistDBInstancePriceInputModifyDbinstanceSpec is a EnumOfUserActionForDescribeExistDBInstancePriceInput enum value
	EnumOfUserActionForDescribeExistDBInstancePriceInputModifyDbinstanceSpec = "ModifyDBInstanceSpec"
)
