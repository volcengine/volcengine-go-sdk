// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opRestoreToNewInstanceCommon = "RestoreToNewInstance"

// RestoreToNewInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the RestoreToNewInstanceCommon operation. The "output" return
// value will be populated with the RestoreToNewInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RestoreToNewInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after RestoreToNewInstanceCommon Send returns without error.
//
// See RestoreToNewInstanceCommon for more information on using the RestoreToNewInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the RestoreToNewInstanceCommonRequest method.
//    req, resp := client.RestoreToNewInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) RestoreToNewInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRestoreToNewInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RestoreToNewInstanceCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation RestoreToNewInstanceCommon for usage and error information.
func (c *VEDBM) RestoreToNewInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RestoreToNewInstanceCommonRequest(input)
	return out, req.Send()
}

// RestoreToNewInstanceCommonWithContext is the same as RestoreToNewInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RestoreToNewInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) RestoreToNewInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RestoreToNewInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRestoreToNewInstance = "RestoreToNewInstance"

// RestoreToNewInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the RestoreToNewInstance operation. The "output" return
// value will be populated with the RestoreToNewInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RestoreToNewInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after RestoreToNewInstanceCommon Send returns without error.
//
// See RestoreToNewInstance for more information on using the RestoreToNewInstance
// API call, and error handling.
//
//    // Example sending a request using the RestoreToNewInstanceRequest method.
//    req, resp := client.RestoreToNewInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) RestoreToNewInstanceRequest(input *RestoreToNewInstanceInput) (req *request.Request, output *RestoreToNewInstanceOutput) {
	op := &request.Operation{
		Name:       opRestoreToNewInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RestoreToNewInstanceInput{}
	}

	output = &RestoreToNewInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RestoreToNewInstance API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation RestoreToNewInstance for usage and error information.
func (c *VEDBM) RestoreToNewInstance(input *RestoreToNewInstanceInput) (*RestoreToNewInstanceOutput, error) {
	req, out := c.RestoreToNewInstanceRequest(input)
	return out, req.Send()
}

// RestoreToNewInstanceWithContext is the same as RestoreToNewInstance with the addition of
// the ability to pass a context and additional request options.
//
// See RestoreToNewInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) RestoreToNewInstanceWithContext(ctx volcengine.Context, input *RestoreToNewInstanceInput, opts ...request.Option) (*RestoreToNewInstanceOutput, error) {
	req, out := c.RestoreToNewInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type RestoreToNewInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	BackupId *string `type:"string" json:",omitempty"`

	// ChargeType is a required field
	ChargeType *string `type:"string" json:",omitempty" required:"true"`

	DBMinorVersion *string `type:"string" json:",omitempty" enum:"EnumOfDBMinorVersionForRestoreToNewInstanceInput"`

	DeletionProtection *string `type:"string" json:",omitempty" enum:"EnumOfDeletionProtectionForRestoreToNewInstanceInput"`

	InstanceName *string `type:"string" json:",omitempty"`

	// NodeNumber is a required field
	NodeNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// NodeSpec is a required field
	NodeSpec *string `type:"string" json:",omitempty" required:"true"`

	Period *int32 `type:"int32" json:",omitempty"`

	PeriodUnit *string `type:"string" json:",omitempty" enum:"EnumOfPeriodUnitForRestoreToNewInstanceInput"`

	Port *int32 `type:"int32" json:",omitempty"`

	PrePaidStorageInGB *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RestoreTime *string `type:"string" json:",omitempty"`

	// SrcInstanceId is a required field
	SrcInstanceId *string `type:"string" json:",omitempty" required:"true"`

	SrcProjectName *string `type:"string" json:",omitempty"`

	StorageChargeType *string `type:"string" json:",omitempty"`

	// SubnetId is a required field
	SubnetId *string `type:"string" json:",omitempty" required:"true"`

	Tags []*TagForRestoreToNewInstanceInput `type:"list" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	// VpcId is a required field
	VpcId *string `type:"string" json:",omitempty" required:"true"`

	// ZoneIds is a required field
	ZoneIds *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s RestoreToNewInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RestoreToNewInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RestoreToNewInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RestoreToNewInstanceInput"}
	if s.ChargeType == nil {
		invalidParams.Add(request.NewErrParamRequired("ChargeType"))
	}
	if s.NodeNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeNumber"))
	}
	if s.NodeSpec == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeSpec"))
	}
	if s.SrcInstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("SrcInstanceId"))
	}
	if s.SubnetId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubnetId"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}
	if s.ZoneIds == nil {
		invalidParams.Add(request.NewErrParamRequired("ZoneIds"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *RestoreToNewInstanceInput) SetAutoRenew(v bool) *RestoreToNewInstanceInput {
	s.AutoRenew = &v
	return s
}

// SetBackupId sets the BackupId field's value.
func (s *RestoreToNewInstanceInput) SetBackupId(v string) *RestoreToNewInstanceInput {
	s.BackupId = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *RestoreToNewInstanceInput) SetChargeType(v string) *RestoreToNewInstanceInput {
	s.ChargeType = &v
	return s
}

// SetDBMinorVersion sets the DBMinorVersion field's value.
func (s *RestoreToNewInstanceInput) SetDBMinorVersion(v string) *RestoreToNewInstanceInput {
	s.DBMinorVersion = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *RestoreToNewInstanceInput) SetDeletionProtection(v string) *RestoreToNewInstanceInput {
	s.DeletionProtection = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *RestoreToNewInstanceInput) SetInstanceName(v string) *RestoreToNewInstanceInput {
	s.InstanceName = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *RestoreToNewInstanceInput) SetNodeNumber(v int32) *RestoreToNewInstanceInput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *RestoreToNewInstanceInput) SetNodeSpec(v string) *RestoreToNewInstanceInput {
	s.NodeSpec = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *RestoreToNewInstanceInput) SetPeriod(v int32) *RestoreToNewInstanceInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *RestoreToNewInstanceInput) SetPeriodUnit(v string) *RestoreToNewInstanceInput {
	s.PeriodUnit = &v
	return s
}

// SetPort sets the Port field's value.
func (s *RestoreToNewInstanceInput) SetPort(v int32) *RestoreToNewInstanceInput {
	s.Port = &v
	return s
}

// SetPrePaidStorageInGB sets the PrePaidStorageInGB field's value.
func (s *RestoreToNewInstanceInput) SetPrePaidStorageInGB(v int32) *RestoreToNewInstanceInput {
	s.PrePaidStorageInGB = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *RestoreToNewInstanceInput) SetProjectName(v string) *RestoreToNewInstanceInput {
	s.ProjectName = &v
	return s
}

// SetRestoreTime sets the RestoreTime field's value.
func (s *RestoreToNewInstanceInput) SetRestoreTime(v string) *RestoreToNewInstanceInput {
	s.RestoreTime = &v
	return s
}

// SetSrcInstanceId sets the SrcInstanceId field's value.
func (s *RestoreToNewInstanceInput) SetSrcInstanceId(v string) *RestoreToNewInstanceInput {
	s.SrcInstanceId = &v
	return s
}

// SetSrcProjectName sets the SrcProjectName field's value.
func (s *RestoreToNewInstanceInput) SetSrcProjectName(v string) *RestoreToNewInstanceInput {
	s.SrcProjectName = &v
	return s
}

// SetStorageChargeType sets the StorageChargeType field's value.
func (s *RestoreToNewInstanceInput) SetStorageChargeType(v string) *RestoreToNewInstanceInput {
	s.StorageChargeType = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *RestoreToNewInstanceInput) SetSubnetId(v string) *RestoreToNewInstanceInput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *RestoreToNewInstanceInput) SetTags(v []*TagForRestoreToNewInstanceInput) *RestoreToNewInstanceInput {
	s.Tags = v
	return s
}

// SetTemplateId sets the TemplateId field's value.
func (s *RestoreToNewInstanceInput) SetTemplateId(v string) *RestoreToNewInstanceInput {
	s.TemplateId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *RestoreToNewInstanceInput) SetVpcId(v string) *RestoreToNewInstanceInput {
	s.VpcId = &v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *RestoreToNewInstanceInput) SetZoneIds(v string) *RestoreToNewInstanceInput {
	s.ZoneIds = &v
	return s
}

type RestoreToNewInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	OrderId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RestoreToNewInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RestoreToNewInstanceOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *RestoreToNewInstanceOutput) SetInstanceId(v string) *RestoreToNewInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetOrderId sets the OrderId field's value.
func (s *RestoreToNewInstanceOutput) SetOrderId(v string) *RestoreToNewInstanceOutput {
	s.OrderId = &v
	return s
}

type TagForRestoreToNewInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForRestoreToNewInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForRestoreToNewInstanceInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForRestoreToNewInstanceInput) SetKey(v string) *TagForRestoreToNewInstanceInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForRestoreToNewInstanceInput) SetValue(v string) *TagForRestoreToNewInstanceInput {
	s.Value = &v
	return s
}

const (
	// EnumOfDBMinorVersionForRestoreToNewInstanceInput20 is a EnumOfDBMinorVersionForRestoreToNewInstanceInput enum value
	EnumOfDBMinorVersionForRestoreToNewInstanceInput20 = "2.0"

	// EnumOfDBMinorVersionForRestoreToNewInstanceInput30 is a EnumOfDBMinorVersionForRestoreToNewInstanceInput enum value
	EnumOfDBMinorVersionForRestoreToNewInstanceInput30 = "3.0"

	// EnumOfDBMinorVersionForRestoreToNewInstanceInput31 is a EnumOfDBMinorVersionForRestoreToNewInstanceInput enum value
	EnumOfDBMinorVersionForRestoreToNewInstanceInput31 = "3.1"

	// EnumOfDBMinorVersionForRestoreToNewInstanceInput32 is a EnumOfDBMinorVersionForRestoreToNewInstanceInput enum value
	EnumOfDBMinorVersionForRestoreToNewInstanceInput32 = "3.2"

	// EnumOfDBMinorVersionForRestoreToNewInstanceInput33 is a EnumOfDBMinorVersionForRestoreToNewInstanceInput enum value
	EnumOfDBMinorVersionForRestoreToNewInstanceInput33 = "3.3"
)

const (
	// EnumOfDeletionProtectionForRestoreToNewInstanceInputDisabled is a EnumOfDeletionProtectionForRestoreToNewInstanceInput enum value
	EnumOfDeletionProtectionForRestoreToNewInstanceInputDisabled = "disabled"

	// EnumOfDeletionProtectionForRestoreToNewInstanceInputEnabled is a EnumOfDeletionProtectionForRestoreToNewInstanceInput enum value
	EnumOfDeletionProtectionForRestoreToNewInstanceInputEnabled = "enabled"
)

const (
	// EnumOfPeriodUnitForRestoreToNewInstanceInputMonth is a EnumOfPeriodUnitForRestoreToNewInstanceInput enum value
	EnumOfPeriodUnitForRestoreToNewInstanceInputMonth = "Month"

	// EnumOfPeriodUnitForRestoreToNewInstanceInputYear is a EnumOfPeriodUnitForRestoreToNewInstanceInput enum value
	EnumOfPeriodUnitForRestoreToNewInstanceInputYear = "Year"
)
