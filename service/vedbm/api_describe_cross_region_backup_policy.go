// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCrossRegionBackupPolicyCommon = "DescribeCrossRegionBackupPolicy"

// DescribeCrossRegionBackupPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCrossRegionBackupPolicyCommon operation. The "output" return
// value will be populated with the DescribeCrossRegionBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCrossRegionBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCrossRegionBackupPolicyCommon Send returns without error.
//
// See DescribeCrossRegionBackupPolicyCommon for more information on using the DescribeCrossRegionBackupPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCrossRegionBackupPolicyCommonRequest method.
//    req, resp := client.DescribeCrossRegionBackupPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeCrossRegionBackupPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCrossRegionBackupPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCrossRegionBackupPolicyCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeCrossRegionBackupPolicyCommon for usage and error information.
func (c *VEDBM) DescribeCrossRegionBackupPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCrossRegionBackupPolicyCommonRequest(input)
	return out, req.Send()
}

// DescribeCrossRegionBackupPolicyCommonWithContext is the same as DescribeCrossRegionBackupPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCrossRegionBackupPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeCrossRegionBackupPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCrossRegionBackupPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCrossRegionBackupPolicy = "DescribeCrossRegionBackupPolicy"

// DescribeCrossRegionBackupPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCrossRegionBackupPolicy operation. The "output" return
// value will be populated with the DescribeCrossRegionBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCrossRegionBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCrossRegionBackupPolicyCommon Send returns without error.
//
// See DescribeCrossRegionBackupPolicy for more information on using the DescribeCrossRegionBackupPolicy
// API call, and error handling.
//
//    // Example sending a request using the DescribeCrossRegionBackupPolicyRequest method.
//    req, resp := client.DescribeCrossRegionBackupPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeCrossRegionBackupPolicyRequest(input *DescribeCrossRegionBackupPolicyInput) (req *request.Request, output *DescribeCrossRegionBackupPolicyOutput) {
	op := &request.Operation{
		Name:       opDescribeCrossRegionBackupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCrossRegionBackupPolicyInput{}
	}

	output = &DescribeCrossRegionBackupPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCrossRegionBackupPolicy API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeCrossRegionBackupPolicy for usage and error information.
func (c *VEDBM) DescribeCrossRegionBackupPolicy(input *DescribeCrossRegionBackupPolicyInput) (*DescribeCrossRegionBackupPolicyOutput, error) {
	req, out := c.DescribeCrossRegionBackupPolicyRequest(input)
	return out, req.Send()
}

// DescribeCrossRegionBackupPolicyWithContext is the same as DescribeCrossRegionBackupPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCrossRegionBackupPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeCrossRegionBackupPolicyWithContext(ctx volcengine.Context, input *DescribeCrossRegionBackupPolicyInput, opts ...request.Option) (*DescribeCrossRegionBackupPolicyOutput, error) {
	req, out := c.DescribeCrossRegionBackupPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCrossRegionBackupPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeCrossRegionBackupPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossRegionBackupPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCrossRegionBackupPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCrossRegionBackupPolicyInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeCrossRegionBackupPolicyInput) SetInstanceId(v string) *DescribeCrossRegionBackupPolicyInput {
	s.InstanceId = &v
	return s
}

type DescribeCrossRegionBackupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CrossRegionBackup *bool `type:"boolean" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	Retention *int32 `type:"int32" json:",omitempty"`

	TargetRegion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCrossRegionBackupPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossRegionBackupPolicyOutput) GoString() string {
	return s.String()
}

// SetCrossRegionBackup sets the CrossRegionBackup field's value.
func (s *DescribeCrossRegionBackupPolicyOutput) SetCrossRegionBackup(v bool) *DescribeCrossRegionBackupPolicyOutput {
	s.CrossRegionBackup = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeCrossRegionBackupPolicyOutput) SetInstanceId(v string) *DescribeCrossRegionBackupPolicyOutput {
	s.InstanceId = &v
	return s
}

// SetRetention sets the Retention field's value.
func (s *DescribeCrossRegionBackupPolicyOutput) SetRetention(v int32) *DescribeCrossRegionBackupPolicyOutput {
	s.Retention = &v
	return s
}

// SetTargetRegion sets the TargetRegion field's value.
func (s *DescribeCrossRegionBackupPolicyOutput) SetTargetRegion(v string) *DescribeCrossRegionBackupPolicyOutput {
	s.TargetRegion = &v
	return s
}
