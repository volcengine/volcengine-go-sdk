// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeBackupsCommon = "DescribeBackups"

// DescribeBackupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackupsCommon operation. The "output" return
// value will be populated with the DescribeBackupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupsCommon Send returns without error.
//
// See DescribeBackupsCommon for more information on using the DescribeBackupsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupsCommonRequest method.
//    req, resp := client.DescribeBackupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeBackupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeBackupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupsCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeBackupsCommon for usage and error information.
func (c *VEDBM) DescribeBackupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupsCommonRequest(input)
	return out, req.Send()
}

// DescribeBackupsCommonWithContext is the same as DescribeBackupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeBackupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBackups = "DescribeBackups"

// DescribeBackupsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackups operation. The "output" return
// value will be populated with the DescribeBackupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupsCommon Send returns without error.
//
// See DescribeBackups for more information on using the DescribeBackups
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupsRequest method.
//    req, resp := client.DescribeBackupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeBackupsRequest(input *DescribeBackupsInput) (req *request.Request, output *DescribeBackupsOutput) {
	op := &request.Operation{
		Name:       opDescribeBackups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeBackupsInput{}
	}

	output = &DescribeBackupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackups API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeBackups for usage and error information.
func (c *VEDBM) DescribeBackups(input *DescribeBackupsInput) (*DescribeBackupsOutput, error) {
	req, out := c.DescribeBackupsRequest(input)
	return out, req.Send()
}

// DescribeBackupsWithContext is the same as DescribeBackups with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeBackupsWithContext(ctx volcengine.Context, input *DescribeBackupsInput, opts ...request.Option) (*DescribeBackupsOutput, error) {
	req, out := c.DescribeBackupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BackupsInfoForDescribeBackupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupEndTime *string `type:"string" json:",omitempty"`

	BackupFileSize *int32 `type:"int32" json:",omitempty"`

	BackupId *string `type:"string" json:",omitempty"`

	BackupMethod *string `type:"string" json:",omitempty"`

	BackupStartTime *string `type:"string" json:",omitempty"`

	BackupStatus *string `type:"string" json:",omitempty" enum:"EnumOfBackupStatusForDescribeBackupsOutput"`

	BackupType *string `type:"string" json:",omitempty"`

	ConsistentTime *string `type:"string" json:",omitempty"`

	CreateType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BackupsInfoForDescribeBackupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BackupsInfoForDescribeBackupsOutput) GoString() string {
	return s.String()
}

// SetBackupEndTime sets the BackupEndTime field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupEndTime(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupEndTime = &v
	return s
}

// SetBackupFileSize sets the BackupFileSize field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupFileSize(v int32) *BackupsInfoForDescribeBackupsOutput {
	s.BackupFileSize = &v
	return s
}

// SetBackupId sets the BackupId field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupId(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupId = &v
	return s
}

// SetBackupMethod sets the BackupMethod field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupMethod(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupMethod = &v
	return s
}

// SetBackupStartTime sets the BackupStartTime field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupStartTime(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupStartTime = &v
	return s
}

// SetBackupStatus sets the BackupStatus field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupStatus(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupStatus = &v
	return s
}

// SetBackupType sets the BackupType field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetBackupType(v string) *BackupsInfoForDescribeBackupsOutput {
	s.BackupType = &v
	return s
}

// SetConsistentTime sets the ConsistentTime field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetConsistentTime(v string) *BackupsInfoForDescribeBackupsOutput {
	s.ConsistentTime = &v
	return s
}

// SetCreateType sets the CreateType field's value.
func (s *BackupsInfoForDescribeBackupsOutput) SetCreateType(v string) *BackupsInfoForDescribeBackupsOutput {
	s.CreateType = &v
	return s
}

type DescribeBackupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupEndTime *string `type:"string" json:",omitempty"`

	BackupMethod *string `type:"string" json:",omitempty" enum:"EnumOfBackupMethodForDescribeBackupsInput"`

	BackupStartTime *string `type:"string" json:",omitempty"`

	BackupStatus *string `type:"string" json:",omitempty" enum:"EnumOfBackupStatusForDescribeBackupsInput"`

	BackupType *string `type:"string" json:",omitempty" enum:"EnumOfBackupTypeForDescribeBackupsInput"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeBackupsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeBackupsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupEndTime sets the BackupEndTime field's value.
func (s *DescribeBackupsInput) SetBackupEndTime(v string) *DescribeBackupsInput {
	s.BackupEndTime = &v
	return s
}

// SetBackupMethod sets the BackupMethod field's value.
func (s *DescribeBackupsInput) SetBackupMethod(v string) *DescribeBackupsInput {
	s.BackupMethod = &v
	return s
}

// SetBackupStartTime sets the BackupStartTime field's value.
func (s *DescribeBackupsInput) SetBackupStartTime(v string) *DescribeBackupsInput {
	s.BackupStartTime = &v
	return s
}

// SetBackupStatus sets the BackupStatus field's value.
func (s *DescribeBackupsInput) SetBackupStatus(v string) *DescribeBackupsInput {
	s.BackupStatus = &v
	return s
}

// SetBackupType sets the BackupType field's value.
func (s *DescribeBackupsInput) SetBackupType(v string) *DescribeBackupsInput {
	s.BackupType = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeBackupsInput) SetInstanceId(v string) *DescribeBackupsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeBackupsInput) SetPageNumber(v int32) *DescribeBackupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeBackupsInput) SetPageSize(v int32) *DescribeBackupsInput {
	s.PageSize = &v
	return s
}

type DescribeBackupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BackupsInfo []*BackupsInfoForDescribeBackupsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupsOutput) GoString() string {
	return s.String()
}

// SetBackupsInfo sets the BackupsInfo field's value.
func (s *DescribeBackupsOutput) SetBackupsInfo(v []*BackupsInfoForDescribeBackupsOutput) *DescribeBackupsOutput {
	s.BackupsInfo = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeBackupsOutput) SetTotal(v int32) *DescribeBackupsOutput {
	s.Total = &v
	return s
}

const (
	// EnumOfBackupMethodForDescribeBackupsInputPhysical is a EnumOfBackupMethodForDescribeBackupsInput enum value
	EnumOfBackupMethodForDescribeBackupsInputPhysical = "Physical"
)

const (
	// EnumOfBackupStatusForDescribeBackupsInputFailed is a EnumOfBackupStatusForDescribeBackupsInput enum value
	EnumOfBackupStatusForDescribeBackupsInputFailed = "Failed"

	// EnumOfBackupStatusForDescribeBackupsInputRunning is a EnumOfBackupStatusForDescribeBackupsInput enum value
	EnumOfBackupStatusForDescribeBackupsInputRunning = "Running"

	// EnumOfBackupStatusForDescribeBackupsInputSuccess is a EnumOfBackupStatusForDescribeBackupsInput enum value
	EnumOfBackupStatusForDescribeBackupsInputSuccess = "Success"
)

const (
	// EnumOfBackupStatusForDescribeBackupsOutputFailed is a EnumOfBackupStatusForDescribeBackupsOutput enum value
	EnumOfBackupStatusForDescribeBackupsOutputFailed = "Failed"

	// EnumOfBackupStatusForDescribeBackupsOutputRunning is a EnumOfBackupStatusForDescribeBackupsOutput enum value
	EnumOfBackupStatusForDescribeBackupsOutputRunning = "Running"

	// EnumOfBackupStatusForDescribeBackupsOutputSuccess is a EnumOfBackupStatusForDescribeBackupsOutput enum value
	EnumOfBackupStatusForDescribeBackupsOutputSuccess = "Success"
)

const (
	// EnumOfBackupTypeForDescribeBackupsInputFull is a EnumOfBackupTypeForDescribeBackupsInput enum value
	EnumOfBackupTypeForDescribeBackupsInputFull = "Full"
)
