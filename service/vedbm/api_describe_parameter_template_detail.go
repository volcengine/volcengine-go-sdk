// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeParameterTemplateDetailCommon = "DescribeParameterTemplateDetail"

// DescribeParameterTemplateDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeParameterTemplateDetailCommon operation. The "output" return
// value will be populated with the DescribeParameterTemplateDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeParameterTemplateDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeParameterTemplateDetailCommon Send returns without error.
//
// See DescribeParameterTemplateDetailCommon for more information on using the DescribeParameterTemplateDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeParameterTemplateDetailCommonRequest method.
//    req, resp := client.DescribeParameterTemplateDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeParameterTemplateDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeParameterTemplateDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeParameterTemplateDetailCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeParameterTemplateDetailCommon for usage and error information.
func (c *VEDBM) DescribeParameterTemplateDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeParameterTemplateDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeParameterTemplateDetailCommonWithContext is the same as DescribeParameterTemplateDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeParameterTemplateDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeParameterTemplateDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeParameterTemplateDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeParameterTemplateDetail = "DescribeParameterTemplateDetail"

// DescribeParameterTemplateDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeParameterTemplateDetail operation. The "output" return
// value will be populated with the DescribeParameterTemplateDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeParameterTemplateDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeParameterTemplateDetailCommon Send returns without error.
//
// See DescribeParameterTemplateDetail for more information on using the DescribeParameterTemplateDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeParameterTemplateDetailRequest method.
//    req, resp := client.DescribeParameterTemplateDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeParameterTemplateDetailRequest(input *DescribeParameterTemplateDetailInput) (req *request.Request, output *DescribeParameterTemplateDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeParameterTemplateDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeParameterTemplateDetailInput{}
	}

	output = &DescribeParameterTemplateDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeParameterTemplateDetail API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeParameterTemplateDetail for usage and error information.
func (c *VEDBM) DescribeParameterTemplateDetail(input *DescribeParameterTemplateDetailInput) (*DescribeParameterTemplateDetailOutput, error) {
	req, out := c.DescribeParameterTemplateDetailRequest(input)
	return out, req.Send()
}

// DescribeParameterTemplateDetailWithContext is the same as DescribeParameterTemplateDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeParameterTemplateDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeParameterTemplateDetailWithContext(ctx volcengine.Context, input *DescribeParameterTemplateDetailInput, opts ...request.Option) (*DescribeParameterTemplateDetailOutput, error) {
	req, out := c.DescribeParameterTemplateDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeParameterTemplateDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// TemplateId is a required field
	TemplateId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeParameterTemplateDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeParameterTemplateDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeParameterTemplateDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeParameterTemplateDetailInput"}
	if s.TemplateId == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTemplateId sets the TemplateId field's value.
func (s *DescribeParameterTemplateDetailInput) SetTemplateId(v string) *DescribeParameterTemplateDetailInput {
	s.TemplateId = &v
	return s
}

type DescribeParameterTemplateDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreateTime *string `type:"string" json:",omitempty"`

	NeedRestart *bool `type:"boolean" json:",omitempty"`

	ParameterNumber *int32 `type:"int32" json:",omitempty"`

	TemplateCategory *string `type:"string" json:",omitempty"`

	TemplateDescription *string `type:"string" json:",omitempty"`

	TemplateId *string `type:"string" json:",omitempty"`

	TemplateName *string `type:"string" json:",omitempty"`

	TemplateParameters []*TemplateParameterForDescribeParameterTemplateDetailOutput `type:"list" json:",omitempty"`

	TemplateSource *string `type:"string" json:",omitempty"`

	TemplateType *string `type:"string" json:",omitempty"`

	TemplateTypeVersion *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeParameterTemplateDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeParameterTemplateDetailOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeParameterTemplateDetailOutput) SetCreateTime(v string) *DescribeParameterTemplateDetailOutput {
	s.CreateTime = &v
	return s
}

// SetNeedRestart sets the NeedRestart field's value.
func (s *DescribeParameterTemplateDetailOutput) SetNeedRestart(v bool) *DescribeParameterTemplateDetailOutput {
	s.NeedRestart = &v
	return s
}

// SetParameterNumber sets the ParameterNumber field's value.
func (s *DescribeParameterTemplateDetailOutput) SetParameterNumber(v int32) *DescribeParameterTemplateDetailOutput {
	s.ParameterNumber = &v
	return s
}

// SetTemplateCategory sets the TemplateCategory field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateCategory(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateCategory = &v
	return s
}

// SetTemplateDescription sets the TemplateDescription field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateDescription(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateDescription = &v
	return s
}

// SetTemplateId sets the TemplateId field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateId(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateId = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateName(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateName = &v
	return s
}

// SetTemplateParameters sets the TemplateParameters field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateParameters(v []*TemplateParameterForDescribeParameterTemplateDetailOutput) *DescribeParameterTemplateDetailOutput {
	s.TemplateParameters = v
	return s
}

// SetTemplateSource sets the TemplateSource field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateSource(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateSource = &v
	return s
}

// SetTemplateType sets the TemplateType field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateType(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateType = &v
	return s
}

// SetTemplateTypeVersion sets the TemplateTypeVersion field's value.
func (s *DescribeParameterTemplateDetailOutput) SetTemplateTypeVersion(v string) *DescribeParameterTemplateDetailOutput {
	s.TemplateTypeVersion = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeParameterTemplateDetailOutput) SetUpdateTime(v string) *DescribeParameterTemplateDetailOutput {
	s.UpdateTime = &v
	return s
}

type TemplateParameterForDescribeParameterTemplateDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`

	ParameterValue *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TemplateParameterForDescribeParameterTemplateDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TemplateParameterForDescribeParameterTemplateDetailOutput) GoString() string {
	return s.String()
}

// SetParameterName sets the ParameterName field's value.
func (s *TemplateParameterForDescribeParameterTemplateDetailOutput) SetParameterName(v string) *TemplateParameterForDescribeParameterTemplateDetailOutput {
	s.ParameterName = &v
	return s
}

// SetParameterValue sets the ParameterValue field's value.
func (s *TemplateParameterForDescribeParameterTemplateDetailOutput) SetParameterValue(v string) *TemplateParameterForDescribeParameterTemplateDetailOutput {
	s.ParameterValue = &v
	return s
}
