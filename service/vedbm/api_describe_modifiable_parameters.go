// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeModifiableParametersCommon = "DescribeModifiableParameters"

// DescribeModifiableParametersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeModifiableParametersCommon operation. The "output" return
// value will be populated with the DescribeModifiableParametersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeModifiableParametersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeModifiableParametersCommon Send returns without error.
//
// See DescribeModifiableParametersCommon for more information on using the DescribeModifiableParametersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeModifiableParametersCommonRequest method.
//    req, resp := client.DescribeModifiableParametersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeModifiableParametersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeModifiableParametersCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeModifiableParametersCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeModifiableParametersCommon for usage and error information.
func (c *VEDBM) DescribeModifiableParametersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeModifiableParametersCommonRequest(input)
	return out, req.Send()
}

// DescribeModifiableParametersCommonWithContext is the same as DescribeModifiableParametersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeModifiableParametersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeModifiableParametersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeModifiableParametersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeModifiableParameters = "DescribeModifiableParameters"

// DescribeModifiableParametersRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeModifiableParameters operation. The "output" return
// value will be populated with the DescribeModifiableParametersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeModifiableParametersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeModifiableParametersCommon Send returns without error.
//
// See DescribeModifiableParameters for more information on using the DescribeModifiableParameters
// API call, and error handling.
//
//    // Example sending a request using the DescribeModifiableParametersRequest method.
//    req, resp := client.DescribeModifiableParametersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeModifiableParametersRequest(input *DescribeModifiableParametersInput) (req *request.Request, output *DescribeModifiableParametersOutput) {
	op := &request.Operation{
		Name:       opDescribeModifiableParameters,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeModifiableParametersInput{}
	}

	output = &DescribeModifiableParametersOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeModifiableParameters API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeModifiableParameters for usage and error information.
func (c *VEDBM) DescribeModifiableParameters(input *DescribeModifiableParametersInput) (*DescribeModifiableParametersOutput, error) {
	req, out := c.DescribeModifiableParametersRequest(input)
	return out, req.Send()
}

// DescribeModifiableParametersWithContext is the same as DescribeModifiableParameters with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeModifiableParameters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeModifiableParametersWithContext(ctx volcengine.Context, input *DescribeModifiableParametersInput, opts ...request.Option) (*DescribeModifiableParametersOutput, error) {
	req, out := c.DescribeModifiableParametersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeModifiableParametersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// TemplateCategory is a required field
	TemplateCategory *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfTemplateCategoryForDescribeModifiableParametersInput"`

	// TemplateType is a required field
	TemplateType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfTemplateTypeForDescribeModifiableParametersInput"`

	// TemplateTypeVersion is a required field
	TemplateTypeVersion *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfTemplateTypeVersionForDescribeModifiableParametersInput"`
}

// String returns the string representation
func (s DescribeModifiableParametersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeModifiableParametersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeModifiableParametersInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeModifiableParametersInput"}
	if s.TemplateCategory == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateCategory"))
	}
	if s.TemplateType == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateType"))
	}
	if s.TemplateTypeVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("TemplateTypeVersion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTemplateCategory sets the TemplateCategory field's value.
func (s *DescribeModifiableParametersInput) SetTemplateCategory(v string) *DescribeModifiableParametersInput {
	s.TemplateCategory = &v
	return s
}

// SetTemplateType sets the TemplateType field's value.
func (s *DescribeModifiableParametersInput) SetTemplateType(v string) *DescribeModifiableParametersInput {
	s.TemplateType = &v
	return s
}

// SetTemplateTypeVersion sets the TemplateTypeVersion field's value.
func (s *DescribeModifiableParametersInput) SetTemplateTypeVersion(v string) *DescribeModifiableParametersInput {
	s.TemplateTypeVersion = &v
	return s
}

type DescribeModifiableParametersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Parameters []*ParameterForDescribeModifiableParametersOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeModifiableParametersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeModifiableParametersOutput) GoString() string {
	return s.String()
}

// SetParameters sets the Parameters field's value.
func (s *DescribeModifiableParametersOutput) SetParameters(v []*ParameterForDescribeModifiableParametersOutput) *DescribeModifiableParametersOutput {
	s.Parameters = v
	return s
}

type ParameterForDescribeModifiableParametersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CheckingCode *string `type:"string" json:",omitempty"`

	DataType *string `type:"string" json:",omitempty" enum:"EnumOfDataTypeForDescribeModifiableParametersOutput"`

	Modifiable *bool `type:"boolean" json:",omitempty"`

	NeedRestart *bool `type:"boolean" json:",omitempty"`

	ParameterDefaultValue *string `type:"string" json:",omitempty"`

	ParameterDescription *string `type:"string" json:",omitempty"`

	ParameterDisplayValue *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`

	ParameterValue *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForDescribeModifiableParametersOutput"`
}

// String returns the string representation
func (s ParameterForDescribeModifiableParametersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ParameterForDescribeModifiableParametersOutput) GoString() string {
	return s.String()
}

// SetCheckingCode sets the CheckingCode field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetCheckingCode(v string) *ParameterForDescribeModifiableParametersOutput {
	s.CheckingCode = &v
	return s
}

// SetDataType sets the DataType field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetDataType(v string) *ParameterForDescribeModifiableParametersOutput {
	s.DataType = &v
	return s
}

// SetModifiable sets the Modifiable field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetModifiable(v bool) *ParameterForDescribeModifiableParametersOutput {
	s.Modifiable = &v
	return s
}

// SetNeedRestart sets the NeedRestart field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetNeedRestart(v bool) *ParameterForDescribeModifiableParametersOutput {
	s.NeedRestart = &v
	return s
}

// SetParameterDefaultValue sets the ParameterDefaultValue field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetParameterDefaultValue(v string) *ParameterForDescribeModifiableParametersOutput {
	s.ParameterDefaultValue = &v
	return s
}

// SetParameterDescription sets the ParameterDescription field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetParameterDescription(v string) *ParameterForDescribeModifiableParametersOutput {
	s.ParameterDescription = &v
	return s
}

// SetParameterDisplayValue sets the ParameterDisplayValue field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetParameterDisplayValue(v string) *ParameterForDescribeModifiableParametersOutput {
	s.ParameterDisplayValue = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetParameterName(v string) *ParameterForDescribeModifiableParametersOutput {
	s.ParameterName = &v
	return s
}

// SetParameterValue sets the ParameterValue field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetParameterValue(v string) *ParameterForDescribeModifiableParametersOutput {
	s.ParameterValue = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ParameterForDescribeModifiableParametersOutput) SetStatus(v string) *ParameterForDescribeModifiableParametersOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfDataTypeForDescribeModifiableParametersOutputFloat is a EnumOfDataTypeForDescribeModifiableParametersOutput enum value
	EnumOfDataTypeForDescribeModifiableParametersOutputFloat = "FLOAT"

	// EnumOfDataTypeForDescribeModifiableParametersOutputInt is a EnumOfDataTypeForDescribeModifiableParametersOutput enum value
	EnumOfDataTypeForDescribeModifiableParametersOutputInt = "INT"

	// EnumOfDataTypeForDescribeModifiableParametersOutputString is a EnumOfDataTypeForDescribeModifiableParametersOutput enum value
	EnumOfDataTypeForDescribeModifiableParametersOutputString = "STRING"
)

const (
	// EnumOfStatusForDescribeModifiableParametersOutputApplied is a EnumOfStatusForDescribeModifiableParametersOutput enum value
	EnumOfStatusForDescribeModifiableParametersOutputApplied = "Applied"

	// EnumOfStatusForDescribeModifiableParametersOutputSyncing is a EnumOfStatusForDescribeModifiableParametersOutput enum value
	EnumOfStatusForDescribeModifiableParametersOutputSyncing = "Syncing"
)

const (
	// EnumOfTemplateCategoryForDescribeModifiableParametersInputDbengine is a EnumOfTemplateCategoryForDescribeModifiableParametersInput enum value
	EnumOfTemplateCategoryForDescribeModifiableParametersInputDbengine = "DBEngine"
)

const (
	// EnumOfTemplateTypeForDescribeModifiableParametersInputMySql is a EnumOfTemplateTypeForDescribeModifiableParametersInput enum value
	EnumOfTemplateTypeForDescribeModifiableParametersInputMySql = "MySQL"
)

const (
	// EnumOfTemplateTypeVersionForDescribeModifiableParametersInputMySql57 is a EnumOfTemplateTypeVersionForDescribeModifiableParametersInput enum value
	EnumOfTemplateTypeVersionForDescribeModifiableParametersInputMySql57 = "MySQL_5_7"

	// EnumOfTemplateTypeVersionForDescribeModifiableParametersInputMySql80 is a EnumOfTemplateTypeVersionForDescribeModifiableParametersInput enum value
	EnumOfTemplateTypeVersionForDescribeModifiableParametersInputMySql80 = "MySQL_8_0"
)
