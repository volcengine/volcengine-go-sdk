// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCrossRegionBackupDBInstancesCommon = "DescribeCrossRegionBackupDBInstances"

// DescribeCrossRegionBackupDBInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCrossRegionBackupDBInstancesCommon operation. The "output" return
// value will be populated with the DescribeCrossRegionBackupDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCrossRegionBackupDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCrossRegionBackupDBInstancesCommon Send returns without error.
//
// See DescribeCrossRegionBackupDBInstancesCommon for more information on using the DescribeCrossRegionBackupDBInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCrossRegionBackupDBInstancesCommonRequest method.
//    req, resp := client.DescribeCrossRegionBackupDBInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeCrossRegionBackupDBInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCrossRegionBackupDBInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCrossRegionBackupDBInstancesCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeCrossRegionBackupDBInstancesCommon for usage and error information.
func (c *VEDBM) DescribeCrossRegionBackupDBInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCrossRegionBackupDBInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeCrossRegionBackupDBInstancesCommonWithContext is the same as DescribeCrossRegionBackupDBInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCrossRegionBackupDBInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeCrossRegionBackupDBInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCrossRegionBackupDBInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCrossRegionBackupDBInstances = "DescribeCrossRegionBackupDBInstances"

// DescribeCrossRegionBackupDBInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCrossRegionBackupDBInstances operation. The "output" return
// value will be populated with the DescribeCrossRegionBackupDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCrossRegionBackupDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCrossRegionBackupDBInstancesCommon Send returns without error.
//
// See DescribeCrossRegionBackupDBInstances for more information on using the DescribeCrossRegionBackupDBInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeCrossRegionBackupDBInstancesRequest method.
//    req, resp := client.DescribeCrossRegionBackupDBInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeCrossRegionBackupDBInstancesRequest(input *DescribeCrossRegionBackupDBInstancesInput) (req *request.Request, output *DescribeCrossRegionBackupDBInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeCrossRegionBackupDBInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCrossRegionBackupDBInstancesInput{}
	}

	output = &DescribeCrossRegionBackupDBInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCrossRegionBackupDBInstances API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeCrossRegionBackupDBInstances for usage and error information.
func (c *VEDBM) DescribeCrossRegionBackupDBInstances(input *DescribeCrossRegionBackupDBInstancesInput) (*DescribeCrossRegionBackupDBInstancesOutput, error) {
	req, out := c.DescribeCrossRegionBackupDBInstancesRequest(input)
	return out, req.Send()
}

// DescribeCrossRegionBackupDBInstancesWithContext is the same as DescribeCrossRegionBackupDBInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCrossRegionBackupDBInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeCrossRegionBackupDBInstancesWithContext(ctx volcengine.Context, input *DescribeCrossRegionBackupDBInstancesInput, opts ...request.Option) (*DescribeCrossRegionBackupDBInstancesOutput, error) {
	req, out := c.DescribeCrossRegionBackupDBInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCrossRegionBackupDBInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCrossRegionBackupDBInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossRegionBackupDBInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeCrossRegionBackupDBInstancesInput) SetInstanceId(v string) *DescribeCrossRegionBackupDBInstancesInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeCrossRegionBackupDBInstancesInput) SetPageNumber(v int32) *DescribeCrossRegionBackupDBInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeCrossRegionBackupDBInstancesInput) SetPageSize(v int32) *DescribeCrossRegionBackupDBInstancesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeCrossRegionBackupDBInstancesInput) SetProjectName(v string) *DescribeCrossRegionBackupDBInstancesInput {
	s.ProjectName = &v
	return s
}

type DescribeCrossRegionBackupDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Instances []*InstanceForDescribeCrossRegionBackupDBInstancesOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCrossRegionBackupDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCrossRegionBackupDBInstancesOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *DescribeCrossRegionBackupDBInstancesOutput) SetInstances(v []*InstanceForDescribeCrossRegionBackupDBInstancesOutput) *DescribeCrossRegionBackupDBInstancesOutput {
	s.Instances = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeCrossRegionBackupDBInstancesOutput) SetTotal(v int32) *DescribeCrossRegionBackupDBInstancesOutput {
	s.Total = &v
	return s
}

type InstanceForDescribeCrossRegionBackupDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CrossRegionBackup *bool `type:"boolean" json:",omitempty"`

	DBEngineVersion *string `type:"string" json:",omitempty" enum:"EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutput"`

	DBRevisionVersion *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	LowerCaseTableNames *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	Retention *int32 `type:"int32" json:",omitempty"`

	TargetRegion *string `type:"string" json:",omitempty"`

	TimeZone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InstanceForDescribeCrossRegionBackupDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForDescribeCrossRegionBackupDBInstancesOutput) GoString() string {
	return s.String()
}

// SetCrossRegionBackup sets the CrossRegionBackup field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetCrossRegionBackup(v bool) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.CrossRegionBackup = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetDBEngineVersion(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDBRevisionVersion sets the DBRevisionVersion field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetDBRevisionVersion(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.DBRevisionVersion = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetInstanceId(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetLowerCaseTableNames sets the LowerCaseTableNames field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetLowerCaseTableNames(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.LowerCaseTableNames = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetProjectName(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetRegionId(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.RegionId = &v
	return s
}

// SetRetention sets the Retention field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetRetention(v int32) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.Retention = &v
	return s
}

// SetTargetRegion sets the TargetRegion field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetTargetRegion(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.TargetRegion = &v
	return s
}

// SetTimeZone sets the TimeZone field's value.
func (s *InstanceForDescribeCrossRegionBackupDBInstancesOutput) SetTimeZone(v string) *InstanceForDescribeCrossRegionBackupDBInstancesOutput {
	s.TimeZone = &v
	return s
}

const (
	// EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutputMySql57 is a EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutput enum value
	EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutputMySql57 = "MySQL_5_7"

	// EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutputMySql80 is a EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutput enum value
	EnumOfDBEngineVersionForDescribeCrossRegionBackupDBInstancesOutputMySql80 = "MySQL_8_0"
)
