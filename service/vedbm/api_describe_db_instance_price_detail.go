// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstancePriceDetailCommon = "DescribeDBInstancePriceDetail"

// DescribeDBInstancePriceDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstancePriceDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstancePriceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancePriceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancePriceDetailCommon Send returns without error.
//
// See DescribeDBInstancePriceDetailCommon for more information on using the DescribeDBInstancePriceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancePriceDetailCommonRequest method.
//    req, resp := client.DescribeDBInstancePriceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeDBInstancePriceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstancePriceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstancePriceDetailCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeDBInstancePriceDetailCommon for usage and error information.
func (c *VEDBM) DescribeDBInstancePriceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancePriceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstancePriceDetailCommonWithContext is the same as DescribeDBInstancePriceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstancePriceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeDBInstancePriceDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancePriceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstancePriceDetail = "DescribeDBInstancePriceDetail"

// DescribeDBInstancePriceDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstancePriceDetail operation. The "output" return
// value will be populated with the DescribeDBInstancePriceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancePriceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancePriceDetailCommon Send returns without error.
//
// See DescribeDBInstancePriceDetail for more information on using the DescribeDBInstancePriceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancePriceDetailRequest method.
//    req, resp := client.DescribeDBInstancePriceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeDBInstancePriceDetailRequest(input *DescribeDBInstancePriceDetailInput) (req *request.Request, output *DescribeDBInstancePriceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstancePriceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstancePriceDetailInput{}
	}

	output = &DescribeDBInstancePriceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstancePriceDetail API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeDBInstancePriceDetail for usage and error information.
func (c *VEDBM) DescribeDBInstancePriceDetail(input *DescribeDBInstancePriceDetailInput) (*DescribeDBInstancePriceDetailOutput, error) {
	req, out := c.DescribeDBInstancePriceDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstancePriceDetailWithContext is the same as DescribeDBInstancePriceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstancePriceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeDBInstancePriceDetailWithContext(ctx volcengine.Context, input *DescribeDBInstancePriceDetailInput, opts ...request.Option) (*DescribeDBInstancePriceDetailOutput, error) {
	req, out := c.DescribeDBInstancePriceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeItemPriceForDescribeDBInstancePriceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemCode *string `type:"string" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`

	UnitPrice *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ChargeItemPriceForDescribeDBInstancePriceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeItemPriceForDescribeDBInstancePriceDetailOutput) GoString() string {
	return s.String()
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetChargeItemCode(v string) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.ChargeItemCode = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetDiscountPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetOriginalPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetPayablePrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.PayablePrice = &v
	return s
}

// SetUnitPrice sets the UnitPrice field's value.
func (s *ChargeItemPriceForDescribeDBInstancePriceDetailOutput) SetUnitPrice(v float64) *ChargeItemPriceForDescribeDBInstancePriceDetailOutput {
	s.UnitPrice = &v
	return s
}

type ConfigItemPriceForDescribeDBInstancePriceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemPrices []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput `type:"list" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	CouponAmount *float64 `type:"double" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`

	Quantity *int32 `type:"int32" json:",omitempty"`

	RefundAmount *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ConfigItemPriceForDescribeDBInstancePriceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigItemPriceForDescribeDBInstancePriceDetailOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.ChargeItemPrices = v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetConfigurationCode(v string) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.ConfigurationCode = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetCouponAmount(v float64) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.CouponAmount = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetDiscountPrice(v float64) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.DiscountPrice = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetInstanceID(v string) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.InstanceID = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetOriginalPrice(v float64) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetPayablePrice(v float64) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.PayablePrice = &v
	return s
}

// SetQuantity sets the Quantity field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetQuantity(v int32) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.Quantity = &v
	return s
}

// SetRefundAmount sets the RefundAmount field's value.
func (s *ConfigItemPriceForDescribeDBInstancePriceDetailOutput) SetRefundAmount(v float64) *ConfigItemPriceForDescribeDBInstancePriceDetailOutput {
	s.RefundAmount = &v
	return s
}

type DescribeDBInstancePriceDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty" enum:"EnumOfChargeTypeForDescribeDBInstancePriceDetailInput"`

	// NodeNumber is a required field
	NodeNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// NodeSpec is a required field
	NodeSpec *string `type:"string" json:",omitempty" required:"true"`

	Number *int32 `type:"int32" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`

	PeriodUnit *string `type:"string" json:",omitempty" enum:"EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput"`

	PrePaidStorageInGB *int32 `type:"int32" json:",omitempty"`

	StorageChargeType *string `type:"string" json:",omitempty" enum:"EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInput"`
}

// String returns the string representation
func (s DescribeDBInstancePriceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancePriceDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstancePriceDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstancePriceDetailInput"}
	if s.NodeNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeNumber"))
	}
	if s.NodeSpec == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeSpec"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstancePriceDetailInput) SetChargeType(v string) *DescribeDBInstancePriceDetailInput {
	s.ChargeType = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNodeNumber(v int32) *DescribeDBInstancePriceDetailInput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNodeSpec(v string) *DescribeDBInstancePriceDetailInput {
	s.NodeSpec = &v
	return s
}

// SetNumber sets the Number field's value.
func (s *DescribeDBInstancePriceDetailInput) SetNumber(v int32) *DescribeDBInstancePriceDetailInput {
	s.Number = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *DescribeDBInstancePriceDetailInput) SetPeriod(v int32) *DescribeDBInstancePriceDetailInput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *DescribeDBInstancePriceDetailInput) SetPeriodUnit(v string) *DescribeDBInstancePriceDetailInput {
	s.PeriodUnit = &v
	return s
}

// SetPrePaidStorageInGB sets the PrePaidStorageInGB field's value.
func (s *DescribeDBInstancePriceDetailInput) SetPrePaidStorageInGB(v int32) *DescribeDBInstancePriceDetailInput {
	s.PrePaidStorageInGB = &v
	return s
}

// SetStorageChargeType sets the StorageChargeType field's value.
func (s *DescribeDBInstancePriceDetailInput) SetStorageChargeType(v string) *DescribeDBInstancePriceDetailInput {
	s.StorageChargeType = &v
	return s
}

type DescribeDBInstancePriceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ChargeItemPrices []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput `type:"list" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ConfigItemPrices []*ConfigItemPriceForDescribeDBInstancePriceDetailOutput `type:"list" json:",omitempty"`

	Currency *string `type:"string" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstancePriceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancePriceDetailOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeDBInstancePriceDetailOutput) *DescribeDBInstancePriceDetailOutput {
	s.ChargeItemPrices = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetChargeType(v string) *DescribeDBInstancePriceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetConfigItemPrices sets the ConfigItemPrices field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetConfigItemPrices(v []*ConfigItemPriceForDescribeDBInstancePriceDetailOutput) *DescribeDBInstancePriceDetailOutput {
	s.ConfigItemPrices = v
	return s
}

// SetCurrency sets the Currency field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetCurrency(v string) *DescribeDBInstancePriceDetailOutput {
	s.Currency = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetDiscountPrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetOriginalPrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *DescribeDBInstancePriceDetailOutput) SetPayablePrice(v float64) *DescribeDBInstancePriceDetailOutput {
	s.PayablePrice = &v
	return s
}

const (
	// EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPostPaid is a EnumOfChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPostPaid = "PostPaid"

	// EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPrePaid is a EnumOfChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfChargeTypeForDescribeDBInstancePriceDetailInputPrePaid = "PrePaid"
)

const (
	// EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputMonth is a EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput enum value
	EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputMonth = "month"

	// EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputYear is a EnumOfPeriodUnitForDescribeDBInstancePriceDetailInput enum value
	EnumOfPeriodUnitForDescribeDBInstancePriceDetailInputYear = "year"
)

const (
	// EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInputPostPaid is a EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInputPostPaid = "PostPaid"

	// EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInputPrePaid is a EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInput enum value
	EnumOfStorageChargeTypeForDescribeDBInstancePriceDetailInputPrePaid = "PrePaid"
)
