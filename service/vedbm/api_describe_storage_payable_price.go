// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vedbm

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeStoragePayablePriceCommon = "DescribeStoragePayablePrice"

// DescribeStoragePayablePriceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStoragePayablePriceCommon operation. The "output" return
// value will be populated with the DescribeStoragePayablePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStoragePayablePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStoragePayablePriceCommon Send returns without error.
//
// See DescribeStoragePayablePriceCommon for more information on using the DescribeStoragePayablePriceCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeStoragePayablePriceCommonRequest method.
//    req, resp := client.DescribeStoragePayablePriceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeStoragePayablePriceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeStoragePayablePriceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStoragePayablePriceCommon API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeStoragePayablePriceCommon for usage and error information.
func (c *VEDBM) DescribeStoragePayablePriceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeStoragePayablePriceCommonRequest(input)
	return out, req.Send()
}

// DescribeStoragePayablePriceCommonWithContext is the same as DescribeStoragePayablePriceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStoragePayablePriceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeStoragePayablePriceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeStoragePayablePriceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeStoragePayablePrice = "DescribeStoragePayablePrice"

// DescribeStoragePayablePriceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStoragePayablePrice operation. The "output" return
// value will be populated with the DescribeStoragePayablePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStoragePayablePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStoragePayablePriceCommon Send returns without error.
//
// See DescribeStoragePayablePrice for more information on using the DescribeStoragePayablePrice
// API call, and error handling.
//
//    // Example sending a request using the DescribeStoragePayablePriceRequest method.
//    req, resp := client.DescribeStoragePayablePriceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEDBM) DescribeStoragePayablePriceRequest(input *DescribeStoragePayablePriceInput) (req *request.Request, output *DescribeStoragePayablePriceOutput) {
	op := &request.Operation{
		Name:       opDescribeStoragePayablePrice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeStoragePayablePriceInput{}
	}

	output = &DescribeStoragePayablePriceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStoragePayablePrice API operation for VEDBM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEDBM's
// API operation DescribeStoragePayablePrice for usage and error information.
func (c *VEDBM) DescribeStoragePayablePrice(input *DescribeStoragePayablePriceInput) (*DescribeStoragePayablePriceOutput, error) {
	req, out := c.DescribeStoragePayablePriceRequest(input)
	return out, req.Send()
}

// DescribeStoragePayablePriceWithContext is the same as DescribeStoragePayablePrice with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStoragePayablePrice for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEDBM) DescribeStoragePayablePriceWithContext(ctx volcengine.Context, input *DescribeStoragePayablePriceInput, opts ...request.Option) (*DescribeStoragePayablePriceOutput, error) {
	req, out := c.DescribeStoragePayablePriceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeItemPriceForDescribeStoragePayablePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemCode *string `type:"string" json:",omitempty"`

	DiscountPrice *float64 `type:"double" json:",omitempty"`

	OriginalPrice *float64 `type:"double" json:",omitempty"`

	PayablePrice *float64 `type:"double" json:",omitempty"`

	UnitPrice *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ChargeItemPriceForDescribeStoragePayablePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeItemPriceForDescribeStoragePayablePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *ChargeItemPriceForDescribeStoragePayablePriceOutput) SetChargeItemCode(v string) *ChargeItemPriceForDescribeStoragePayablePriceOutput {
	s.ChargeItemCode = &v
	return s
}

// SetDiscountPrice sets the DiscountPrice field's value.
func (s *ChargeItemPriceForDescribeStoragePayablePriceOutput) SetDiscountPrice(v float64) *ChargeItemPriceForDescribeStoragePayablePriceOutput {
	s.DiscountPrice = &v
	return s
}

// SetOriginalPrice sets the OriginalPrice field's value.
func (s *ChargeItemPriceForDescribeStoragePayablePriceOutput) SetOriginalPrice(v float64) *ChargeItemPriceForDescribeStoragePayablePriceOutput {
	s.OriginalPrice = &v
	return s
}

// SetPayablePrice sets the PayablePrice field's value.
func (s *ChargeItemPriceForDescribeStoragePayablePriceOutput) SetPayablePrice(v float64) *ChargeItemPriceForDescribeStoragePayablePriceOutput {
	s.PayablePrice = &v
	return s
}

// SetUnitPrice sets the UnitPrice field's value.
func (s *ChargeItemPriceForDescribeStoragePayablePriceOutput) SetUnitPrice(v float64) *ChargeItemPriceForDescribeStoragePayablePriceOutput {
	s.UnitPrice = &v
	return s
}

type DescribeStoragePayablePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	StorageTypes []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStoragePayablePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStoragePayablePriceInput) GoString() string {
	return s.String()
}

// SetStorageTypes sets the StorageTypes field's value.
func (s *DescribeStoragePayablePriceInput) SetStorageTypes(v []*string) *DescribeStoragePayablePriceInput {
	s.StorageTypes = v
	return s
}

type DescribeStoragePayablePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ChargeItemPrices []*ChargeItemPriceForDescribeStoragePayablePriceOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStoragePayablePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStoragePayablePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemPrices sets the ChargeItemPrices field's value.
func (s *DescribeStoragePayablePriceOutput) SetChargeItemPrices(v []*ChargeItemPriceForDescribeStoragePayablePriceOutput) *DescribeStoragePayablePriceOutput {
	s.ChargeItemPrices = v
	return s
}

const (
	// EnumOfStorageTypeListForDescribeStoragePayablePriceInputClusterpool is a EnumOfStorageTypeListForDescribeStoragePayablePriceInput enum value
	EnumOfStorageTypeListForDescribeStoragePayablePriceInputClusterpool = "Clusterpool"

	// EnumOfStorageTypeListForDescribeStoragePayablePriceInputColdDataArchive is a EnumOfStorageTypeListForDescribeStoragePayablePriceInput enum value
	EnumOfStorageTypeListForDescribeStoragePayablePriceInputColdDataArchive = "ColdDataArchive"
)
