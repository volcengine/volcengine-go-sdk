// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBackupPolicyCommon = "CreateBackupPolicy"

// CreateBackupPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupPolicyCommon operation. The "output" return
// value will be populated with the CreateBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupPolicyCommon Send returns without error.
//
// See CreateBackupPolicyCommon for more information on using the CreateBackupPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupPolicyCommonRequest method.
//    req, resp := client.CreateBackupPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBackupPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupPolicyCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupPolicyCommon for usage and error information.
func (c *CBR) CreateBackupPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBackupPolicyCommonRequest(input)
	return out, req.Send()
}

// CreateBackupPolicyCommonWithContext is the same as CreateBackupPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBackupPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBackupPolicy = "CreateBackupPolicy"

// CreateBackupPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupPolicy operation. The "output" return
// value will be populated with the CreateBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupPolicyCommon Send returns without error.
//
// See CreateBackupPolicy for more information on using the CreateBackupPolicy
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupPolicyRequest method.
//    req, resp := client.CreateBackupPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupPolicyRequest(input *CreateBackupPolicyInput) (req *request.Request, output *CreateBackupPolicyOutput) {
	op := &request.Operation{
		Name:       opCreateBackupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBackupPolicyInput{}
	}

	output = &CreateBackupPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupPolicy API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupPolicy for usage and error information.
func (c *CBR) CreateBackupPolicy(input *CreateBackupPolicyInput) (*CreateBackupPolicyOutput, error) {
	req, out := c.CreateBackupPolicyRequest(input)
	return out, req.Send()
}

// CreateBackupPolicyWithContext is the same as CreateBackupPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupPolicyWithContext(ctx volcengine.Context, input *CreateBackupPolicyInput, opts ...request.Option) (*CreateBackupPolicyOutput, error) {
	req, out := c.CreateBackupPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateBackupPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BackupType is a required field
	BackupType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfBackupTypeForCreateBackupPolicyInput"`

	// Crontab is a required field
	Crontab *string `type:"string" json:",omitempty" required:"true"`

	// EnablePolicy is a required field
	EnablePolicy *bool `type:"boolean" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// RetentionDay is a required field
	RetentionDay *int32 `type:"int32" json:",omitempty" required:"true"`

	// RetentionNumMax is a required field
	RetentionNumMax *int32 `type:"int32" json:",omitempty" required:"true"`

	// RetentionNumMin is a required field
	RetentionNumMin *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateBackupPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBackupPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateBackupPolicyInput"}
	if s.BackupType == nil {
		invalidParams.Add(request.NewErrParamRequired("BackupType"))
	}
	if s.Crontab == nil {
		invalidParams.Add(request.NewErrParamRequired("Crontab"))
	}
	if s.EnablePolicy == nil {
		invalidParams.Add(request.NewErrParamRequired("EnablePolicy"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.RetentionDay == nil {
		invalidParams.Add(request.NewErrParamRequired("RetentionDay"))
	}
	if s.RetentionNumMax == nil {
		invalidParams.Add(request.NewErrParamRequired("RetentionNumMax"))
	}
	if s.RetentionNumMin == nil {
		invalidParams.Add(request.NewErrParamRequired("RetentionNumMin"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupType sets the BackupType field's value.
func (s *CreateBackupPolicyInput) SetBackupType(v string) *CreateBackupPolicyInput {
	s.BackupType = &v
	return s
}

// SetCrontab sets the Crontab field's value.
func (s *CreateBackupPolicyInput) SetCrontab(v string) *CreateBackupPolicyInput {
	s.Crontab = &v
	return s
}

// SetEnablePolicy sets the EnablePolicy field's value.
func (s *CreateBackupPolicyInput) SetEnablePolicy(v bool) *CreateBackupPolicyInput {
	s.EnablePolicy = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateBackupPolicyInput) SetName(v string) *CreateBackupPolicyInput {
	s.Name = &v
	return s
}

// SetRetentionDay sets the RetentionDay field's value.
func (s *CreateBackupPolicyInput) SetRetentionDay(v int32) *CreateBackupPolicyInput {
	s.RetentionDay = &v
	return s
}

// SetRetentionNumMax sets the RetentionNumMax field's value.
func (s *CreateBackupPolicyInput) SetRetentionNumMax(v int32) *CreateBackupPolicyInput {
	s.RetentionNumMax = &v
	return s
}

// SetRetentionNumMin sets the RetentionNumMin field's value.
func (s *CreateBackupPolicyInput) SetRetentionNumMin(v int32) *CreateBackupPolicyInput {
	s.RetentionNumMin = &v
	return s
}

type CreateBackupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PolicyId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateBackupPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupPolicyOutput) GoString() string {
	return s.String()
}

// SetPolicyId sets the PolicyId field's value.
func (s *CreateBackupPolicyOutput) SetPolicyId(v string) *CreateBackupPolicyOutput {
	s.PolicyId = &v
	return s
}

const (
	// EnumOfBackupTypeForCreateBackupPolicyInputIncremental is a EnumOfBackupTypeForCreateBackupPolicyInput enum value
	EnumOfBackupTypeForCreateBackupPolicyInputIncremental = "INCREMENTAL"

	// EnumOfBackupTypeForCreateBackupPolicyInputFull is a EnumOfBackupTypeForCreateBackupPolicyInput enum value
	EnumOfBackupTypeForCreateBackupPolicyInputFull = "FULL"
)
