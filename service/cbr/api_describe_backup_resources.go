// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeBackupResourcesCommon = "DescribeBackupResources"

// DescribeBackupResourcesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackupResourcesCommon operation. The "output" return
// value will be populated with the DescribeBackupResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupResourcesCommon Send returns without error.
//
// See DescribeBackupResourcesCommon for more information on using the DescribeBackupResourcesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupResourcesCommonRequest method.
//    req, resp := client.DescribeBackupResourcesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeBackupResourcesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeBackupResourcesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupResourcesCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeBackupResourcesCommon for usage and error information.
func (c *CBR) DescribeBackupResourcesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupResourcesCommonRequest(input)
	return out, req.Send()
}

// DescribeBackupResourcesCommonWithContext is the same as DescribeBackupResourcesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupResourcesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeBackupResourcesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupResourcesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBackupResources = "DescribeBackupResources"

// DescribeBackupResourcesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackupResources operation. The "output" return
// value will be populated with the DescribeBackupResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupResourcesCommon Send returns without error.
//
// See DescribeBackupResources for more information on using the DescribeBackupResources
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupResourcesRequest method.
//    req, resp := client.DescribeBackupResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeBackupResourcesRequest(input *DescribeBackupResourcesInput) (req *request.Request, output *DescribeBackupResourcesOutput) {
	op := &request.Operation{
		Name:       opDescribeBackupResources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeBackupResourcesInput{}
	}

	output = &DescribeBackupResourcesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupResources API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeBackupResources for usage and error information.
func (c *CBR) DescribeBackupResources(input *DescribeBackupResourcesInput) (*DescribeBackupResourcesOutput, error) {
	req, out := c.DescribeBackupResourcesRequest(input)
	return out, req.Send()
}

// DescribeBackupResourcesWithContext is the same as DescribeBackupResources with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeBackupResourcesWithContext(ctx volcengine.Context, input *DescribeBackupResourcesInput, opts ...request.Option) (*DescribeBackupResourcesOutput, error) {
	req, out := c.DescribeBackupResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeBackupResourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterList []*FilterListForDescribeBackupResourcesInput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupResourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupResourcesInput) GoString() string {
	return s.String()
}

// SetFilterList sets the FilterList field's value.
func (s *DescribeBackupResourcesInput) SetFilterList(v []*FilterListForDescribeBackupResourcesInput) *DescribeBackupResourcesInput {
	s.FilterList = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeBackupResourcesInput) SetPageNumber(v int32) *DescribeBackupResourcesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeBackupResourcesInput) SetPageSize(v int32) *DescribeBackupResourcesInput {
	s.PageSize = &v
	return s
}

type DescribeBackupResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Resources []*ResourceForDescribeBackupResourcesOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupResourcesOutput) GoString() string {
	return s.String()
}

// SetResources sets the Resources field's value.
func (s *DescribeBackupResourcesOutput) SetResources(v []*ResourceForDescribeBackupResourcesOutput) *DescribeBackupResourcesOutput {
	s.Resources = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeBackupResourcesOutput) SetTotal(v int32) *DescribeBackupResourcesOutput {
	s.Total = &v
	return s
}

type FilterListForDescribeBackupResourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterListForDescribeBackupResourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterListForDescribeBackupResourcesInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *FilterListForDescribeBackupResourcesInput) SetName(v string) *FilterListForDescribeBackupResourcesInput {
	s.Name = &v
	return s
}

// SetValues sets the Values field's value.
func (s *FilterListForDescribeBackupResourcesInput) SetValues(v []*string) *FilterListForDescribeBackupResourcesInput {
	s.Values = v
	return s
}

type MetaInformationForDescribeBackupResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EcsMeta *string `type:"string" json:",omitempty"`

	VepfsMeta *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MetaInformationForDescribeBackupResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetaInformationForDescribeBackupResourcesOutput) GoString() string {
	return s.String()
}

// SetEcsMeta sets the EcsMeta field's value.
func (s *MetaInformationForDescribeBackupResourcesOutput) SetEcsMeta(v string) *MetaInformationForDescribeBackupResourcesOutput {
	s.EcsMeta = &v
	return s
}

// SetVepfsMeta sets the VepfsMeta field's value.
func (s *MetaInformationForDescribeBackupResourcesOutput) SetVepfsMeta(v string) *MetaInformationForDescribeBackupResourcesOutput {
	s.VepfsMeta = &v
	return s
}

type PlanForDescribeBackupResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PlanId *string `type:"string" json:",omitempty"`

	PlanName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PlanForDescribeBackupResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PlanForDescribeBackupResourcesOutput) GoString() string {
	return s.String()
}

// SetPlanId sets the PlanId field's value.
func (s *PlanForDescribeBackupResourcesOutput) SetPlanId(v string) *PlanForDescribeBackupResourcesOutput {
	s.PlanId = &v
	return s
}

// SetPlanName sets the PlanName field's value.
func (s *PlanForDescribeBackupResourcesOutput) SetPlanName(v string) *PlanForDescribeBackupResourcesOutput {
	s.PlanName = &v
	return s
}

type ResourceForDescribeBackupResourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	MetaInformation *MetaInformationForDescribeBackupResourcesOutput `type:"structure" json:",omitempty"`

	Plans []*PlanForDescribeBackupResourcesOutput `type:"list" json:",omitempty"`

	RecoveryPointNumber *int32 `type:"int32" json:",omitempty"`

	ResourceId *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	UsedCapacityInBytes *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ResourceForDescribeBackupResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceForDescribeBackupResourcesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetAccountId(v string) *ResourceForDescribeBackupResourcesOutput {
	s.AccountId = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetCreatedAt(v string) *ResourceForDescribeBackupResourcesOutput {
	s.CreatedAt = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetInstanceId(v string) *ResourceForDescribeBackupResourcesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetInstanceName(v string) *ResourceForDescribeBackupResourcesOutput {
	s.InstanceName = &v
	return s
}

// SetMetaInformation sets the MetaInformation field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetMetaInformation(v *MetaInformationForDescribeBackupResourcesOutput) *ResourceForDescribeBackupResourcesOutput {
	s.MetaInformation = v
	return s
}

// SetPlans sets the Plans field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetPlans(v []*PlanForDescribeBackupResourcesOutput) *ResourceForDescribeBackupResourcesOutput {
	s.Plans = v
	return s
}

// SetRecoveryPointNumber sets the RecoveryPointNumber field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetRecoveryPointNumber(v int32) *ResourceForDescribeBackupResourcesOutput {
	s.RecoveryPointNumber = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetResourceId(v string) *ResourceForDescribeBackupResourcesOutput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetResourceType(v string) *ResourceForDescribeBackupResourcesOutput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetStatus(v string) *ResourceForDescribeBackupResourcesOutput {
	s.Status = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetUpdatedAt(v string) *ResourceForDescribeBackupResourcesOutput {
	s.UpdatedAt = &v
	return s
}

// SetUsedCapacityInBytes sets the UsedCapacityInBytes field's value.
func (s *ResourceForDescribeBackupResourcesOutput) SetUsedCapacityInBytes(v int32) *ResourceForDescribeBackupResourcesOutput {
	s.UsedCapacityInBytes = &v
	return s
}
