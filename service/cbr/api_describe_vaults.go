// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeVaultsCommon = "DescribeVaults"

// DescribeVaultsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVaultsCommon operation. The "output" return
// value will be populated with the DescribeVaultsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVaultsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVaultsCommon Send returns without error.
//
// See DescribeVaultsCommon for more information on using the DescribeVaultsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVaultsCommonRequest method.
//    req, resp := client.DescribeVaultsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeVaultsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVaultsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeVaultsCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeVaultsCommon for usage and error information.
func (c *CBR) DescribeVaultsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVaultsCommonRequest(input)
	return out, req.Send()
}

// DescribeVaultsCommonWithContext is the same as DescribeVaultsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVaultsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeVaultsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVaultsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVaults = "DescribeVaults"

// DescribeVaultsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVaults operation. The "output" return
// value will be populated with the DescribeVaultsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVaultsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVaultsCommon Send returns without error.
//
// See DescribeVaults for more information on using the DescribeVaults
// API call, and error handling.
//
//    // Example sending a request using the DescribeVaultsRequest method.
//    req, resp := client.DescribeVaultsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeVaultsRequest(input *DescribeVaultsInput) (req *request.Request, output *DescribeVaultsOutput) {
	op := &request.Operation{
		Name:       opDescribeVaults,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVaultsInput{}
	}

	output = &DescribeVaultsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeVaults API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeVaults for usage and error information.
func (c *CBR) DescribeVaults(input *DescribeVaultsInput) (*DescribeVaultsOutput, error) {
	req, out := c.DescribeVaultsRequest(input)
	return out, req.Send()
}

// DescribeVaultsWithContext is the same as DescribeVaults with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVaults for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeVaultsWithContext(ctx volcengine.Context, input *DescribeVaultsInput, opts ...request.Option) (*DescribeVaultsOutput, error) {
	req, out := c.DescribeVaultsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeVaultsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filters *FiltersForDescribeVaultsInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeVaultsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVaultsInput) GoString() string {
	return s.String()
}

// SetFilters sets the Filters field's value.
func (s *DescribeVaultsInput) SetFilters(v *FiltersForDescribeVaultsInput) *DescribeVaultsInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeVaultsInput) SetPageNumber(v int32) *DescribeVaultsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeVaultsInput) SetPageSize(v int32) *DescribeVaultsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeVaultsInput) SetProjectName(v string) *DescribeVaultsInput {
	s.ProjectName = &v
	return s
}

type DescribeVaultsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Total *int32 `type:"int32" json:",omitempty"`

	VaultList []*VaultListForDescribeVaultsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeVaultsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVaultsOutput) GoString() string {
	return s.String()
}

// SetTotal sets the Total field's value.
func (s *DescribeVaultsOutput) SetTotal(v int32) *DescribeVaultsOutput {
	s.Total = &v
	return s
}

// SetVaultList sets the VaultList field's value.
func (s *DescribeVaultsOutput) SetVaultList(v []*VaultListForDescribeVaultsOutput) *DescribeVaultsOutput {
	s.VaultList = v
	return s
}

type FiltersForDescribeVaultsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VaultId *string `type:"string" json:",omitempty"`

	VaultName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FiltersForDescribeVaultsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FiltersForDescribeVaultsInput) GoString() string {
	return s.String()
}

// SetVaultId sets the VaultId field's value.
func (s *FiltersForDescribeVaultsInput) SetVaultId(v string) *FiltersForDescribeVaultsInput {
	s.VaultId = &v
	return s
}

// SetVaultName sets the VaultName field's value.
func (s *FiltersForDescribeVaultsInput) SetVaultName(v string) *FiltersForDescribeVaultsInput {
	s.VaultName = &v
	return s
}

type TagForDescribeVaultsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeVaultsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeVaultsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeVaultsOutput) SetKey(v string) *TagForDescribeVaultsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeVaultsOutput) SetValue(v string) *TagForDescribeVaultsOutput {
	s.Value = &v
	return s
}

type VaultListForDescribeVaultsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateAt *string `type:"string" json:",omitempty"`

	Endpoint *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeVaultsOutput `type:"list" json:",omitempty"`

	VaultId *string `type:"string" json:",omitempty"`

	VaultName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VaultListForDescribeVaultsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VaultListForDescribeVaultsOutput) GoString() string {
	return s.String()
}

// SetCreateAt sets the CreateAt field's value.
func (s *VaultListForDescribeVaultsOutput) SetCreateAt(v string) *VaultListForDescribeVaultsOutput {
	s.CreateAt = &v
	return s
}

// SetEndpoint sets the Endpoint field's value.
func (s *VaultListForDescribeVaultsOutput) SetEndpoint(v string) *VaultListForDescribeVaultsOutput {
	s.Endpoint = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *VaultListForDescribeVaultsOutput) SetProjectName(v string) *VaultListForDescribeVaultsOutput {
	s.ProjectName = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *VaultListForDescribeVaultsOutput) SetRegion(v string) *VaultListForDescribeVaultsOutput {
	s.Region = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *VaultListForDescribeVaultsOutput) SetTags(v []*TagForDescribeVaultsOutput) *VaultListForDescribeVaultsOutput {
	s.Tags = v
	return s
}

// SetVaultId sets the VaultId field's value.
func (s *VaultListForDescribeVaultsOutput) SetVaultId(v string) *VaultListForDescribeVaultsOutput {
	s.VaultId = &v
	return s
}

// SetVaultName sets the VaultName field's value.
func (s *VaultListForDescribeVaultsOutput) SetVaultName(v string) *VaultListForDescribeVaultsOutput {
	s.VaultName = &v
	return s
}
