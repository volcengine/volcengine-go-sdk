// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBackupResourceCommon = "CreateBackupResource"

// CreateBackupResourceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupResourceCommon operation. The "output" return
// value will be populated with the CreateBackupResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupResourceCommon Send returns without error.
//
// See CreateBackupResourceCommon for more information on using the CreateBackupResourceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupResourceCommonRequest method.
//    req, resp := client.CreateBackupResourceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupResourceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBackupResourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupResourceCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupResourceCommon for usage and error information.
func (c *CBR) CreateBackupResourceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBackupResourceCommonRequest(input)
	return out, req.Send()
}

// CreateBackupResourceCommonWithContext is the same as CreateBackupResourceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupResourceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupResourceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBackupResourceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBackupResource = "CreateBackupResource"

// CreateBackupResourceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupResource operation. The "output" return
// value will be populated with the CreateBackupResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupResourceCommon Send returns without error.
//
// See CreateBackupResource for more information on using the CreateBackupResource
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupResourceRequest method.
//    req, resp := client.CreateBackupResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupResourceRequest(input *CreateBackupResourceInput) (req *request.Request, output *CreateBackupResourceOutput) {
	op := &request.Operation{
		Name:       opCreateBackupResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBackupResourceInput{}
	}

	output = &CreateBackupResourceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupResource API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupResource for usage and error information.
func (c *CBR) CreateBackupResource(input *CreateBackupResourceInput) (*CreateBackupResourceOutput, error) {
	req, out := c.CreateBackupResourceRequest(input)
	return out, req.Send()
}

// CreateBackupResourceWithContext is the same as CreateBackupResource with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupResourceWithContext(ctx volcengine.Context, input *CreateBackupResourceInput, opts ...request.Option) (*CreateBackupResourceOutput, error) {
	req, out := c.CreateBackupResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateBackupResourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceName is a required field
	InstanceName *string `type:"string" json:",omitempty" required:"true"`

	MetaInformation *MetaInformationForCreateBackupResourceInput `type:"structure" json:",omitempty"`

	// ResourceType is a required field
	ResourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfResourceTypeForCreateBackupResourceInput"`
}

// String returns the string representation
func (s CreateBackupResourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBackupResourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateBackupResourceInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.InstanceName == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceName"))
	}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateBackupResourceInput) SetInstanceId(v string) *CreateBackupResourceInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *CreateBackupResourceInput) SetInstanceName(v string) *CreateBackupResourceInput {
	s.InstanceName = &v
	return s
}

// SetMetaInformation sets the MetaInformation field's value.
func (s *CreateBackupResourceInput) SetMetaInformation(v *MetaInformationForCreateBackupResourceInput) *CreateBackupResourceInput {
	s.MetaInformation = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *CreateBackupResourceInput) SetResourceType(v string) *CreateBackupResourceInput {
	s.ResourceType = &v
	return s
}

type CreateBackupResourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ResourceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateBackupResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupResourceOutput) GoString() string {
	return s.String()
}

// SetResourceId sets the ResourceId field's value.
func (s *CreateBackupResourceOutput) SetResourceId(v string) *CreateBackupResourceOutput {
	s.ResourceId = &v
	return s
}

type MetaInformationForCreateBackupResourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EcsMeta *string `type:"string" json:",omitempty"`

	VepfsMeta *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MetaInformationForCreateBackupResourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetaInformationForCreateBackupResourceInput) GoString() string {
	return s.String()
}

// SetEcsMeta sets the EcsMeta field's value.
func (s *MetaInformationForCreateBackupResourceInput) SetEcsMeta(v string) *MetaInformationForCreateBackupResourceInput {
	s.EcsMeta = &v
	return s
}

// SetVepfsMeta sets the VepfsMeta field's value.
func (s *MetaInformationForCreateBackupResourceInput) SetVepfsMeta(v string) *MetaInformationForCreateBackupResourceInput {
	s.VepfsMeta = &v
	return s
}

const (
	// EnumOfResourceTypeForCreateBackupResourceInputEcs is a EnumOfResourceTypeForCreateBackupResourceInput enum value
	EnumOfResourceTypeForCreateBackupResourceInputEcs = "ECS"

	// EnumOfResourceTypeForCreateBackupResourceInputVePfs is a EnumOfResourceTypeForCreateBackupResourceInput enum value
	EnumOfResourceTypeForCreateBackupResourceInputVePfs = "vePFS"
)
