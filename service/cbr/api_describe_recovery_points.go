// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeRecoveryPointsCommon = "DescribeRecoveryPoints"

// DescribeRecoveryPointsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeRecoveryPointsCommon operation. The "output" return
// value will be populated with the DescribeRecoveryPointsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeRecoveryPointsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeRecoveryPointsCommon Send returns without error.
//
// See DescribeRecoveryPointsCommon for more information on using the DescribeRecoveryPointsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeRecoveryPointsCommonRequest method.
//    req, resp := client.DescribeRecoveryPointsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeRecoveryPointsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeRecoveryPointsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeRecoveryPointsCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeRecoveryPointsCommon for usage and error information.
func (c *CBR) DescribeRecoveryPointsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeRecoveryPointsCommonRequest(input)
	return out, req.Send()
}

// DescribeRecoveryPointsCommonWithContext is the same as DescribeRecoveryPointsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeRecoveryPointsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeRecoveryPointsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeRecoveryPointsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeRecoveryPoints = "DescribeRecoveryPoints"

// DescribeRecoveryPointsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeRecoveryPoints operation. The "output" return
// value will be populated with the DescribeRecoveryPointsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeRecoveryPointsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeRecoveryPointsCommon Send returns without error.
//
// See DescribeRecoveryPoints for more information on using the DescribeRecoveryPoints
// API call, and error handling.
//
//    // Example sending a request using the DescribeRecoveryPointsRequest method.
//    req, resp := client.DescribeRecoveryPointsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeRecoveryPointsRequest(input *DescribeRecoveryPointsInput) (req *request.Request, output *DescribeRecoveryPointsOutput) {
	op := &request.Operation{
		Name:       opDescribeRecoveryPoints,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeRecoveryPointsInput{}
	}

	output = &DescribeRecoveryPointsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeRecoveryPoints API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeRecoveryPoints for usage and error information.
func (c *CBR) DescribeRecoveryPoints(input *DescribeRecoveryPointsInput) (*DescribeRecoveryPointsOutput, error) {
	req, out := c.DescribeRecoveryPointsRequest(input)
	return out, req.Send()
}

// DescribeRecoveryPointsWithContext is the same as DescribeRecoveryPoints with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeRecoveryPoints for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeRecoveryPointsWithContext(ctx volcengine.Context, input *DescribeRecoveryPointsInput, opts ...request.Option) (*DescribeRecoveryPointsOutput, error) {
	req, out := c.DescribeRecoveryPointsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeRecoveryPointsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filters *FiltersForDescribeRecoveryPointsInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeRecoveryPointsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRecoveryPointsInput) GoString() string {
	return s.String()
}

// SetFilters sets the Filters field's value.
func (s *DescribeRecoveryPointsInput) SetFilters(v *FiltersForDescribeRecoveryPointsInput) *DescribeRecoveryPointsInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeRecoveryPointsInput) SetPageNumber(v int32) *DescribeRecoveryPointsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeRecoveryPointsInput) SetPageSize(v int32) *DescribeRecoveryPointsInput {
	s.PageSize = &v
	return s
}

type DescribeRecoveryPointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RecoveryPoints []*RecoveryPointForDescribeRecoveryPointsOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeRecoveryPointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeRecoveryPointsOutput) GoString() string {
	return s.String()
}

// SetRecoveryPoints sets the RecoveryPoints field's value.
func (s *DescribeRecoveryPointsOutput) SetRecoveryPoints(v []*RecoveryPointForDescribeRecoveryPointsOutput) *DescribeRecoveryPointsOutput {
	s.RecoveryPoints = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeRecoveryPointsOutput) SetTotal(v int32) *DescribeRecoveryPointsOutput {
	s.Total = &v
	return s
}

type FiltersForDescribeRecoveryPointsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	RecoveryPointId *string `type:"string" json:",omitempty"`

	RecoveryPointName *string `type:"string" json:",omitempty"`

	ResourceId *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FiltersForDescribeRecoveryPointsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FiltersForDescribeRecoveryPointsInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetInstanceId(v string) *FiltersForDescribeRecoveryPointsInput {
	s.InstanceId = &v
	return s
}

// SetRecoveryPointId sets the RecoveryPointId field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetRecoveryPointId(v string) *FiltersForDescribeRecoveryPointsInput {
	s.RecoveryPointId = &v
	return s
}

// SetRecoveryPointName sets the RecoveryPointName field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetRecoveryPointName(v string) *FiltersForDescribeRecoveryPointsInput {
	s.RecoveryPointName = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetResourceId(v string) *FiltersForDescribeRecoveryPointsInput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetResourceType(v string) *FiltersForDescribeRecoveryPointsInput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *FiltersForDescribeRecoveryPointsInput) SetStatus(v string) *FiltersForDescribeRecoveryPointsInput {
	s.Status = &v
	return s
}

type RecoveryPointForDescribeRecoveryPointsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	BackupCompletedTime *string `type:"string" json:",omitempty"`

	CapacityInBytes *int32 `type:"int32" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	ErrorDetail *string `type:"string" json:",omitempty"`

	ExtraMetadata *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PlanId *string `type:"string" json:",omitempty"`

	PlanName *string `type:"string" json:",omitempty"`

	RecoveryPointId *string `type:"string" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty"`

	RetentionDay *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RecoveryPointForDescribeRecoveryPointsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecoveryPointForDescribeRecoveryPointsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetAccountId(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.AccountId = &v
	return s
}

// SetBackupCompletedTime sets the BackupCompletedTime field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetBackupCompletedTime(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.BackupCompletedTime = &v
	return s
}

// SetCapacityInBytes sets the CapacityInBytes field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetCapacityInBytes(v int32) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.CapacityInBytes = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetCreatedAt(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.CreatedAt = &v
	return s
}

// SetErrorDetail sets the ErrorDetail field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetErrorDetail(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.ErrorDetail = &v
	return s
}

// SetExtraMetadata sets the ExtraMetadata field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetExtraMetadata(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.ExtraMetadata = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetInstanceId(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetInstanceName(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.InstanceName = &v
	return s
}

// SetName sets the Name field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetName(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.Name = &v
	return s
}

// SetPlanId sets the PlanId field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetPlanId(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.PlanId = &v
	return s
}

// SetPlanName sets the PlanName field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetPlanName(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.PlanName = &v
	return s
}

// SetRecoveryPointId sets the RecoveryPointId field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetRecoveryPointId(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.RecoveryPointId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetResourceType(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.ResourceType = &v
	return s
}

// SetRetentionDay sets the RetentionDay field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetRetentionDay(v int32) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.RetentionDay = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetStatus(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.Status = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *RecoveryPointForDescribeRecoveryPointsOutput) SetUpdatedAt(v string) *RecoveryPointForDescribeRecoveryPointsOutput {
	s.UpdatedAt = &v
	return s
}
