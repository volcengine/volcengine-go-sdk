// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateRestoreJobCommon = "CreateRestoreJob"

// CreateRestoreJobCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRestoreJobCommon operation. The "output" return
// value will be populated with the CreateRestoreJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRestoreJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRestoreJobCommon Send returns without error.
//
// See CreateRestoreJobCommon for more information on using the CreateRestoreJobCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateRestoreJobCommonRequest method.
//    req, resp := client.CreateRestoreJobCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateRestoreJobCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateRestoreJobCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRestoreJobCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateRestoreJobCommon for usage and error information.
func (c *CBR) CreateRestoreJobCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateRestoreJobCommonRequest(input)
	return out, req.Send()
}

// CreateRestoreJobCommonWithContext is the same as CreateRestoreJobCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRestoreJobCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateRestoreJobCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateRestoreJobCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRestoreJob = "CreateRestoreJob"

// CreateRestoreJobRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRestoreJob operation. The "output" return
// value will be populated with the CreateRestoreJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRestoreJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRestoreJobCommon Send returns without error.
//
// See CreateRestoreJob for more information on using the CreateRestoreJob
// API call, and error handling.
//
//    // Example sending a request using the CreateRestoreJobRequest method.
//    req, resp := client.CreateRestoreJobRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateRestoreJobRequest(input *CreateRestoreJobInput) (req *request.Request, output *CreateRestoreJobOutput) {
	op := &request.Operation{
		Name:       opCreateRestoreJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateRestoreJobInput{}
	}

	output = &CreateRestoreJobOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRestoreJob API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateRestoreJob for usage and error information.
func (c *CBR) CreateRestoreJob(input *CreateRestoreJobInput) (*CreateRestoreJobOutput, error) {
	req, out := c.CreateRestoreJobRequest(input)
	return out, req.Send()
}

// CreateRestoreJobWithContext is the same as CreateRestoreJob with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRestoreJob for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateRestoreJobWithContext(ctx volcengine.Context, input *CreateRestoreJobInput, opts ...request.Option) (*CreateRestoreJobOutput, error) {
	req, out := c.CreateRestoreJobRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateRestoreJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExtraRestoreConfiguration *string `type:"string" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// RecoveryPointId is a required field
	RecoveryPointId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateRestoreJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRestoreJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateRestoreJobInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateRestoreJobInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.RecoveryPointId == nil {
		invalidParams.Add(request.NewErrParamRequired("RecoveryPointId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetExtraRestoreConfiguration sets the ExtraRestoreConfiguration field's value.
func (s *CreateRestoreJobInput) SetExtraRestoreConfiguration(v string) *CreateRestoreJobInput {
	s.ExtraRestoreConfiguration = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateRestoreJobInput) SetName(v string) *CreateRestoreJobInput {
	s.Name = &v
	return s
}

// SetRecoveryPointId sets the RecoveryPointId field's value.
func (s *CreateRestoreJobInput) SetRecoveryPointId(v string) *CreateRestoreJobInput {
	s.RecoveryPointId = &v
	return s
}

type CreateRestoreJobOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	JobId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateRestoreJobOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRestoreJobOutput) GoString() string {
	return s.String()
}

// SetJobId sets the JobId field's value.
func (s *CreateRestoreJobOutput) SetJobId(v string) *CreateRestoreJobOutput {
	s.JobId = &v
	return s
}
