// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBackupJobCommon = "CreateBackupJob"

// CreateBackupJobCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupJobCommon operation. The "output" return
// value will be populated with the CreateBackupJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupJobCommon Send returns without error.
//
// See CreateBackupJobCommon for more information on using the CreateBackupJobCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupJobCommonRequest method.
//    req, resp := client.CreateBackupJobCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupJobCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBackupJobCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupJobCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupJobCommon for usage and error information.
func (c *CBR) CreateBackupJobCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBackupJobCommonRequest(input)
	return out, req.Send()
}

// CreateBackupJobCommonWithContext is the same as CreateBackupJobCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupJobCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupJobCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBackupJobCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBackupJob = "CreateBackupJob"

// CreateBackupJobRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBackupJob operation. The "output" return
// value will be populated with the CreateBackupJobCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBackupJobCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBackupJobCommon Send returns without error.
//
// See CreateBackupJob for more information on using the CreateBackupJob
// API call, and error handling.
//
//    // Example sending a request using the CreateBackupJobRequest method.
//    req, resp := client.CreateBackupJobRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) CreateBackupJobRequest(input *CreateBackupJobInput) (req *request.Request, output *CreateBackupJobOutput) {
	op := &request.Operation{
		Name:       opCreateBackupJob,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBackupJobInput{}
	}

	output = &CreateBackupJobOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBackupJob API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation CreateBackupJob for usage and error information.
func (c *CBR) CreateBackupJob(input *CreateBackupJobInput) (*CreateBackupJobOutput, error) {
	req, out := c.CreateBackupJobRequest(input)
	return out, req.Send()
}

// CreateBackupJobWithContext is the same as CreateBackupJob with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBackupJob for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) CreateBackupJobWithContext(ctx volcengine.Context, input *CreateBackupJobInput, opts ...request.Option) (*CreateBackupJobOutput, error) {
	req, out := c.CreateBackupJobRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateBackupJobInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BackupType is a required field
	BackupType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfBackupTypeForCreateBackupJobInput"`

	Metadata *string `type:"string" json:",omitempty"`

	// RecoveryPointName is a required field
	RecoveryPointName *string `type:"string" json:",omitempty" required:"true"`

	// ResourceId is a required field
	ResourceId *string `type:"string" json:",omitempty" required:"true"`

	// RetentionDay is a required field
	RetentionDay *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateBackupJobInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupJobInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBackupJobInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateBackupJobInput"}
	if s.BackupType == nil {
		invalidParams.Add(request.NewErrParamRequired("BackupType"))
	}
	if s.RecoveryPointName == nil {
		invalidParams.Add(request.NewErrParamRequired("RecoveryPointName"))
	}
	if s.ResourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceId"))
	}
	if s.RetentionDay == nil {
		invalidParams.Add(request.NewErrParamRequired("RetentionDay"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupType sets the BackupType field's value.
func (s *CreateBackupJobInput) SetBackupType(v string) *CreateBackupJobInput {
	s.BackupType = &v
	return s
}

// SetMetadata sets the Metadata field's value.
func (s *CreateBackupJobInput) SetMetadata(v string) *CreateBackupJobInput {
	s.Metadata = &v
	return s
}

// SetRecoveryPointName sets the RecoveryPointName field's value.
func (s *CreateBackupJobInput) SetRecoveryPointName(v string) *CreateBackupJobInput {
	s.RecoveryPointName = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *CreateBackupJobInput) SetResourceId(v string) *CreateBackupJobInput {
	s.ResourceId = &v
	return s
}

// SetRetentionDay sets the RetentionDay field's value.
func (s *CreateBackupJobInput) SetRetentionDay(v int32) *CreateBackupJobInput {
	s.RetentionDay = &v
	return s
}

type CreateBackupJobOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RecoveryPointId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateBackupJobOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBackupJobOutput) GoString() string {
	return s.String()
}

// SetRecoveryPointId sets the RecoveryPointId field's value.
func (s *CreateBackupJobOutput) SetRecoveryPointId(v string) *CreateBackupJobOutput {
	s.RecoveryPointId = &v
	return s
}

const (
	// EnumOfBackupTypeForCreateBackupJobInputIncremental is a EnumOfBackupTypeForCreateBackupJobInput enum value
	EnumOfBackupTypeForCreateBackupJobInputIncremental = "INCREMENTAL"

	// EnumOfBackupTypeForCreateBackupJobInputFull is a EnumOfBackupTypeForCreateBackupJobInput enum value
	EnumOfBackupTypeForCreateBackupJobInputFull = "FULL"
)
