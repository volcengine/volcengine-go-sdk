// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateBackupPolicyCommon = "UpdateBackupPolicy"

// UpdateBackupPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBackupPolicyCommon operation. The "output" return
// value will be populated with the UpdateBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBackupPolicyCommon Send returns without error.
//
// See UpdateBackupPolicyCommon for more information on using the UpdateBackupPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateBackupPolicyCommonRequest method.
//    req, resp := client.UpdateBackupPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) UpdateBackupPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateBackupPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBackupPolicyCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation UpdateBackupPolicyCommon for usage and error information.
func (c *CBR) UpdateBackupPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateBackupPolicyCommonRequest(input)
	return out, req.Send()
}

// UpdateBackupPolicyCommonWithContext is the same as UpdateBackupPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBackupPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) UpdateBackupPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateBackupPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateBackupPolicy = "UpdateBackupPolicy"

// UpdateBackupPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBackupPolicy operation. The "output" return
// value will be populated with the UpdateBackupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBackupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBackupPolicyCommon Send returns without error.
//
// See UpdateBackupPolicy for more information on using the UpdateBackupPolicy
// API call, and error handling.
//
//    // Example sending a request using the UpdateBackupPolicyRequest method.
//    req, resp := client.UpdateBackupPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) UpdateBackupPolicyRequest(input *UpdateBackupPolicyInput) (req *request.Request, output *UpdateBackupPolicyOutput) {
	op := &request.Operation{
		Name:       opUpdateBackupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateBackupPolicyInput{}
	}

	output = &UpdateBackupPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBackupPolicy API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation UpdateBackupPolicy for usage and error information.
func (c *CBR) UpdateBackupPolicy(input *UpdateBackupPolicyInput) (*UpdateBackupPolicyOutput, error) {
	req, out := c.UpdateBackupPolicyRequest(input)
	return out, req.Send()
}

// UpdateBackupPolicyWithContext is the same as UpdateBackupPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBackupPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) UpdateBackupPolicyWithContext(ctx volcengine.Context, input *UpdateBackupPolicyInput, opts ...request.Option) (*UpdateBackupPolicyOutput, error) {
	req, out := c.UpdateBackupPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateBackupPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupType *string `type:"string" json:",omitempty" enum:"EnumOfBackupTypeForUpdateBackupPolicyInput"`

	Crontab *string `type:"string" json:",omitempty"`

	EnablePolicy *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	// PolicyId is a required field
	PolicyId *string `type:"string" json:",omitempty" required:"true"`

	RetentionDay *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s UpdateBackupPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBackupPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBackupPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateBackupPolicyInput"}
	if s.PolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("PolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupType sets the BackupType field's value.
func (s *UpdateBackupPolicyInput) SetBackupType(v string) *UpdateBackupPolicyInput {
	s.BackupType = &v
	return s
}

// SetCrontab sets the Crontab field's value.
func (s *UpdateBackupPolicyInput) SetCrontab(v string) *UpdateBackupPolicyInput {
	s.Crontab = &v
	return s
}

// SetEnablePolicy sets the EnablePolicy field's value.
func (s *UpdateBackupPolicyInput) SetEnablePolicy(v bool) *UpdateBackupPolicyInput {
	s.EnablePolicy = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateBackupPolicyInput) SetName(v string) *UpdateBackupPolicyInput {
	s.Name = &v
	return s
}

// SetPolicyId sets the PolicyId field's value.
func (s *UpdateBackupPolicyInput) SetPolicyId(v string) *UpdateBackupPolicyInput {
	s.PolicyId = &v
	return s
}

// SetRetentionDay sets the RetentionDay field's value.
func (s *UpdateBackupPolicyInput) SetRetentionDay(v int32) *UpdateBackupPolicyInput {
	s.RetentionDay = &v
	return s
}

type UpdateBackupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateBackupPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBackupPolicyOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfBackupTypeForUpdateBackupPolicyInputFull is a EnumOfBackupTypeForUpdateBackupPolicyInput enum value
	EnumOfBackupTypeForUpdateBackupPolicyInputFull = "FULL"

	// EnumOfBackupTypeForUpdateBackupPolicyInputIncremental is a EnumOfBackupTypeForUpdateBackupPolicyInput enum value
	EnumOfBackupTypeForUpdateBackupPolicyInputIncremental = "INCREMENTAL"
)
