// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cbr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeBackupPlansCommon = "DescribeBackupPlans"

// DescribeBackupPlansCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackupPlansCommon operation. The "output" return
// value will be populated with the DescribeBackupPlansCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupPlansCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupPlansCommon Send returns without error.
//
// See DescribeBackupPlansCommon for more information on using the DescribeBackupPlansCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupPlansCommonRequest method.
//    req, resp := client.DescribeBackupPlansCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeBackupPlansCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeBackupPlansCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupPlansCommon API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeBackupPlansCommon for usage and error information.
func (c *CBR) DescribeBackupPlansCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupPlansCommonRequest(input)
	return out, req.Send()
}

// DescribeBackupPlansCommonWithContext is the same as DescribeBackupPlansCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupPlansCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeBackupPlansCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeBackupPlansCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeBackupPlans = "DescribeBackupPlans"

// DescribeBackupPlansRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeBackupPlans operation. The "output" return
// value will be populated with the DescribeBackupPlansCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeBackupPlansCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeBackupPlansCommon Send returns without error.
//
// See DescribeBackupPlans for more information on using the DescribeBackupPlans
// API call, and error handling.
//
//    // Example sending a request using the DescribeBackupPlansRequest method.
//    req, resp := client.DescribeBackupPlansRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CBR) DescribeBackupPlansRequest(input *DescribeBackupPlansInput) (req *request.Request, output *DescribeBackupPlansOutput) {
	op := &request.Operation{
		Name:       opDescribeBackupPlans,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeBackupPlansInput{}
	}

	output = &DescribeBackupPlansOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeBackupPlans API operation for CBR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CBR's
// API operation DescribeBackupPlans for usage and error information.
func (c *CBR) DescribeBackupPlans(input *DescribeBackupPlansInput) (*DescribeBackupPlansOutput, error) {
	req, out := c.DescribeBackupPlansRequest(input)
	return out, req.Send()
}

// DescribeBackupPlansWithContext is the same as DescribeBackupPlans with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeBackupPlans for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CBR) DescribeBackupPlansWithContext(ctx volcengine.Context, input *DescribeBackupPlansInput, opts ...request.Option) (*DescribeBackupPlansOutput, error) {
	req, out := c.DescribeBackupPlansRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeBackupPlansInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filters *FiltersForDescribeBackupPlansInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupPlansInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupPlansInput) GoString() string {
	return s.String()
}

// SetFilters sets the Filters field's value.
func (s *DescribeBackupPlansInput) SetFilters(v *FiltersForDescribeBackupPlansInput) *DescribeBackupPlansInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeBackupPlansInput) SetPageNumber(v int32) *DescribeBackupPlansInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeBackupPlansInput) SetPageSize(v int32) *DescribeBackupPlansInput {
	s.PageSize = &v
	return s
}

type DescribeBackupPlansOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Plans []*PlanForDescribeBackupPlansOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeBackupPlansOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeBackupPlansOutput) GoString() string {
	return s.String()
}

// SetPlans sets the Plans field's value.
func (s *DescribeBackupPlansOutput) SetPlans(v []*PlanForDescribeBackupPlansOutput) *DescribeBackupPlansOutput {
	s.Plans = v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeBackupPlansOutput) SetTotal(v int32) *DescribeBackupPlansOutput {
	s.Total = &v
	return s
}

type FiltersForDescribeBackupPlansInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PlanId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FiltersForDescribeBackupPlansInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FiltersForDescribeBackupPlansInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *FiltersForDescribeBackupPlansInput) SetName(v string) *FiltersForDescribeBackupPlansInput {
	s.Name = &v
	return s
}

// SetPlanId sets the PlanId field's value.
func (s *FiltersForDescribeBackupPlansInput) SetPlanId(v string) *FiltersForDescribeBackupPlansInput {
	s.PlanId = &v
	return s
}

type PlanForDescribeBackupPlansOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PlanId *string `type:"string" json:",omitempty"`

	Policy *PolicyForDescribeBackupPlansOutput `type:"structure" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PlanForDescribeBackupPlansOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PlanForDescribeBackupPlansOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *PlanForDescribeBackupPlansOutput) SetAccountId(v string) *PlanForDescribeBackupPlansOutput {
	s.AccountId = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *PlanForDescribeBackupPlansOutput) SetCreatedAt(v string) *PlanForDescribeBackupPlansOutput {
	s.CreatedAt = &v
	return s
}

// SetName sets the Name field's value.
func (s *PlanForDescribeBackupPlansOutput) SetName(v string) *PlanForDescribeBackupPlansOutput {
	s.Name = &v
	return s
}

// SetPlanId sets the PlanId field's value.
func (s *PlanForDescribeBackupPlansOutput) SetPlanId(v string) *PlanForDescribeBackupPlansOutput {
	s.PlanId = &v
	return s
}

// SetPolicy sets the Policy field's value.
func (s *PlanForDescribeBackupPlansOutput) SetPolicy(v *PolicyForDescribeBackupPlansOutput) *PlanForDescribeBackupPlansOutput {
	s.Policy = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *PlanForDescribeBackupPlansOutput) SetUpdatedAt(v string) *PlanForDescribeBackupPlansOutput {
	s.UpdatedAt = &v
	return s
}

type PolicyForDescribeBackupPlansOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	BackupType *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Crontab *string `type:"string" json:",omitempty"`

	EnablePolicy *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PlanNumber *int32 `type:"int32" json:",omitempty"`

	PolicyId *string `type:"string" json:",omitempty"`

	RetentionDay *int32 `type:"int32" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PolicyForDescribeBackupPlansOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PolicyForDescribeBackupPlansOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetAccountId(v string) *PolicyForDescribeBackupPlansOutput {
	s.AccountId = &v
	return s
}

// SetBackupType sets the BackupType field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetBackupType(v string) *PolicyForDescribeBackupPlansOutput {
	s.BackupType = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetCreatedAt(v string) *PolicyForDescribeBackupPlansOutput {
	s.CreatedAt = &v
	return s
}

// SetCrontab sets the Crontab field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetCrontab(v string) *PolicyForDescribeBackupPlansOutput {
	s.Crontab = &v
	return s
}

// SetEnablePolicy sets the EnablePolicy field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetEnablePolicy(v bool) *PolicyForDescribeBackupPlansOutput {
	s.EnablePolicy = &v
	return s
}

// SetName sets the Name field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetName(v string) *PolicyForDescribeBackupPlansOutput {
	s.Name = &v
	return s
}

// SetPlanNumber sets the PlanNumber field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetPlanNumber(v int32) *PolicyForDescribeBackupPlansOutput {
	s.PlanNumber = &v
	return s
}

// SetPolicyId sets the PolicyId field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetPolicyId(v string) *PolicyForDescribeBackupPlansOutput {
	s.PolicyId = &v
	return s
}

// SetRetentionDay sets the RetentionDay field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetRetentionDay(v int32) *PolicyForDescribeBackupPlansOutput {
	s.RetentionDay = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *PolicyForDescribeBackupPlansOutput) SetUpdatedAt(v string) *PolicyForDescribeBackupPlansOutput {
	s.UpdatedAt = &v
	return s
}
