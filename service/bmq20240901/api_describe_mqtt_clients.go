// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq20240901

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeMQTTClientsCommon = "DescribeMQTTClients"

// DescribeMQTTClientsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeMQTTClientsCommon operation. The "output" return
// value will be populated with the DescribeMQTTClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMQTTClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMQTTClientsCommon Send returns without error.
//
// See DescribeMQTTClientsCommon for more information on using the DescribeMQTTClientsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeMQTTClientsCommonRequest method.
//    req, resp := client.DescribeMQTTClientsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ20240901) DescribeMQTTClientsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeMQTTClientsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeMQTTClientsCommon API operation for BMQ20240901.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ20240901's
// API operation DescribeMQTTClientsCommon for usage and error information.
func (c *BMQ20240901) DescribeMQTTClientsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeMQTTClientsCommonRequest(input)
	return out, req.Send()
}

// DescribeMQTTClientsCommonWithContext is the same as DescribeMQTTClientsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMQTTClientsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ20240901) DescribeMQTTClientsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeMQTTClientsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeMQTTClients = "DescribeMQTTClients"

// DescribeMQTTClientsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeMQTTClients operation. The "output" return
// value will be populated with the DescribeMQTTClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeMQTTClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeMQTTClientsCommon Send returns without error.
//
// See DescribeMQTTClients for more information on using the DescribeMQTTClients
// API call, and error handling.
//
//    // Example sending a request using the DescribeMQTTClientsRequest method.
//    req, resp := client.DescribeMQTTClientsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ20240901) DescribeMQTTClientsRequest(input *DescribeMQTTClientsInput) (req *request.Request, output *DescribeMQTTClientsOutput) {
	op := &request.Operation{
		Name:       opDescribeMQTTClients,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeMQTTClientsInput{}
	}

	output = &DescribeMQTTClientsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeMQTTClients API operation for BMQ20240901.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ20240901's
// API operation DescribeMQTTClients for usage and error information.
func (c *BMQ20240901) DescribeMQTTClients(input *DescribeMQTTClientsInput) (*DescribeMQTTClientsOutput, error) {
	req, out := c.DescribeMQTTClientsRequest(input)
	return out, req.Send()
}

// DescribeMQTTClientsWithContext is the same as DescribeMQTTClients with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeMQTTClients for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ20240901) DescribeMQTTClientsWithContext(ctx volcengine.Context, input *DescribeMQTTClientsInput, opts ...request.Option) (*DescribeMQTTClientsOutput, error) {
	req, out := c.DescribeMQTTClientsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ClientsInfoForDescribeMQTTClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientId *string `type:"string" json:",omitempty"`

	ConnectedTime *string `type:"string" json:",omitempty"`

	ConnectionState *string `type:"string" json:",omitempty"`

	DisconnectedTime *string `type:"string" json:",omitempty"`

	HeartBeatInterval *string `type:"string" json:",omitempty"`

	IpAddress *string `type:"string" json:",omitempty"`

	Port *string `type:"string" json:",omitempty"`

	SessionExpireInterval *string `type:"string" json:",omitempty"`

	SubscriptionsCount *string `type:"string" json:",omitempty"`

	UserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ClientsInfoForDescribeMQTTClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ClientsInfoForDescribeMQTTClientsOutput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetClientId(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.ClientId = &v
	return s
}

// SetConnectedTime sets the ConnectedTime field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetConnectedTime(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.ConnectedTime = &v
	return s
}

// SetConnectionState sets the ConnectionState field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetConnectionState(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.ConnectionState = &v
	return s
}

// SetDisconnectedTime sets the DisconnectedTime field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetDisconnectedTime(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.DisconnectedTime = &v
	return s
}

// SetHeartBeatInterval sets the HeartBeatInterval field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetHeartBeatInterval(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.HeartBeatInterval = &v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetIpAddress(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.IpAddress = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetPort(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.Port = &v
	return s
}

// SetSessionExpireInterval sets the SessionExpireInterval field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetSessionExpireInterval(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.SessionExpireInterval = &v
	return s
}

// SetSubscriptionsCount sets the SubscriptionsCount field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetSubscriptionsCount(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.SubscriptionsCount = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *ClientsInfoForDescribeMQTTClientsOutput) SetUserName(v string) *ClientsInfoForDescribeMQTTClientsOutput {
	s.UserName = &v
	return s
}

type DescribeMQTTClientsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientIdLike *string `type:"string" json:",omitempty"`

	ClientIdSpecifyList []*string `type:"list" json:",omitempty"`

	ConnectionState *string `type:"string" json:",omitempty" enum:"EnumOfConnectionStateForDescribeMQTTClientsInput"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	UserNameLike *string `type:"string" json:",omitempty"`

	UserNameSpecifyList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeMQTTClientsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMQTTClientsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeMQTTClientsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeMQTTClientsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientIdLike sets the ClientIdLike field's value.
func (s *DescribeMQTTClientsInput) SetClientIdLike(v string) *DescribeMQTTClientsInput {
	s.ClientIdLike = &v
	return s
}

// SetClientIdSpecifyList sets the ClientIdSpecifyList field's value.
func (s *DescribeMQTTClientsInput) SetClientIdSpecifyList(v []*string) *DescribeMQTTClientsInput {
	s.ClientIdSpecifyList = v
	return s
}

// SetConnectionState sets the ConnectionState field's value.
func (s *DescribeMQTTClientsInput) SetConnectionState(v string) *DescribeMQTTClientsInput {
	s.ConnectionState = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeMQTTClientsInput) SetInstanceId(v string) *DescribeMQTTClientsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeMQTTClientsInput) SetPageNumber(v int32) *DescribeMQTTClientsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeMQTTClientsInput) SetPageSize(v int32) *DescribeMQTTClientsInput {
	s.PageSize = &v
	return s
}

// SetUserNameLike sets the UserNameLike field's value.
func (s *DescribeMQTTClientsInput) SetUserNameLike(v string) *DescribeMQTTClientsInput {
	s.UserNameLike = &v
	return s
}

// SetUserNameSpecifyList sets the UserNameSpecifyList field's value.
func (s *DescribeMQTTClientsInput) SetUserNameSpecifyList(v []*string) *DescribeMQTTClientsInput {
	s.UserNameSpecifyList = v
	return s
}

type DescribeMQTTClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ClientsInfo []*ClientsInfoForDescribeMQTTClientsOutput `type:"list" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeMQTTClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeMQTTClientsOutput) GoString() string {
	return s.String()
}

// SetClientsInfo sets the ClientsInfo field's value.
func (s *DescribeMQTTClientsOutput) SetClientsInfo(v []*ClientsInfoForDescribeMQTTClientsOutput) *DescribeMQTTClientsOutput {
	s.ClientsInfo = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeMQTTClientsOutput) SetInstanceId(v string) *DescribeMQTTClientsOutput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeMQTTClientsOutput) SetPageNumber(v int32) *DescribeMQTTClientsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeMQTTClientsOutput) SetPageSize(v int32) *DescribeMQTTClientsOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeMQTTClientsOutput) SetTotal(v int32) *DescribeMQTTClientsOutput {
	s.Total = &v
	return s
}

const (
	// EnumOfConnectionStateForDescribeMQTTClientsInputOnline is a EnumOfConnectionStateForDescribeMQTTClientsInput enum value
	EnumOfConnectionStateForDescribeMQTTClientsInputOnline = "Online"

	// EnumOfConnectionStateForDescribeMQTTClientsInputOffline is a EnumOfConnectionStateForDescribeMQTTClientsInput enum value
	EnumOfConnectionStateForDescribeMQTTClientsInputOffline = "Offline"
)
