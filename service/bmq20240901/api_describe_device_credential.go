// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq20240901

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDeviceCredentialCommon = "DescribeDeviceCredential"

// DescribeDeviceCredentialCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDeviceCredentialCommon operation. The "output" return
// value will be populated with the DescribeDeviceCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDeviceCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDeviceCredentialCommon Send returns without error.
//
// See DescribeDeviceCredentialCommon for more information on using the DescribeDeviceCredentialCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDeviceCredentialCommonRequest method.
//    req, resp := client.DescribeDeviceCredentialCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ20240901) DescribeDeviceCredentialCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDeviceCredentialCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDeviceCredentialCommon API operation for BMQ20240901.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ20240901's
// API operation DescribeDeviceCredentialCommon for usage and error information.
func (c *BMQ20240901) DescribeDeviceCredentialCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDeviceCredentialCommonRequest(input)
	return out, req.Send()
}

// DescribeDeviceCredentialCommonWithContext is the same as DescribeDeviceCredentialCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDeviceCredentialCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ20240901) DescribeDeviceCredentialCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDeviceCredentialCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDeviceCredential = "DescribeDeviceCredential"

// DescribeDeviceCredentialRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDeviceCredential operation. The "output" return
// value will be populated with the DescribeDeviceCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDeviceCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDeviceCredentialCommon Send returns without error.
//
// See DescribeDeviceCredential for more information on using the DescribeDeviceCredential
// API call, and error handling.
//
//    // Example sending a request using the DescribeDeviceCredentialRequest method.
//    req, resp := client.DescribeDeviceCredentialRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ20240901) DescribeDeviceCredentialRequest(input *DescribeDeviceCredentialInput) (req *request.Request, output *DescribeDeviceCredentialOutput) {
	op := &request.Operation{
		Name:       opDescribeDeviceCredential,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDeviceCredentialInput{}
	}

	output = &DescribeDeviceCredentialOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDeviceCredential API operation for BMQ20240901.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ20240901's
// API operation DescribeDeviceCredential for usage and error information.
func (c *BMQ20240901) DescribeDeviceCredential(input *DescribeDeviceCredentialInput) (*DescribeDeviceCredentialOutput, error) {
	req, out := c.DescribeDeviceCredentialRequest(input)
	return out, req.Send()
}

// DescribeDeviceCredentialWithContext is the same as DescribeDeviceCredential with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDeviceCredential for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ20240901) DescribeDeviceCredentialWithContext(ctx volcengine.Context, input *DescribeDeviceCredentialInput, opts ...request.Option) (*DescribeDeviceCredentialOutput, error) {
	req, out := c.DescribeDeviceCredentialRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDeviceCredentialInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClientId is a required field
	ClientId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDeviceCredentialInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDeviceCredentialInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDeviceCredentialInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDeviceCredentialInput"}
	if s.ClientId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientId"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientId sets the ClientId field's value.
func (s *DescribeDeviceCredentialInput) SetClientId(v string) *DescribeDeviceCredentialInput {
	s.ClientId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDeviceCredentialInput) SetInstanceId(v string) *DescribeDeviceCredentialInput {
	s.InstanceId = &v
	return s
}

type DescribeDeviceCredentialOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ClientId *string `type:"string" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	DeviceAccessKeyId *string `type:"string" json:",omitempty"`

	DeviceAccessKeySecret *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDeviceCredentialOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDeviceCredentialOutput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *DescribeDeviceCredentialOutput) SetClientId(v string) *DescribeDeviceCredentialOutput {
	s.ClientId = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeDeviceCredentialOutput) SetCreateTime(v int64) *DescribeDeviceCredentialOutput {
	s.CreateTime = &v
	return s
}

// SetDeviceAccessKeyId sets the DeviceAccessKeyId field's value.
func (s *DescribeDeviceCredentialOutput) SetDeviceAccessKeyId(v string) *DescribeDeviceCredentialOutput {
	s.DeviceAccessKeyId = &v
	return s
}

// SetDeviceAccessKeySecret sets the DeviceAccessKeySecret field's value.
func (s *DescribeDeviceCredentialOutput) SetDeviceAccessKeySecret(v string) *DescribeDeviceCredentialOutput {
	s.DeviceAccessKeySecret = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDeviceCredentialOutput) SetInstanceId(v string) *DescribeDeviceCredentialOutput {
	s.InstanceId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeDeviceCredentialOutput) SetUpdateTime(v int64) *DescribeDeviceCredentialOutput {
	s.UpdateTime = &v
	return s
}
