// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBudgetAmountByBudgetIDCommon = "ListBudgetAmountByBudgetID"

// ListBudgetAmountByBudgetIDCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetAmountByBudgetIDCommon operation. The "output" return
// value will be populated with the ListBudgetAmountByBudgetIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetAmountByBudgetIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetAmountByBudgetIDCommon Send returns without error.
//
// See ListBudgetAmountByBudgetIDCommon for more information on using the ListBudgetAmountByBudgetIDCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetAmountByBudgetIDCommonRequest method.
//    req, resp := client.ListBudgetAmountByBudgetIDCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetAmountByBudgetIDCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBudgetAmountByBudgetIDCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetAmountByBudgetIDCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetAmountByBudgetIDCommon for usage and error information.
func (c *BILLING) ListBudgetAmountByBudgetIDCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBudgetAmountByBudgetIDCommonRequest(input)
	return out, req.Send()
}

// ListBudgetAmountByBudgetIDCommonWithContext is the same as ListBudgetAmountByBudgetIDCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetAmountByBudgetIDCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetAmountByBudgetIDCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBudgetAmountByBudgetIDCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBudgetAmountByBudgetID = "ListBudgetAmountByBudgetID"

// ListBudgetAmountByBudgetIDRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetAmountByBudgetID operation. The "output" return
// value will be populated with the ListBudgetAmountByBudgetIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetAmountByBudgetIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetAmountByBudgetIDCommon Send returns without error.
//
// See ListBudgetAmountByBudgetID for more information on using the ListBudgetAmountByBudgetID
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetAmountByBudgetIDRequest method.
//    req, resp := client.ListBudgetAmountByBudgetIDRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetAmountByBudgetIDRequest(input *ListBudgetAmountByBudgetIDInput) (req *request.Request, output *ListBudgetAmountByBudgetIDOutput) {
	op := &request.Operation{
		Name:       opListBudgetAmountByBudgetID,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBudgetAmountByBudgetIDInput{}
	}

	output = &ListBudgetAmountByBudgetIDOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetAmountByBudgetID API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetAmountByBudgetID for usage and error information.
func (c *BILLING) ListBudgetAmountByBudgetID(input *ListBudgetAmountByBudgetIDInput) (*ListBudgetAmountByBudgetIDOutput, error) {
	req, out := c.ListBudgetAmountByBudgetIDRequest(input)
	return out, req.Send()
}

// ListBudgetAmountByBudgetIDWithContext is the same as ListBudgetAmountByBudgetID with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetAmountByBudgetID for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetAmountByBudgetIDWithContext(ctx volcengine.Context, input *ListBudgetAmountByBudgetIDInput, opts ...request.Option) (*ListBudgetAmountByBudgetIDOutput, error) {
	req, out := c.ListBudgetAmountByBudgetIDRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BudgetAmountListForListBudgetAmountByBudgetIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ActualAmount *string `type:"string" json:",omitempty"`

	BudgetAmount *string `type:"string" json:",omitempty"`

	BudgetAmountID *string `type:"string" json:",omitempty"`

	BudgetPeriod *string `type:"string" json:",omitempty"`

	Difference *string `type:"string" json:",omitempty"`

	Ratio *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BudgetAmountListForListBudgetAmountByBudgetIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetAmountListForListBudgetAmountByBudgetIDOutput) GoString() string {
	return s.String()
}

// SetActualAmount sets the ActualAmount field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetActualAmount(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.ActualAmount = &v
	return s
}

// SetBudgetAmount sets the BudgetAmount field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetBudgetAmount(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.BudgetAmount = &v
	return s
}

// SetBudgetAmountID sets the BudgetAmountID field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetBudgetAmountID(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.BudgetAmountID = &v
	return s
}

// SetBudgetPeriod sets the BudgetPeriod field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetBudgetPeriod(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.BudgetPeriod = &v
	return s
}

// SetDifference sets the Difference field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetDifference(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.Difference = &v
	return s
}

// SetRatio sets the Ratio field's value.
func (s *BudgetAmountListForListBudgetAmountByBudgetIDOutput) SetRatio(v string) *BudgetAmountListForListBudgetAmountByBudgetIDOutput {
	s.Ratio = &v
	return s
}

type ListBudgetAmountByBudgetIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BudgetID is a required field
	BudgetID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListBudgetAmountByBudgetIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetAmountByBudgetIDInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBudgetAmountByBudgetIDInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBudgetAmountByBudgetIDInput"}
	if s.BudgetID == nil {
		invalidParams.Add(request.NewErrParamRequired("BudgetID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBudgetID sets the BudgetID field's value.
func (s *ListBudgetAmountByBudgetIDInput) SetBudgetID(v string) *ListBudgetAmountByBudgetIDInput {
	s.BudgetID = &v
	return s
}

type ListBudgetAmountByBudgetIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BudgetAmountList []*BudgetAmountListForListBudgetAmountByBudgetIDOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetAmountByBudgetIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetAmountByBudgetIDOutput) GoString() string {
	return s.String()
}

// SetBudgetAmountList sets the BudgetAmountList field's value.
func (s *ListBudgetAmountByBudgetIDOutput) SetBudgetAmountList(v []*BudgetAmountListForListBudgetAmountByBudgetIDOutput) *ListBudgetAmountByBudgetIDOutput {
	s.BudgetAmountList = v
	return s
}
