// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBudgetFilterPayerIDCommon = "ListBudgetFilterPayerID"

// ListBudgetFilterPayerIDCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterPayerIDCommon operation. The "output" return
// value will be populated with the ListBudgetFilterPayerIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterPayerIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterPayerIDCommon Send returns without error.
//
// See ListBudgetFilterPayerIDCommon for more information on using the ListBudgetFilterPayerIDCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterPayerIDCommonRequest method.
//    req, resp := client.ListBudgetFilterPayerIDCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterPayerIDCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBudgetFilterPayerIDCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterPayerIDCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterPayerIDCommon for usage and error information.
func (c *BILLING) ListBudgetFilterPayerIDCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterPayerIDCommonRequest(input)
	return out, req.Send()
}

// ListBudgetFilterPayerIDCommonWithContext is the same as ListBudgetFilterPayerIDCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterPayerIDCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterPayerIDCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterPayerIDCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBudgetFilterPayerID = "ListBudgetFilterPayerID"

// ListBudgetFilterPayerIDRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterPayerID operation. The "output" return
// value will be populated with the ListBudgetFilterPayerIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterPayerIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterPayerIDCommon Send returns without error.
//
// See ListBudgetFilterPayerID for more information on using the ListBudgetFilterPayerID
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterPayerIDRequest method.
//    req, resp := client.ListBudgetFilterPayerIDRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterPayerIDRequest(input *ListBudgetFilterPayerIDInput) (req *request.Request, output *ListBudgetFilterPayerIDOutput) {
	op := &request.Operation{
		Name:       opListBudgetFilterPayerID,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBudgetFilterPayerIDInput{}
	}

	output = &ListBudgetFilterPayerIDOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterPayerID API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterPayerID for usage and error information.
func (c *BILLING) ListBudgetFilterPayerID(input *ListBudgetFilterPayerIDInput) (*ListBudgetFilterPayerIDOutput, error) {
	req, out := c.ListBudgetFilterPayerIDRequest(input)
	return out, req.Send()
}

// ListBudgetFilterPayerIDWithContext is the same as ListBudgetFilterPayerID with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterPayerID for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterPayerIDWithContext(ctx volcengine.Context, input *ListBudgetFilterPayerIDInput, opts ...request.Option) (*ListBudgetFilterPayerIDOutput, error) {
	req, out := c.ListBudgetFilterPayerIDRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListBudgetFilterPayerIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetFilterPayerIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterPayerIDInput) GoString() string {
	return s.String()
}

type ListBudgetFilterPayerIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	List []*ListForListBudgetFilterPayerIDOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetFilterPayerIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterPayerIDOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ListBudgetFilterPayerIDOutput) SetList(v []*ListForListBudgetFilterPayerIDOutput) *ListBudgetFilterPayerIDOutput {
	s.List = v
	return s
}

type ListForListBudgetFilterPayerIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PayerID *int64 `type:"int64" json:",omitempty"`

	PayerUserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListBudgetFilterPayerIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListBudgetFilterPayerIDOutput) GoString() string {
	return s.String()
}

// SetPayerID sets the PayerID field's value.
func (s *ListForListBudgetFilterPayerIDOutput) SetPayerID(v int64) *ListForListBudgetFilterPayerIDOutput {
	s.PayerID = &v
	return s
}

// SetPayerUserName sets the PayerUserName field's value.
func (s *ListForListBudgetFilterPayerIDOutput) SetPayerUserName(v string) *ListForListBudgetFilterPayerIDOutput {
	s.PayerUserName = &v
	return s
}
