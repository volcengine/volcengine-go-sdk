// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBillOverviewByCategoryCommon = "ListBillOverviewByCategory"

// ListBillOverviewByCategoryCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBillOverviewByCategoryCommon operation. The "output" return
// value will be populated with the ListBillOverviewByCategoryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBillOverviewByCategoryCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBillOverviewByCategoryCommon Send returns without error.
//
// See ListBillOverviewByCategoryCommon for more information on using the ListBillOverviewByCategoryCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBillOverviewByCategoryCommonRequest method.
//    req, resp := client.ListBillOverviewByCategoryCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBillOverviewByCategoryCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBillOverviewByCategoryCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBillOverviewByCategoryCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBillOverviewByCategoryCommon for usage and error information.
func (c *BILLING) ListBillOverviewByCategoryCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBillOverviewByCategoryCommonRequest(input)
	return out, req.Send()
}

// ListBillOverviewByCategoryCommonWithContext is the same as ListBillOverviewByCategoryCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBillOverviewByCategoryCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBillOverviewByCategoryCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBillOverviewByCategoryCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBillOverviewByCategory = "ListBillOverviewByCategory"

// ListBillOverviewByCategoryRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBillOverviewByCategory operation. The "output" return
// value will be populated with the ListBillOverviewByCategoryCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBillOverviewByCategoryCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBillOverviewByCategoryCommon Send returns without error.
//
// See ListBillOverviewByCategory for more information on using the ListBillOverviewByCategory
// API call, and error handling.
//
//    // Example sending a request using the ListBillOverviewByCategoryRequest method.
//    req, resp := client.ListBillOverviewByCategoryRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBillOverviewByCategoryRequest(input *ListBillOverviewByCategoryInput) (req *request.Request, output *ListBillOverviewByCategoryOutput) {
	op := &request.Operation{
		Name:       opListBillOverviewByCategory,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBillOverviewByCategoryInput{}
	}

	output = &ListBillOverviewByCategoryOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBillOverviewByCategory API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBillOverviewByCategory for usage and error information.
func (c *BILLING) ListBillOverviewByCategory(input *ListBillOverviewByCategoryInput) (*ListBillOverviewByCategoryOutput, error) {
	req, out := c.ListBillOverviewByCategoryRequest(input)
	return out, req.Send()
}

// ListBillOverviewByCategoryWithContext is the same as ListBillOverviewByCategory with the addition of
// the ability to pass a context and additional request options.
//
// See ListBillOverviewByCategory for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBillOverviewByCategoryWithContext(ctx volcengine.Context, input *ListBillOverviewByCategoryInput, opts ...request.Option) (*ListBillOverviewByCategoryOutput, error) {
	req, out := c.ListBillOverviewByCategoryRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConvertListForListBillOverviewByCategoryOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	List []*ListForListBillOverviewByCategoryOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ConvertListForListBillOverviewByCategoryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertListForListBillOverviewByCategoryOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ConvertListForListBillOverviewByCategoryOutput) SetList(v []*ListForListBillOverviewByCategoryOutput) *ConvertListForListBillOverviewByCategoryOutput {
	s.List = v
	return s
}

type ListBillOverviewByCategoryInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillCategoryParent []*string `type:"list" json:",omitempty"`

	// BillPeriod is a required field
	BillPeriod *string `min:"7" max:"7" type:"string" json:",omitempty" required:"true"`

	BillingMode []*string `type:"list" json:",omitempty"`

	OwnerID []*int64 `type:"list" json:",omitempty"`

	PayerID []*int64 `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBillOverviewByCategoryInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBillOverviewByCategoryInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBillOverviewByCategoryInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBillOverviewByCategoryInput"}
	if s.BillPeriod == nil {
		invalidParams.Add(request.NewErrParamRequired("BillPeriod"))
	}
	if s.BillPeriod != nil && len(*s.BillPeriod) < 7 {
		invalidParams.Add(request.NewErrParamMinLen("BillPeriod", 7))
	}
	if s.BillPeriod != nil && len(*s.BillPeriod) > 7 {
		invalidParams.Add(request.NewErrParamMaxLen("BillPeriod", 7, *s.BillPeriod))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBillCategoryParent sets the BillCategoryParent field's value.
func (s *ListBillOverviewByCategoryInput) SetBillCategoryParent(v []*string) *ListBillOverviewByCategoryInput {
	s.BillCategoryParent = v
	return s
}

// SetBillPeriod sets the BillPeriod field's value.
func (s *ListBillOverviewByCategoryInput) SetBillPeriod(v string) *ListBillOverviewByCategoryInput {
	s.BillPeriod = &v
	return s
}

// SetBillingMode sets the BillingMode field's value.
func (s *ListBillOverviewByCategoryInput) SetBillingMode(v []*string) *ListBillOverviewByCategoryInput {
	s.BillingMode = v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListBillOverviewByCategoryInput) SetOwnerID(v []*int64) *ListBillOverviewByCategoryInput {
	s.OwnerID = v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *ListBillOverviewByCategoryInput) SetPayerID(v []*int64) *ListBillOverviewByCategoryInput {
	s.PayerID = v
	return s
}

type ListBillOverviewByCategoryOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	List []*ConvertListForListBillOverviewByCategoryOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBillOverviewByCategoryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBillOverviewByCategoryOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ListBillOverviewByCategoryOutput) SetList(v []*ConvertListForListBillOverviewByCategoryOutput) *ListBillOverviewByCategoryOutput {
	s.List = v
	return s
}

type ListForListBillOverviewByCategoryOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillCategoryParent *string `type:"string" json:",omitempty"`

	BillPeriod *string `type:"string" json:",omitempty"`

	BusinessMode *string `type:"string" json:",omitempty"`

	CountryArea *string `type:"string" json:",omitempty"`

	CountryRegion *string `type:"string" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	CreditCarriedAmount *string `type:"string" json:",omitempty"`

	Currency *string `type:"string" json:",omitempty"`

	CurrencySettlement *string `type:"string" json:",omitempty"`

	DiscountBillAmount *string `type:"string" json:",omitempty"`

	OriginalBillAmount *string `type:"string" json:",omitempty"`

	OwnerCustomerName *string `type:"string" json:",omitempty"`

	OwnerID *string `type:"string" json:",omitempty"`

	OwnerUserName *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`

	PayerCustomerName *string `type:"string" json:",omitempty"`

	PayerID *string `type:"string" json:",omitempty"`

	PayerUserName *string `type:"string" json:",omitempty"`

	PosttaxAmount *string `type:"string" json:",omitempty"`

	PreTaxPayableAmount *string `type:"string" json:",omitempty"`

	PretaxAmount *string `type:"string" json:",omitempty"`

	PretaxRealValue *string `type:"string" json:",omitempty"`

	RealValue *string `type:"string" json:",omitempty"`

	SavingPlanOriginalAmount *string `type:"string" json:",omitempty"`

	SellerCustomerName *string `type:"string" json:",omitempty"`

	SellerID *string `type:"string" json:",omitempty"`

	SellerUserName *string `type:"string" json:",omitempty"`

	SettlePayableAmount *string `type:"string" json:",omitempty"`

	SettlePosttaxAmount *string `type:"string" json:",omitempty"`

	SettlePreTaxPayableAmount *string `type:"string" json:",omitempty"`

	SettlePretaxAmount *string `type:"string" json:",omitempty"`

	SettlePretaxRealValue *string `type:"string" json:",omitempty"`

	SettleRealValue *string `type:"string" json:",omitempty"`

	SettleTax *string `type:"string" json:",omitempty"`

	SettlementType *string `type:"string" json:",omitempty"`

	SubjectName *string `type:"string" json:",omitempty"`

	SubjectNo *string `type:"string" json:",omitempty"`

	Tax *string `type:"string" json:",omitempty"`

	UnpaidAmount *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListBillOverviewByCategoryOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListBillOverviewByCategoryOutput) GoString() string {
	return s.String()
}

// SetBillCategoryParent sets the BillCategoryParent field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetBillCategoryParent(v string) *ListForListBillOverviewByCategoryOutput {
	s.BillCategoryParent = &v
	return s
}

// SetBillPeriod sets the BillPeriod field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetBillPeriod(v string) *ListForListBillOverviewByCategoryOutput {
	s.BillPeriod = &v
	return s
}

// SetBusinessMode sets the BusinessMode field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetBusinessMode(v string) *ListForListBillOverviewByCategoryOutput {
	s.BusinessMode = &v
	return s
}

// SetCountryArea sets the CountryArea field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCountryArea(v string) *ListForListBillOverviewByCategoryOutput {
	s.CountryArea = &v
	return s
}

// SetCountryRegion sets the CountryRegion field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCountryRegion(v string) *ListForListBillOverviewByCategoryOutput {
	s.CountryRegion = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCouponAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.CouponAmount = &v
	return s
}

// SetCreditCarriedAmount sets the CreditCarriedAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCreditCarriedAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.CreditCarriedAmount = &v
	return s
}

// SetCurrency sets the Currency field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCurrency(v string) *ListForListBillOverviewByCategoryOutput {
	s.Currency = &v
	return s
}

// SetCurrencySettlement sets the CurrencySettlement field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetCurrencySettlement(v string) *ListForListBillOverviewByCategoryOutput {
	s.CurrencySettlement = &v
	return s
}

// SetDiscountBillAmount sets the DiscountBillAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetDiscountBillAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.DiscountBillAmount = &v
	return s
}

// SetOriginalBillAmount sets the OriginalBillAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetOriginalBillAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.OriginalBillAmount = &v
	return s
}

// SetOwnerCustomerName sets the OwnerCustomerName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetOwnerCustomerName(v string) *ListForListBillOverviewByCategoryOutput {
	s.OwnerCustomerName = &v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetOwnerID(v string) *ListForListBillOverviewByCategoryOutput {
	s.OwnerID = &v
	return s
}

// SetOwnerUserName sets the OwnerUserName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetOwnerUserName(v string) *ListForListBillOverviewByCategoryOutput {
	s.OwnerUserName = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPaidAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPayableAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.PayableAmount = &v
	return s
}

// SetPayerCustomerName sets the PayerCustomerName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPayerCustomerName(v string) *ListForListBillOverviewByCategoryOutput {
	s.PayerCustomerName = &v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPayerID(v string) *ListForListBillOverviewByCategoryOutput {
	s.PayerID = &v
	return s
}

// SetPayerUserName sets the PayerUserName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPayerUserName(v string) *ListForListBillOverviewByCategoryOutput {
	s.PayerUserName = &v
	return s
}

// SetPosttaxAmount sets the PosttaxAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPosttaxAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.PosttaxAmount = &v
	return s
}

// SetPreTaxPayableAmount sets the PreTaxPayableAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPreTaxPayableAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.PreTaxPayableAmount = &v
	return s
}

// SetPretaxAmount sets the PretaxAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPretaxAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.PretaxAmount = &v
	return s
}

// SetPretaxRealValue sets the PretaxRealValue field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetPretaxRealValue(v string) *ListForListBillOverviewByCategoryOutput {
	s.PretaxRealValue = &v
	return s
}

// SetRealValue sets the RealValue field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetRealValue(v string) *ListForListBillOverviewByCategoryOutput {
	s.RealValue = &v
	return s
}

// SetSavingPlanOriginalAmount sets the SavingPlanOriginalAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSavingPlanOriginalAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.SavingPlanOriginalAmount = &v
	return s
}

// SetSellerCustomerName sets the SellerCustomerName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSellerCustomerName(v string) *ListForListBillOverviewByCategoryOutput {
	s.SellerCustomerName = &v
	return s
}

// SetSellerID sets the SellerID field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSellerID(v string) *ListForListBillOverviewByCategoryOutput {
	s.SellerID = &v
	return s
}

// SetSellerUserName sets the SellerUserName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSellerUserName(v string) *ListForListBillOverviewByCategoryOutput {
	s.SellerUserName = &v
	return s
}

// SetSettlePayableAmount sets the SettlePayableAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlePayableAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlePayableAmount = &v
	return s
}

// SetSettlePosttaxAmount sets the SettlePosttaxAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlePosttaxAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlePosttaxAmount = &v
	return s
}

// SetSettlePreTaxPayableAmount sets the SettlePreTaxPayableAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlePreTaxPayableAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlePreTaxPayableAmount = &v
	return s
}

// SetSettlePretaxAmount sets the SettlePretaxAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlePretaxAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlePretaxAmount = &v
	return s
}

// SetSettlePretaxRealValue sets the SettlePretaxRealValue field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlePretaxRealValue(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlePretaxRealValue = &v
	return s
}

// SetSettleRealValue sets the SettleRealValue field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettleRealValue(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettleRealValue = &v
	return s
}

// SetSettleTax sets the SettleTax field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettleTax(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettleTax = &v
	return s
}

// SetSettlementType sets the SettlementType field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSettlementType(v string) *ListForListBillOverviewByCategoryOutput {
	s.SettlementType = &v
	return s
}

// SetSubjectName sets the SubjectName field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSubjectName(v string) *ListForListBillOverviewByCategoryOutput {
	s.SubjectName = &v
	return s
}

// SetSubjectNo sets the SubjectNo field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetSubjectNo(v string) *ListForListBillOverviewByCategoryOutput {
	s.SubjectNo = &v
	return s
}

// SetTax sets the Tax field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetTax(v string) *ListForListBillOverviewByCategoryOutput {
	s.Tax = &v
	return s
}

// SetUnpaidAmount sets the UnpaidAmount field's value.
func (s *ListForListBillOverviewByCategoryOutput) SetUnpaidAmount(v string) *ListForListBillOverviewByCategoryOutput {
	s.UnpaidAmount = &v
	return s
}
