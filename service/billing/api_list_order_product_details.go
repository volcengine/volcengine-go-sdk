// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListOrderProductDetailsCommon = "ListOrderProductDetails"

// ListOrderProductDetailsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListOrderProductDetailsCommon operation. The "output" return
// value will be populated with the ListOrderProductDetailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListOrderProductDetailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListOrderProductDetailsCommon Send returns without error.
//
// See ListOrderProductDetailsCommon for more information on using the ListOrderProductDetailsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListOrderProductDetailsCommonRequest method.
//    req, resp := client.ListOrderProductDetailsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListOrderProductDetailsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListOrderProductDetailsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListOrderProductDetailsCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListOrderProductDetailsCommon for usage and error information.
func (c *BILLING) ListOrderProductDetailsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListOrderProductDetailsCommonRequest(input)
	return out, req.Send()
}

// ListOrderProductDetailsCommonWithContext is the same as ListOrderProductDetailsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListOrderProductDetailsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListOrderProductDetailsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListOrderProductDetailsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListOrderProductDetails = "ListOrderProductDetails"

// ListOrderProductDetailsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListOrderProductDetails operation. The "output" return
// value will be populated with the ListOrderProductDetailsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListOrderProductDetailsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListOrderProductDetailsCommon Send returns without error.
//
// See ListOrderProductDetails for more information on using the ListOrderProductDetails
// API call, and error handling.
//
//    // Example sending a request using the ListOrderProductDetailsRequest method.
//    req, resp := client.ListOrderProductDetailsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListOrderProductDetailsRequest(input *ListOrderProductDetailsInput) (req *request.Request, output *ListOrderProductDetailsOutput) {
	op := &request.Operation{
		Name:       opListOrderProductDetails,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListOrderProductDetailsInput{}
	}

	output = &ListOrderProductDetailsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListOrderProductDetails API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListOrderProductDetails for usage and error information.
func (c *BILLING) ListOrderProductDetails(input *ListOrderProductDetailsInput) (*ListOrderProductDetailsOutput, error) {
	req, out := c.ListOrderProductDetailsRequest(input)
	return out, req.Send()
}

// ListOrderProductDetailsWithContext is the same as ListOrderProductDetails with the addition of
// the ability to pass a context and additional request options.
//
// See ListOrderProductDetails for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListOrderProductDetailsWithContext(ctx volcengine.Context, input *ListOrderProductDetailsInput, opts ...request.Option) (*ListOrderProductDetailsOutput, error) {
	req, out := c.ListOrderProductDetailsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListOrderProductDetailsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// OrderID is a required field
	OrderID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListOrderProductDetailsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListOrderProductDetailsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListOrderProductDetailsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListOrderProductDetailsInput"}
	if s.OrderID == nil {
		invalidParams.Add(request.NewErrParamRequired("OrderID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListOrderProductDetailsInput) SetMaxResults(v int32) *ListOrderProductDetailsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListOrderProductDetailsInput) SetNextToken(v string) *ListOrderProductDetailsInput {
	s.NextToken = &v
	return s
}

// SetOrderID sets the OrderID field's value.
func (s *ListOrderProductDetailsInput) SetOrderID(v string) *ListOrderProductDetailsInput {
	s.OrderID = &v
	return s
}

type ListOrderProductDetailsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	OrderProductInfos []*OrderProductInfoForListOrderProductDetailsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListOrderProductDetailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListOrderProductDetailsOutput) GoString() string {
	return s.String()
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListOrderProductDetailsOutput) SetMaxResults(v int32) *ListOrderProductDetailsOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListOrderProductDetailsOutput) SetNextToken(v string) *ListOrderProductDetailsOutput {
	s.NextToken = &v
	return s
}

// SetOrderProductInfos sets the OrderProductInfos field's value.
func (s *ListOrderProductDetailsOutput) SetOrderProductInfos(v []*OrderProductInfoForListOrderProductDetailsOutput) *ListOrderProductDetailsOutput {
	s.OrderProductInfos = v
	return s
}

type OrderFailRefundInfoForListOrderProductDetailsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	DiscountAmount *string `type:"string" json:",omitempty"`

	OriginalAmount *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderFailRefundInfoForListOrderProductDetailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderFailRefundInfoForListOrderProductDetailsOutput) GoString() string {
	return s.String()
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *OrderFailRefundInfoForListOrderProductDetailsOutput) SetCouponAmount(v string) *OrderFailRefundInfoForListOrderProductDetailsOutput {
	s.CouponAmount = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *OrderFailRefundInfoForListOrderProductDetailsOutput) SetDiscountAmount(v string) *OrderFailRefundInfoForListOrderProductDetailsOutput {
	s.DiscountAmount = &v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *OrderFailRefundInfoForListOrderProductDetailsOutput) SetOriginalAmount(v string) *OrderFailRefundInfoForListOrderProductDetailsOutput {
	s.OriginalAmount = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *OrderFailRefundInfoForListOrderProductDetailsOutput) SetPaidAmount(v string) *OrderFailRefundInfoForListOrderProductDetailsOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *OrderFailRefundInfoForListOrderProductDetailsOutput) SetPayableAmount(v string) *OrderFailRefundInfoForListOrderProductDetailsOutput {
	s.PayableAmount = &v
	return s
}

type OrderProductInfoForListOrderProductDetailsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	CouponAmount *string `type:"string" json:",omitempty"`

	DiscountAmount *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`

	OrderFailRefundInfo *OrderFailRefundInfoForListOrderProductDetailsOutput `type:"structure" json:",omitempty"`

	OriginalAmount *string `type:"string" json:",omitempty"`

	PaidAmount *string `type:"string" json:",omitempty"`

	PayableAmount *string `type:"string" json:",omitempty"`

	PayerCustomerName *string `type:"string" json:",omitempty"`

	PayerID *int32 `type:"int32" json:",omitempty"`

	PaymentMethod *string `type:"string" json:",omitempty"`

	Period *string `type:"string" json:",omitempty"`

	Product *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Times *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderProductInfoForListOrderProductDetailsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderProductInfoForListOrderProductDetailsOutput) GoString() string {
	return s.String()
}

// SetBeginTime sets the BeginTime field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetBeginTime(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.BeginTime = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetConfigurationCode(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.ConfigurationCode = &v
	return s
}

// SetCouponAmount sets the CouponAmount field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetCouponAmount(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.CouponAmount = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetDiscountAmount(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.DiscountAmount = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetEndTime(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.EndTime = &v
	return s
}

// SetInstanceID sets the InstanceID field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetInstanceID(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.InstanceID = &v
	return s
}

// SetOrderFailRefundInfo sets the OrderFailRefundInfo field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetOrderFailRefundInfo(v *OrderFailRefundInfoForListOrderProductDetailsOutput) *OrderProductInfoForListOrderProductDetailsOutput {
	s.OrderFailRefundInfo = v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetOriginalAmount(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.OriginalAmount = &v
	return s
}

// SetPaidAmount sets the PaidAmount field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPaidAmount(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.PaidAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPayableAmount(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.PayableAmount = &v
	return s
}

// SetPayerCustomerName sets the PayerCustomerName field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPayerCustomerName(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.PayerCustomerName = &v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPayerID(v int32) *OrderProductInfoForListOrderProductDetailsOutput {
	s.PayerID = &v
	return s
}

// SetPaymentMethod sets the PaymentMethod field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPaymentMethod(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.PaymentMethod = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetPeriod(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.Period = &v
	return s
}

// SetProduct sets the Product field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetProduct(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.Product = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetStatus(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.Status = &v
	return s
}

// SetTimes sets the Times field's value.
func (s *OrderProductInfoForListOrderProductDetailsOutput) SetTimes(v string) *OrderProductInfoForListOrderProductDetailsOutput {
	s.Times = &v
	return s
}
