// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListCouponUsageRecordsCommon = "ListCouponUsageRecords"

// ListCouponUsageRecordsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCouponUsageRecordsCommon operation. The "output" return
// value will be populated with the ListCouponUsageRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCouponUsageRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCouponUsageRecordsCommon Send returns without error.
//
// See ListCouponUsageRecordsCommon for more information on using the ListCouponUsageRecordsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListCouponUsageRecordsCommonRequest method.
//    req, resp := client.ListCouponUsageRecordsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListCouponUsageRecordsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListCouponUsageRecordsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCouponUsageRecordsCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListCouponUsageRecordsCommon for usage and error information.
func (c *BILLING) ListCouponUsageRecordsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListCouponUsageRecordsCommonRequest(input)
	return out, req.Send()
}

// ListCouponUsageRecordsCommonWithContext is the same as ListCouponUsageRecordsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListCouponUsageRecordsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListCouponUsageRecordsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListCouponUsageRecordsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCouponUsageRecords = "ListCouponUsageRecords"

// ListCouponUsageRecordsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCouponUsageRecords operation. The "output" return
// value will be populated with the ListCouponUsageRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCouponUsageRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCouponUsageRecordsCommon Send returns without error.
//
// See ListCouponUsageRecords for more information on using the ListCouponUsageRecords
// API call, and error handling.
//
//    // Example sending a request using the ListCouponUsageRecordsRequest method.
//    req, resp := client.ListCouponUsageRecordsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListCouponUsageRecordsRequest(input *ListCouponUsageRecordsInput) (req *request.Request, output *ListCouponUsageRecordsOutput) {
	op := &request.Operation{
		Name:       opListCouponUsageRecords,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCouponUsageRecordsInput{}
	}

	output = &ListCouponUsageRecordsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCouponUsageRecords API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListCouponUsageRecords for usage and error information.
func (c *BILLING) ListCouponUsageRecords(input *ListCouponUsageRecordsInput) (*ListCouponUsageRecordsOutput, error) {
	req, out := c.ListCouponUsageRecordsRequest(input)
	return out, req.Send()
}

// ListCouponUsageRecordsWithContext is the same as ListCouponUsageRecords with the addition of
// the ability to pass a context and additional request options.
//
// See ListCouponUsageRecords for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListCouponUsageRecordsWithContext(ctx volcengine.Context, input *ListCouponUsageRecordsInput, opts ...request.Option) (*ListCouponUsageRecordsOutput, error) {
	req, out := c.ListCouponUsageRecordsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListCouponUsageRecordsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// CouponID is a required field
	CouponID *string `type:"string" json:",omitempty" required:"true"`

	Limit *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListCouponUsageRecordsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCouponUsageRecordsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListCouponUsageRecordsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListCouponUsageRecordsInput"}
	if s.CouponID == nil {
		invalidParams.Add(request.NewErrParamRequired("CouponID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCouponID sets the CouponID field's value.
func (s *ListCouponUsageRecordsInput) SetCouponID(v string) *ListCouponUsageRecordsInput {
	s.CouponID = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListCouponUsageRecordsInput) SetLimit(v int32) *ListCouponUsageRecordsInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListCouponUsageRecordsInput) SetOffset(v int32) *ListCouponUsageRecordsInput {
	s.Offset = &v
	return s
}

type ListCouponUsageRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	List []*ListForListCouponUsageRecordsOutput `type:"list" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListCouponUsageRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCouponUsageRecordsOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *ListCouponUsageRecordsOutput) SetLimit(v int32) *ListCouponUsageRecordsOutput {
	s.Limit = &v
	return s
}

// SetList sets the List field's value.
func (s *ListCouponUsageRecordsOutput) SetList(v []*ListForListCouponUsageRecordsOutput) *ListCouponUsageRecordsOutput {
	s.List = v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListCouponUsageRecordsOutput) SetOffset(v int32) *ListCouponUsageRecordsOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListCouponUsageRecordsOutput) SetTotal(v int32) *ListCouponUsageRecordsOutput {
	s.Total = &v
	return s
}

type ListForListCouponUsageRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int64 `type:"int64" json:",omitempty"`

	ChangeAmount *float64 `type:"double" json:",omitempty"`

	ChangeType *int32 `type:"int32" json:",omitempty"`

	CouponID *string `type:"string" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	PayType *string `type:"string" json:",omitempty"`

	ProductCode *string `type:"string" json:",omitempty"`

	ProductName *string `type:"string" json:",omitempty"`

	SubBusinessID *string `type:"string" json:",omitempty"`

	UserAccountID *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListForListCouponUsageRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListCouponUsageRecordsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *ListForListCouponUsageRecordsOutput) SetAccountID(v int64) *ListForListCouponUsageRecordsOutput {
	s.AccountID = &v
	return s
}

// SetChangeAmount sets the ChangeAmount field's value.
func (s *ListForListCouponUsageRecordsOutput) SetChangeAmount(v float64) *ListForListCouponUsageRecordsOutput {
	s.ChangeAmount = &v
	return s
}

// SetChangeType sets the ChangeType field's value.
func (s *ListForListCouponUsageRecordsOutput) SetChangeType(v int32) *ListForListCouponUsageRecordsOutput {
	s.ChangeType = &v
	return s
}

// SetCouponID sets the CouponID field's value.
func (s *ListForListCouponUsageRecordsOutput) SetCouponID(v string) *ListForListCouponUsageRecordsOutput {
	s.CouponID = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *ListForListCouponUsageRecordsOutput) SetCreatedTime(v string) *ListForListCouponUsageRecordsOutput {
	s.CreatedTime = &v
	return s
}

// SetPayType sets the PayType field's value.
func (s *ListForListCouponUsageRecordsOutput) SetPayType(v string) *ListForListCouponUsageRecordsOutput {
	s.PayType = &v
	return s
}

// SetProductCode sets the ProductCode field's value.
func (s *ListForListCouponUsageRecordsOutput) SetProductCode(v string) *ListForListCouponUsageRecordsOutput {
	s.ProductCode = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *ListForListCouponUsageRecordsOutput) SetProductName(v string) *ListForListCouponUsageRecordsOutput {
	s.ProductName = &v
	return s
}

// SetSubBusinessID sets the SubBusinessID field's value.
func (s *ListForListCouponUsageRecordsOutput) SetSubBusinessID(v string) *ListForListCouponUsageRecordsOutput {
	s.SubBusinessID = &v
	return s
}

// SetUserAccountID sets the UserAccountID field's value.
func (s *ListForListCouponUsageRecordsOutput) SetUserAccountID(v int64) *ListForListCouponUsageRecordsOutput {
	s.UserAccountID = &v
	return s
}
