// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBudgetFilterOwnerIDCommon = "ListBudgetFilterOwnerID"

// ListBudgetFilterOwnerIDCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterOwnerIDCommon operation. The "output" return
// value will be populated with the ListBudgetFilterOwnerIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterOwnerIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterOwnerIDCommon Send returns without error.
//
// See ListBudgetFilterOwnerIDCommon for more information on using the ListBudgetFilterOwnerIDCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterOwnerIDCommonRequest method.
//    req, resp := client.ListBudgetFilterOwnerIDCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterOwnerIDCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBudgetFilterOwnerIDCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterOwnerIDCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterOwnerIDCommon for usage and error information.
func (c *BILLING) ListBudgetFilterOwnerIDCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterOwnerIDCommonRequest(input)
	return out, req.Send()
}

// ListBudgetFilterOwnerIDCommonWithContext is the same as ListBudgetFilterOwnerIDCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterOwnerIDCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterOwnerIDCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterOwnerIDCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBudgetFilterOwnerID = "ListBudgetFilterOwnerID"

// ListBudgetFilterOwnerIDRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterOwnerID operation. The "output" return
// value will be populated with the ListBudgetFilterOwnerIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterOwnerIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterOwnerIDCommon Send returns without error.
//
// See ListBudgetFilterOwnerID for more information on using the ListBudgetFilterOwnerID
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterOwnerIDRequest method.
//    req, resp := client.ListBudgetFilterOwnerIDRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterOwnerIDRequest(input *ListBudgetFilterOwnerIDInput) (req *request.Request, output *ListBudgetFilterOwnerIDOutput) {
	op := &request.Operation{
		Name:       opListBudgetFilterOwnerID,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBudgetFilterOwnerIDInput{}
	}

	output = &ListBudgetFilterOwnerIDOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterOwnerID API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterOwnerID for usage and error information.
func (c *BILLING) ListBudgetFilterOwnerID(input *ListBudgetFilterOwnerIDInput) (*ListBudgetFilterOwnerIDOutput, error) {
	req, out := c.ListBudgetFilterOwnerIDRequest(input)
	return out, req.Send()
}

// ListBudgetFilterOwnerIDWithContext is the same as ListBudgetFilterOwnerID with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterOwnerID for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterOwnerIDWithContext(ctx volcengine.Context, input *ListBudgetFilterOwnerIDInput, opts ...request.Option) (*ListBudgetFilterOwnerIDOutput, error) {
	req, out := c.ListBudgetFilterOwnerIDRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListBudgetFilterOwnerIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetFilterOwnerIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterOwnerIDInput) GoString() string {
	return s.String()
}

type ListBudgetFilterOwnerIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	List []*ListForListBudgetFilterOwnerIDOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetFilterOwnerIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterOwnerIDOutput) GoString() string {
	return s.String()
}

// SetList sets the List field's value.
func (s *ListBudgetFilterOwnerIDOutput) SetList(v []*ListForListBudgetFilterOwnerIDOutput) *ListBudgetFilterOwnerIDOutput {
	s.List = v
	return s
}

type ListForListBudgetFilterOwnerIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	OwnerID *int64 `type:"int64" json:",omitempty"`

	OwnerUserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListForListBudgetFilterOwnerIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListBudgetFilterOwnerIDOutput) GoString() string {
	return s.String()
}

// SetOwnerID sets the OwnerID field's value.
func (s *ListForListBudgetFilterOwnerIDOutput) SetOwnerID(v int64) *ListForListBudgetFilterOwnerIDOutput {
	s.OwnerID = &v
	return s
}

// SetOwnerUserName sets the OwnerUserName field's value.
func (s *ListForListBudgetFilterOwnerIDOutput) SetOwnerUserName(v string) *ListForListBudgetFilterOwnerIDOutput {
	s.OwnerUserName = &v
	return s
}
