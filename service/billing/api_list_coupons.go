// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListCouponsCommon = "ListCoupons"

// ListCouponsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCouponsCommon operation. The "output" return
// value will be populated with the ListCouponsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCouponsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCouponsCommon Send returns without error.
//
// See ListCouponsCommon for more information on using the ListCouponsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListCouponsCommonRequest method.
//    req, resp := client.ListCouponsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListCouponsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListCouponsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCouponsCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListCouponsCommon for usage and error information.
func (c *BILLING) ListCouponsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListCouponsCommonRequest(input)
	return out, req.Send()
}

// ListCouponsCommonWithContext is the same as ListCouponsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListCouponsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListCouponsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListCouponsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCoupons = "ListCoupons"

// ListCouponsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCoupons operation. The "output" return
// value will be populated with the ListCouponsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCouponsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCouponsCommon Send returns without error.
//
// See ListCoupons for more information on using the ListCoupons
// API call, and error handling.
//
//    // Example sending a request using the ListCouponsRequest method.
//    req, resp := client.ListCouponsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListCouponsRequest(input *ListCouponsInput) (req *request.Request, output *ListCouponsOutput) {
	op := &request.Operation{
		Name:       opListCoupons,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCouponsInput{}
	}

	output = &ListCouponsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCoupons API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListCoupons for usage and error information.
func (c *BILLING) ListCoupons(input *ListCouponsInput) (*ListCouponsOutput, error) {
	req, out := c.ListCouponsRequest(input)
	return out, req.Send()
}

// ListCouponsWithContext is the same as ListCoupons with the addition of
// the ability to pass a context and additional request options.
//
// See ListCoupons for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListCouponsWithContext(ctx volcengine.Context, input *ListCouponsInput, opts ...request.Option) (*ListCouponsOutput, error) {
	req, out := c.ListCouponsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListCouponsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CouponID *string `type:"string" json:",omitempty"`

	Limit *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	ProductCode *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	ValidBeginTime *string `type:"string" json:",omitempty"`

	ValidEndTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListCouponsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCouponsInput) GoString() string {
	return s.String()
}

// SetCouponID sets the CouponID field's value.
func (s *ListCouponsInput) SetCouponID(v string) *ListCouponsInput {
	s.CouponID = &v
	return s
}

// SetLimit sets the Limit field's value.
func (s *ListCouponsInput) SetLimit(v int32) *ListCouponsInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListCouponsInput) SetOffset(v int32) *ListCouponsInput {
	s.Offset = &v
	return s
}

// SetProductCode sets the ProductCode field's value.
func (s *ListCouponsInput) SetProductCode(v string) *ListCouponsInput {
	s.ProductCode = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListCouponsInput) SetStatus(v string) *ListCouponsInput {
	s.Status = &v
	return s
}

// SetValidBeginTime sets the ValidBeginTime field's value.
func (s *ListCouponsInput) SetValidBeginTime(v string) *ListCouponsInput {
	s.ValidBeginTime = &v
	return s
}

// SetValidEndTime sets the ValidEndTime field's value.
func (s *ListCouponsInput) SetValidEndTime(v string) *ListCouponsInput {
	s.ValidEndTime = &v
	return s
}

type ListCouponsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	List []*ListForListCouponsOutput `type:"list" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListCouponsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCouponsOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *ListCouponsOutput) SetLimit(v int32) *ListCouponsOutput {
	s.Limit = &v
	return s
}

// SetList sets the List field's value.
func (s *ListCouponsOutput) SetList(v []*ListForListCouponsOutput) *ListCouponsOutput {
	s.List = v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListCouponsOutput) SetOffset(v int32) *ListCouponsOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListCouponsOutput) SetTotal(v int32) *ListCouponsOutput {
	s.Total = &v
	return s
}

type ListForListCouponsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int64 `type:"int64" json:",omitempty"`

	AcquireTime *string `type:"string" json:",omitempty"`

	AmountLimit *float64 `type:"double" json:",omitempty"`

	AssignedOwnerIDList []*int64 `type:"list" json:",omitempty"`

	BeginTime *string `type:"string" json:",omitempty"`

	CouponID *string `type:"string" json:",omitempty"`

	CouponName *string `type:"string" json:",omitempty"`

	ExpiredTime *string `type:"string" json:",omitempty"`

	OrderTypeLimit *string `type:"string" json:",omitempty"`

	PayTypeLimit *string `type:"string" json:",omitempty"`

	ProductLimitList []*ProductLimitListForListCouponsOutput `type:"list" json:",omitempty"`

	RemainingAmount *float64 `type:"double" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	TotalAmount *float64 `type:"double" json:",omitempty"`

	UsageLimit *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListForListCouponsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListForListCouponsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *ListForListCouponsOutput) SetAccountID(v int64) *ListForListCouponsOutput {
	s.AccountID = &v
	return s
}

// SetAcquireTime sets the AcquireTime field's value.
func (s *ListForListCouponsOutput) SetAcquireTime(v string) *ListForListCouponsOutput {
	s.AcquireTime = &v
	return s
}

// SetAmountLimit sets the AmountLimit field's value.
func (s *ListForListCouponsOutput) SetAmountLimit(v float64) *ListForListCouponsOutput {
	s.AmountLimit = &v
	return s
}

// SetAssignedOwnerIDList sets the AssignedOwnerIDList field's value.
func (s *ListForListCouponsOutput) SetAssignedOwnerIDList(v []*int64) *ListForListCouponsOutput {
	s.AssignedOwnerIDList = v
	return s
}

// SetBeginTime sets the BeginTime field's value.
func (s *ListForListCouponsOutput) SetBeginTime(v string) *ListForListCouponsOutput {
	s.BeginTime = &v
	return s
}

// SetCouponID sets the CouponID field's value.
func (s *ListForListCouponsOutput) SetCouponID(v string) *ListForListCouponsOutput {
	s.CouponID = &v
	return s
}

// SetCouponName sets the CouponName field's value.
func (s *ListForListCouponsOutput) SetCouponName(v string) *ListForListCouponsOutput {
	s.CouponName = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *ListForListCouponsOutput) SetExpiredTime(v string) *ListForListCouponsOutput {
	s.ExpiredTime = &v
	return s
}

// SetOrderTypeLimit sets the OrderTypeLimit field's value.
func (s *ListForListCouponsOutput) SetOrderTypeLimit(v string) *ListForListCouponsOutput {
	s.OrderTypeLimit = &v
	return s
}

// SetPayTypeLimit sets the PayTypeLimit field's value.
func (s *ListForListCouponsOutput) SetPayTypeLimit(v string) *ListForListCouponsOutput {
	s.PayTypeLimit = &v
	return s
}

// SetProductLimitList sets the ProductLimitList field's value.
func (s *ListForListCouponsOutput) SetProductLimitList(v []*ProductLimitListForListCouponsOutput) *ListForListCouponsOutput {
	s.ProductLimitList = v
	return s
}

// SetRemainingAmount sets the RemainingAmount field's value.
func (s *ListForListCouponsOutput) SetRemainingAmount(v float64) *ListForListCouponsOutput {
	s.RemainingAmount = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *ListForListCouponsOutput) SetRemark(v string) *ListForListCouponsOutput {
	s.Remark = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListForListCouponsOutput) SetStatus(v int32) *ListForListCouponsOutput {
	s.Status = &v
	return s
}

// SetTotalAmount sets the TotalAmount field's value.
func (s *ListForListCouponsOutput) SetTotalAmount(v float64) *ListForListCouponsOutput {
	s.TotalAmount = &v
	return s
}

// SetUsageLimit sets the UsageLimit field's value.
func (s *ListForListCouponsOutput) SetUsageLimit(v int32) *ListForListCouponsOutput {
	s.UsageLimit = &v
	return s
}

type ProductLimitListForListCouponsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillingMethod *string `type:"string" json:",omitempty"`

	ChargeItemCode *string `type:"string" json:",omitempty"`

	ChargeItemType *int32 `type:"int32" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	ConfigurationName *string `type:"string" json:",omitempty"`

	ConfigurationType *int32 `type:"int32" json:",omitempty"`

	ProductCode *string `type:"string" json:",omitempty"`

	ProductName *string `type:"string" json:",omitempty"`

	TimeLimitLower *int32 `type:"int32" json:",omitempty"`

	TimeLimitUpper *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ProductLimitListForListCouponsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProductLimitListForListCouponsOutput) GoString() string {
	return s.String()
}

// SetBillingMethod sets the BillingMethod field's value.
func (s *ProductLimitListForListCouponsOutput) SetBillingMethod(v string) *ProductLimitListForListCouponsOutput {
	s.BillingMethod = &v
	return s
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *ProductLimitListForListCouponsOutput) SetChargeItemCode(v string) *ProductLimitListForListCouponsOutput {
	s.ChargeItemCode = &v
	return s
}

// SetChargeItemType sets the ChargeItemType field's value.
func (s *ProductLimitListForListCouponsOutput) SetChargeItemType(v int32) *ProductLimitListForListCouponsOutput {
	s.ChargeItemType = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ProductLimitListForListCouponsOutput) SetConfigurationCode(v string) *ProductLimitListForListCouponsOutput {
	s.ConfigurationCode = &v
	return s
}

// SetConfigurationName sets the ConfigurationName field's value.
func (s *ProductLimitListForListCouponsOutput) SetConfigurationName(v string) *ProductLimitListForListCouponsOutput {
	s.ConfigurationName = &v
	return s
}

// SetConfigurationType sets the ConfigurationType field's value.
func (s *ProductLimitListForListCouponsOutput) SetConfigurationType(v int32) *ProductLimitListForListCouponsOutput {
	s.ConfigurationType = &v
	return s
}

// SetProductCode sets the ProductCode field's value.
func (s *ProductLimitListForListCouponsOutput) SetProductCode(v string) *ProductLimitListForListCouponsOutput {
	s.ProductCode = &v
	return s
}

// SetProductName sets the ProductName field's value.
func (s *ProductLimitListForListCouponsOutput) SetProductName(v string) *ProductLimitListForListCouponsOutput {
	s.ProductName = &v
	return s
}

// SetTimeLimitLower sets the TimeLimitLower field's value.
func (s *ProductLimitListForListCouponsOutput) SetTimeLimitLower(v int32) *ProductLimitListForListCouponsOutput {
	s.TimeLimitLower = &v
	return s
}

// SetTimeLimitUpper sets the TimeLimitUpper field's value.
func (s *ProductLimitListForListCouponsOutput) SetTimeLimitUpper(v int32) *ProductLimitListForListCouponsOutput {
	s.TimeLimitUpper = &v
	return s
}
