// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBudgetFilterTagValueCommon = "ListBudgetFilterTagValue"

// ListBudgetFilterTagValueCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterTagValueCommon operation. The "output" return
// value will be populated with the ListBudgetFilterTagValueCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterTagValueCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterTagValueCommon Send returns without error.
//
// See ListBudgetFilterTagValueCommon for more information on using the ListBudgetFilterTagValueCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterTagValueCommonRequest method.
//    req, resp := client.ListBudgetFilterTagValueCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterTagValueCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBudgetFilterTagValueCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterTagValueCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterTagValueCommon for usage and error information.
func (c *BILLING) ListBudgetFilterTagValueCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterTagValueCommonRequest(input)
	return out, req.Send()
}

// ListBudgetFilterTagValueCommonWithContext is the same as ListBudgetFilterTagValueCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterTagValueCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterTagValueCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBudgetFilterTagValueCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBudgetFilterTagValue = "ListBudgetFilterTagValue"

// ListBudgetFilterTagValueRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBudgetFilterTagValue operation. The "output" return
// value will be populated with the ListBudgetFilterTagValueCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBudgetFilterTagValueCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBudgetFilterTagValueCommon Send returns without error.
//
// See ListBudgetFilterTagValue for more information on using the ListBudgetFilterTagValue
// API call, and error handling.
//
//    // Example sending a request using the ListBudgetFilterTagValueRequest method.
//    req, resp := client.ListBudgetFilterTagValueRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) ListBudgetFilterTagValueRequest(input *ListBudgetFilterTagValueInput) (req *request.Request, output *ListBudgetFilterTagValueOutput) {
	op := &request.Operation{
		Name:       opListBudgetFilterTagValue,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBudgetFilterTagValueInput{}
	}

	output = &ListBudgetFilterTagValueOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBudgetFilterTagValue API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation ListBudgetFilterTagValue for usage and error information.
func (c *BILLING) ListBudgetFilterTagValue(input *ListBudgetFilterTagValueInput) (*ListBudgetFilterTagValueOutput, error) {
	req, out := c.ListBudgetFilterTagValueRequest(input)
	return out, req.Send()
}

// ListBudgetFilterTagValueWithContext is the same as ListBudgetFilterTagValue with the addition of
// the ability to pass a context and additional request options.
//
// See ListBudgetFilterTagValue for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) ListBudgetFilterTagValueWithContext(ctx volcengine.Context, input *ListBudgetFilterTagValueInput, opts ...request.Option) (*ListBudgetFilterTagValueOutput, error) {
	req, out := c.ListBudgetFilterTagValueRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListBudgetFilterTagValueInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Limit is a required field
	Limit *int32 `type:"int32" json:",omitempty" required:"true"`

	// Offset is a required field
	Offset *int32 `type:"int32" json:",omitempty" required:"true"`

	// TagKey is a required field
	TagKey *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListBudgetFilterTagValueInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterTagValueInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBudgetFilterTagValueInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBudgetFilterTagValueInput"}
	if s.Limit == nil {
		invalidParams.Add(request.NewErrParamRequired("Limit"))
	}
	if s.Offset == nil {
		invalidParams.Add(request.NewErrParamRequired("Offset"))
	}
	if s.TagKey == nil {
		invalidParams.Add(request.NewErrParamRequired("TagKey"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLimit sets the Limit field's value.
func (s *ListBudgetFilterTagValueInput) SetLimit(v int32) *ListBudgetFilterTagValueInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListBudgetFilterTagValueInput) SetOffset(v int32) *ListBudgetFilterTagValueInput {
	s.Offset = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *ListBudgetFilterTagValueInput) SetTagKey(v string) *ListBudgetFilterTagValueInput {
	s.TagKey = &v
	return s
}

type ListBudgetFilterTagValueOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	List []*string `type:"list" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBudgetFilterTagValueOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBudgetFilterTagValueOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *ListBudgetFilterTagValueOutput) SetLimit(v int32) *ListBudgetFilterTagValueOutput {
	s.Limit = &v
	return s
}

// SetList sets the List field's value.
func (s *ListBudgetFilterTagValueOutput) SetList(v []*string) *ListBudgetFilterTagValueOutput {
	s.List = v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListBudgetFilterTagValueOutput) SetOffset(v int32) *ListBudgetFilterTagValueOutput {
	s.Offset = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListBudgetFilterTagValueOutput) SetTotal(v int32) *ListBudgetFilterTagValueOutput {
	s.Total = &v
	return s
}
