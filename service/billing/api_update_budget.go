// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package billing

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateBudgetCommon = "UpdateBudget"

// UpdateBudgetCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBudgetCommon operation. The "output" return
// value will be populated with the UpdateBudgetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBudgetCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBudgetCommon Send returns without error.
//
// See UpdateBudgetCommon for more information on using the UpdateBudgetCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateBudgetCommonRequest method.
//    req, resp := client.UpdateBudgetCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) UpdateBudgetCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateBudgetCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBudgetCommon API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation UpdateBudgetCommon for usage and error information.
func (c *BILLING) UpdateBudgetCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateBudgetCommonRequest(input)
	return out, req.Send()
}

// UpdateBudgetCommonWithContext is the same as UpdateBudgetCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBudgetCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) UpdateBudgetCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateBudgetCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateBudget = "UpdateBudget"

// UpdateBudgetRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBudget operation. The "output" return
// value will be populated with the UpdateBudgetCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBudgetCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBudgetCommon Send returns without error.
//
// See UpdateBudget for more information on using the UpdateBudget
// API call, and error handling.
//
//    // Example sending a request using the UpdateBudgetRequest method.
//    req, resp := client.UpdateBudgetRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BILLING) UpdateBudgetRequest(input *UpdateBudgetInput) (req *request.Request, output *UpdateBudgetOutput) {
	op := &request.Operation{
		Name:       opUpdateBudget,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateBudgetInput{}
	}

	output = &UpdateBudgetOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBudget API operation for BILLING.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BILLING's
// API operation UpdateBudget for usage and error information.
func (c *BILLING) UpdateBudget(input *UpdateBudgetInput) (*UpdateBudgetOutput, error) {
	req, out := c.UpdateBudgetRequest(input)
	return out, req.Send()
}

// UpdateBudgetWithContext is the same as UpdateBudget with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBudget for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BILLING) UpdateBudgetWithContext(ctx volcengine.Context, input *UpdateBudgetInput, opts ...request.Option) (*UpdateBudgetOutput, error) {
	req, out := c.UpdateBudgetRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BudgetAlertMessageForUpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EmailSendSwitch *int32 `type:"int32" json:",omitempty"`

	InternalSendSwitch *int32 `type:"int32" json:",omitempty"`

	MessageSendSwitch *int32 `type:"int32" json:",omitempty"`

	RecipientID *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s BudgetAlertMessageForUpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetAlertMessageForUpdateBudgetInput) GoString() string {
	return s.String()
}

// SetEmailSendSwitch sets the EmailSendSwitch field's value.
func (s *BudgetAlertMessageForUpdateBudgetInput) SetEmailSendSwitch(v int32) *BudgetAlertMessageForUpdateBudgetInput {
	s.EmailSendSwitch = &v
	return s
}

// SetInternalSendSwitch sets the InternalSendSwitch field's value.
func (s *BudgetAlertMessageForUpdateBudgetInput) SetInternalSendSwitch(v int32) *BudgetAlertMessageForUpdateBudgetInput {
	s.InternalSendSwitch = &v
	return s
}

// SetMessageSendSwitch sets the MessageSendSwitch field's value.
func (s *BudgetAlertMessageForUpdateBudgetInput) SetMessageSendSwitch(v int32) *BudgetAlertMessageForUpdateBudgetInput {
	s.MessageSendSwitch = &v
	return s
}

// SetRecipientID sets the RecipientID field's value.
func (s *BudgetAlertMessageForUpdateBudgetInput) SetRecipientID(v int64) *BudgetAlertMessageForUpdateBudgetInput {
	s.RecipientID = &v
	return s
}

type BudgetAlertRuleForUpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BudgetAlertItem *string `type:"string" json:",omitempty" enum:"EnumOfBudgetAlertItemForUpdateBudgetInput"`

	BudgetAlertRuleID *string `type:"string" json:",omitempty"`

	BudgetAlertThreshold *string `type:"string" json:",omitempty"`

	BudgetAlertThresholdType *string `type:"string" json:",omitempty" enum:"EnumOfBudgetAlertThresholdTypeForUpdateBudgetInput"`
}

// String returns the string representation
func (s BudgetAlertRuleForUpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetAlertRuleForUpdateBudgetInput) GoString() string {
	return s.String()
}

// SetBudgetAlertItem sets the BudgetAlertItem field's value.
func (s *BudgetAlertRuleForUpdateBudgetInput) SetBudgetAlertItem(v string) *BudgetAlertRuleForUpdateBudgetInput {
	s.BudgetAlertItem = &v
	return s
}

// SetBudgetAlertRuleID sets the BudgetAlertRuleID field's value.
func (s *BudgetAlertRuleForUpdateBudgetInput) SetBudgetAlertRuleID(v string) *BudgetAlertRuleForUpdateBudgetInput {
	s.BudgetAlertRuleID = &v
	return s
}

// SetBudgetAlertThreshold sets the BudgetAlertThreshold field's value.
func (s *BudgetAlertRuleForUpdateBudgetInput) SetBudgetAlertThreshold(v string) *BudgetAlertRuleForUpdateBudgetInput {
	s.BudgetAlertThreshold = &v
	return s
}

// SetBudgetAlertThresholdType sets the BudgetAlertThresholdType field's value.
func (s *BudgetAlertRuleForUpdateBudgetInput) SetBudgetAlertThresholdType(v string) *BudgetAlertRuleForUpdateBudgetInput {
	s.BudgetAlertThresholdType = &v
	return s
}

type BudgetAmountForUpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BudgetAmount *string `type:"string" json:",omitempty"`

	BudgetAmountID *string `type:"string" json:",omitempty"`

	BudgetPeriod *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BudgetAmountForUpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetAmountForUpdateBudgetInput) GoString() string {
	return s.String()
}

// SetBudgetAmount sets the BudgetAmount field's value.
func (s *BudgetAmountForUpdateBudgetInput) SetBudgetAmount(v string) *BudgetAmountForUpdateBudgetInput {
	s.BudgetAmount = &v
	return s
}

// SetBudgetAmountID sets the BudgetAmountID field's value.
func (s *BudgetAmountForUpdateBudgetInput) SetBudgetAmountID(v string) *BudgetAmountForUpdateBudgetInput {
	s.BudgetAmountID = &v
	return s
}

// SetBudgetPeriod sets the BudgetPeriod field's value.
func (s *BudgetAmountForUpdateBudgetInput) SetBudgetPeriod(v string) *BudgetAmountForUpdateBudgetInput {
	s.BudgetPeriod = &v
	return s
}

type BudgetForUpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BudgetEndTime *string `type:"string" json:",omitempty"`

	BudgetName *string `type:"string" json:",omitempty"`

	BudgetPlanType *string `type:"string" json:",omitempty" enum:"EnumOfBudgetPlanTypeForUpdateBudgetInput"`

	BudgetStartTime *string `type:"string" json:",omitempty"`

	BudgetType *string `type:"string" json:",omitempty" enum:"EnumOfBudgetTypeForUpdateBudgetInput"`

	Period *string `type:"string" json:",omitempty" enum:"EnumOfPeriodForUpdateBudgetInput"`
}

// String returns the string representation
func (s BudgetForUpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetForUpdateBudgetInput) GoString() string {
	return s.String()
}

// SetBudgetEndTime sets the BudgetEndTime field's value.
func (s *BudgetForUpdateBudgetInput) SetBudgetEndTime(v string) *BudgetForUpdateBudgetInput {
	s.BudgetEndTime = &v
	return s
}

// SetBudgetName sets the BudgetName field's value.
func (s *BudgetForUpdateBudgetInput) SetBudgetName(v string) *BudgetForUpdateBudgetInput {
	s.BudgetName = &v
	return s
}

// SetBudgetPlanType sets the BudgetPlanType field's value.
func (s *BudgetForUpdateBudgetInput) SetBudgetPlanType(v string) *BudgetForUpdateBudgetInput {
	s.BudgetPlanType = &v
	return s
}

// SetBudgetStartTime sets the BudgetStartTime field's value.
func (s *BudgetForUpdateBudgetInput) SetBudgetStartTime(v string) *BudgetForUpdateBudgetInput {
	s.BudgetStartTime = &v
	return s
}

// SetBudgetType sets the BudgetType field's value.
func (s *BudgetForUpdateBudgetInput) SetBudgetType(v string) *BudgetForUpdateBudgetInput {
	s.BudgetType = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *BudgetForUpdateBudgetInput) SetPeriod(v string) *BudgetForUpdateBudgetInput {
	s.Period = &v
	return s
}

type BudgetRangeForUpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BillingMode []*string `type:"list" json:",omitempty"`

	OwnerID []*int64 `type:"list" json:",omitempty"`

	PayerID []*int64 `type:"list" json:",omitempty"`

	Product []*string `type:"list" json:",omitempty"`

	Project []*string `type:"list" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	SubjectNo []*string `type:"list" json:",omitempty"`

	Tag []*string `type:"list" json:",omitempty"`

	Zone []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BudgetRangeForUpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BudgetRangeForUpdateBudgetInput) GoString() string {
	return s.String()
}

// SetBillingMode sets the BillingMode field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetBillingMode(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.BillingMode = v
	return s
}

// SetOwnerID sets the OwnerID field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetOwnerID(v []*int64) *BudgetRangeForUpdateBudgetInput {
	s.OwnerID = v
	return s
}

// SetPayerID sets the PayerID field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetPayerID(v []*int64) *BudgetRangeForUpdateBudgetInput {
	s.PayerID = v
	return s
}

// SetProduct sets the Product field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetProduct(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.Product = v
	return s
}

// SetProject sets the Project field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetProject(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.Project = v
	return s
}

// SetRegion sets the Region field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetRegion(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.Region = v
	return s
}

// SetSubjectNo sets the SubjectNo field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetSubjectNo(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.SubjectNo = v
	return s
}

// SetTag sets the Tag field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetTag(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.Tag = v
	return s
}

// SetZone sets the Zone field's value.
func (s *BudgetRangeForUpdateBudgetInput) SetZone(v []*string) *BudgetRangeForUpdateBudgetInput {
	s.Zone = v
	return s
}

type UpdateBudgetInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Budget *BudgetForUpdateBudgetInput `type:"structure" json:",omitempty"`

	BudgetAlertMessage []*BudgetAlertMessageForUpdateBudgetInput `type:"list" json:",omitempty"`

	BudgetAlertRule []*BudgetAlertRuleForUpdateBudgetInput `type:"list" json:",omitempty"`

	BudgetAmount []*BudgetAmountForUpdateBudgetInput `type:"list" json:",omitempty"`

	// BudgetID is a required field
	BudgetID *string `type:"string" json:",omitempty" required:"true"`

	BudgetRange *BudgetRangeForUpdateBudgetInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateBudgetInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBudgetInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBudgetInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateBudgetInput"}
	if s.BudgetID == nil {
		invalidParams.Add(request.NewErrParamRequired("BudgetID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBudget sets the Budget field's value.
func (s *UpdateBudgetInput) SetBudget(v *BudgetForUpdateBudgetInput) *UpdateBudgetInput {
	s.Budget = v
	return s
}

// SetBudgetAlertMessage sets the BudgetAlertMessage field's value.
func (s *UpdateBudgetInput) SetBudgetAlertMessage(v []*BudgetAlertMessageForUpdateBudgetInput) *UpdateBudgetInput {
	s.BudgetAlertMessage = v
	return s
}

// SetBudgetAlertRule sets the BudgetAlertRule field's value.
func (s *UpdateBudgetInput) SetBudgetAlertRule(v []*BudgetAlertRuleForUpdateBudgetInput) *UpdateBudgetInput {
	s.BudgetAlertRule = v
	return s
}

// SetBudgetAmount sets the BudgetAmount field's value.
func (s *UpdateBudgetInput) SetBudgetAmount(v []*BudgetAmountForUpdateBudgetInput) *UpdateBudgetInput {
	s.BudgetAmount = v
	return s
}

// SetBudgetID sets the BudgetID field's value.
func (s *UpdateBudgetInput) SetBudgetID(v string) *UpdateBudgetInput {
	s.BudgetID = &v
	return s
}

// SetBudgetRange sets the BudgetRange field's value.
func (s *UpdateBudgetInput) SetBudgetRange(v *BudgetRangeForUpdateBudgetInput) *UpdateBudgetInput {
	s.BudgetRange = v
	return s
}

type UpdateBudgetOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateBudgetOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBudgetOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfBudgetAlertItemForUpdateBudgetInputActualAmount is a EnumOfBudgetAlertItemForUpdateBudgetInput enum value
	EnumOfBudgetAlertItemForUpdateBudgetInputActualAmount = "actual_amount"
)

const (
	// EnumOfBudgetAlertThresholdTypeForUpdateBudgetInputAmount is a EnumOfBudgetAlertThresholdTypeForUpdateBudgetInput enum value
	EnumOfBudgetAlertThresholdTypeForUpdateBudgetInputAmount = "amount"

	// EnumOfBudgetAlertThresholdTypeForUpdateBudgetInputRatio is a EnumOfBudgetAlertThresholdTypeForUpdateBudgetInput enum value
	EnumOfBudgetAlertThresholdTypeForUpdateBudgetInputRatio = "ratio"
)

const (
	// EnumOfBudgetPlanTypeForUpdateBudgetInputFixedAmount is a EnumOfBudgetPlanTypeForUpdateBudgetInput enum value
	EnumOfBudgetPlanTypeForUpdateBudgetInputFixedAmount = "fixed_amount"

	// EnumOfBudgetPlanTypeForUpdateBudgetInputPlanning is a EnumOfBudgetPlanTypeForUpdateBudgetInput enum value
	EnumOfBudgetPlanTypeForUpdateBudgetInputPlanning = "planning"
)

const (
	// EnumOfBudgetTypeForUpdateBudgetInputCostBudget is a EnumOfBudgetTypeForUpdateBudgetInput enum value
	EnumOfBudgetTypeForUpdateBudgetInputCostBudget = "cost_budget"
)

const (
	// EnumOfPeriodForUpdateBudgetInputMonth is a EnumOfPeriodForUpdateBudgetInput enum value
	EnumOfPeriodForUpdateBudgetInputMonth = "month"

	// EnumOfPeriodForUpdateBudgetInputQuarter is a EnumOfPeriodForUpdateBudgetInput enum value
	EnumOfPeriodForUpdateBudgetInputQuarter = "quarter"

	// EnumOfPeriodForUpdateBudgetInputYear is a EnumOfPeriodForUpdateBudgetInput enum value
	EnumOfPeriodForUpdateBudgetInputYear = "year"
)
