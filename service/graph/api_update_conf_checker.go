// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateConfCheckerCommon = "UpdateConfChecker"

// UpdateConfCheckerCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateConfCheckerCommon operation. The "output" return
// value will be populated with the UpdateConfCheckerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateConfCheckerCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateConfCheckerCommon Send returns without error.
//
// See UpdateConfCheckerCommon for more information on using the UpdateConfCheckerCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateConfCheckerCommonRequest method.
//    req, resp := client.UpdateConfCheckerCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) UpdateConfCheckerCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateConfCheckerCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateConfCheckerCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation UpdateConfCheckerCommon for usage and error information.
func (c *GRAPH) UpdateConfCheckerCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateConfCheckerCommonRequest(input)
	return out, req.Send()
}

// UpdateConfCheckerCommonWithContext is the same as UpdateConfCheckerCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateConfCheckerCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) UpdateConfCheckerCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateConfCheckerCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateConfChecker = "UpdateConfChecker"

// UpdateConfCheckerRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateConfChecker operation. The "output" return
// value will be populated with the UpdateConfCheckerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateConfCheckerCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateConfCheckerCommon Send returns without error.
//
// See UpdateConfChecker for more information on using the UpdateConfChecker
// API call, and error handling.
//
//    // Example sending a request using the UpdateConfCheckerRequest method.
//    req, resp := client.UpdateConfCheckerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) UpdateConfCheckerRequest(input *UpdateConfCheckerInput) (req *request.Request, output *UpdateConfCheckerOutput) {
	op := &request.Operation{
		Name:       opUpdateConfChecker,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateConfCheckerInput{}
	}

	output = &UpdateConfCheckerOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateConfChecker API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation UpdateConfChecker for usage and error information.
func (c *GRAPH) UpdateConfChecker(input *UpdateConfCheckerInput) (*UpdateConfCheckerOutput, error) {
	req, out := c.UpdateConfCheckerRequest(input)
	return out, req.Send()
}

// UpdateConfCheckerWithContext is the same as UpdateConfChecker with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateConfChecker for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) UpdateConfCheckerWithContext(ctx volcengine.Context, input *UpdateConfCheckerInput, opts ...request.Option) (*UpdateConfCheckerOutput, error) {
	req, out := c.UpdateConfCheckerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfCheckerForUpdateConfCheckerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BpmID *string `type:"string" json:",omitempty"`

	ConfCheckerPythonScript *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *int64 `type:"int64" json:",omitempty"`

	ModifyTime *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Psm *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	TestCase *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	ValidatorVersion *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ConfCheckerForUpdateConfCheckerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfCheckerForUpdateConfCheckerInput) GoString() string {
	return s.String()
}

// SetBpmID sets the BpmID field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetBpmID(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.BpmID = &v
	return s
}

// SetConfCheckerPythonScript sets the ConfCheckerPythonScript field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetConfCheckerPythonScript(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.ConfCheckerPythonScript = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetDescription(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetId(v int64) *ConfCheckerForUpdateConfCheckerInput {
	s.Id = &v
	return s
}

// SetModifyTime sets the ModifyTime field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetModifyTime(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.ModifyTime = &v
	return s
}

// SetName sets the Name field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetName(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Name = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetOperator(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Operator = &v
	return s
}

// SetPsm sets the Psm field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetPsm(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Psm = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetRegion(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Region = &v
	return s
}

// SetTestCase sets the TestCase field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetTestCase(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.TestCase = &v
	return s
}

// SetType sets the Type field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetType(v string) *ConfCheckerForUpdateConfCheckerInput {
	s.Type = &v
	return s
}

// SetValidatorVersion sets the ValidatorVersion field's value.
func (s *ConfCheckerForUpdateConfCheckerInput) SetValidatorVersion(v int64) *ConfCheckerForUpdateConfCheckerInput {
	s.ValidatorVersion = &v
	return s
}

type UpdateConfCheckerInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConfChecker *ConfCheckerForUpdateConfCheckerInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateConfCheckerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateConfCheckerInput) GoString() string {
	return s.String()
}

// SetConfChecker sets the ConfChecker field's value.
func (s *UpdateConfCheckerInput) SetConfChecker(v *ConfCheckerForUpdateConfCheckerInput) *UpdateConfCheckerInput {
	s.ConfChecker = v
	return s
}

type UpdateConfCheckerOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s UpdateConfCheckerOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateConfCheckerOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateConfCheckerOutput) SetId(v int64) *UpdateConfCheckerOutput {
	s.Id = &v
	return s
}
