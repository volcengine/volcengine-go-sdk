// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddTablesCommon = "AddTables"

// AddTablesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddTablesCommon operation. The "output" return
// value will be populated with the AddTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddTablesCommon Send returns without error.
//
// See AddTablesCommon for more information on using the AddTablesCommon
// API call, and error handling.
//
//    // Example sending a request using the AddTablesCommonRequest method.
//    req, resp := client.AddTablesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) AddTablesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddTablesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddTablesCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation AddTablesCommon for usage and error information.
func (c *GRAPH) AddTablesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddTablesCommonRequest(input)
	return out, req.Send()
}

// AddTablesCommonWithContext is the same as AddTablesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddTablesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) AddTablesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddTablesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddTables = "AddTables"

// AddTablesRequest generates a "volcengine/request.Request" representing the
// client's request for the AddTables operation. The "output" return
// value will be populated with the AddTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddTablesCommon Send returns without error.
//
// See AddTables for more information on using the AddTables
// API call, and error handling.
//
//    // Example sending a request using the AddTablesRequest method.
//    req, resp := client.AddTablesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) AddTablesRequest(input *AddTablesInput) (req *request.Request, output *AddTablesOutput) {
	op := &request.Operation{
		Name:       opAddTables,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddTablesInput{}
	}

	output = &AddTablesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddTables API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation AddTables for usage and error information.
func (c *GRAPH) AddTables(input *AddTablesInput) (*AddTablesOutput, error) {
	req, out := c.AddTablesRequest(input)
	return out, req.Send()
}

// AddTablesWithContext is the same as AddTables with the addition of
// the ability to pass a context and additional request options.
//
// See AddTables for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) AddTablesWithContext(ctx volcengine.Context, input *AddTablesInput, opts ...request.Option) (*AddTablesOutput, error) {
	req, out := c.AddTablesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Dry_run *bool `type:"boolean" json:"dry_run,omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	Tables []*TableForAddTablesInput `type:"list" json:"tables,omitempty"`

	Tables_info []*Tables_infoForAddTablesInput `type:"list" json:"tables_info,omitempty"`
}

// String returns the string representation
func (s AddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddTablesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddTablesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddTablesInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDry_run sets the Dry_run field's value.
func (s *AddTablesInput) SetDry_run(v bool) *AddTablesInput {
	s.Dry_run = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *AddTablesInput) SetInstanceId(v string) *AddTablesInput {
	s.InstanceId = &v
	return s
}

// SetTables sets the Tables field's value.
func (s *AddTablesInput) SetTables(v []*TableForAddTablesInput) *AddTablesInput {
	s.Tables = v
	return s
}

// SetTables_info sets the Tables_info field's value.
func (s *AddTablesInput) SetTables_info(v []*Tables_infoForAddTablesInput) *AddTablesInput {
	s.Tables_info = v
	return s
}

type AddTablesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AddTablesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddTablesOutput) GoString() string {
	return s.String()
}

type ColumnForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Column_name *string `type:"string" json:"column_name,omitempty"`

	Default_value *string `type:"string" json:"default_value,omitempty"`

	Enable_default_value *bool `type:"boolean" json:"enable_default_value,omitempty"`

	Schema_column_type *string `type:"string" json:"schema_column_type,omitempty"`
}

// String returns the string representation
func (s ColumnForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ColumnForAddTablesInput) GoString() string {
	return s.String()
}

// SetColumn_name sets the Column_name field's value.
func (s *ColumnForAddTablesInput) SetColumn_name(v string) *ColumnForAddTablesInput {
	s.Column_name = &v
	return s
}

// SetDefault_value sets the Default_value field's value.
func (s *ColumnForAddTablesInput) SetDefault_value(v string) *ColumnForAddTablesInput {
	s.Default_value = &v
	return s
}

// SetEnable_default_value sets the Enable_default_value field's value.
func (s *ColumnForAddTablesInput) SetEnable_default_value(v bool) *ColumnForAddTablesInput {
	s.Enable_default_value = &v
	return s
}

// SetSchema_column_type sets the Schema_column_type field's value.
func (s *ColumnForAddTablesInput) SetSchema_column_type(v string) *ColumnForAddTablesInput {
	s.Schema_column_type = &v
	return s
}

type EdgeForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForAddTablesInput `type:"list" json:"columns,omitempty"`

	Enable_reverse_index *bool `type:"boolean" json:"enable_reverse_index,omitempty"`

	Label *string `type:"string" json:"label,omitempty"`

	Primary_key []*string `type:"list" json:"primary_key,omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`

	Secondary_indices []*Secondary_indexForAddTablesInput `type:"list" json:"secondary_indices,omitempty"`

	Uniq_index []*Uniq_indexForAddTablesInput `type:"list" json:"uniq_index,omitempty"`

	Vertex_constraint *Vertex_constraintForAddTablesInput `type:"structure" json:"vertex_constraint,omitempty"`
}

// String returns the string representation
func (s EdgeForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeForAddTablesInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *EdgeForAddTablesInput) SetColumns(v []*ColumnForAddTablesInput) *EdgeForAddTablesInput {
	s.Columns = v
	return s
}

// SetEnable_reverse_index sets the Enable_reverse_index field's value.
func (s *EdgeForAddTablesInput) SetEnable_reverse_index(v bool) *EdgeForAddTablesInput {
	s.Enable_reverse_index = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *EdgeForAddTablesInput) SetLabel(v string) *EdgeForAddTablesInput {
	s.Label = &v
	return s
}

// SetPrimary_key sets the Primary_key field's value.
func (s *EdgeForAddTablesInput) SetPrimary_key(v []*string) *EdgeForAddTablesInput {
	s.Primary_key = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *EdgeForAddTablesInput) SetSchema_label_type(v string) *EdgeForAddTablesInput {
	s.Schema_label_type = &v
	return s
}

// SetSecondary_indices sets the Secondary_indices field's value.
func (s *EdgeForAddTablesInput) SetSecondary_indices(v []*Secondary_indexForAddTablesInput) *EdgeForAddTablesInput {
	s.Secondary_indices = v
	return s
}

// SetUniq_index sets the Uniq_index field's value.
func (s *EdgeForAddTablesInput) SetUniq_index(v []*Uniq_indexForAddTablesInput) *EdgeForAddTablesInput {
	s.Uniq_index = v
	return s
}

// SetVertex_constraint sets the Vertex_constraint field's value.
func (s *EdgeForAddTablesInput) SetVertex_constraint(v *Vertex_constraintForAddTablesInput) *EdgeForAddTablesInput {
	s.Vertex_constraint = v
	return s
}

type Gremlin_quota_configForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Caller_psm *string `type:"string" json:"caller_psm,omitempty"`

	Quota_size *int64 `type:"int64" json:"quota_size,omitempty"`

	Template *string `type:"string" json:"template,omitempty"`
}

// String returns the string representation
func (s Gremlin_quota_configForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Gremlin_quota_configForAddTablesInput) GoString() string {
	return s.String()
}

// SetCaller_psm sets the Caller_psm field's value.
func (s *Gremlin_quota_configForAddTablesInput) SetCaller_psm(v string) *Gremlin_quota_configForAddTablesInput {
	s.Caller_psm = &v
	return s
}

// SetQuota_size sets the Quota_size field's value.
func (s *Gremlin_quota_configForAddTablesInput) SetQuota_size(v int64) *Gremlin_quota_configForAddTablesInput {
	s.Quota_size = &v
	return s
}

// SetTemplate sets the Template field's value.
func (s *Gremlin_quota_configForAddTablesInput) SetTemplate(v string) *Gremlin_quota_configForAddTablesInput {
	s.Template = &v
	return s
}

type Io_qos_optionsForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Iops_limit *int64 `type:"int64" json:"iops_limit,omitempty"`

	Read_bandwidth_limit_in_bytes *int64 `type:"int64" json:"read_bandwidth_limit_in_bytes,omitempty"`

	Storage_capacity_limit_in_bytes *int64 `type:"int64" json:"storage_capacity_limit_in_bytes,omitempty"`

	Write_bandwidth_limit_in_bytes *int64 `type:"int64" json:"write_bandwidth_limit_in_bytes,omitempty"`
}

// String returns the string representation
func (s Io_qos_optionsForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Io_qos_optionsForAddTablesInput) GoString() string {
	return s.String()
}

// SetIops_limit sets the Iops_limit field's value.
func (s *Io_qos_optionsForAddTablesInput) SetIops_limit(v int64) *Io_qos_optionsForAddTablesInput {
	s.Iops_limit = &v
	return s
}

// SetRead_bandwidth_limit_in_bytes sets the Read_bandwidth_limit_in_bytes field's value.
func (s *Io_qos_optionsForAddTablesInput) SetRead_bandwidth_limit_in_bytes(v int64) *Io_qos_optionsForAddTablesInput {
	s.Read_bandwidth_limit_in_bytes = &v
	return s
}

// SetStorage_capacity_limit_in_bytes sets the Storage_capacity_limit_in_bytes field's value.
func (s *Io_qos_optionsForAddTablesInput) SetStorage_capacity_limit_in_bytes(v int64) *Io_qos_optionsForAddTablesInput {
	s.Storage_capacity_limit_in_bytes = &v
	return s
}

// SetWrite_bandwidth_limit_in_bytes sets the Write_bandwidth_limit_in_bytes field's value.
func (s *Io_qos_optionsForAddTablesInput) SetWrite_bandwidth_limit_in_bytes(v int64) *Io_qos_optionsForAddTablesInput {
	s.Write_bandwidth_limit_in_bytes = &v
	return s
}

type Psm_quota_configForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Caller_psm *string `type:"string" json:"caller_psm,omitempty"`

	Read_quota_size *int64 `type:"int64" json:"read_quota_size,omitempty"`

	Write_quota_size *int64 `type:"int64" json:"write_quota_size,omitempty"`
}

// String returns the string representation
func (s Psm_quota_configForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Psm_quota_configForAddTablesInput) GoString() string {
	return s.String()
}

// SetCaller_psm sets the Caller_psm field's value.
func (s *Psm_quota_configForAddTablesInput) SetCaller_psm(v string) *Psm_quota_configForAddTablesInput {
	s.Caller_psm = &v
	return s
}

// SetRead_quota_size sets the Read_quota_size field's value.
func (s *Psm_quota_configForAddTablesInput) SetRead_quota_size(v int64) *Psm_quota_configForAddTablesInput {
	s.Read_quota_size = &v
	return s
}

// SetWrite_quota_size sets the Write_quota_size field's value.
func (s *Psm_quota_configForAddTablesInput) SetWrite_quota_size(v int64) *Psm_quota_configForAddTablesInput {
	s.Write_quota_size = &v
	return s
}

type QuotasForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Gremlin_quota_configs []*Gremlin_quota_configForAddTablesInput `type:"list" json:"gremlin_quota_configs,omitempty"`

	Psm_quota_configs []*Psm_quota_configForAddTablesInput `type:"list" json:"psm_quota_configs,omitempty"`
}

// String returns the string representation
func (s QuotasForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuotasForAddTablesInput) GoString() string {
	return s.String()
}

// SetGremlin_quota_configs sets the Gremlin_quota_configs field's value.
func (s *QuotasForAddTablesInput) SetGremlin_quota_configs(v []*Gremlin_quota_configForAddTablesInput) *QuotasForAddTablesInput {
	s.Gremlin_quota_configs = v
	return s
}

// SetPsm_quota_configs sets the Psm_quota_configs field's value.
func (s *QuotasForAddTablesInput) SetPsm_quota_configs(v []*Psm_quota_configForAddTablesInput) *QuotasForAddTablesInput {
	s.Psm_quota_configs = v
	return s
}

type SchemaForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Edges []*EdgeForAddTablesInput `type:"list" json:"edges,omitempty"`

	Table_name *string `type:"string" json:"table_name,omitempty"`

	Version *int64 `type:"int64" json:"version,omitempty"`

	Vertexes []*VertexForAddTablesInput `type:"list" json:"vertexes,omitempty"`
}

// String returns the string representation
func (s SchemaForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SchemaForAddTablesInput) GoString() string {
	return s.String()
}

// SetEdges sets the Edges field's value.
func (s *SchemaForAddTablesInput) SetEdges(v []*EdgeForAddTablesInput) *SchemaForAddTablesInput {
	s.Edges = v
	return s
}

// SetTable_name sets the Table_name field's value.
func (s *SchemaForAddTablesInput) SetTable_name(v string) *SchemaForAddTablesInput {
	s.Table_name = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *SchemaForAddTablesInput) SetVersion(v int64) *SchemaForAddTablesInput {
	s.Version = &v
	return s
}

// SetVertexes sets the Vertexes field's value.
func (s *SchemaForAddTablesInput) SetVertexes(v []*VertexForAddTablesInput) *SchemaForAddTablesInput {
	s.Vertexes = v
	return s
}

type Secondary_indexForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Column_names []*string `type:"list" json:"column_names,omitempty"`

	Is_covering_index *bool `type:"boolean" json:"is_covering_index,omitempty"`

	Is_unique_index *bool `type:"boolean" json:"is_unique_index,omitempty"`
}

// String returns the string representation
func (s Secondary_indexForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Secondary_indexForAddTablesInput) GoString() string {
	return s.String()
}

// SetColumn_names sets the Column_names field's value.
func (s *Secondary_indexForAddTablesInput) SetColumn_names(v []*string) *Secondary_indexForAddTablesInput {
	s.Column_names = v
	return s
}

// SetIs_covering_index sets the Is_covering_index field's value.
func (s *Secondary_indexForAddTablesInput) SetIs_covering_index(v bool) *Secondary_indexForAddTablesInput {
	s.Is_covering_index = &v
	return s
}

// SetIs_unique_index sets the Is_unique_index field's value.
func (s *Secondary_indexForAddTablesInput) SetIs_unique_index(v bool) *Secondary_indexForAddTablesInput {
	s.Is_unique_index = &v
	return s
}

type TableForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable_rotate *bool `type:"boolean" json:"enable_rotate,omitempty"`

	Quotas *QuotasForAddTablesInput `type:"structure" json:"quotas,omitempty"`

	Rotate_size *int64 `type:"int64" json:"rotate_size,omitempty"`

	Schema *SchemaForAddTablesInput `type:"structure" json:"schema,omitempty"`

	Table_name *string `type:"string" json:"table_name,omitempty"`
}

// String returns the string representation
func (s TableForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableForAddTablesInput) GoString() string {
	return s.String()
}

// SetEnable_rotate sets the Enable_rotate field's value.
func (s *TableForAddTablesInput) SetEnable_rotate(v bool) *TableForAddTablesInput {
	s.Enable_rotate = &v
	return s
}

// SetQuotas sets the Quotas field's value.
func (s *TableForAddTablesInput) SetQuotas(v *QuotasForAddTablesInput) *TableForAddTablesInput {
	s.Quotas = v
	return s
}

// SetRotate_size sets the Rotate_size field's value.
func (s *TableForAddTablesInput) SetRotate_size(v int64) *TableForAddTablesInput {
	s.Rotate_size = &v
	return s
}

// SetSchema sets the Schema field's value.
func (s *TableForAddTablesInput) SetSchema(v *SchemaForAddTablesInput) *TableForAddTablesInput {
	s.Schema = v
	return s
}

// SetTable_name sets the Table_name field's value.
func (s *TableForAddTablesInput) SetTable_name(v string) *TableForAddTablesInput {
	s.Table_name = &v
	return s
}

type Tables_infoForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Io_qos_options *Io_qos_optionsForAddTablesInput `type:"structure" json:"io_qos_options,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Partition_num *int32 `type:"int32" json:"partition_num,omitempty"`

	Tablet_num *int32 `type:"int32" json:"tablet_num,omitempty"`

	Vdc_replica []*Vdc_replicaForAddTablesInput `type:"list" json:"vdc_replica,omitempty"`

	Writeable_vdc []*string `type:"list" json:"writeable_vdc,omitempty"`
}

// String returns the string representation
func (s Tables_infoForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Tables_infoForAddTablesInput) GoString() string {
	return s.String()
}

// SetIo_qos_options sets the Io_qos_options field's value.
func (s *Tables_infoForAddTablesInput) SetIo_qos_options(v *Io_qos_optionsForAddTablesInput) *Tables_infoForAddTablesInput {
	s.Io_qos_options = v
	return s
}

// SetName sets the Name field's value.
func (s *Tables_infoForAddTablesInput) SetName(v string) *Tables_infoForAddTablesInput {
	s.Name = &v
	return s
}

// SetPartition_num sets the Partition_num field's value.
func (s *Tables_infoForAddTablesInput) SetPartition_num(v int32) *Tables_infoForAddTablesInput {
	s.Partition_num = &v
	return s
}

// SetTablet_num sets the Tablet_num field's value.
func (s *Tables_infoForAddTablesInput) SetTablet_num(v int32) *Tables_infoForAddTablesInput {
	s.Tablet_num = &v
	return s
}

// SetVdc_replica sets the Vdc_replica field's value.
func (s *Tables_infoForAddTablesInput) SetVdc_replica(v []*Vdc_replicaForAddTablesInput) *Tables_infoForAddTablesInput {
	s.Vdc_replica = v
	return s
}

// SetWriteable_vdc sets the Writeable_vdc field's value.
func (s *Tables_infoForAddTablesInput) SetWriteable_vdc(v []*string) *Tables_infoForAddTablesInput {
	s.Writeable_vdc = v
	return s
}

type Uniq_indexForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Values []*string `type:"list" json:"values,omitempty"`
}

// String returns the string representation
func (s Uniq_indexForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Uniq_indexForAddTablesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *Uniq_indexForAddTablesInput) SetValues(v []*string) *Uniq_indexForAddTablesInput {
	s.Values = v
	return s
}

type Vdc_replicaForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Replica_num *int32 `type:"int32" json:"replica_num,omitempty"`

	Vdc *string `type:"string" json:"vdc,omitempty"`
}

// String returns the string representation
func (s Vdc_replicaForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Vdc_replicaForAddTablesInput) GoString() string {
	return s.String()
}

// SetReplica_num sets the Replica_num field's value.
func (s *Vdc_replicaForAddTablesInput) SetReplica_num(v int32) *Vdc_replicaForAddTablesInput {
	s.Replica_num = &v
	return s
}

// SetVdc sets the Vdc field's value.
func (s *Vdc_replicaForAddTablesInput) SetVdc(v string) *Vdc_replicaForAddTablesInput {
	s.Vdc = &v
	return s
}

type VertexForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForAddTablesInput `type:"list" json:"columns,omitempty"`

	Label *string `type:"string" json:"label,omitempty"`

	Primary_key []*string `type:"list" json:"primary_key,omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`

	Secondary_indices []*Secondary_indexForAddTablesInput `type:"list" json:"secondary_indices,omitempty"`

	Uniq_index []*Uniq_indexForAddTablesInput `type:"list" json:"uniq_index,omitempty"`
}

// String returns the string representation
func (s VertexForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VertexForAddTablesInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *VertexForAddTablesInput) SetColumns(v []*ColumnForAddTablesInput) *VertexForAddTablesInput {
	s.Columns = v
	return s
}

// SetLabel sets the Label field's value.
func (s *VertexForAddTablesInput) SetLabel(v string) *VertexForAddTablesInput {
	s.Label = &v
	return s
}

// SetPrimary_key sets the Primary_key field's value.
func (s *VertexForAddTablesInput) SetPrimary_key(v []*string) *VertexForAddTablesInput {
	s.Primary_key = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *VertexForAddTablesInput) SetSchema_label_type(v string) *VertexForAddTablesInput {
	s.Schema_label_type = &v
	return s
}

// SetSecondary_indices sets the Secondary_indices field's value.
func (s *VertexForAddTablesInput) SetSecondary_indices(v []*Secondary_indexForAddTablesInput) *VertexForAddTablesInput {
	s.Secondary_indices = v
	return s
}

// SetUniq_index sets the Uniq_index field's value.
func (s *VertexForAddTablesInput) SetUniq_index(v []*Uniq_indexForAddTablesInput) *VertexForAddTablesInput {
	s.Uniq_index = v
	return s
}

type Vertex_constraintForAddTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Primary_key_columns []*ColumnForAddTablesInput `locationName:"primary_key_columns" type:"list" json:",omitempty"`

	Schema_label_type *string `type:"string" json:"schema_label_type,omitempty"`
}

// String returns the string representation
func (s Vertex_constraintForAddTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Vertex_constraintForAddTablesInput) GoString() string {
	return s.String()
}

// SetPrimary_key_columns sets the Primary_key_columns field's value.
func (s *Vertex_constraintForAddTablesInput) SetPrimary_key_columns(v []*ColumnForAddTablesInput) *Vertex_constraintForAddTablesInput {
	s.Primary_key_columns = v
	return s
}

// SetSchema_label_type sets the Schema_label_type field's value.
func (s *Vertex_constraintForAddTablesInput) SetSchema_label_type(v string) *Vertex_constraintForAddTablesInput {
	s.Schema_label_type = &v
	return s
}
