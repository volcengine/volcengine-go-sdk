// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListInstanceCommon = "ListInstance"

// ListInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListInstanceCommon operation. The "output" return
// value will be populated with the ListInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListInstanceCommon Send returns without error.
//
// See ListInstanceCommon for more information on using the ListInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the ListInstanceCommonRequest method.
//    req, resp := client.ListInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) ListInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListInstanceCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation ListInstanceCommon for usage and error information.
func (c *GRAPH) ListInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListInstanceCommonRequest(input)
	return out, req.Send()
}

// ListInstanceCommonWithContext is the same as ListInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) ListInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListInstance = "ListInstance"

// ListInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the ListInstance operation. The "output" return
// value will be populated with the ListInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListInstanceCommon Send returns without error.
//
// See ListInstance for more information on using the ListInstance
// API call, and error handling.
//
//    // Example sending a request using the ListInstanceRequest method.
//    req, resp := client.ListInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) ListInstanceRequest(input *ListInstanceInput) (req *request.Request, output *ListInstanceOutput) {
	op := &request.Operation{
		Name:       opListInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListInstanceInput{}
	}

	output = &ListInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListInstance API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation ListInstance for usage and error information.
func (c *GRAPH) ListInstance(input *ListInstanceInput) (*ListInstanceOutput, error) {
	req, out := c.ListInstanceRequest(input)
	return out, req.Send()
}

// ListInstanceWithContext is the same as ListInstance with the addition of
// the ability to pass a context and additional request options.
//
// See ListInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) ListInstanceWithContext(ctx volcengine.Context, input *ListInstanceInput, opts ...request.Option) (*ListInstanceOutput, error) {
	req, out := c.ListInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AvailabilityZoneForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailabilityZoneId *string `type:"string" json:",omitempty"`

	K8sDomain *string `type:"string" json:",omitempty"`

	NodeNum *int32 `type:"int32" json:",omitempty"`

	NodePoolName *string `type:"string" json:",omitempty"`

	SubnetID *string `type:"string" json:",omitempty"`

	SubnetName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AvailabilityZoneForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AvailabilityZoneForListInstanceOutput) GoString() string {
	return s.String()
}

// SetAvailabilityZoneId sets the AvailabilityZoneId field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetAvailabilityZoneId(v string) *AvailabilityZoneForListInstanceOutput {
	s.AvailabilityZoneId = &v
	return s
}

// SetK8sDomain sets the K8sDomain field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetK8sDomain(v string) *AvailabilityZoneForListInstanceOutput {
	s.K8sDomain = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetNodeNum(v int32) *AvailabilityZoneForListInstanceOutput {
	s.NodeNum = &v
	return s
}

// SetNodePoolName sets the NodePoolName field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetNodePoolName(v string) *AvailabilityZoneForListInstanceOutput {
	s.NodePoolName = &v
	return s
}

// SetSubnetID sets the SubnetID field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetSubnetID(v string) *AvailabilityZoneForListInstanceOutput {
	s.SubnetID = &v
	return s
}

// SetSubnetName sets the SubnetName field's value.
func (s *AvailabilityZoneForListInstanceOutput) SetSubnetName(v string) *AvailabilityZoneForListInstanceOutput {
	s.SubnetName = &v
	return s
}

type Bg3LinkForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AddressType *string `type:"string" json:",omitempty"`

	AvailabilityZoneId *string `type:"string" json:",omitempty"`

	Bg3Link *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s Bg3LinkForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Bg3LinkForListInstanceOutput) GoString() string {
	return s.String()
}

// SetAddressType sets the AddressType field's value.
func (s *Bg3LinkForListInstanceOutput) SetAddressType(v string) *Bg3LinkForListInstanceOutput {
	s.AddressType = &v
	return s
}

// SetAvailabilityZoneId sets the AvailabilityZoneId field's value.
func (s *Bg3LinkForListInstanceOutput) SetAvailabilityZoneId(v string) *Bg3LinkForListInstanceOutput {
	s.AvailabilityZoneId = &v
	return s
}

// SetBg3Link sets the Bg3Link field's value.
func (s *Bg3LinkForListInstanceOutput) SetBg3Link(v string) *Bg3LinkForListInstanceOutput {
	s.Bg3Link = &v
	return s
}

type BytestoreInfoForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cluster *string `type:"string" json:",omitempty"`

	Id *int64 `type:"int64" json:",omitempty"`

	Pool *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BytestoreInfoForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BytestoreInfoForListInstanceOutput) GoString() string {
	return s.String()
}

// SetCluster sets the Cluster field's value.
func (s *BytestoreInfoForListInstanceOutput) SetCluster(v string) *BytestoreInfoForListInstanceOutput {
	s.Cluster = &v
	return s
}

// SetId sets the Id field's value.
func (s *BytestoreInfoForListInstanceOutput) SetId(v int64) *BytestoreInfoForListInstanceOutput {
	s.Id = &v
	return s
}

// SetPool sets the Pool field's value.
func (s *BytestoreInfoForListInstanceOutput) SetPool(v string) *BytestoreInfoForListInstanceOutput {
	s.Pool = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *BytestoreInfoForListInstanceOutput) SetRegion(v string) *BytestoreInfoForListInstanceOutput {
	s.Region = &v
	return s
}

type ImageInfoForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bg3DeployVersion *string `type:"string" json:",omitempty"`

	Bg3ImageVersion *string `type:"string" json:",omitempty"`

	MsDeployVersion *string `type:"string" json:",omitempty"`

	MsImageVersion *string `type:"string" json:",omitempty"`

	VersionSetID *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ImageInfoForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageInfoForListInstanceOutput) GoString() string {
	return s.String()
}

// SetBg3DeployVersion sets the Bg3DeployVersion field's value.
func (s *ImageInfoForListInstanceOutput) SetBg3DeployVersion(v string) *ImageInfoForListInstanceOutput {
	s.Bg3DeployVersion = &v
	return s
}

// SetBg3ImageVersion sets the Bg3ImageVersion field's value.
func (s *ImageInfoForListInstanceOutput) SetBg3ImageVersion(v string) *ImageInfoForListInstanceOutput {
	s.Bg3ImageVersion = &v
	return s
}

// SetMsDeployVersion sets the MsDeployVersion field's value.
func (s *ImageInfoForListInstanceOutput) SetMsDeployVersion(v string) *ImageInfoForListInstanceOutput {
	s.MsDeployVersion = &v
	return s
}

// SetMsImageVersion sets the MsImageVersion field's value.
func (s *ImageInfoForListInstanceOutput) SetMsImageVersion(v string) *ImageInfoForListInstanceOutput {
	s.MsImageVersion = &v
	return s
}

// SetVersionSetID sets the VersionSetID field's value.
func (s *ImageInfoForListInstanceOutput) SetVersionSetID(v int64) *ImageInfoForListInstanceOutput {
	s.VersionSetID = &v
	return s
}

type InfoForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailabilityZoneId *string `type:"string" json:",omitempty"`

	AvailabilityZones []*AvailabilityZoneForListInstanceOutput `type:"list" json:",omitempty"`

	Bg3Link *string `type:"string" json:",omitempty"`

	Bg3Links []*Bg3LinkForListInstanceOutput `type:"list" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Creator *string `type:"string" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	DiskSpace *int32 `type:"int32" json:",omitempty"`

	DiskUsed *int64 `type:"int64" json:",omitempty"`

	ExpireTime *string `type:"string" json:",omitempty"`

	GraphVersion *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	ImageInfo *ImageInfoForListInstanceOutput `type:"structure" json:",omitempty"`

	InsSpec *InsSpecForListInstanceOutput `type:"structure" json:",omitempty"`

	K8sDomain *string `type:"string" json:",omitempty"`

	MaintenanceTime *string `type:"string" json:",omitempty"`

	Mode *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	NodeNum *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	StorageInfo *StorageInfoForListInstanceOutput `type:"structure" json:",omitempty"`

	SubnetID *string `type:"string" json:",omitempty"`

	SubnetName *string `type:"string" json:",omitempty"`

	Tags []*TagForListInstanceOutput `type:"list" json:",omitempty"`

	TradeNO *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InfoForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InfoForListInstanceOutput) GoString() string {
	return s.String()
}

// SetAvailabilityZoneId sets the AvailabilityZoneId field's value.
func (s *InfoForListInstanceOutput) SetAvailabilityZoneId(v string) *InfoForListInstanceOutput {
	s.AvailabilityZoneId = &v
	return s
}

// SetAvailabilityZones sets the AvailabilityZones field's value.
func (s *InfoForListInstanceOutput) SetAvailabilityZones(v []*AvailabilityZoneForListInstanceOutput) *InfoForListInstanceOutput {
	s.AvailabilityZones = v
	return s
}

// SetBg3Link sets the Bg3Link field's value.
func (s *InfoForListInstanceOutput) SetBg3Link(v string) *InfoForListInstanceOutput {
	s.Bg3Link = &v
	return s
}

// SetBg3Links sets the Bg3Links field's value.
func (s *InfoForListInstanceOutput) SetBg3Links(v []*Bg3LinkForListInstanceOutput) *InfoForListInstanceOutput {
	s.Bg3Links = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *InfoForListInstanceOutput) SetCreateTime(v string) *InfoForListInstanceOutput {
	s.CreateTime = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *InfoForListInstanceOutput) SetCreator(v string) *InfoForListInstanceOutput {
	s.Creator = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *InfoForListInstanceOutput) SetDeletionProtection(v string) *InfoForListInstanceOutput {
	s.DeletionProtection = &v
	return s
}

// SetDiskSpace sets the DiskSpace field's value.
func (s *InfoForListInstanceOutput) SetDiskSpace(v int32) *InfoForListInstanceOutput {
	s.DiskSpace = &v
	return s
}

// SetDiskUsed sets the DiskUsed field's value.
func (s *InfoForListInstanceOutput) SetDiskUsed(v int64) *InfoForListInstanceOutput {
	s.DiskUsed = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *InfoForListInstanceOutput) SetExpireTime(v string) *InfoForListInstanceOutput {
	s.ExpireTime = &v
	return s
}

// SetGraphVersion sets the GraphVersion field's value.
func (s *InfoForListInstanceOutput) SetGraphVersion(v string) *InfoForListInstanceOutput {
	s.GraphVersion = &v
	return s
}

// SetId sets the Id field's value.
func (s *InfoForListInstanceOutput) SetId(v string) *InfoForListInstanceOutput {
	s.Id = &v
	return s
}

// SetImageInfo sets the ImageInfo field's value.
func (s *InfoForListInstanceOutput) SetImageInfo(v *ImageInfoForListInstanceOutput) *InfoForListInstanceOutput {
	s.ImageInfo = v
	return s
}

// SetInsSpec sets the InsSpec field's value.
func (s *InfoForListInstanceOutput) SetInsSpec(v *InsSpecForListInstanceOutput) *InfoForListInstanceOutput {
	s.InsSpec = v
	return s
}

// SetK8sDomain sets the K8sDomain field's value.
func (s *InfoForListInstanceOutput) SetK8sDomain(v string) *InfoForListInstanceOutput {
	s.K8sDomain = &v
	return s
}

// SetMaintenanceTime sets the MaintenanceTime field's value.
func (s *InfoForListInstanceOutput) SetMaintenanceTime(v string) *InfoForListInstanceOutput {
	s.MaintenanceTime = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *InfoForListInstanceOutput) SetMode(v string) *InfoForListInstanceOutput {
	s.Mode = &v
	return s
}

// SetName sets the Name field's value.
func (s *InfoForListInstanceOutput) SetName(v string) *InfoForListInstanceOutput {
	s.Name = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *InfoForListInstanceOutput) SetNodeNum(v int32) *InfoForListInstanceOutput {
	s.NodeNum = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InfoForListInstanceOutput) SetProjectName(v string) *InfoForListInstanceOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *InfoForListInstanceOutput) SetRegionId(v string) *InfoForListInstanceOutput {
	s.RegionId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InfoForListInstanceOutput) SetStatus(v string) *InfoForListInstanceOutput {
	s.Status = &v
	return s
}

// SetStorageInfo sets the StorageInfo field's value.
func (s *InfoForListInstanceOutput) SetStorageInfo(v *StorageInfoForListInstanceOutput) *InfoForListInstanceOutput {
	s.StorageInfo = v
	return s
}

// SetSubnetID sets the SubnetID field's value.
func (s *InfoForListInstanceOutput) SetSubnetID(v string) *InfoForListInstanceOutput {
	s.SubnetID = &v
	return s
}

// SetSubnetName sets the SubnetName field's value.
func (s *InfoForListInstanceOutput) SetSubnetName(v string) *InfoForListInstanceOutput {
	s.SubnetName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *InfoForListInstanceOutput) SetTags(v []*TagForListInstanceOutput) *InfoForListInstanceOutput {
	s.Tags = v
	return s
}

// SetTradeNO sets the TradeNO field's value.
func (s *InfoForListInstanceOutput) SetTradeNO(v string) *InfoForListInstanceOutput {
	s.TradeNO = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *InfoForListInstanceOutput) SetVpcId(v string) *InfoForListInstanceOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *InfoForListInstanceOutput) SetVpcName(v string) *InfoForListInstanceOutput {
	s.VpcName = &v
	return s
}

type InsSpecForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CpuNum *int32 `type:"int32" json:",omitempty"`

	MemInGb *int32 `type:"int32" json:",omitempty"`

	SpecName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InsSpecForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InsSpecForListInstanceOutput) GoString() string {
	return s.String()
}

// SetCpuNum sets the CpuNum field's value.
func (s *InsSpecForListInstanceOutput) SetCpuNum(v int32) *InsSpecForListInstanceOutput {
	s.CpuNum = &v
	return s
}

// SetMemInGb sets the MemInGb field's value.
func (s *InsSpecForListInstanceOutput) SetMemInGb(v int32) *InsSpecForListInstanceOutput {
	s.MemInGb = &v
	return s
}

// SetSpecName sets the SpecName field's value.
func (s *InsSpecForListInstanceOutput) SetSpecName(v string) *InsSpecForListInstanceOutput {
	s.SpecName = &v
	return s
}

type ListInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Limit is a required field
	Limit *int32 `type:"int32" json:",omitempty" required:"true"`

	// Offset is a required field
	Offset *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListInstanceInput"}
	if s.Limit == nil {
		invalidParams.Add(request.NewErrParamRequired("Limit"))
	}
	if s.Offset == nil {
		invalidParams.Add(request.NewErrParamRequired("Offset"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLimit sets the Limit field's value.
func (s *ListInstanceInput) SetLimit(v int32) *ListInstanceInput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *ListInstanceInput) SetOffset(v int32) *ListInstanceInput {
	s.Offset = &v
	return s
}

type ListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Infos []*InfoForListInstanceOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListInstanceOutput) GoString() string {
	return s.String()
}

// SetInfos sets the Infos field's value.
func (s *ListInstanceOutput) SetInfos(v []*InfoForListInstanceOutput) *ListInstanceOutput {
	s.Infos = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListInstanceOutput) SetTotal(v int32) *ListInstanceOutput {
	s.Total = &v
	return s
}

type StorageInfoForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BytestoreInfo *BytestoreInfoForListInstanceOutput `type:"structure" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty" enum:"EnumOfStorageTypeForListInstanceOutput"`
}

// String returns the string representation
func (s StorageInfoForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageInfoForListInstanceOutput) GoString() string {
	return s.String()
}

// SetBytestoreInfo sets the BytestoreInfo field's value.
func (s *StorageInfoForListInstanceOutput) SetBytestoreInfo(v *BytestoreInfoForListInstanceOutput) *StorageInfoForListInstanceOutput {
	s.BytestoreInfo = v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *StorageInfoForListInstanceOutput) SetStorageType(v string) *StorageInfoForListInstanceOutput {
	s.StorageType = &v
	return s
}

type TagForListInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListInstanceOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListInstanceOutput) SetKey(v string) *TagForListInstanceOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListInstanceOutput) SetValue(v string) *TagForListInstanceOutput {
	s.Value = &v
	return s
}

const (
	// EnumOfStorageTypeForListInstanceOutputMemory is a EnumOfStorageTypeForListInstanceOutput enum value
	EnumOfStorageTypeForListInstanceOutputMemory = "Memory"

	// EnumOfStorageTypeForListInstanceOutputByteStore is a EnumOfStorageTypeForListInstanceOutput enum value
	EnumOfStorageTypeForListInstanceOutputByteStore = "ByteStore"
)
