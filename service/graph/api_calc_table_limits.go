// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCalcTableLimitsCommon = "CalcTableLimits"

// CalcTableLimitsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CalcTableLimitsCommon operation. The "output" return
// value will be populated with the CalcTableLimitsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CalcTableLimitsCommon Request to send the API call to the service.
// the "output" return value is not valid until after CalcTableLimitsCommon Send returns without error.
//
// See CalcTableLimitsCommon for more information on using the CalcTableLimitsCommon
// API call, and error handling.
//
//    // Example sending a request using the CalcTableLimitsCommonRequest method.
//    req, resp := client.CalcTableLimitsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) CalcTableLimitsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCalcTableLimitsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CalcTableLimitsCommon API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation CalcTableLimitsCommon for usage and error information.
func (c *GRAPH) CalcTableLimitsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CalcTableLimitsCommonRequest(input)
	return out, req.Send()
}

// CalcTableLimitsCommonWithContext is the same as CalcTableLimitsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CalcTableLimitsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) CalcTableLimitsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CalcTableLimitsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCalcTableLimits = "CalcTableLimits"

// CalcTableLimitsRequest generates a "volcengine/request.Request" representing the
// client's request for the CalcTableLimits operation. The "output" return
// value will be populated with the CalcTableLimitsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CalcTableLimitsCommon Request to send the API call to the service.
// the "output" return value is not valid until after CalcTableLimitsCommon Send returns without error.
//
// See CalcTableLimits for more information on using the CalcTableLimits
// API call, and error handling.
//
//    // Example sending a request using the CalcTableLimitsRequest method.
//    req, resp := client.CalcTableLimitsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH) CalcTableLimitsRequest(input *CalcTableLimitsInput) (req *request.Request, output *CalcTableLimitsOutput) {
	op := &request.Operation{
		Name:       opCalcTableLimits,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CalcTableLimitsInput{}
	}

	output = &CalcTableLimitsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CalcTableLimits API operation for GRAPH.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH's
// API operation CalcTableLimits for usage and error information.
func (c *GRAPH) CalcTableLimits(input *CalcTableLimitsInput) (*CalcTableLimitsOutput, error) {
	req, out := c.CalcTableLimitsRequest(input)
	return out, req.Send()
}

// CalcTableLimitsWithContext is the same as CalcTableLimits with the addition of
// the ability to pass a context and additional request options.
//
// See CalcTableLimits for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH) CalcTableLimitsWithContext(ctx volcengine.Context, input *CalcTableLimitsInput, opts ...request.Option) (*CalcTableLimitsOutput, error) {
	req, out := c.CalcTableLimitsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CalcTableLimitsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:"instanceId,omitempty" required:"true"`

	// NodeNum is a required field
	NodeNum *int32 `type:"int32" json:"nodeNum,omitempty" required:"true"`

	RawVdcReplicaNum *string `type:"string" json:"rawVdcReplicaNum,omitempty"`

	RawVdcTabletSrvsCount *string `type:"string" json:"rawVdcTabletSrvsCount,omitempty"`

	// TabletNum is a required field
	TabletNum *int64 `type:"int64" json:"tabletNum,omitempty" required:"true"`
}

// String returns the string representation
func (s CalcTableLimitsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CalcTableLimitsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CalcTableLimitsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CalcTableLimitsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.NodeNum == nil {
		invalidParams.Add(request.NewErrParamRequired("NodeNum"))
	}
	if s.TabletNum == nil {
		invalidParams.Add(request.NewErrParamRequired("TabletNum"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *CalcTableLimitsInput) SetInstanceId(v string) *CalcTableLimitsInput {
	s.InstanceId = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *CalcTableLimitsInput) SetNodeNum(v int32) *CalcTableLimitsInput {
	s.NodeNum = &v
	return s
}

// SetRawVdcReplicaNum sets the RawVdcReplicaNum field's value.
func (s *CalcTableLimitsInput) SetRawVdcReplicaNum(v string) *CalcTableLimitsInput {
	s.RawVdcReplicaNum = &v
	return s
}

// SetRawVdcTabletSrvsCount sets the RawVdcTabletSrvsCount field's value.
func (s *CalcTableLimitsInput) SetRawVdcTabletSrvsCount(v string) *CalcTableLimitsInput {
	s.RawVdcTabletSrvsCount = &v
	return s
}

// SetTabletNum sets the TabletNum field's value.
func (s *CalcTableLimitsInput) SetTabletNum(v int64) *CalcTableLimitsInput {
	s.TabletNum = &v
	return s
}

type CalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TableLimits *TableLimitsForCalcTableLimitsOutput `type:"structure" json:"tableLimits,omitempty"`
}

// String returns the string representation
func (s CalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetTableLimits sets the TableLimits field's value.
func (s *CalcTableLimitsOutput) SetTableLimits(v *TableLimitsForCalcTableLimitsOutput) *CalcTableLimitsOutput {
	s.TableLimits = v
	return s
}

type Iops_limitForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Iops_limitForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Iops_limitForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Iops_limitForCalcTableLimitsOutput) SetMax(v int64) *Iops_limitForCalcTableLimitsOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Iops_limitForCalcTableLimitsOutput) SetMin(v int64) *Iops_limitForCalcTableLimitsOutput {
	s.Min = &v
	return s
}

type Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput) SetMax(v int64) *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput) SetMin(v int64) *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput {
	s.Min = &v
	return s
}

type Storage_capacity_limit_in_bytesForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Storage_capacity_limit_in_bytesForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Storage_capacity_limit_in_bytesForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput) SetMax(v int64) *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput) SetMin(v int64) *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput {
	s.Min = &v
	return s
}

type TableLimitsForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Iops_limit *Iops_limitForCalcTableLimitsOutput `type:"structure" json:"iops_limit,omitempty"`

	Raw_vdc_replica_num_range *string `type:"string" json:"raw_vdc_replica_num_range,omitempty"`

	Read_bandwidth_limit_in_bytes *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput `type:"structure" json:"read_bandwidth_limit_in_bytes,omitempty"`

	Storage_capacity_limit_in_bytes *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput `type:"structure" json:"storage_capacity_limit_in_bytes,omitempty"`

	Tablet_num_range *Tablet_num_rangeForCalcTableLimitsOutput `type:"structure" json:"tablet_num_range,omitempty"`

	Vdcs []*string `type:"list" json:"vdcs,omitempty"`

	Write_bandwidth_limit_in_bytes *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput `type:"structure" json:"write_bandwidth_limit_in_bytes,omitempty"`
}

// String returns the string representation
func (s TableLimitsForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableLimitsForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetIops_limit sets the Iops_limit field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetIops_limit(v *Iops_limitForCalcTableLimitsOutput) *TableLimitsForCalcTableLimitsOutput {
	s.Iops_limit = v
	return s
}

// SetRaw_vdc_replica_num_range sets the Raw_vdc_replica_num_range field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetRaw_vdc_replica_num_range(v string) *TableLimitsForCalcTableLimitsOutput {
	s.Raw_vdc_replica_num_range = &v
	return s
}

// SetRead_bandwidth_limit_in_bytes sets the Read_bandwidth_limit_in_bytes field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetRead_bandwidth_limit_in_bytes(v *Read_bandwidth_limit_in_bytesForCalcTableLimitsOutput) *TableLimitsForCalcTableLimitsOutput {
	s.Read_bandwidth_limit_in_bytes = v
	return s
}

// SetStorage_capacity_limit_in_bytes sets the Storage_capacity_limit_in_bytes field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetStorage_capacity_limit_in_bytes(v *Storage_capacity_limit_in_bytesForCalcTableLimitsOutput) *TableLimitsForCalcTableLimitsOutput {
	s.Storage_capacity_limit_in_bytes = v
	return s
}

// SetTablet_num_range sets the Tablet_num_range field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetTablet_num_range(v *Tablet_num_rangeForCalcTableLimitsOutput) *TableLimitsForCalcTableLimitsOutput {
	s.Tablet_num_range = v
	return s
}

// SetVdcs sets the Vdcs field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetVdcs(v []*string) *TableLimitsForCalcTableLimitsOutput {
	s.Vdcs = v
	return s
}

// SetWrite_bandwidth_limit_in_bytes sets the Write_bandwidth_limit_in_bytes field's value.
func (s *TableLimitsForCalcTableLimitsOutput) SetWrite_bandwidth_limit_in_bytes(v *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput) *TableLimitsForCalcTableLimitsOutput {
	s.Write_bandwidth_limit_in_bytes = v
	return s
}

type Tablet_num_rangeForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Tablet_num_rangeForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Tablet_num_rangeForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Tablet_num_rangeForCalcTableLimitsOutput) SetMax(v int64) *Tablet_num_rangeForCalcTableLimitsOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Tablet_num_rangeForCalcTableLimitsOutput) SetMin(v int64) *Tablet_num_rangeForCalcTableLimitsOutput {
	s.Min = &v
	return s
}

type Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Max *int64 `type:"int64" json:"max,omitempty"`

	Min *int64 `type:"int64" json:"min,omitempty"`
}

// String returns the string representation
func (s Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput) GoString() string {
	return s.String()
}

// SetMax sets the Max field's value.
func (s *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput) SetMax(v int64) *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput {
	s.Max = &v
	return s
}

// SetMin sets the Min field's value.
func (s *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput) SetMin(v int64) *Write_bandwidth_limit_in_bytesForCalcTableLimitsOutput {
	s.Min = &v
	return s
}
