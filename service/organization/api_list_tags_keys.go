// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTagsKeysCommon = "ListTagsKeys"

// ListTagsKeysCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsKeysCommon operation. The "output" return
// value will be populated with the ListTagsKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsKeysCommon Send returns without error.
//
// See ListTagsKeysCommon for more information on using the ListTagsKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTagsKeysCommonRequest method.
//    req, resp := client.ListTagsKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListTagsKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTagsKeysCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsKeysCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListTagsKeysCommon for usage and error information.
func (c *ORGANIZATION) ListTagsKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTagsKeysCommonRequest(input)
	return out, req.Send()
}

// ListTagsKeysCommonWithContext is the same as ListTagsKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListTagsKeysCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTagsKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTagsKeys = "ListTagsKeys"

// ListTagsKeysRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsKeys operation. The "output" return
// value will be populated with the ListTagsKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsKeysCommon Send returns without error.
//
// See ListTagsKeys for more information on using the ListTagsKeys
// API call, and error handling.
//
//    // Example sending a request using the ListTagsKeysRequest method.
//    req, resp := client.ListTagsKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListTagsKeysRequest(input *ListTagsKeysInput) (req *request.Request, output *ListTagsKeysOutput) {
	op := &request.Operation{
		Name:       opListTagsKeys,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsKeysInput{}
	}

	output = &ListTagsKeysOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsKeys API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListTagsKeys for usage and error information.
func (c *ORGANIZATION) ListTagsKeys(input *ListTagsKeysInput) (*ListTagsKeysOutput, error) {
	req, out := c.ListTagsKeysRequest(input)
	return out, req.Send()
}

// ListTagsKeysWithContext is the same as ListTagsKeys with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListTagsKeysWithContext(ctx volcengine.Context, input *ListTagsKeysInput, opts ...request.Option) (*ListTagsKeysOutput, error) {
	req, out := c.ListTagsKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListTagsKeysInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListTagsKeysInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListTagsKeysInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *FilterForListTagsKeysInput) SetKey(v string) *FilterForListTagsKeysInput {
	s.Key = &v
	return s
}

type ListTagsKeysInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListTagsKeysInput `type:"structure" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// ResourceType is a required field
	ResourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfResourceTypeForListTagsKeysInput"`
}

// String returns the string representation
func (s ListTagsKeysInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsKeysInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTagsKeysInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListTagsKeysInput"}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListTagsKeysInput) SetFilter(v *FilterForListTagsKeysInput) *ListTagsKeysInput {
	s.Filter = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsKeysInput) SetMaxResults(v int32) *ListTagsKeysInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsKeysInput) SetNextToken(v string) *ListTagsKeysInput {
	s.NextToken = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListTagsKeysInput) SetResourceType(v string) *ListTagsKeysInput {
	s.ResourceType = &v
	return s
}

type ListTagsKeysOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Keys []*string `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListTagsKeysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsKeysOutput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *ListTagsKeysOutput) SetKeys(v []*string) *ListTagsKeysOutput {
	s.Keys = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsKeysOutput) SetMaxResults(v int32) *ListTagsKeysOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsKeysOutput) SetNextToken(v string) *ListTagsKeysOutput {
	s.NextToken = &v
	return s
}

const (
	// EnumOfResourceTypeForListTagsKeysInputAccount is a EnumOfResourceTypeForListTagsKeysInput enum value
	EnumOfResourceTypeForListTagsKeysInputAccount = "account"

	// EnumOfResourceTypeForListTagsKeysInputUnit is a EnumOfResourceTypeForListTagsKeysInput enum value
	EnumOfResourceTypeForListTagsKeysInputUnit = "unit"
)
