// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package organization

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTagsValuesCommon = "ListTagsValues"

// ListTagsValuesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsValuesCommon operation. The "output" return
// value will be populated with the ListTagsValuesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsValuesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsValuesCommon Send returns without error.
//
// See ListTagsValuesCommon for more information on using the ListTagsValuesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTagsValuesCommonRequest method.
//    req, resp := client.ListTagsValuesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListTagsValuesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTagsValuesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsValuesCommon API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListTagsValuesCommon for usage and error information.
func (c *ORGANIZATION) ListTagsValuesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTagsValuesCommonRequest(input)
	return out, req.Send()
}

// ListTagsValuesCommonWithContext is the same as ListTagsValuesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsValuesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListTagsValuesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTagsValuesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTagsValues = "ListTagsValues"

// ListTagsValuesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsValues operation. The "output" return
// value will be populated with the ListTagsValuesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsValuesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsValuesCommon Send returns without error.
//
// See ListTagsValues for more information on using the ListTagsValues
// API call, and error handling.
//
//    // Example sending a request using the ListTagsValuesRequest method.
//    req, resp := client.ListTagsValuesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ORGANIZATION) ListTagsValuesRequest(input *ListTagsValuesInput) (req *request.Request, output *ListTagsValuesOutput) {
	op := &request.Operation{
		Name:       opListTagsValues,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsValuesInput{}
	}

	output = &ListTagsValuesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListTagsValues API operation for ORGANIZATION.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ORGANIZATION's
// API operation ListTagsValues for usage and error information.
func (c *ORGANIZATION) ListTagsValues(input *ListTagsValuesInput) (*ListTagsValuesOutput, error) {
	req, out := c.ListTagsValuesRequest(input)
	return out, req.Send()
}

// ListTagsValuesWithContext is the same as ListTagsValues with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsValues for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ORGANIZATION) ListTagsValuesWithContext(ctx volcengine.Context, input *ListTagsValuesInput, opts ...request.Option) (*ListTagsValuesOutput, error) {
	req, out := c.ListTagsValuesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListTagsValuesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListTagsValuesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListTagsValuesInput) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *FilterForListTagsValuesInput) SetValue(v string) *FilterForListTagsValuesInput {
	s.Value = &v
	return s
}

type ListTagsValuesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListTagsValuesInput `type:"structure" json:",omitempty"`

	// Key is a required field
	Key *string `type:"string" json:",omitempty" required:"true"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// ResourceType is a required field
	ResourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfResourceTypeForListTagsValuesInput"`
}

// String returns the string representation
func (s ListTagsValuesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsValuesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTagsValuesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListTagsValuesInput"}
	if s.Key == nil {
		invalidParams.Add(request.NewErrParamRequired("Key"))
	}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListTagsValuesInput) SetFilter(v *FilterForListTagsValuesInput) *ListTagsValuesInput {
	s.Filter = v
	return s
}

// SetKey sets the Key field's value.
func (s *ListTagsValuesInput) SetKey(v string) *ListTagsValuesInput {
	s.Key = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsValuesInput) SetMaxResults(v int32) *ListTagsValuesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsValuesInput) SetNextToken(v string) *ListTagsValuesInput {
	s.NextToken = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListTagsValuesInput) SetResourceType(v string) *ListTagsValuesInput {
	s.ResourceType = &v
	return s
}

type ListTagsValuesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListTagsValuesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsValuesOutput) GoString() string {
	return s.String()
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsValuesOutput) SetMaxResults(v int32) *ListTagsValuesOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsValuesOutput) SetNextToken(v string) *ListTagsValuesOutput {
	s.NextToken = &v
	return s
}

// SetValues sets the Values field's value.
func (s *ListTagsValuesOutput) SetValues(v []*string) *ListTagsValuesOutput {
	s.Values = v
	return s
}

const (
	// EnumOfResourceTypeForListTagsValuesInputAccount is a EnumOfResourceTypeForListTagsValuesInput enum value
	EnumOfResourceTypeForListTagsValuesInputAccount = "account"

	// EnumOfResourceTypeForListTagsValuesInputUnit is a EnumOfResourceTypeForListTagsValuesInput enum value
	EnumOfResourceTypeForListTagsValuesInputUnit = "unit"
)
