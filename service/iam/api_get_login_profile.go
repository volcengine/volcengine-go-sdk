// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package iam

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetLoginProfileCommon = "GetLoginProfile"

// GetLoginProfileCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetLoginProfileCommon operation. The "output" return
// value will be populated with the GetLoginProfileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetLoginProfileCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetLoginProfileCommon Send returns without error.
//
// See GetLoginProfileCommon for more information on using the GetLoginProfileCommon
// API call, and error handling.
//
//    // Example sending a request using the GetLoginProfileCommonRequest method.
//    req, resp := client.GetLoginProfileCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) GetLoginProfileCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetLoginProfileCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetLoginProfileCommon API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation GetLoginProfileCommon for usage and error information.
func (c *IAM) GetLoginProfileCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetLoginProfileCommonRequest(input)
	return out, req.Send()
}

// GetLoginProfileCommonWithContext is the same as GetLoginProfileCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetLoginProfileCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) GetLoginProfileCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetLoginProfileCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetLoginProfile = "GetLoginProfile"

// GetLoginProfileRequest generates a "volcengine/request.Request" representing the
// client's request for the GetLoginProfile operation. The "output" return
// value will be populated with the GetLoginProfileCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetLoginProfileCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetLoginProfileCommon Send returns without error.
//
// See GetLoginProfile for more information on using the GetLoginProfile
// API call, and error handling.
//
//    // Example sending a request using the GetLoginProfileRequest method.
//    req, resp := client.GetLoginProfileRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *IAM) GetLoginProfileRequest(input *GetLoginProfileInput) (req *request.Request, output *GetLoginProfileOutput) {
	op := &request.Operation{
		Name:       opGetLoginProfile,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetLoginProfileInput{}
	}

	output = &GetLoginProfileOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetLoginProfile API operation for IAM.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for IAM's
// API operation GetLoginProfile for usage and error information.
func (c *IAM) GetLoginProfile(input *GetLoginProfileInput) (*GetLoginProfileOutput, error) {
	req, out := c.GetLoginProfileRequest(input)
	return out, req.Send()
}

// GetLoginProfileWithContext is the same as GetLoginProfile with the addition of
// the ability to pass a context and additional request options.
//
// See GetLoginProfile for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *IAM) GetLoginProfileWithContext(ctx volcengine.Context, input *GetLoginProfileInput, opts ...request.Option) (*GetLoginProfileOutput, error) {
	req, out := c.GetLoginProfileRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetLoginProfileInput struct {
	_ struct{} `type:"structure"`

	// UserName is a required field
	UserName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetLoginProfileInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetLoginProfileInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetLoginProfileInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetLoginProfileInput"}
	if s.UserName == nil {
		invalidParams.Add(request.NewErrParamRequired("UserName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUserName sets the UserName field's value.
func (s *GetLoginProfileInput) SetUserName(v string) *GetLoginProfileInput {
	s.UserName = &v
	return s
}

type GetLoginProfileOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LoginProfile *LoginProfileForGetLoginProfileOutput `type:"structure"`
}

// String returns the string representation
func (s GetLoginProfileOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetLoginProfileOutput) GoString() string {
	return s.String()
}

// SetLoginProfile sets the LoginProfile field's value.
func (s *GetLoginProfileOutput) SetLoginProfile(v *LoginProfileForGetLoginProfileOutput) *GetLoginProfileOutput {
	s.LoginProfile = v
	return s
}

type LoginProfileForGetLoginProfileOutput struct {
	_ struct{} `type:"structure"`

	CreateDate *string `type:"string"`

	LastLoginDate *string `type:"string"`

	LastLoginIp *string `type:"string"`

	LastResetPasswordTime *int64 `type:"int64"`

	LoginAllowed *bool `type:"boolean"`

	LoginLocked *bool `type:"boolean"`

	PasswordExpireAt *int64 `type:"int64"`

	PasswordResetRequired *bool `type:"boolean"`

	SafeAuthExemptDuration *int32 `type:"int32"`

	SafeAuthExemptRequired *int32 `type:"int32"`

	SafeAuthExemptUnit *int32 `type:"int32"`

	SafeAuthFlag *bool `type:"boolean"`

	SafeAuthType *string `type:"string"`

	UpdateDate *string `type:"string"`

	UserId *int64 `type:"int64"`

	UserName *string `type:"string"`
}

// String returns the string representation
func (s LoginProfileForGetLoginProfileOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoginProfileForGetLoginProfileOutput) GoString() string {
	return s.String()
}

// SetCreateDate sets the CreateDate field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetCreateDate(v string) *LoginProfileForGetLoginProfileOutput {
	s.CreateDate = &v
	return s
}

// SetLastLoginDate sets the LastLoginDate field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetLastLoginDate(v string) *LoginProfileForGetLoginProfileOutput {
	s.LastLoginDate = &v
	return s
}

// SetLastLoginIp sets the LastLoginIp field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetLastLoginIp(v string) *LoginProfileForGetLoginProfileOutput {
	s.LastLoginIp = &v
	return s
}

// SetLastResetPasswordTime sets the LastResetPasswordTime field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetLastResetPasswordTime(v int64) *LoginProfileForGetLoginProfileOutput {
	s.LastResetPasswordTime = &v
	return s
}

// SetLoginAllowed sets the LoginAllowed field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetLoginAllowed(v bool) *LoginProfileForGetLoginProfileOutput {
	s.LoginAllowed = &v
	return s
}

// SetLoginLocked sets the LoginLocked field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetLoginLocked(v bool) *LoginProfileForGetLoginProfileOutput {
	s.LoginLocked = &v
	return s
}

// SetPasswordExpireAt sets the PasswordExpireAt field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetPasswordExpireAt(v int64) *LoginProfileForGetLoginProfileOutput {
	s.PasswordExpireAt = &v
	return s
}

// SetPasswordResetRequired sets the PasswordResetRequired field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetPasswordResetRequired(v bool) *LoginProfileForGetLoginProfileOutput {
	s.PasswordResetRequired = &v
	return s
}

// SetSafeAuthExemptDuration sets the SafeAuthExemptDuration field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetSafeAuthExemptDuration(v int32) *LoginProfileForGetLoginProfileOutput {
	s.SafeAuthExemptDuration = &v
	return s
}

// SetSafeAuthExemptRequired sets the SafeAuthExemptRequired field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetSafeAuthExemptRequired(v int32) *LoginProfileForGetLoginProfileOutput {
	s.SafeAuthExemptRequired = &v
	return s
}

// SetSafeAuthExemptUnit sets the SafeAuthExemptUnit field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetSafeAuthExemptUnit(v int32) *LoginProfileForGetLoginProfileOutput {
	s.SafeAuthExemptUnit = &v
	return s
}

// SetSafeAuthFlag sets the SafeAuthFlag field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetSafeAuthFlag(v bool) *LoginProfileForGetLoginProfileOutput {
	s.SafeAuthFlag = &v
	return s
}

// SetSafeAuthType sets the SafeAuthType field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetSafeAuthType(v string) *LoginProfileForGetLoginProfileOutput {
	s.SafeAuthType = &v
	return s
}

// SetUpdateDate sets the UpdateDate field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetUpdateDate(v string) *LoginProfileForGetLoginProfileOutput {
	s.UpdateDate = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetUserId(v int64) *LoginProfileForGetLoginProfileOutput {
	s.UserId = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *LoginProfileForGetLoginProfileOutput) SetUserName(v string) *LoginProfileForGetLoginProfileOutput {
	s.UserName = &v
	return s
}
