// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteDirectConnectTrafficQosRuleCommon = "DeleteDirectConnectTrafficQosRule"

// DeleteDirectConnectTrafficQosRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDirectConnectTrafficQosRuleCommon operation. The "output" return
// value will be populated with the DeleteDirectConnectTrafficQosRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDirectConnectTrafficQosRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDirectConnectTrafficQosRuleCommon Send returns without error.
//
// See DeleteDirectConnectTrafficQosRuleCommon for more information on using the DeleteDirectConnectTrafficQosRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteDirectConnectTrafficQosRuleCommonRequest method.
//    req, resp := client.DeleteDirectConnectTrafficQosRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteDirectConnectTrafficQosRuleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDirectConnectTrafficQosRuleCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DeleteDirectConnectTrafficQosRuleCommon for usage and error information.
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteDirectConnectTrafficQosRuleCommonRequest(input)
	return out, req.Send()
}

// DeleteDirectConnectTrafficQosRuleCommonWithContext is the same as DeleteDirectConnectTrafficQosRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDirectConnectTrafficQosRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteDirectConnectTrafficQosRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteDirectConnectTrafficQosRule = "DeleteDirectConnectTrafficQosRule"

// DeleteDirectConnectTrafficQosRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteDirectConnectTrafficQosRule operation. The "output" return
// value will be populated with the DeleteDirectConnectTrafficQosRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteDirectConnectTrafficQosRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteDirectConnectTrafficQosRuleCommon Send returns without error.
//
// See DeleteDirectConnectTrafficQosRule for more information on using the DeleteDirectConnectTrafficQosRule
// API call, and error handling.
//
//    // Example sending a request using the DeleteDirectConnectTrafficQosRuleRequest method.
//    req, resp := client.DeleteDirectConnectTrafficQosRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRuleRequest(input *DeleteDirectConnectTrafficQosRuleInput) (req *request.Request, output *DeleteDirectConnectTrafficQosRuleOutput) {
	op := &request.Operation{
		Name:       opDeleteDirectConnectTrafficQosRule,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteDirectConnectTrafficQosRuleInput{}
	}

	output = &DeleteDirectConnectTrafficQosRuleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteDirectConnectTrafficQosRule API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DeleteDirectConnectTrafficQosRule for usage and error information.
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRule(input *DeleteDirectConnectTrafficQosRuleInput) (*DeleteDirectConnectTrafficQosRuleOutput, error) {
	req, out := c.DeleteDirectConnectTrafficQosRuleRequest(input)
	return out, req.Send()
}

// DeleteDirectConnectTrafficQosRuleWithContext is the same as DeleteDirectConnectTrafficQosRule with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteDirectConnectTrafficQosRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DeleteDirectConnectTrafficQosRuleWithContext(ctx volcengine.Context, input *DeleteDirectConnectTrafficQosRuleInput, opts ...request.Option) (*DeleteDirectConnectTrafficQosRuleOutput, error) {
	req, out := c.DeleteDirectConnectTrafficQosRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteDirectConnectTrafficQosRuleInput struct {
	_ struct{} `type:"structure"`

	// DirectConnectTrafficQosRuleId is a required field
	DirectConnectTrafficQosRuleId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteDirectConnectTrafficQosRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDirectConnectTrafficQosRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteDirectConnectTrafficQosRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteDirectConnectTrafficQosRuleInput"}
	if s.DirectConnectTrafficQosRuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectTrafficQosRuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDirectConnectTrafficQosRuleId sets the DirectConnectTrafficQosRuleId field's value.
func (s *DeleteDirectConnectTrafficQosRuleInput) SetDirectConnectTrafficQosRuleId(v string) *DeleteDirectConnectTrafficQosRuleInput {
	s.DirectConnectTrafficQosRuleId = &v
	return s
}

type DeleteDirectConnectTrafficQosRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DeleteDirectConnectTrafficQosRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteDirectConnectTrafficQosRuleOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteDirectConnectTrafficQosRuleOutput) SetRequestId(v string) *DeleteDirectConnectTrafficQosRuleOutput {
	s.RequestId = &v
	return s
}
