// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opConfirmDirectConnectVirtualInterfaceCommon = "ConfirmDirectConnectVirtualInterface"

// ConfirmDirectConnectVirtualInterfaceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ConfirmDirectConnectVirtualInterfaceCommon operation. The "output" return
// value will be populated with the ConfirmDirectConnectVirtualInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ConfirmDirectConnectVirtualInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ConfirmDirectConnectVirtualInterfaceCommon Send returns without error.
//
// See ConfirmDirectConnectVirtualInterfaceCommon for more information on using the ConfirmDirectConnectVirtualInterfaceCommon
// API call, and error handling.
//
//    // Example sending a request using the ConfirmDirectConnectVirtualInterfaceCommonRequest method.
//    req, resp := client.ConfirmDirectConnectVirtualInterfaceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterfaceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opConfirmDirectConnectVirtualInterfaceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ConfirmDirectConnectVirtualInterfaceCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation ConfirmDirectConnectVirtualInterfaceCommon for usage and error information.
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterfaceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ConfirmDirectConnectVirtualInterfaceCommonRequest(input)
	return out, req.Send()
}

// ConfirmDirectConnectVirtualInterfaceCommonWithContext is the same as ConfirmDirectConnectVirtualInterfaceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ConfirmDirectConnectVirtualInterfaceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterfaceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ConfirmDirectConnectVirtualInterfaceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opConfirmDirectConnectVirtualInterface = "ConfirmDirectConnectVirtualInterface"

// ConfirmDirectConnectVirtualInterfaceRequest generates a "volcengine/request.Request" representing the
// client's request for the ConfirmDirectConnectVirtualInterface operation. The "output" return
// value will be populated with the ConfirmDirectConnectVirtualInterfaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ConfirmDirectConnectVirtualInterfaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after ConfirmDirectConnectVirtualInterfaceCommon Send returns without error.
//
// See ConfirmDirectConnectVirtualInterface for more information on using the ConfirmDirectConnectVirtualInterface
// API call, and error handling.
//
//    // Example sending a request using the ConfirmDirectConnectVirtualInterfaceRequest method.
//    req, resp := client.ConfirmDirectConnectVirtualInterfaceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterfaceRequest(input *ConfirmDirectConnectVirtualInterfaceInput) (req *request.Request, output *ConfirmDirectConnectVirtualInterfaceOutput) {
	op := &request.Operation{
		Name:       opConfirmDirectConnectVirtualInterface,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ConfirmDirectConnectVirtualInterfaceInput{}
	}

	output = &ConfirmDirectConnectVirtualInterfaceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ConfirmDirectConnectVirtualInterface API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation ConfirmDirectConnectVirtualInterface for usage and error information.
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterface(input *ConfirmDirectConnectVirtualInterfaceInput) (*ConfirmDirectConnectVirtualInterfaceOutput, error) {
	req, out := c.ConfirmDirectConnectVirtualInterfaceRequest(input)
	return out, req.Send()
}

// ConfirmDirectConnectVirtualInterfaceWithContext is the same as ConfirmDirectConnectVirtualInterface with the addition of
// the ability to pass a context and additional request options.
//
// See ConfirmDirectConnectVirtualInterface for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) ConfirmDirectConnectVirtualInterfaceWithContext(ctx volcengine.Context, input *ConfirmDirectConnectVirtualInterfaceInput, opts ...request.Option) (*ConfirmDirectConnectVirtualInterfaceOutput, error) {
	req, out := c.ConfirmDirectConnectVirtualInterfaceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfirmDirectConnectVirtualInterfaceInput struct {
	_ struct{} `type:"structure"`

	// DirectConnectGatewayId is a required field
	DirectConnectGatewayId *string `type:"string" required:"true"`

	// VirtualInterfaceId is a required field
	VirtualInterfaceId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ConfirmDirectConnectVirtualInterfaceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfirmDirectConnectVirtualInterfaceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ConfirmDirectConnectVirtualInterfaceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ConfirmDirectConnectVirtualInterfaceInput"}
	if s.DirectConnectGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectGatewayId"))
	}
	if s.VirtualInterfaceId == nil {
		invalidParams.Add(request.NewErrParamRequired("VirtualInterfaceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDirectConnectGatewayId sets the DirectConnectGatewayId field's value.
func (s *ConfirmDirectConnectVirtualInterfaceInput) SetDirectConnectGatewayId(v string) *ConfirmDirectConnectVirtualInterfaceInput {
	s.DirectConnectGatewayId = &v
	return s
}

// SetVirtualInterfaceId sets the VirtualInterfaceId field's value.
func (s *ConfirmDirectConnectVirtualInterfaceInput) SetVirtualInterfaceId(v string) *ConfirmDirectConnectVirtualInterfaceInput {
	s.VirtualInterfaceId = &v
	return s
}

type ConfirmDirectConnectVirtualInterfaceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ConfirmDirectConnectVirtualInterfaceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfirmDirectConnectVirtualInterfaceOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ConfirmDirectConnectVirtualInterfaceOutput) SetRequestId(v string) *ConfirmDirectConnectVirtualInterfaceOutput {
	s.RequestId = &v
	return s
}
