// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateDirectConnectTrafficQosRuleCommon = "CreateDirectConnectTrafficQosRule"

// CreateDirectConnectTrafficQosRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDirectConnectTrafficQosRuleCommon operation. The "output" return
// value will be populated with the CreateDirectConnectTrafficQosRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectTrafficQosRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectTrafficQosRuleCommon Send returns without error.
//
// See CreateDirectConnectTrafficQosRuleCommon for more information on using the CreateDirectConnectTrafficQosRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectTrafficQosRuleCommonRequest method.
//    req, resp := client.CreateDirectConnectTrafficQosRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDirectConnectTrafficQosRuleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectTrafficQosRuleCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectTrafficQosRuleCommon for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectTrafficQosRuleCommonRequest(input)
	return out, req.Send()
}

// CreateDirectConnectTrafficQosRuleCommonWithContext is the same as CreateDirectConnectTrafficQosRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectTrafficQosRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectTrafficQosRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDirectConnectTrafficQosRule = "CreateDirectConnectTrafficQosRule"

// CreateDirectConnectTrafficQosRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDirectConnectTrafficQosRule operation. The "output" return
// value will be populated with the CreateDirectConnectTrafficQosRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectTrafficQosRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectTrafficQosRuleCommon Send returns without error.
//
// See CreateDirectConnectTrafficQosRule for more information on using the CreateDirectConnectTrafficQosRule
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectTrafficQosRuleRequest method.
//    req, resp := client.CreateDirectConnectTrafficQosRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRuleRequest(input *CreateDirectConnectTrafficQosRuleInput) (req *request.Request, output *CreateDirectConnectTrafficQosRuleOutput) {
	op := &request.Operation{
		Name:       opCreateDirectConnectTrafficQosRule,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDirectConnectTrafficQosRuleInput{}
	}

	output = &CreateDirectConnectTrafficQosRuleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectTrafficQosRule API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectTrafficQosRule for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRule(input *CreateDirectConnectTrafficQosRuleInput) (*CreateDirectConnectTrafficQosRuleOutput, error) {
	req, out := c.CreateDirectConnectTrafficQosRuleRequest(input)
	return out, req.Send()
}

// CreateDirectConnectTrafficQosRuleWithContext is the same as CreateDirectConnectTrafficQosRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectTrafficQosRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosRuleWithContext(ctx volcengine.Context, input *CreateDirectConnectTrafficQosRuleInput, opts ...request.Option) (*CreateDirectConnectTrafficQosRuleOutput, error) {
	req, out := c.CreateDirectConnectTrafficQosRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateDirectConnectTrafficQosRuleInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	// DestinationCidrBlock is a required field
	DestinationCidrBlock *string `type:"string" required:"true"`

	// DestinationPortEnd is a required field
	DestinationPortEnd *int64 `type:"integer" required:"true"`

	// DestinationPortStart is a required field
	DestinationPortStart *int64 `type:"integer" required:"true"`

	// DirectConnectTrafficQosPolicyId is a required field
	DirectConnectTrafficQosPolicyId *string `type:"string" required:"true"`

	// DirectConnectTrafficQosQueueId is a required field
	DirectConnectTrafficQosQueueId *string `type:"string" required:"true"`

	DirectConnectTrafficQosRuleName *string `type:"string"`

	MatchDscp *int64 `type:"integer"`

	// Priority is a required field
	Priority *string `type:"string" required:"true"`

	Protocol *string `type:"string"`

	RemarkingDscp *int64 `type:"integer"`

	// SourceCidrBlock is a required field
	SourceCidrBlock *string `type:"string" required:"true"`

	// SourcePortEnd is a required field
	SourcePortEnd *int64 `type:"integer" required:"true"`

	// SourcePortStart is a required field
	SourcePortStart *int64 `type:"integer" required:"true"`
}

// String returns the string representation
func (s CreateDirectConnectTrafficQosRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectTrafficQosRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDirectConnectTrafficQosRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDirectConnectTrafficQosRuleInput"}
	if s.DestinationCidrBlock == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationCidrBlock"))
	}
	if s.DestinationPortEnd == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationPortEnd"))
	}
	if s.DestinationPortStart == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationPortStart"))
	}
	if s.DirectConnectTrafficQosPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectTrafficQosPolicyId"))
	}
	if s.DirectConnectTrafficQosQueueId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectTrafficQosQueueId"))
	}
	if s.Priority == nil {
		invalidParams.Add(request.NewErrParamRequired("Priority"))
	}
	if s.SourceCidrBlock == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceCidrBlock"))
	}
	if s.SourcePortEnd == nil {
		invalidParams.Add(request.NewErrParamRequired("SourcePortEnd"))
	}
	if s.SourcePortStart == nil {
		invalidParams.Add(request.NewErrParamRequired("SourcePortStart"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetClientToken(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDescription(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.Description = &v
	return s
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDestinationCidrBlock(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetDestinationPortEnd sets the DestinationPortEnd field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDestinationPortEnd(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.DestinationPortEnd = &v
	return s
}

// SetDestinationPortStart sets the DestinationPortStart field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDestinationPortStart(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.DestinationPortStart = &v
	return s
}

// SetDirectConnectTrafficQosPolicyId sets the DirectConnectTrafficQosPolicyId field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDirectConnectTrafficQosPolicyId(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.DirectConnectTrafficQosPolicyId = &v
	return s
}

// SetDirectConnectTrafficQosQueueId sets the DirectConnectTrafficQosQueueId field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDirectConnectTrafficQosQueueId(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.DirectConnectTrafficQosQueueId = &v
	return s
}

// SetDirectConnectTrafficQosRuleName sets the DirectConnectTrafficQosRuleName field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetDirectConnectTrafficQosRuleName(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.DirectConnectTrafficQosRuleName = &v
	return s
}

// SetMatchDscp sets the MatchDscp field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetMatchDscp(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.MatchDscp = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetPriority(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.Priority = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetProtocol(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.Protocol = &v
	return s
}

// SetRemarkingDscp sets the RemarkingDscp field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetRemarkingDscp(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.RemarkingDscp = &v
	return s
}

// SetSourceCidrBlock sets the SourceCidrBlock field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetSourceCidrBlock(v string) *CreateDirectConnectTrafficQosRuleInput {
	s.SourceCidrBlock = &v
	return s
}

// SetSourcePortEnd sets the SourcePortEnd field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetSourcePortEnd(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.SourcePortEnd = &v
	return s
}

// SetSourcePortStart sets the SourcePortStart field's value.
func (s *CreateDirectConnectTrafficQosRuleInput) SetSourcePortStart(v int64) *CreateDirectConnectTrafficQosRuleInput {
	s.SourcePortStart = &v
	return s
}

type CreateDirectConnectTrafficQosRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DirectConnectTrafficQosRuleId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateDirectConnectTrafficQosRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectTrafficQosRuleOutput) GoString() string {
	return s.String()
}

// SetDirectConnectTrafficQosRuleId sets the DirectConnectTrafficQosRuleId field's value.
func (s *CreateDirectConnectTrafficQosRuleOutput) SetDirectConnectTrafficQosRuleId(v string) *CreateDirectConnectTrafficQosRuleOutput {
	s.DirectConnectTrafficQosRuleId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateDirectConnectTrafficQosRuleOutput) SetRequestId(v string) *CreateDirectConnectTrafficQosRuleOutput {
	s.RequestId = &v
	return s
}
