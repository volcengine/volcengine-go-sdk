// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDirectConnectTrafficQosRulesCommon = "DescribeDirectConnectTrafficQosRules"

// DescribeDirectConnectTrafficQosRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDirectConnectTrafficQosRulesCommon operation. The "output" return
// value will be populated with the DescribeDirectConnectTrafficQosRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectTrafficQosRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectTrafficQosRulesCommon Send returns without error.
//
// See DescribeDirectConnectTrafficQosRulesCommon for more information on using the DescribeDirectConnectTrafficQosRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectTrafficQosRulesCommonRequest method.
//    req, resp := client.DescribeDirectConnectTrafficQosRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectTrafficQosRulesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectTrafficQosRulesCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectTrafficQosRulesCommon for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectTrafficQosRulesCommonRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectTrafficQosRulesCommonWithContext is the same as DescribeDirectConnectTrafficQosRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectTrafficQosRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDirectConnectTrafficQosRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDirectConnectTrafficQosRules = "DescribeDirectConnectTrafficQosRules"

// DescribeDirectConnectTrafficQosRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDirectConnectTrafficQosRules operation. The "output" return
// value will be populated with the DescribeDirectConnectTrafficQosRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDirectConnectTrafficQosRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDirectConnectTrafficQosRulesCommon Send returns without error.
//
// See DescribeDirectConnectTrafficQosRules for more information on using the DescribeDirectConnectTrafficQosRules
// API call, and error handling.
//
//    // Example sending a request using the DescribeDirectConnectTrafficQosRulesRequest method.
//    req, resp := client.DescribeDirectConnectTrafficQosRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRulesRequest(input *DescribeDirectConnectTrafficQosRulesInput) (req *request.Request, output *DescribeDirectConnectTrafficQosRulesOutput) {
	op := &request.Operation{
		Name:       opDescribeDirectConnectTrafficQosRules,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDirectConnectTrafficQosRulesInput{}
	}

	output = &DescribeDirectConnectTrafficQosRulesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDirectConnectTrafficQosRules API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation DescribeDirectConnectTrafficQosRules for usage and error information.
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRules(input *DescribeDirectConnectTrafficQosRulesInput) (*DescribeDirectConnectTrafficQosRulesOutput, error) {
	req, out := c.DescribeDirectConnectTrafficQosRulesRequest(input)
	return out, req.Send()
}

// DescribeDirectConnectTrafficQosRulesWithContext is the same as DescribeDirectConnectTrafficQosRules with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDirectConnectTrafficQosRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) DescribeDirectConnectTrafficQosRulesWithContext(ctx volcengine.Context, input *DescribeDirectConnectTrafficQosRulesInput, opts ...request.Option) (*DescribeDirectConnectTrafficQosRulesOutput, error) {
	req, out := c.DescribeDirectConnectTrafficQosRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDirectConnectTrafficQosRulesInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `type:"string"`

	DirectConnectTrafficQosQueueId *string `type:"string"`

	DirectConnectTrafficQosRuleIds []*string `type:"list"`

	DirectConnectTrafficQosRuleName *string `type:"string"`

	MatchDscp *string `type:"string"`

	Priority *int64 `type:"integer"`

	Protocol *string `type:"string"`

	RemarkingDscp *string `type:"string"`

	SourceCidrBlock *string `type:"string"`
}

// String returns the string representation
func (s DescribeDirectConnectTrafficQosRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectTrafficQosRulesInput) GoString() string {
	return s.String()
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetDestinationCidrBlock(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetDirectConnectTrafficQosQueueId sets the DirectConnectTrafficQosQueueId field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetDirectConnectTrafficQosQueueId(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.DirectConnectTrafficQosQueueId = &v
	return s
}

// SetDirectConnectTrafficQosRuleIds sets the DirectConnectTrafficQosRuleIds field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetDirectConnectTrafficQosRuleIds(v []*string) *DescribeDirectConnectTrafficQosRulesInput {
	s.DirectConnectTrafficQosRuleIds = v
	return s
}

// SetDirectConnectTrafficQosRuleName sets the DirectConnectTrafficQosRuleName field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetDirectConnectTrafficQosRuleName(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.DirectConnectTrafficQosRuleName = &v
	return s
}

// SetMatchDscp sets the MatchDscp field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetMatchDscp(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.MatchDscp = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetPriority(v int64) *DescribeDirectConnectTrafficQosRulesInput {
	s.Priority = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetProtocol(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.Protocol = &v
	return s
}

// SetRemarkingDscp sets the RemarkingDscp field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetRemarkingDscp(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.RemarkingDscp = &v
	return s
}

// SetSourceCidrBlock sets the SourceCidrBlock field's value.
func (s *DescribeDirectConnectTrafficQosRulesInput) SetSourceCidrBlock(v string) *DescribeDirectConnectTrafficQosRulesInput {
	s.SourceCidrBlock = &v
	return s
}

type DescribeDirectConnectTrafficQosRulesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DirectConnectTrafficQosRules []*DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeDirectConnectTrafficQosRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDirectConnectTrafficQosRulesOutput) GoString() string {
	return s.String()
}

// SetDirectConnectTrafficQosRules sets the DirectConnectTrafficQosRules field's value.
func (s *DescribeDirectConnectTrafficQosRulesOutput) SetDirectConnectTrafficQosRules(v []*DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) *DescribeDirectConnectTrafficQosRulesOutput {
	s.DirectConnectTrafficQosRules = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDirectConnectTrafficQosRulesOutput) SetPageNumber(v int64) *DescribeDirectConnectTrafficQosRulesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDirectConnectTrafficQosRulesOutput) SetPageSize(v int64) *DescribeDirectConnectTrafficQosRulesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDirectConnectTrafficQosRulesOutput) SetRequestId(v string) *DescribeDirectConnectTrafficQosRulesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeDirectConnectTrafficQosRulesOutput) SetTotalCount(v int64) *DescribeDirectConnectTrafficQosRulesOutput {
	s.TotalCount = &v
	return s
}

type DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	DestinationCidrBlock *string `type:"string"`

	DestinationPortEnd *string `type:"string"`

	DestinationPortStart *int64 `type:"integer"`

	DirectConnectTrafficQosPolicyId *string `type:"string"`

	DirectConnectTrafficQosQueueId *string `type:"string"`

	DirectConnectTrafficQosRuleId *string `type:"string"`

	DirectConnectTrafficQosRuleName *string `type:"string"`

	MatchDscp *int64 `type:"integer"`

	Priority *int64 `type:"integer"`

	Protocol *string `type:"string"`

	RemarkingDscp *string `type:"string"`

	SourceCidrBlock *string `type:"string"`

	SourcePortEnd *int64 `type:"integer"`

	SourcePortStart *int64 `type:"integer"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDescription(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.Description = &v
	return s
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDestinationCidrBlock(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DestinationCidrBlock = &v
	return s
}

// SetDestinationPortEnd sets the DestinationPortEnd field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDestinationPortEnd(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DestinationPortEnd = &v
	return s
}

// SetDestinationPortStart sets the DestinationPortStart field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDestinationPortStart(v int64) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DestinationPortStart = &v
	return s
}

// SetDirectConnectTrafficQosPolicyId sets the DirectConnectTrafficQosPolicyId field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDirectConnectTrafficQosPolicyId(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DirectConnectTrafficQosPolicyId = &v
	return s
}

// SetDirectConnectTrafficQosQueueId sets the DirectConnectTrafficQosQueueId field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDirectConnectTrafficQosQueueId(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DirectConnectTrafficQosQueueId = &v
	return s
}

// SetDirectConnectTrafficQosRuleId sets the DirectConnectTrafficQosRuleId field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDirectConnectTrafficQosRuleId(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DirectConnectTrafficQosRuleId = &v
	return s
}

// SetDirectConnectTrafficQosRuleName sets the DirectConnectTrafficQosRuleName field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetDirectConnectTrafficQosRuleName(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.DirectConnectTrafficQosRuleName = &v
	return s
}

// SetMatchDscp sets the MatchDscp field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetMatchDscp(v int64) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.MatchDscp = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetPriority(v int64) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.Priority = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetProtocol(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.Protocol = &v
	return s
}

// SetRemarkingDscp sets the RemarkingDscp field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetRemarkingDscp(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.RemarkingDscp = &v
	return s
}

// SetSourceCidrBlock sets the SourceCidrBlock field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetSourceCidrBlock(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.SourceCidrBlock = &v
	return s
}

// SetSourcePortEnd sets the SourcePortEnd field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetSourcePortEnd(v int64) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.SourcePortEnd = &v
	return s
}

// SetSourcePortStart sets the SourcePortStart field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetSourcePortStart(v int64) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.SourcePortStart = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput) SetStatus(v string) *DirectConnectTrafficQosRuleForDescribeDirectConnectTrafficQosRulesOutput {
	s.Status = &v
	return s
}
