// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDirectConnectConnectionLoaAttributesCommon = "ModifyDirectConnectConnectionLoaAttributes"

// ModifyDirectConnectConnectionLoaAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDirectConnectConnectionLoaAttributesCommon operation. The "output" return
// value will be populated with the ModifyDirectConnectConnectionLoaAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDirectConnectConnectionLoaAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDirectConnectConnectionLoaAttributesCommon Send returns without error.
//
// See ModifyDirectConnectConnectionLoaAttributesCommon for more information on using the ModifyDirectConnectConnectionLoaAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDirectConnectConnectionLoaAttributesCommonRequest method.
//    req, resp := client.ModifyDirectConnectConnectionLoaAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDirectConnectConnectionLoaAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyDirectConnectConnectionLoaAttributesCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation ModifyDirectConnectConnectionLoaAttributesCommon for usage and error information.
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDirectConnectConnectionLoaAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyDirectConnectConnectionLoaAttributesCommonWithContext is the same as ModifyDirectConnectConnectionLoaAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDirectConnectConnectionLoaAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDirectConnectConnectionLoaAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDirectConnectConnectionLoaAttributes = "ModifyDirectConnectConnectionLoaAttributes"

// ModifyDirectConnectConnectionLoaAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDirectConnectConnectionLoaAttributes operation. The "output" return
// value will be populated with the ModifyDirectConnectConnectionLoaAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDirectConnectConnectionLoaAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDirectConnectConnectionLoaAttributesCommon Send returns without error.
//
// See ModifyDirectConnectConnectionLoaAttributes for more information on using the ModifyDirectConnectConnectionLoaAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyDirectConnectConnectionLoaAttributesRequest method.
//    req, resp := client.ModifyDirectConnectConnectionLoaAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributesRequest(input *ModifyDirectConnectConnectionLoaAttributesInput) (req *request.Request, output *ModifyDirectConnectConnectionLoaAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyDirectConnectConnectionLoaAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDirectConnectConnectionLoaAttributesInput{}
	}

	output = &ModifyDirectConnectConnectionLoaAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyDirectConnectConnectionLoaAttributes API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation ModifyDirectConnectConnectionLoaAttributes for usage and error information.
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributes(input *ModifyDirectConnectConnectionLoaAttributesInput) (*ModifyDirectConnectConnectionLoaAttributesOutput, error) {
	req, out := c.ModifyDirectConnectConnectionLoaAttributesRequest(input)
	return out, req.Send()
}

// ModifyDirectConnectConnectionLoaAttributesWithContext is the same as ModifyDirectConnectConnectionLoaAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDirectConnectConnectionLoaAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) ModifyDirectConnectConnectionLoaAttributesWithContext(ctx volcengine.Context, input *ModifyDirectConnectConnectionLoaAttributesInput, opts ...request.Option) (*ModifyDirectConnectConnectionLoaAttributesOutput, error) {
	req, out := c.ModifyDirectConnectConnectionLoaAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EngineerForModifyDirectConnectConnectionLoaAttributesInput struct {
	_ struct{} `type:"structure"`

	// CertificateNo is a required field
	CertificateNo *string `type:"string" required:"true"`

	// CertificateType is a required field
	CertificateType *string `type:"string" required:"true"`

	// ContactPhone is a required field
	ContactPhone *string `type:"string" required:"true"`

	// Name is a required field
	Name *string `type:"string" required:"true"`
}

// String returns the string representation
func (s EngineerForModifyDirectConnectConnectionLoaAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EngineerForModifyDirectConnectConnectionLoaAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *EngineerForModifyDirectConnectConnectionLoaAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "EngineerForModifyDirectConnectConnectionLoaAttributesInput"}
	if s.CertificateNo == nil {
		invalidParams.Add(request.NewErrParamRequired("CertificateNo"))
	}
	if s.CertificateType == nil {
		invalidParams.Add(request.NewErrParamRequired("CertificateType"))
	}
	if s.ContactPhone == nil {
		invalidParams.Add(request.NewErrParamRequired("ContactPhone"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCertificateNo sets the CertificateNo field's value.
func (s *EngineerForModifyDirectConnectConnectionLoaAttributesInput) SetCertificateNo(v string) *EngineerForModifyDirectConnectConnectionLoaAttributesInput {
	s.CertificateNo = &v
	return s
}

// SetCertificateType sets the CertificateType field's value.
func (s *EngineerForModifyDirectConnectConnectionLoaAttributesInput) SetCertificateType(v string) *EngineerForModifyDirectConnectConnectionLoaAttributesInput {
	s.CertificateType = &v
	return s
}

// SetContactPhone sets the ContactPhone field's value.
func (s *EngineerForModifyDirectConnectConnectionLoaAttributesInput) SetContactPhone(v string) *EngineerForModifyDirectConnectConnectionLoaAttributesInput {
	s.ContactPhone = &v
	return s
}

// SetName sets the Name field's value.
func (s *EngineerForModifyDirectConnectConnectionLoaAttributesInput) SetName(v string) *EngineerForModifyDirectConnectConnectionLoaAttributesInput {
	s.Name = &v
	return s
}

type ModifyDirectConnectConnectionLoaAttributesInput struct {
	_ struct{} `type:"structure"`

	// Action is a required field
	Action *string `type:"string" required:"true"`

	Bandwidth *int64 `type:"integer"`

	CompanyName *string `type:"string"`

	ConstructionTime *string `type:"string"`

	// DirectConnectConnectionId is a required field
	DirectConnectConnectionId *string `type:"string" required:"true"`

	Engineers []*EngineerForModifyDirectConnectConnectionLoaAttributesInput `type:"list"`

	LineType *string `type:"string"`

	PeerLocation *string `type:"string"`

	SystemIntegrator *string `type:"string"`
}

// String returns the string representation
func (s ModifyDirectConnectConnectionLoaAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDirectConnectConnectionLoaAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDirectConnectConnectionLoaAttributesInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}
	if s.DirectConnectConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectConnectionId"))
	}
	if s.Engineers != nil {
		for i, v := range s.Engineers {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Engineers", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetAction(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.Action = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetBandwidth(v int64) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.Bandwidth = &v
	return s
}

// SetCompanyName sets the CompanyName field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetCompanyName(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.CompanyName = &v
	return s
}

// SetConstructionTime sets the ConstructionTime field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetConstructionTime(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.ConstructionTime = &v
	return s
}

// SetDirectConnectConnectionId sets the DirectConnectConnectionId field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetDirectConnectConnectionId(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.DirectConnectConnectionId = &v
	return s
}

// SetEngineers sets the Engineers field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetEngineers(v []*EngineerForModifyDirectConnectConnectionLoaAttributesInput) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.Engineers = v
	return s
}

// SetLineType sets the LineType field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetLineType(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.LineType = &v
	return s
}

// SetPeerLocation sets the PeerLocation field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetPeerLocation(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.PeerLocation = &v
	return s
}

// SetSystemIntegrator sets the SystemIntegrator field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesInput) SetSystemIntegrator(v string) *ModifyDirectConnectConnectionLoaAttributesInput {
	s.SystemIntegrator = &v
	return s
}

type ModifyDirectConnectConnectionLoaAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyDirectConnectConnectionLoaAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDirectConnectConnectionLoaAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyDirectConnectConnectionLoaAttributesOutput) SetRequestId(v string) *ModifyDirectConnectConnectionLoaAttributesOutput {
	s.RequestId = &v
	return s
}
