// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package directconnect

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateDirectConnectTrafficQosQueueCommon = "CreateDirectConnectTrafficQosQueue"

// CreateDirectConnectTrafficQosQueueCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDirectConnectTrafficQosQueueCommon operation. The "output" return
// value will be populated with the CreateDirectConnectTrafficQosQueueCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectTrafficQosQueueCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectTrafficQosQueueCommon Send returns without error.
//
// See CreateDirectConnectTrafficQosQueueCommon for more information on using the CreateDirectConnectTrafficQosQueueCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectTrafficQosQueueCommonRequest method.
//    req, resp := client.CreateDirectConnectTrafficQosQueueCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueueCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDirectConnectTrafficQosQueueCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectTrafficQosQueueCommon API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectTrafficQosQueueCommon for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueueCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectTrafficQosQueueCommonRequest(input)
	return out, req.Send()
}

// CreateDirectConnectTrafficQosQueueCommonWithContext is the same as CreateDirectConnectTrafficQosQueueCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectTrafficQosQueueCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueueCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDirectConnectTrafficQosQueueCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDirectConnectTrafficQosQueue = "CreateDirectConnectTrafficQosQueue"

// CreateDirectConnectTrafficQosQueueRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDirectConnectTrafficQosQueue operation. The "output" return
// value will be populated with the CreateDirectConnectTrafficQosQueueCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDirectConnectTrafficQosQueueCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDirectConnectTrafficQosQueueCommon Send returns without error.
//
// See CreateDirectConnectTrafficQosQueue for more information on using the CreateDirectConnectTrafficQosQueue
// API call, and error handling.
//
//    // Example sending a request using the CreateDirectConnectTrafficQosQueueRequest method.
//    req, resp := client.CreateDirectConnectTrafficQosQueueRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueueRequest(input *CreateDirectConnectTrafficQosQueueInput) (req *request.Request, output *CreateDirectConnectTrafficQosQueueOutput) {
	op := &request.Operation{
		Name:       opCreateDirectConnectTrafficQosQueue,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDirectConnectTrafficQosQueueInput{}
	}

	output = &CreateDirectConnectTrafficQosQueueOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateDirectConnectTrafficQosQueue API operation for DIRECTCONNECT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DIRECTCONNECT's
// API operation CreateDirectConnectTrafficQosQueue for usage and error information.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueue(input *CreateDirectConnectTrafficQosQueueInput) (*CreateDirectConnectTrafficQosQueueOutput, error) {
	req, out := c.CreateDirectConnectTrafficQosQueueRequest(input)
	return out, req.Send()
}

// CreateDirectConnectTrafficQosQueueWithContext is the same as CreateDirectConnectTrafficQosQueue with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDirectConnectTrafficQosQueue for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DIRECTCONNECT) CreateDirectConnectTrafficQosQueueWithContext(ctx volcengine.Context, input *CreateDirectConnectTrafficQosQueueInput, opts ...request.Option) (*CreateDirectConnectTrafficQosQueueOutput, error) {
	req, out := c.CreateDirectConnectTrafficQosQueueRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateDirectConnectTrafficQosQueueInput struct {
	_ struct{} `type:"structure"`

	BandwidthPercent *string `type:"string"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	// DirectConnectTrafficQosPolicyId is a required field
	DirectConnectTrafficQosPolicyId *string `type:"string" required:"true"`

	DirectConnectTrafficQosQueueName *string `type:"string"`

	// QueueType is a required field
	QueueType *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateDirectConnectTrafficQosQueueInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectTrafficQosQueueInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDirectConnectTrafficQosQueueInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDirectConnectTrafficQosQueueInput"}
	if s.DirectConnectTrafficQosPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("DirectConnectTrafficQosPolicyId"))
	}
	if s.QueueType == nil {
		invalidParams.Add(request.NewErrParamRequired("QueueType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidthPercent sets the BandwidthPercent field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetBandwidthPercent(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.BandwidthPercent = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetClientToken(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetDescription(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.Description = &v
	return s
}

// SetDirectConnectTrafficQosPolicyId sets the DirectConnectTrafficQosPolicyId field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetDirectConnectTrafficQosPolicyId(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.DirectConnectTrafficQosPolicyId = &v
	return s
}

// SetDirectConnectTrafficQosQueueName sets the DirectConnectTrafficQosQueueName field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetDirectConnectTrafficQosQueueName(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.DirectConnectTrafficQosQueueName = &v
	return s
}

// SetQueueType sets the QueueType field's value.
func (s *CreateDirectConnectTrafficQosQueueInput) SetQueueType(v string) *CreateDirectConnectTrafficQosQueueInput {
	s.QueueType = &v
	return s
}

type CreateDirectConnectTrafficQosQueueOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DirectConnectTrafficQosQueueId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateDirectConnectTrafficQosQueueOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDirectConnectTrafficQosQueueOutput) GoString() string {
	return s.String()
}

// SetDirectConnectTrafficQosQueueId sets the DirectConnectTrafficQosQueueId field's value.
func (s *CreateDirectConnectTrafficQosQueueOutput) SetDirectConnectTrafficQosQueueId(v string) *CreateDirectConnectTrafficQosQueueOutput {
	s.DirectConnectTrafficQosQueueId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateDirectConnectTrafficQosQueueOutput) SetRequestId(v string) *CreateDirectConnectTrafficQosQueueOutput {
	s.RequestId = &v
	return s
}
