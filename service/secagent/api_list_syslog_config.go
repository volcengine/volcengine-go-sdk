// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package secagent

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSyslogConfigCommon = "ListSyslogConfig"

// ListSyslogConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSyslogConfigCommon operation. The "output" return
// value will be populated with the ListSyslogConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSyslogConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSyslogConfigCommon Send returns without error.
//
// See ListSyslogConfigCommon for more information on using the ListSyslogConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSyslogConfigCommonRequest method.
//    req, resp := client.ListSyslogConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) ListSyslogConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSyslogConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSyslogConfigCommon API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation ListSyslogConfigCommon for usage and error information.
func (c *SECAGENT) ListSyslogConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSyslogConfigCommonRequest(input)
	return out, req.Send()
}

// ListSyslogConfigCommonWithContext is the same as ListSyslogConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSyslogConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) ListSyslogConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSyslogConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSyslogConfig = "ListSyslogConfig"

// ListSyslogConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSyslogConfig operation. The "output" return
// value will be populated with the ListSyslogConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSyslogConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSyslogConfigCommon Send returns without error.
//
// See ListSyslogConfig for more information on using the ListSyslogConfig
// API call, and error handling.
//
//    // Example sending a request using the ListSyslogConfigRequest method.
//    req, resp := client.ListSyslogConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) ListSyslogConfigRequest(input *ListSyslogConfigInput) (req *request.Request, output *ListSyslogConfigOutput) {
	op := &request.Operation{
		Name:       opListSyslogConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSyslogConfigInput{}
	}

	output = &ListSyslogConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSyslogConfig API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation ListSyslogConfig for usage and error information.
func (c *SECAGENT) ListSyslogConfig(input *ListSyslogConfigInput) (*ListSyslogConfigOutput, error) {
	req, out := c.ListSyslogConfigRequest(input)
	return out, req.Send()
}

// ListSyslogConfigWithContext is the same as ListSyslogConfig with the addition of
// the ability to pass a context and additional request options.
//
// See ListSyslogConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) ListSyslogConfigWithContext(ctx volcengine.Context, input *ListSyslogConfigInput, opts ...request.Option) (*ListSyslogConfigOutput, error) {
	req, out := c.ListSyslogConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigDataListForListSyslogConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APIKey *string `type:"string" json:",omitempty"`

	ApplicationUIDs []*string `type:"list" json:",omitempty"`

	DataSourceName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConfigDataListForListSyslogConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigDataListForListSyslogConfigOutput) GoString() string {
	return s.String()
}

// SetAPIKey sets the APIKey field's value.
func (s *ConfigDataListForListSyslogConfigOutput) SetAPIKey(v string) *ConfigDataListForListSyslogConfigOutput {
	s.APIKey = &v
	return s
}

// SetApplicationUIDs sets the ApplicationUIDs field's value.
func (s *ConfigDataListForListSyslogConfigOutput) SetApplicationUIDs(v []*string) *ConfigDataListForListSyslogConfigOutput {
	s.ApplicationUIDs = v
	return s
}

// SetDataSourceName sets the DataSourceName field's value.
func (s *ConfigDataListForListSyslogConfigOutput) SetDataSourceName(v string) *ConfigDataListForListSyslogConfigOutput {
	s.DataSourceName = &v
	return s
}

type ListSyslogConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListSyslogConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSyslogConfigInput) GoString() string {
	return s.String()
}

type ListSyslogConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ConfigDataList []*ConfigDataListForListSyslogConfigOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListSyslogConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSyslogConfigOutput) GoString() string {
	return s.String()
}

// SetConfigDataList sets the ConfigDataList field's value.
func (s *ListSyslogConfigOutput) SetConfigDataList(v []*ConfigDataListForListSyslogConfigOutput) *ListSyslogConfigOutput {
	s.ConfigDataList = v
	return s
}
