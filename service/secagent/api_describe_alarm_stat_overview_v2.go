// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package secagent

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeAlarmStatOverviewV2Common = "DescribeAlarmStatOverviewV2"

// DescribeAlarmStatOverviewV2CommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAlarmStatOverviewV2Common operation. The "output" return
// value will be populated with the DescribeAlarmStatOverviewV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAlarmStatOverviewV2Common Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAlarmStatOverviewV2Common Send returns without error.
//
// See DescribeAlarmStatOverviewV2Common for more information on using the DescribeAlarmStatOverviewV2Common
// API call, and error handling.
//
//    // Example sending a request using the DescribeAlarmStatOverviewV2CommonRequest method.
//    req, resp := client.DescribeAlarmStatOverviewV2CommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) DescribeAlarmStatOverviewV2CommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAlarmStatOverviewV2Common,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAlarmStatOverviewV2Common API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation DescribeAlarmStatOverviewV2Common for usage and error information.
func (c *SECAGENT) DescribeAlarmStatOverviewV2Common(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAlarmStatOverviewV2CommonRequest(input)
	return out, req.Send()
}

// DescribeAlarmStatOverviewV2CommonWithContext is the same as DescribeAlarmStatOverviewV2Common with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAlarmStatOverviewV2Common for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) DescribeAlarmStatOverviewV2CommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAlarmStatOverviewV2CommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAlarmStatOverviewV2 = "DescribeAlarmStatOverviewV2"

// DescribeAlarmStatOverviewV2Request generates a "volcengine/request.Request" representing the
// client's request for the DescribeAlarmStatOverviewV2 operation. The "output" return
// value will be populated with the DescribeAlarmStatOverviewV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAlarmStatOverviewV2Common Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAlarmStatOverviewV2Common Send returns without error.
//
// See DescribeAlarmStatOverviewV2 for more information on using the DescribeAlarmStatOverviewV2
// API call, and error handling.
//
//    // Example sending a request using the DescribeAlarmStatOverviewV2Request method.
//    req, resp := client.DescribeAlarmStatOverviewV2Request(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) DescribeAlarmStatOverviewV2Request(input *DescribeAlarmStatOverviewV2Input) (req *request.Request, output *DescribeAlarmStatOverviewV2Output) {
	op := &request.Operation{
		Name:       opDescribeAlarmStatOverviewV2,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAlarmStatOverviewV2Input{}
	}

	output = &DescribeAlarmStatOverviewV2Output{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAlarmStatOverviewV2 API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation DescribeAlarmStatOverviewV2 for usage and error information.
func (c *SECAGENT) DescribeAlarmStatOverviewV2(input *DescribeAlarmStatOverviewV2Input) (*DescribeAlarmStatOverviewV2Output, error) {
	req, out := c.DescribeAlarmStatOverviewV2Request(input)
	return out, req.Send()
}

// DescribeAlarmStatOverviewV2WithContext is the same as DescribeAlarmStatOverviewV2 with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAlarmStatOverviewV2 for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) DescribeAlarmStatOverviewV2WithContext(ctx volcengine.Context, input *DescribeAlarmStatOverviewV2Input, opts ...request.Option) (*DescribeAlarmStatOverviewV2Output, error) {
	req, out := c.DescribeAlarmStatOverviewV2Request(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeAlarmStatOverviewV2Input struct {
	_ struct{} `type:"structure" json:",omitempty"`

	StatScopeType *string `type:"string" json:",omitempty"`

	TrendRangeEndSec *int64 `type:"int64" json:",omitempty"`

	TrendRangeStartSec *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAlarmStatOverviewV2Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAlarmStatOverviewV2Input) GoString() string {
	return s.String()
}

// SetStatScopeType sets the StatScopeType field's value.
func (s *DescribeAlarmStatOverviewV2Input) SetStatScopeType(v string) *DescribeAlarmStatOverviewV2Input {
	s.StatScopeType = &v
	return s
}

// SetTrendRangeEndSec sets the TrendRangeEndSec field's value.
func (s *DescribeAlarmStatOverviewV2Input) SetTrendRangeEndSec(v int64) *DescribeAlarmStatOverviewV2Input {
	s.TrendRangeEndSec = &v
	return s
}

// SetTrendRangeStartSec sets the TrendRangeStartSec field's value.
func (s *DescribeAlarmStatOverviewV2Input) SetTrendRangeStartSec(v int64) *DescribeAlarmStatOverviewV2Input {
	s.TrendRangeStartSec = &v
	return s
}

type DescribeAlarmStatOverviewV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AnalysisAttemptedCount *int64 `type:"int64" json:",omitempty"`

	AnalysisFalseCount *int64 `type:"int64" json:",omitempty"`

	AnalysisPendingCount *int64 `type:"int64" json:",omitempty"`

	AnalysisSuspiciousCount *int64 `type:"int64" json:",omitempty"`

	AnalysisTrueCount *int64 `type:"int64" json:",omitempty"`

	AutoDecideRate *float64 `type:"float" json:",omitempty"`

	DiscoverHiddenCount *int64 `type:"int64" json:",omitempty"`

	IOCIntelCount *int64 `type:"int64" json:",omitempty"`

	PriorityFocusCount *int64 `type:"int64" json:",omitempty"`

	ReduceRate *float64 `type:"float" json:",omitempty"`

	RiskStageAutomaticProcessCompleteCount *int64 `type:"int64" json:",omitempty"`

	RiskTotalCount *int64 `type:"int64" json:",omitempty"`

	ValidAlarmCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAlarmStatOverviewV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAlarmStatOverviewV2Output) GoString() string {
	return s.String()
}

// SetAnalysisAttemptedCount sets the AnalysisAttemptedCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAnalysisAttemptedCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.AnalysisAttemptedCount = &v
	return s
}

// SetAnalysisFalseCount sets the AnalysisFalseCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAnalysisFalseCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.AnalysisFalseCount = &v
	return s
}

// SetAnalysisPendingCount sets the AnalysisPendingCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAnalysisPendingCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.AnalysisPendingCount = &v
	return s
}

// SetAnalysisSuspiciousCount sets the AnalysisSuspiciousCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAnalysisSuspiciousCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.AnalysisSuspiciousCount = &v
	return s
}

// SetAnalysisTrueCount sets the AnalysisTrueCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAnalysisTrueCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.AnalysisTrueCount = &v
	return s
}

// SetAutoDecideRate sets the AutoDecideRate field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetAutoDecideRate(v float64) *DescribeAlarmStatOverviewV2Output {
	s.AutoDecideRate = &v
	return s
}

// SetDiscoverHiddenCount sets the DiscoverHiddenCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetDiscoverHiddenCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.DiscoverHiddenCount = &v
	return s
}

// SetIOCIntelCount sets the IOCIntelCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetIOCIntelCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.IOCIntelCount = &v
	return s
}

// SetPriorityFocusCount sets the PriorityFocusCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetPriorityFocusCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.PriorityFocusCount = &v
	return s
}

// SetReduceRate sets the ReduceRate field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetReduceRate(v float64) *DescribeAlarmStatOverviewV2Output {
	s.ReduceRate = &v
	return s
}

// SetRiskStageAutomaticProcessCompleteCount sets the RiskStageAutomaticProcessCompleteCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetRiskStageAutomaticProcessCompleteCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.RiskStageAutomaticProcessCompleteCount = &v
	return s
}

// SetRiskTotalCount sets the RiskTotalCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetRiskTotalCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.RiskTotalCount = &v
	return s
}

// SetValidAlarmCount sets the ValidAlarmCount field's value.
func (s *DescribeAlarmStatOverviewV2Output) SetValidAlarmCount(v int64) *DescribeAlarmStatOverviewV2Output {
	s.ValidAlarmCount = &v
	return s
}
