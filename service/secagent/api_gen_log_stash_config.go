// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package secagent

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGenLogStashConfigCommon = "GenLogStashConfig"

// GenLogStashConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GenLogStashConfigCommon operation. The "output" return
// value will be populated with the GenLogStashConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GenLogStashConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GenLogStashConfigCommon Send returns without error.
//
// See GenLogStashConfigCommon for more information on using the GenLogStashConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GenLogStashConfigCommonRequest method.
//    req, resp := client.GenLogStashConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) GenLogStashConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGenLogStashConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GenLogStashConfigCommon API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation GenLogStashConfigCommon for usage and error information.
func (c *SECAGENT) GenLogStashConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GenLogStashConfigCommonRequest(input)
	return out, req.Send()
}

// GenLogStashConfigCommonWithContext is the same as GenLogStashConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GenLogStashConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) GenLogStashConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GenLogStashConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGenLogStashConfig = "GenLogStashConfig"

// GenLogStashConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GenLogStashConfig operation. The "output" return
// value will be populated with the GenLogStashConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GenLogStashConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GenLogStashConfigCommon Send returns without error.
//
// See GenLogStashConfig for more information on using the GenLogStashConfig
// API call, and error handling.
//
//    // Example sending a request using the GenLogStashConfigRequest method.
//    req, resp := client.GenLogStashConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) GenLogStashConfigRequest(input *GenLogStashConfigInput) (req *request.Request, output *GenLogStashConfigOutput) {
	op := &request.Operation{
		Name:       opGenLogStashConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GenLogStashConfigInput{}
	}

	output = &GenLogStashConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GenLogStashConfig API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation GenLogStashConfig for usage and error information.
func (c *SECAGENT) GenLogStashConfig(input *GenLogStashConfigInput) (*GenLogStashConfigOutput, error) {
	req, out := c.GenLogStashConfigRequest(input)
	return out, req.Send()
}

// GenLogStashConfigWithContext is the same as GenLogStashConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GenLogStashConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) GenLogStashConfigWithContext(ctx volcengine.Context, input *GenLogStashConfigInput, opts ...request.Option) (*GenLogStashConfigOutput, error) {
	req, out := c.GenLogStashConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigDataForGenLogStashConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APIKey *string `type:"string" json:",omitempty"`

	ApplicationUIDs []*string `type:"list" json:",omitempty"`

	DataSourceName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConfigDataForGenLogStashConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigDataForGenLogStashConfigInput) GoString() string {
	return s.String()
}

// SetAPIKey sets the APIKey field's value.
func (s *ConfigDataForGenLogStashConfigInput) SetAPIKey(v string) *ConfigDataForGenLogStashConfigInput {
	s.APIKey = &v
	return s
}

// SetApplicationUIDs sets the ApplicationUIDs field's value.
func (s *ConfigDataForGenLogStashConfigInput) SetApplicationUIDs(v []*string) *ConfigDataForGenLogStashConfigInput {
	s.ApplicationUIDs = v
	return s
}

// SetDataSourceName sets the DataSourceName field's value.
func (s *ConfigDataForGenLogStashConfigInput) SetDataSourceName(v string) *ConfigDataForGenLogStashConfigInput {
	s.DataSourceName = &v
	return s
}

type GenLogStashConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConfigData *ConfigDataForGenLogStashConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GenLogStashConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GenLogStashConfigInput) GoString() string {
	return s.String()
}

// SetConfigData sets the ConfigData field's value.
func (s *GenLogStashConfigInput) SetConfigData(v *ConfigDataForGenLogStashConfigInput) *GenLogStashConfigInput {
	s.ConfigData = v
	return s
}

type GenLogStashConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	LogStashConfigContent *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GenLogStashConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GenLogStashConfigOutput) GoString() string {
	return s.String()
}

// SetLogStashConfigContent sets the LogStashConfigContent field's value.
func (s *GenLogStashConfigOutput) SetLogStashConfigContent(v string) *GenLogStashConfigOutput {
	s.LogStashConfigContent = &v
	return s
}
