// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package secagent

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opEditIMConfigStatusCommon = "EditIMConfigStatus"

// EditIMConfigStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the EditIMConfigStatusCommon operation. The "output" return
// value will be populated with the EditIMConfigStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EditIMConfigStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after EditIMConfigStatusCommon Send returns without error.
//
// See EditIMConfigStatusCommon for more information on using the EditIMConfigStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the EditIMConfigStatusCommonRequest method.
//    req, resp := client.EditIMConfigStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) EditIMConfigStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opEditIMConfigStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EditIMConfigStatusCommon API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation EditIMConfigStatusCommon for usage and error information.
func (c *SECAGENT) EditIMConfigStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.EditIMConfigStatusCommonRequest(input)
	return out, req.Send()
}

// EditIMConfigStatusCommonWithContext is the same as EditIMConfigStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See EditIMConfigStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) EditIMConfigStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.EditIMConfigStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEditIMConfigStatus = "EditIMConfigStatus"

// EditIMConfigStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the EditIMConfigStatus operation. The "output" return
// value will be populated with the EditIMConfigStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EditIMConfigStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after EditIMConfigStatusCommon Send returns without error.
//
// See EditIMConfigStatus for more information on using the EditIMConfigStatus
// API call, and error handling.
//
//    // Example sending a request using the EditIMConfigStatusRequest method.
//    req, resp := client.EditIMConfigStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECAGENT) EditIMConfigStatusRequest(input *EditIMConfigStatusInput) (req *request.Request, output *EditIMConfigStatusOutput) {
	op := &request.Operation{
		Name:       opEditIMConfigStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &EditIMConfigStatusInput{}
	}

	output = &EditIMConfigStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EditIMConfigStatus API operation for SEC_AGENT.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SEC_AGENT's
// API operation EditIMConfigStatus for usage and error information.
func (c *SECAGENT) EditIMConfigStatus(input *EditIMConfigStatusInput) (*EditIMConfigStatusOutput, error) {
	req, out := c.EditIMConfigStatusRequest(input)
	return out, req.Send()
}

// EditIMConfigStatusWithContext is the same as EditIMConfigStatus with the addition of
// the ability to pass a context and additional request options.
//
// See EditIMConfigStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECAGENT) EditIMConfigStatusWithContext(ctx volcengine.Context, input *EditIMConfigStatusInput, opts ...request.Option) (*EditIMConfigStatusOutput, error) {
	req, out := c.EditIMConfigStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EditIMConfigStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// IMConfigUID is a required field
	IMConfigUID *string `type:"string" json:",omitempty" required:"true"`

	// Status is a required field
	Status *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s EditIMConfigStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EditIMConfigStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *EditIMConfigStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "EditIMConfigStatusInput"}
	if s.IMConfigUID == nil {
		invalidParams.Add(request.NewErrParamRequired("IMConfigUID"))
	}
	if s.Status == nil {
		invalidParams.Add(request.NewErrParamRequired("Status"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIMConfigUID sets the IMConfigUID field's value.
func (s *EditIMConfigStatusInput) SetIMConfigUID(v string) *EditIMConfigStatusInput {
	s.IMConfigUID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *EditIMConfigStatusInput) SetStatus(v string) *EditIMConfigStatusInput {
	s.Status = &v
	return s
}

type EditIMConfigStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s EditIMConfigStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EditIMConfigStatusOutput) GoString() string {
	return s.String()
}
