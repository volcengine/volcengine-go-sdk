// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opEnableIntegrationTasksCommon = "EnableIntegrationTasks"

// EnableIntegrationTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the EnableIntegrationTasksCommon operation. The "output" return
// value will be populated with the EnableIntegrationTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EnableIntegrationTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after EnableIntegrationTasksCommon Send returns without error.
//
// See EnableIntegrationTasksCommon for more information on using the EnableIntegrationTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the EnableIntegrationTasksCommonRequest method.
//    req, resp := client.EnableIntegrationTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) EnableIntegrationTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opEnableIntegrationTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EnableIntegrationTasksCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation EnableIntegrationTasksCommon for usage and error information.
func (c *VMP) EnableIntegrationTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.EnableIntegrationTasksCommonRequest(input)
	return out, req.Send()
}

// EnableIntegrationTasksCommonWithContext is the same as EnableIntegrationTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See EnableIntegrationTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) EnableIntegrationTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.EnableIntegrationTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opEnableIntegrationTasks = "EnableIntegrationTasks"

// EnableIntegrationTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the EnableIntegrationTasks operation. The "output" return
// value will be populated with the EnableIntegrationTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned EnableIntegrationTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after EnableIntegrationTasksCommon Send returns without error.
//
// See EnableIntegrationTasks for more information on using the EnableIntegrationTasks
// API call, and error handling.
//
//    // Example sending a request using the EnableIntegrationTasksRequest method.
//    req, resp := client.EnableIntegrationTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) EnableIntegrationTasksRequest(input *EnableIntegrationTasksInput) (req *request.Request, output *EnableIntegrationTasksOutput) {
	op := &request.Operation{
		Name:       opEnableIntegrationTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &EnableIntegrationTasksInput{}
	}

	output = &EnableIntegrationTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// EnableIntegrationTasks API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation EnableIntegrationTasks for usage and error information.
func (c *VMP) EnableIntegrationTasks(input *EnableIntegrationTasksInput) (*EnableIntegrationTasksOutput, error) {
	req, out := c.EnableIntegrationTasksRequest(input)
	return out, req.Send()
}

// EnableIntegrationTasksWithContext is the same as EnableIntegrationTasks with the addition of
// the ability to pass a context and additional request options.
//
// See EnableIntegrationTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) EnableIntegrationTasksWithContext(ctx volcengine.Context, input *EnableIntegrationTasksInput, opts ...request.Option) (*EnableIntegrationTasksOutput, error) {
	req, out := c.EnableIntegrationTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForEnableIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DataForEnableIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForEnableIntegrationTasksOutput) GoString() string {
	return s.String()
}

type EnableIntegrationTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s EnableIntegrationTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableIntegrationTasksInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *EnableIntegrationTasksInput) SetIds(v []*string) *EnableIntegrationTasksInput {
	s.Ids = v
	return s
}

type EnableIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SuccessfulItems []*string `type:"list" json:",omitempty"`

	UnsuccessfulItems []*UnsuccessfulItemForEnableIntegrationTasksOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s EnableIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnableIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetSuccessfulItems sets the SuccessfulItems field's value.
func (s *EnableIntegrationTasksOutput) SetSuccessfulItems(v []*string) *EnableIntegrationTasksOutput {
	s.SuccessfulItems = v
	return s
}

// SetUnsuccessfulItems sets the UnsuccessfulItems field's value.
func (s *EnableIntegrationTasksOutput) SetUnsuccessfulItems(v []*UnsuccessfulItemForEnableIntegrationTasksOutput) *EnableIntegrationTasksOutput {
	s.UnsuccessfulItems = v
	return s
}

type ErrorForEnableIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Data *DataForEnableIntegrationTasksOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForEnableIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForEnableIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForEnableIntegrationTasksOutput) SetCode(v string) *ErrorForEnableIntegrationTasksOutput {
	s.Code = &v
	return s
}

// SetData sets the Data field's value.
func (s *ErrorForEnableIntegrationTasksOutput) SetData(v *DataForEnableIntegrationTasksOutput) *ErrorForEnableIntegrationTasksOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForEnableIntegrationTasksOutput) SetMessage(v string) *ErrorForEnableIntegrationTasksOutput {
	s.Message = &v
	return s
}

type UnsuccessfulItemForEnableIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Error *ErrorForEnableIntegrationTasksOutput `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnsuccessfulItemForEnableIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsuccessfulItemForEnableIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *UnsuccessfulItemForEnableIntegrationTasksOutput) SetError(v *ErrorForEnableIntegrationTasksOutput) *UnsuccessfulItemForEnableIntegrationTasksOutput {
	s.Error = v
	return s
}

// SetId sets the Id field's value.
func (s *UnsuccessfulItemForEnableIntegrationTasksOutput) SetId(v string) *UnsuccessfulItemForEnableIntegrationTasksOutput {
	s.Id = &v
	return s
}
