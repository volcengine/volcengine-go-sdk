// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateAlertingRuleCommon = "CreateAlertingRule"

// CreateAlertingRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlertingRuleCommon operation. The "output" return
// value will be populated with the CreateAlertingRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlertingRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlertingRuleCommon Send returns without error.
//
// See CreateAlertingRuleCommon for more information on using the CreateAlertingRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateAlertingRuleCommonRequest method.
//    req, resp := client.CreateAlertingRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) CreateAlertingRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateAlertingRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlertingRuleCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation CreateAlertingRuleCommon for usage and error information.
func (c *VMP) CreateAlertingRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateAlertingRuleCommonRequest(input)
	return out, req.Send()
}

// CreateAlertingRuleCommonWithContext is the same as CreateAlertingRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlertingRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) CreateAlertingRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateAlertingRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateAlertingRule = "CreateAlertingRule"

// CreateAlertingRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlertingRule operation. The "output" return
// value will be populated with the CreateAlertingRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlertingRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlertingRuleCommon Send returns without error.
//
// See CreateAlertingRule for more information on using the CreateAlertingRule
// API call, and error handling.
//
//    // Example sending a request using the CreateAlertingRuleRequest method.
//    req, resp := client.CreateAlertingRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) CreateAlertingRuleRequest(input *CreateAlertingRuleInput) (req *request.Request, output *CreateAlertingRuleOutput) {
	op := &request.Operation{
		Name:       opCreateAlertingRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAlertingRuleInput{}
	}

	output = &CreateAlertingRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlertingRule API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation CreateAlertingRule for usage and error information.
func (c *VMP) CreateAlertingRule(input *CreateAlertingRuleInput) (*CreateAlertingRuleOutput, error) {
	req, out := c.CreateAlertingRuleRequest(input)
	return out, req.Send()
}

// CreateAlertingRuleWithContext is the same as CreateAlertingRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlertingRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) CreateAlertingRuleWithContext(ctx volcengine.Context, input *CreateAlertingRuleInput, opts ...request.Option) (*CreateAlertingRuleOutput, error) {
	req, out := c.CreateAlertingRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AnnotationForCreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AnnotationForCreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AnnotationForCreateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *AnnotationForCreateAlertingRuleInput) SetName(v string) *AnnotationForCreateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *AnnotationForCreateAlertingRuleInput) SetValue(v string) *AnnotationForCreateAlertingRuleInput {
	s.Value = &v
	return s
}

type CreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Annotations []*AnnotationForCreateAlertingRuleInput `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Labels []*LabelForCreateAlertingRuleInput `type:"list" json:",omitempty"`

	Levels []*LevelForCreateAlertingRuleInput `type:"list" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// NotifyGroupPolicyId is a required field
	NotifyGroupPolicyId *string `type:"string" json:",omitempty" required:"true"`

	NotifyPolicyId *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Query *QueryForCreateAlertingRuleInput `type:"structure" json:",omitempty"`

	Tags []*TagForCreateAlertingRuleInput `type:"list" json:",omitempty"`

	// Type is a required field
	Type *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlertingRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAlertingRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateAlertingRuleInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.NotifyGroupPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("NotifyGroupPolicyId"))
	}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAnnotations sets the Annotations field's value.
func (s *CreateAlertingRuleInput) SetAnnotations(v []*AnnotationForCreateAlertingRuleInput) *CreateAlertingRuleInput {
	s.Annotations = v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateAlertingRuleInput) SetDescription(v string) *CreateAlertingRuleInput {
	s.Description = &v
	return s
}

// SetLabels sets the Labels field's value.
func (s *CreateAlertingRuleInput) SetLabels(v []*LabelForCreateAlertingRuleInput) *CreateAlertingRuleInput {
	s.Labels = v
	return s
}

// SetLevels sets the Levels field's value.
func (s *CreateAlertingRuleInput) SetLevels(v []*LevelForCreateAlertingRuleInput) *CreateAlertingRuleInput {
	s.Levels = v
	return s
}

// SetName sets the Name field's value.
func (s *CreateAlertingRuleInput) SetName(v string) *CreateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetNotifyGroupPolicyId sets the NotifyGroupPolicyId field's value.
func (s *CreateAlertingRuleInput) SetNotifyGroupPolicyId(v string) *CreateAlertingRuleInput {
	s.NotifyGroupPolicyId = &v
	return s
}

// SetNotifyPolicyId sets the NotifyPolicyId field's value.
func (s *CreateAlertingRuleInput) SetNotifyPolicyId(v string) *CreateAlertingRuleInput {
	s.NotifyPolicyId = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateAlertingRuleInput) SetProjectName(v string) *CreateAlertingRuleInput {
	s.ProjectName = &v
	return s
}

// SetQuery sets the Query field's value.
func (s *CreateAlertingRuleInput) SetQuery(v *QueryForCreateAlertingRuleInput) *CreateAlertingRuleInput {
	s.Query = v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateAlertingRuleInput) SetTags(v []*TagForCreateAlertingRuleInput) *CreateAlertingRuleInput {
	s.Tags = v
	return s
}

// SetType sets the Type field's value.
func (s *CreateAlertingRuleInput) SetType(v string) *CreateAlertingRuleInput {
	s.Type = &v
	return s
}

type CreateAlertingRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateAlertingRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlertingRuleOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateAlertingRuleOutput) SetId(v string) *CreateAlertingRuleOutput {
	s.Id = &v
	return s
}

type LabelForCreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LabelForCreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LabelForCreateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *LabelForCreateAlertingRuleInput) SetName(v string) *LabelForCreateAlertingRuleInput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LabelForCreateAlertingRuleInput) SetValue(v string) *LabelForCreateAlertingRuleInput {
	s.Value = &v
	return s
}

type LevelForCreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comparator *string `type:"string" json:",omitempty"`

	For *string `type:"string" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	Threshold *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s LevelForCreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelForCreateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetComparator sets the Comparator field's value.
func (s *LevelForCreateAlertingRuleInput) SetComparator(v string) *LevelForCreateAlertingRuleInput {
	s.Comparator = &v
	return s
}

// SetFor sets the For field's value.
func (s *LevelForCreateAlertingRuleInput) SetFor(v string) *LevelForCreateAlertingRuleInput {
	s.For = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelForCreateAlertingRuleInput) SetLevel(v string) *LevelForCreateAlertingRuleInput {
	s.Level = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *LevelForCreateAlertingRuleInput) SetThreshold(v float64) *LevelForCreateAlertingRuleInput {
	s.Threshold = &v
	return s
}

type QueryForCreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PromQL *string `type:"string" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s QueryForCreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryForCreateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetPromQL sets the PromQL field's value.
func (s *QueryForCreateAlertingRuleInput) SetPromQL(v string) *QueryForCreateAlertingRuleInput {
	s.PromQL = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *QueryForCreateAlertingRuleInput) SetWorkspaceId(v string) *QueryForCreateAlertingRuleInput {
	s.WorkspaceId = &v
	return s
}

type TagForCreateAlertingRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCreateAlertingRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateAlertingRuleInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateAlertingRuleInput) SetKey(v string) *TagForCreateAlertingRuleInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateAlertingRuleInput) SetValue(v string) *TagForCreateAlertingRuleInput {
	s.Value = &v
	return s
}
