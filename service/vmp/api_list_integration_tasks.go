// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListIntegrationTasksCommon = "ListIntegrationTasks"

// ListIntegrationTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIntegrationTasksCommon operation. The "output" return
// value will be populated with the ListIntegrationTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIntegrationTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIntegrationTasksCommon Send returns without error.
//
// See ListIntegrationTasksCommon for more information on using the ListIntegrationTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListIntegrationTasksCommonRequest method.
//    req, resp := client.ListIntegrationTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListIntegrationTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListIntegrationTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIntegrationTasksCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListIntegrationTasksCommon for usage and error information.
func (c *VMP) ListIntegrationTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListIntegrationTasksCommonRequest(input)
	return out, req.Send()
}

// ListIntegrationTasksCommonWithContext is the same as ListIntegrationTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListIntegrationTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListIntegrationTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListIntegrationTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListIntegrationTasks = "ListIntegrationTasks"

// ListIntegrationTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIntegrationTasks operation. The "output" return
// value will be populated with the ListIntegrationTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIntegrationTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIntegrationTasksCommon Send returns without error.
//
// See ListIntegrationTasks for more information on using the ListIntegrationTasks
// API call, and error handling.
//
//    // Example sending a request using the ListIntegrationTasksRequest method.
//    req, resp := client.ListIntegrationTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListIntegrationTasksRequest(input *ListIntegrationTasksInput) (req *request.Request, output *ListIntegrationTasksOutput) {
	op := &request.Operation{
		Name:       opListIntegrationTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListIntegrationTasksInput{}
	}

	output = &ListIntegrationTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIntegrationTasks API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListIntegrationTasks for usage and error information.
func (c *VMP) ListIntegrationTasks(input *ListIntegrationTasksInput) (*ListIntegrationTasksOutput, error) {
	req, out := c.ListIntegrationTasksRequest(input)
	return out, req.Send()
}

// ListIntegrationTasksWithContext is the same as ListIntegrationTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListIntegrationTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListIntegrationTasksWithContext(ctx volcengine.Context, input *ListIntegrationTasksInput, opts ...request.Option) (*ListIntegrationTasksOutput, error) {
	req, out := c.ListIntegrationTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForListIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Health *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Tags []*TagForListIntegrationTasksOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForListIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForListIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetHealth sets the Health field's value.
func (s *ConditionsForListIntegrationTasksOutput) SetHealth(v string) *ConditionsForListIntegrationTasksOutput {
	s.Health = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ConditionsForListIntegrationTasksOutput) SetProjectName(v string) *ConditionsForListIntegrationTasksOutput {
	s.ProjectName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ConditionsForListIntegrationTasksOutput) SetTags(v []*TagForListIntegrationTasksOutput) *ConditionsForListIntegrationTasksOutput {
	s.Tags = v
	return s
}

type FiltersForListIntegrationTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Environment *string `type:"string" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Statuses []*string `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VkeClusterIds []*string `type:"list" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FiltersForListIntegrationTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FiltersForListIntegrationTasksInput) GoString() string {
	return s.String()
}

// SetEnvironment sets the Environment field's value.
func (s *FiltersForListIntegrationTasksInput) SetEnvironment(v string) *FiltersForListIntegrationTasksInput {
	s.Environment = &v
	return s
}

// SetIds sets the Ids field's value.
func (s *FiltersForListIntegrationTasksInput) SetIds(v []*string) *FiltersForListIntegrationTasksInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FiltersForListIntegrationTasksInput) SetName(v string) *FiltersForListIntegrationTasksInput {
	s.Name = &v
	return s
}

// SetStatuses sets the Statuses field's value.
func (s *FiltersForListIntegrationTasksInput) SetStatuses(v []*string) *FiltersForListIntegrationTasksInput {
	s.Statuses = v
	return s
}

// SetType sets the Type field's value.
func (s *FiltersForListIntegrationTasksInput) SetType(v string) *FiltersForListIntegrationTasksInput {
	s.Type = &v
	return s
}

// SetVkeClusterIds sets the VkeClusterIds field's value.
func (s *FiltersForListIntegrationTasksInput) SetVkeClusterIds(v []*string) *FiltersForListIntegrationTasksInput {
	s.VkeClusterIds = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *FiltersForListIntegrationTasksInput) SetWorkspaceId(v string) *FiltersForListIntegrationTasksInput {
	s.WorkspaceId = &v
	return s
}

type ItemForListIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions *ConditionsForListIntegrationTasksOutput `type:"structure" json:",omitempty"`

	Environment *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubType *string `type:"string" json:",omitempty"`

	Tags []*TagForListIntegrationTasksOutput `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VkeClusterId *string `type:"string" json:",omitempty"`

	VkeClusterInfo *VkeClusterInfoForListIntegrationTasksOutput `type:"structure" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetConditions sets the Conditions field's value.
func (s *ItemForListIntegrationTasksOutput) SetConditions(v *ConditionsForListIntegrationTasksOutput) *ItemForListIntegrationTasksOutput {
	s.Conditions = v
	return s
}

// SetEnvironment sets the Environment field's value.
func (s *ItemForListIntegrationTasksOutput) SetEnvironment(v string) *ItemForListIntegrationTasksOutput {
	s.Environment = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListIntegrationTasksOutput) SetId(v string) *ItemForListIntegrationTasksOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListIntegrationTasksOutput) SetName(v string) *ItemForListIntegrationTasksOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ItemForListIntegrationTasksOutput) SetProjectName(v string) *ItemForListIntegrationTasksOutput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListIntegrationTasksOutput) SetStatus(v string) *ItemForListIntegrationTasksOutput {
	s.Status = &v
	return s
}

// SetSubType sets the SubType field's value.
func (s *ItemForListIntegrationTasksOutput) SetSubType(v string) *ItemForListIntegrationTasksOutput {
	s.SubType = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ItemForListIntegrationTasksOutput) SetTags(v []*TagForListIntegrationTasksOutput) *ItemForListIntegrationTasksOutput {
	s.Tags = v
	return s
}

// SetType sets the Type field's value.
func (s *ItemForListIntegrationTasksOutput) SetType(v string) *ItemForListIntegrationTasksOutput {
	s.Type = &v
	return s
}

// SetVkeClusterId sets the VkeClusterId field's value.
func (s *ItemForListIntegrationTasksOutput) SetVkeClusterId(v string) *ItemForListIntegrationTasksOutput {
	s.VkeClusterId = &v
	return s
}

// SetVkeClusterInfo sets the VkeClusterInfo field's value.
func (s *ItemForListIntegrationTasksOutput) SetVkeClusterInfo(v *VkeClusterInfoForListIntegrationTasksOutput) *ItemForListIntegrationTasksOutput {
	s.VkeClusterInfo = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *ItemForListIntegrationTasksOutput) SetWorkspaceId(v string) *ItemForListIntegrationTasksOutput {
	s.WorkspaceId = &v
	return s
}

type ListIntegrationTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filters *FiltersForListIntegrationTasksInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForListIntegrationTasksInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListIntegrationTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIntegrationTasksInput) GoString() string {
	return s.String()
}

// SetFilters sets the Filters field's value.
func (s *ListIntegrationTasksInput) SetFilters(v *FiltersForListIntegrationTasksInput) *ListIntegrationTasksInput {
	s.Filters = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListIntegrationTasksInput) SetPageNumber(v int64) *ListIntegrationTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListIntegrationTasksInput) SetPageSize(v int64) *ListIntegrationTasksInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListIntegrationTasksInput) SetProjectName(v string) *ListIntegrationTasksInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListIntegrationTasksInput) SetTagFilters(v []*TagFilterForListIntegrationTasksInput) *ListIntegrationTasksInput {
	s.TagFilters = v
	return s
}

type ListIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListIntegrationTasksOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListIntegrationTasksOutput) SetItems(v []*ItemForListIntegrationTasksOutput) *ListIntegrationTasksOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListIntegrationTasksOutput) SetTotal(v int64) *ListIntegrationTasksOutput {
	s.Total = &v
	return s
}

type TagFilterForListIntegrationTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForListIntegrationTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListIntegrationTasksInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListIntegrationTasksInput) SetKey(v string) *TagFilterForListIntegrationTasksInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListIntegrationTasksInput) SetValues(v []*string) *TagFilterForListIntegrationTasksInput {
	s.Values = v
	return s
}

type TagForListIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListIntegrationTasksOutput) SetKey(v string) *TagForListIntegrationTasksOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListIntegrationTasksOutput) SetValue(v string) *TagForListIntegrationTasksOutput {
	s.Value = &v
	return s
}

type VkeClusterInfoForListIntegrationTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VkeClusterInfoForListIntegrationTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VkeClusterInfoForListIntegrationTasksOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *VkeClusterInfoForListIntegrationTasksOutput) SetName(v string) *VkeClusterInfoForListIntegrationTasksOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VkeClusterInfoForListIntegrationTasksOutput) SetStatus(v string) *VkeClusterInfoForListIntegrationTasksOutput {
	s.Status = &v
	return s
}
