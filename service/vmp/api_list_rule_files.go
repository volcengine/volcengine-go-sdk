// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRuleFilesCommon = "ListRuleFiles"

// ListRuleFilesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRuleFilesCommon operation. The "output" return
// value will be populated with the ListRuleFilesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRuleFilesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRuleFilesCommon Send returns without error.
//
// See ListRuleFilesCommon for more information on using the ListRuleFilesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRuleFilesCommonRequest method.
//    req, resp := client.ListRuleFilesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListRuleFilesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRuleFilesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRuleFilesCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListRuleFilesCommon for usage and error information.
func (c *VMP) ListRuleFilesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRuleFilesCommonRequest(input)
	return out, req.Send()
}

// ListRuleFilesCommonWithContext is the same as ListRuleFilesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRuleFilesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListRuleFilesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRuleFilesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRuleFiles = "ListRuleFiles"

// ListRuleFilesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRuleFiles operation. The "output" return
// value will be populated with the ListRuleFilesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRuleFilesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRuleFilesCommon Send returns without error.
//
// See ListRuleFiles for more information on using the ListRuleFiles
// API call, and error handling.
//
//    // Example sending a request using the ListRuleFilesRequest method.
//    req, resp := client.ListRuleFilesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListRuleFilesRequest(input *ListRuleFilesInput) (req *request.Request, output *ListRuleFilesOutput) {
	op := &request.Operation{
		Name:       opListRuleFiles,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRuleFilesInput{}
	}

	output = &ListRuleFilesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRuleFiles API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListRuleFiles for usage and error information.
func (c *VMP) ListRuleFiles(input *ListRuleFilesInput) (*ListRuleFilesOutput, error) {
	req, out := c.ListRuleFilesRequest(input)
	return out, req.Send()
}

// ListRuleFilesWithContext is the same as ListRuleFiles with the addition of
// the ability to pass a context and additional request options.
//
// See ListRuleFiles for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListRuleFilesWithContext(ctx volcengine.Context, input *ListRuleFilesInput, opts ...request.Option) (*ListRuleFilesOutput, error) {
	req, out := c.ListRuleFilesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListRuleFilesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListRuleFilesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRuleFilesInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *FilterForListRuleFilesInput) SetIds(v []*string) *FilterForListRuleFilesInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListRuleFilesInput) SetName(v string) *FilterForListRuleFilesInput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *FilterForListRuleFilesInput) SetStatus(v []*string) *FilterForListRuleFilesInput {
	s.Status = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *FilterForListRuleFilesInput) SetWorkspaceId(v string) *FilterForListRuleFilesInput {
	s.WorkspaceId = &v
	return s
}

type ItemForListRuleFilesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	LastUpdateTime *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RuleCount *int64 `type:"int64" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TargetWorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListRuleFilesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListRuleFilesOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListRuleFilesOutput) SetCreateTime(v string) *ItemForListRuleFilesOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListRuleFilesOutput) SetDescription(v string) *ItemForListRuleFilesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListRuleFilesOutput) SetId(v string) *ItemForListRuleFilesOutput {
	s.Id = &v
	return s
}

// SetLastUpdateTime sets the LastUpdateTime field's value.
func (s *ItemForListRuleFilesOutput) SetLastUpdateTime(v string) *ItemForListRuleFilesOutput {
	s.LastUpdateTime = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListRuleFilesOutput) SetName(v string) *ItemForListRuleFilesOutput {
	s.Name = &v
	return s
}

// SetRuleCount sets the RuleCount field's value.
func (s *ItemForListRuleFilesOutput) SetRuleCount(v int64) *ItemForListRuleFilesOutput {
	s.RuleCount = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListRuleFilesOutput) SetStatus(v string) *ItemForListRuleFilesOutput {
	s.Status = &v
	return s
}

// SetTargetWorkspaceId sets the TargetWorkspaceId field's value.
func (s *ItemForListRuleFilesOutput) SetTargetWorkspaceId(v string) *ItemForListRuleFilesOutput {
	s.TargetWorkspaceId = &v
	return s
}

type ListRuleFilesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListRuleFilesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRuleFilesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRuleFilesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListRuleFilesInput) SetFilter(v *FilterForListRuleFilesInput) *ListRuleFilesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRuleFilesInput) SetPageNumber(v int64) *ListRuleFilesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRuleFilesInput) SetPageSize(v int64) *ListRuleFilesInput {
	s.PageSize = &v
	return s
}

type ListRuleFilesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListRuleFilesOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRuleFilesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRuleFilesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListRuleFilesOutput) SetItems(v []*ItemForListRuleFilesOutput) *ListRuleFilesOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListRuleFilesOutput) SetTotal(v int64) *ListRuleFilesOutput {
	s.Total = &v
	return s
}
