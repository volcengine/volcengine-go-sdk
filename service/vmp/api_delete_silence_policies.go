// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteSilencePoliciesCommon = "DeleteSilencePolicies"

// DeleteSilencePoliciesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSilencePoliciesCommon operation. The "output" return
// value will be populated with the DeleteSilencePoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSilencePoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSilencePoliciesCommon Send returns without error.
//
// See DeleteSilencePoliciesCommon for more information on using the DeleteSilencePoliciesCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteSilencePoliciesCommonRequest method.
//    req, resp := client.DeleteSilencePoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteSilencePoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteSilencePoliciesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSilencePoliciesCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation DeleteSilencePoliciesCommon for usage and error information.
func (c *VMP) DeleteSilencePoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteSilencePoliciesCommonRequest(input)
	return out, req.Send()
}

// DeleteSilencePoliciesCommonWithContext is the same as DeleteSilencePoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSilencePoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteSilencePoliciesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteSilencePoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSilencePolicies = "DeleteSilencePolicies"

// DeleteSilencePoliciesRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSilencePolicies operation. The "output" return
// value will be populated with the DeleteSilencePoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSilencePoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSilencePoliciesCommon Send returns without error.
//
// See DeleteSilencePolicies for more information on using the DeleteSilencePolicies
// API call, and error handling.
//
//    // Example sending a request using the DeleteSilencePoliciesRequest method.
//    req, resp := client.DeleteSilencePoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) DeleteSilencePoliciesRequest(input *DeleteSilencePoliciesInput) (req *request.Request, output *DeleteSilencePoliciesOutput) {
	op := &request.Operation{
		Name:       opDeleteSilencePolicies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteSilencePoliciesInput{}
	}

	output = &DeleteSilencePoliciesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSilencePolicies API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation DeleteSilencePolicies for usage and error information.
func (c *VMP) DeleteSilencePolicies(input *DeleteSilencePoliciesInput) (*DeleteSilencePoliciesOutput, error) {
	req, out := c.DeleteSilencePoliciesRequest(input)
	return out, req.Send()
}

// DeleteSilencePoliciesWithContext is the same as DeleteSilencePolicies with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSilencePolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) DeleteSilencePoliciesWithContext(ctx volcengine.Context, input *DeleteSilencePoliciesInput, opts ...request.Option) (*DeleteSilencePoliciesOutput, error) {
	req, out := c.DeleteSilencePoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForDeleteSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DataForDeleteSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForDeleteSilencePoliciesOutput) GoString() string {
	return s.String()
}

type DeleteSilencePoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteSilencePoliciesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSilencePoliciesInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DeleteSilencePoliciesInput) SetIds(v []*string) *DeleteSilencePoliciesInput {
	s.Ids = v
	return s
}

type DeleteSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SuccessfulItems []*string `type:"list" json:",omitempty"`

	UnsuccessfulItems []*UnsuccessfulItemForDeleteSilencePoliciesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetSuccessfulItems sets the SuccessfulItems field's value.
func (s *DeleteSilencePoliciesOutput) SetSuccessfulItems(v []*string) *DeleteSilencePoliciesOutput {
	s.SuccessfulItems = v
	return s
}

// SetUnsuccessfulItems sets the UnsuccessfulItems field's value.
func (s *DeleteSilencePoliciesOutput) SetUnsuccessfulItems(v []*UnsuccessfulItemForDeleteSilencePoliciesOutput) *DeleteSilencePoliciesOutput {
	s.UnsuccessfulItems = v
	return s
}

type ErrorForDeleteSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Data *DataForDeleteSilencePoliciesOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDeleteSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDeleteSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDeleteSilencePoliciesOutput) SetCode(v string) *ErrorForDeleteSilencePoliciesOutput {
	s.Code = &v
	return s
}

// SetData sets the Data field's value.
func (s *ErrorForDeleteSilencePoliciesOutput) SetData(v *DataForDeleteSilencePoliciesOutput) *ErrorForDeleteSilencePoliciesOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForDeleteSilencePoliciesOutput) SetMessage(v string) *ErrorForDeleteSilencePoliciesOutput {
	s.Message = &v
	return s
}

type UnsuccessfulItemForDeleteSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Error *ErrorForDeleteSilencePoliciesOutput `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnsuccessfulItemForDeleteSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnsuccessfulItemForDeleteSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *UnsuccessfulItemForDeleteSilencePoliciesOutput) SetError(v *ErrorForDeleteSilencePoliciesOutput) *UnsuccessfulItemForDeleteSilencePoliciesOutput {
	s.Error = v
	return s
}

// SetId sets the Id field's value.
func (s *UnsuccessfulItemForDeleteSilencePoliciesOutput) SetId(v string) *UnsuccessfulItemForDeleteSilencePoliciesOutput {
	s.Id = &v
	return s
}
