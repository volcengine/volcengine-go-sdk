// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSilencePoliciesCommon = "ListSilencePolicies"

// ListSilencePoliciesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSilencePoliciesCommon operation. The "output" return
// value will be populated with the ListSilencePoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSilencePoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSilencePoliciesCommon Send returns without error.
//
// See ListSilencePoliciesCommon for more information on using the ListSilencePoliciesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSilencePoliciesCommonRequest method.
//    req, resp := client.ListSilencePoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListSilencePoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSilencePoliciesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSilencePoliciesCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListSilencePoliciesCommon for usage and error information.
func (c *VMP) ListSilencePoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSilencePoliciesCommonRequest(input)
	return out, req.Send()
}

// ListSilencePoliciesCommonWithContext is the same as ListSilencePoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSilencePoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListSilencePoliciesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSilencePoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSilencePolicies = "ListSilencePolicies"

// ListSilencePoliciesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSilencePolicies operation. The "output" return
// value will be populated with the ListSilencePoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSilencePoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSilencePoliciesCommon Send returns without error.
//
// See ListSilencePolicies for more information on using the ListSilencePolicies
// API call, and error handling.
//
//    // Example sending a request using the ListSilencePoliciesRequest method.
//    req, resp := client.ListSilencePoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) ListSilencePoliciesRequest(input *ListSilencePoliciesInput) (req *request.Request, output *ListSilencePoliciesOutput) {
	op := &request.Operation{
		Name:       opListSilencePolicies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSilencePoliciesInput{}
	}

	output = &ListSilencePoliciesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSilencePolicies API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation ListSilencePolicies for usage and error information.
func (c *VMP) ListSilencePolicies(input *ListSilencePoliciesInput) (*ListSilencePoliciesOutput, error) {
	req, out := c.ListSilencePoliciesRequest(input)
	return out, req.Send()
}

// ListSilencePoliciesWithContext is the same as ListSilencePolicies with the addition of
// the ability to pass a context and additional request options.
//
// See ListSilencePolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) ListSilencePoliciesWithContext(ctx volcengine.Context, input *ListSilencePoliciesInput, opts ...request.Option) (*ListSilencePoliciesOutput, error) {
	req, out := c.ListSilencePoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListSilencePoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Sources []*string `type:"list" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListSilencePoliciesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListSilencePoliciesInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *FilterForListSilencePoliciesInput) SetIds(v []*string) *FilterForListSilencePoliciesInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListSilencePoliciesInput) SetName(v string) *FilterForListSilencePoliciesInput {
	s.Name = &v
	return s
}

// SetSources sets the Sources field's value.
func (s *FilterForListSilencePoliciesInput) SetSources(v []*string) *FilterForListSilencePoliciesInput {
	s.Sources = v
	return s
}

// SetStatus sets the Status field's value.
func (s *FilterForListSilencePoliciesInput) SetStatus(v string) *FilterForListSilencePoliciesInput {
	s.Status = &v
	return s
}

type ItemForListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoDeleteTime *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	MetricLabelMatchers []*MetricLabelMatcherForListSilencePoliciesOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Source *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TimeRangeMatchers []*TimeRangeMatcherForListSilencePoliciesOutput `type:"list" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetAutoDeleteTime sets the AutoDeleteTime field's value.
func (s *ItemForListSilencePoliciesOutput) SetAutoDeleteTime(v string) *ItemForListSilencePoliciesOutput {
	s.AutoDeleteTime = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListSilencePoliciesOutput) SetCreateTime(v string) *ItemForListSilencePoliciesOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListSilencePoliciesOutput) SetDescription(v string) *ItemForListSilencePoliciesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListSilencePoliciesOutput) SetId(v string) *ItemForListSilencePoliciesOutput {
	s.Id = &v
	return s
}

// SetMetricLabelMatchers sets the MetricLabelMatchers field's value.
func (s *ItemForListSilencePoliciesOutput) SetMetricLabelMatchers(v []*MetricLabelMatcherForListSilencePoliciesOutput) *ItemForListSilencePoliciesOutput {
	s.MetricLabelMatchers = v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListSilencePoliciesOutput) SetName(v string) *ItemForListSilencePoliciesOutput {
	s.Name = &v
	return s
}

// SetSource sets the Source field's value.
func (s *ItemForListSilencePoliciesOutput) SetSource(v string) *ItemForListSilencePoliciesOutput {
	s.Source = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListSilencePoliciesOutput) SetStatus(v string) *ItemForListSilencePoliciesOutput {
	s.Status = &v
	return s
}

// SetTimeRangeMatchers sets the TimeRangeMatchers field's value.
func (s *ItemForListSilencePoliciesOutput) SetTimeRangeMatchers(v []*TimeRangeMatcherForListSilencePoliciesOutput) *ItemForListSilencePoliciesOutput {
	s.TimeRangeMatchers = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListSilencePoliciesOutput) SetUpdateTime(v string) *ItemForListSilencePoliciesOutput {
	s.UpdateTime = &v
	return s
}

type ListSilencePoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListSilencePoliciesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListSilencePoliciesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSilencePoliciesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListSilencePoliciesInput) SetFilter(v *FilterForListSilencePoliciesInput) *ListSilencePoliciesInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSilencePoliciesInput) SetPageNumber(v int64) *ListSilencePoliciesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSilencePoliciesInput) SetPageSize(v int64) *ListSilencePoliciesInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListSilencePoliciesInput) SetSortBy(v string) *ListSilencePoliciesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListSilencePoliciesInput) SetSortOrder(v string) *ListSilencePoliciesInput {
	s.SortOrder = &v
	return s
}

type ListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListSilencePoliciesOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListSilencePoliciesOutput) SetItems(v []*ItemForListSilencePoliciesOutput) *ListSilencePoliciesOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListSilencePoliciesOutput) SetTotal(v int64) *ListSilencePoliciesOutput {
	s.Total = &v
	return s
}

type MatcherForListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MatcherForListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MatcherForListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetLabel sets the Label field's value.
func (s *MatcherForListSilencePoliciesOutput) SetLabel(v string) *MatcherForListSilencePoliciesOutput {
	s.Label = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *MatcherForListSilencePoliciesOutput) SetOperator(v string) *MatcherForListSilencePoliciesOutput {
	s.Operator = &v
	return s
}

// SetValue sets the Value field's value.
func (s *MatcherForListSilencePoliciesOutput) SetValue(v string) *MatcherForListSilencePoliciesOutput {
	s.Value = &v
	return s
}

type MetricLabelMatcherForListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Matchers []*MatcherForListSilencePoliciesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s MetricLabelMatcherForListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetricLabelMatcherForListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetMatchers sets the Matchers field's value.
func (s *MetricLabelMatcherForListSilencePoliciesOutput) SetMatchers(v []*MatcherForListSilencePoliciesOutput) *MetricLabelMatcherForListSilencePoliciesOutput {
	s.Matchers = v
	return s
}

type PeriodicDateForListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DayOfMonth *string `type:"string" json:",omitempty"`

	Time *string `type:"string" json:",omitempty"`

	Weekday *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PeriodicDateForListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PeriodicDateForListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetDayOfMonth sets the DayOfMonth field's value.
func (s *PeriodicDateForListSilencePoliciesOutput) SetDayOfMonth(v string) *PeriodicDateForListSilencePoliciesOutput {
	s.DayOfMonth = &v
	return s
}

// SetTime sets the Time field's value.
func (s *PeriodicDateForListSilencePoliciesOutput) SetTime(v string) *PeriodicDateForListSilencePoliciesOutput {
	s.Time = &v
	return s
}

// SetWeekday sets the Weekday field's value.
func (s *PeriodicDateForListSilencePoliciesOutput) SetWeekday(v string) *PeriodicDateForListSilencePoliciesOutput {
	s.Weekday = &v
	return s
}

type TimeRangeMatcherForListSilencePoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Date *string `type:"string" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	PeriodicDate *PeriodicDateForListSilencePoliciesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s TimeRangeMatcherForListSilencePoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TimeRangeMatcherForListSilencePoliciesOutput) GoString() string {
	return s.String()
}

// SetDate sets the Date field's value.
func (s *TimeRangeMatcherForListSilencePoliciesOutput) SetDate(v string) *TimeRangeMatcherForListSilencePoliciesOutput {
	s.Date = &v
	return s
}

// SetLocation sets the Location field's value.
func (s *TimeRangeMatcherForListSilencePoliciesOutput) SetLocation(v string) *TimeRangeMatcherForListSilencePoliciesOutput {
	s.Location = &v
	return s
}

// SetPeriodicDate sets the PeriodicDate field's value.
func (s *TimeRangeMatcherForListSilencePoliciesOutput) SetPeriodicDate(v *PeriodicDateForListSilencePoliciesOutput) *TimeRangeMatcherForListSilencePoliciesOutput {
	s.PeriodicDate = v
	return s
}
