// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vmp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetIntegrationTaskCommon = "GetIntegrationTask"

// GetIntegrationTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetIntegrationTaskCommon operation. The "output" return
// value will be populated with the GetIntegrationTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetIntegrationTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetIntegrationTaskCommon Send returns without error.
//
// See GetIntegrationTaskCommon for more information on using the GetIntegrationTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the GetIntegrationTaskCommonRequest method.
//    req, resp := client.GetIntegrationTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetIntegrationTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetIntegrationTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetIntegrationTaskCommon API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation GetIntegrationTaskCommon for usage and error information.
func (c *VMP) GetIntegrationTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetIntegrationTaskCommonRequest(input)
	return out, req.Send()
}

// GetIntegrationTaskCommonWithContext is the same as GetIntegrationTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetIntegrationTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetIntegrationTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetIntegrationTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetIntegrationTask = "GetIntegrationTask"

// GetIntegrationTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the GetIntegrationTask operation. The "output" return
// value will be populated with the GetIntegrationTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetIntegrationTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetIntegrationTaskCommon Send returns without error.
//
// See GetIntegrationTask for more information on using the GetIntegrationTask
// API call, and error handling.
//
//    // Example sending a request using the GetIntegrationTaskRequest method.
//    req, resp := client.GetIntegrationTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMP) GetIntegrationTaskRequest(input *GetIntegrationTaskInput) (req *request.Request, output *GetIntegrationTaskOutput) {
	op := &request.Operation{
		Name:       opGetIntegrationTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetIntegrationTaskInput{}
	}

	output = &GetIntegrationTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetIntegrationTask API operation for VMP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMP's
// API operation GetIntegrationTask for usage and error information.
func (c *VMP) GetIntegrationTask(input *GetIntegrationTaskInput) (*GetIntegrationTaskOutput, error) {
	req, out := c.GetIntegrationTaskRequest(input)
	return out, req.Send()
}

// GetIntegrationTaskWithContext is the same as GetIntegrationTask with the addition of
// the ability to pass a context and additional request options.
//
// See GetIntegrationTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMP) GetIntegrationTaskWithContext(ctx volcengine.Context, input *GetIntegrationTaskInput, opts ...request.Option) (*GetIntegrationTaskOutput, error) {
	req, out := c.GetIntegrationTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetIntegrationTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetIntegrationTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetIntegrationTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetIntegrationTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetIntegrationTaskInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetIntegrationTaskInput) SetId(v string) *GetIntegrationTaskInput {
	s.Id = &v
	return s
}

type GetIntegrationTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Environment *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Params *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubType *string `type:"string" json:",omitempty"`

	Tags []*TagForGetIntegrationTaskOutput `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VkeClusterId *string `type:"string" json:",omitempty"`

	VkeClusterInfo *VkeClusterInfoForGetIntegrationTaskOutput `type:"structure" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetIntegrationTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetIntegrationTaskOutput) GoString() string {
	return s.String()
}

// SetEnvironment sets the Environment field's value.
func (s *GetIntegrationTaskOutput) SetEnvironment(v string) *GetIntegrationTaskOutput {
	s.Environment = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetIntegrationTaskOutput) SetId(v string) *GetIntegrationTaskOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetIntegrationTaskOutput) SetName(v string) *GetIntegrationTaskOutput {
	s.Name = &v
	return s
}

// SetParams sets the Params field's value.
func (s *GetIntegrationTaskOutput) SetParams(v string) *GetIntegrationTaskOutput {
	s.Params = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *GetIntegrationTaskOutput) SetProjectName(v string) *GetIntegrationTaskOutput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetIntegrationTaskOutput) SetStatus(v string) *GetIntegrationTaskOutput {
	s.Status = &v
	return s
}

// SetSubType sets the SubType field's value.
func (s *GetIntegrationTaskOutput) SetSubType(v string) *GetIntegrationTaskOutput {
	s.SubType = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *GetIntegrationTaskOutput) SetTags(v []*TagForGetIntegrationTaskOutput) *GetIntegrationTaskOutput {
	s.Tags = v
	return s
}

// SetType sets the Type field's value.
func (s *GetIntegrationTaskOutput) SetType(v string) *GetIntegrationTaskOutput {
	s.Type = &v
	return s
}

// SetVkeClusterId sets the VkeClusterId field's value.
func (s *GetIntegrationTaskOutput) SetVkeClusterId(v string) *GetIntegrationTaskOutput {
	s.VkeClusterId = &v
	return s
}

// SetVkeClusterInfo sets the VkeClusterInfo field's value.
func (s *GetIntegrationTaskOutput) SetVkeClusterInfo(v *VkeClusterInfoForGetIntegrationTaskOutput) *GetIntegrationTaskOutput {
	s.VkeClusterInfo = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *GetIntegrationTaskOutput) SetWorkspaceId(v string) *GetIntegrationTaskOutput {
	s.WorkspaceId = &v
	return s
}

type TagForGetIntegrationTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForGetIntegrationTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForGetIntegrationTaskOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForGetIntegrationTaskOutput) SetKey(v string) *TagForGetIntegrationTaskOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForGetIntegrationTaskOutput) SetValue(v string) *TagForGetIntegrationTaskOutput {
	s.Value = &v
	return s
}

type VkeClusterInfoForGetIntegrationTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VkeClusterInfoForGetIntegrationTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VkeClusterInfoForGetIntegrationTaskOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *VkeClusterInfoForGetIntegrationTaskOutput) SetName(v string) *VkeClusterInfoForGetIntegrationTaskOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *VkeClusterInfoForGetIntegrationTaskOutput) SetStatus(v string) *VkeClusterInfoForGetIntegrationTaskOutput {
	s.Status = &v
	return s
}
