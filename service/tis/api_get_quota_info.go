// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package tis

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetQuotaInfoCommon = "GetQuotaInfo"

// GetQuotaInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetQuotaInfoCommon operation. The "output" return
// value will be populated with the GetQuotaInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetQuotaInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetQuotaInfoCommon Send returns without error.
//
// See GetQuotaInfoCommon for more information on using the GetQuotaInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the GetQuotaInfoCommonRequest method.
//    req, resp := client.GetQuotaInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TIS) GetQuotaInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetQuotaInfoCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetQuotaInfoCommon API operation for TIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TIS's
// API operation GetQuotaInfoCommon for usage and error information.
func (c *TIS) GetQuotaInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetQuotaInfoCommonRequest(input)
	return out, req.Send()
}

// GetQuotaInfoCommonWithContext is the same as GetQuotaInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetQuotaInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TIS) GetQuotaInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetQuotaInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetQuotaInfo = "GetQuotaInfo"

// GetQuotaInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the GetQuotaInfo operation. The "output" return
// value will be populated with the GetQuotaInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetQuotaInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetQuotaInfoCommon Send returns without error.
//
// See GetQuotaInfo for more information on using the GetQuotaInfo
// API call, and error handling.
//
//    // Example sending a request using the GetQuotaInfoRequest method.
//    req, resp := client.GetQuotaInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TIS) GetQuotaInfoRequest(input *GetQuotaInfoInput) (req *request.Request, output *GetQuotaInfoOutput) {
	op := &request.Operation{
		Name:       opGetQuotaInfo,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetQuotaInfoInput{}
	}

	output = &GetQuotaInfoOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetQuotaInfo API operation for TIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TIS's
// API operation GetQuotaInfo for usage and error information.
func (c *TIS) GetQuotaInfo(input *GetQuotaInfoInput) (*GetQuotaInfoOutput, error) {
	req, out := c.GetQuotaInfoRequest(input)
	return out, req.Send()
}

// GetQuotaInfoWithContext is the same as GetQuotaInfo with the addition of
// the ability to pass a context and additional request options.
//
// See GetQuotaInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TIS) GetQuotaInfoWithContext(ctx volcengine.Context, input *GetQuotaInfoInput, opts ...request.Option) (*GetQuotaInfoOutput, error) {
	req, out := c.GetQuotaInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeviceInfoListForGetQuotaInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FieldName *string `type:"string" json:"fieldName,omitempty"`

	FieldValue *string `type:"string" json:"fieldValue,omitempty"`
}

// String returns the string representation
func (s DeviceInfoListForGetQuotaInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeviceInfoListForGetQuotaInfoOutput) GoString() string {
	return s.String()
}

// SetFieldName sets the FieldName field's value.
func (s *DeviceInfoListForGetQuotaInfoOutput) SetFieldName(v string) *DeviceInfoListForGetQuotaInfoOutput {
	s.FieldName = &v
	return s
}

// SetFieldValue sets the FieldValue field's value.
func (s *DeviceInfoListForGetQuotaInfoOutput) SetFieldValue(v string) *DeviceInfoListForGetQuotaInfoOutput {
	s.FieldValue = &v
	return s
}

type GetQuotaInfoInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// DeviceName is a required field
	DeviceName *string `type:"string" json:"deviceName,omitempty" required:"true"`

	// ProductKey is a required field
	ProductKey *string `type:"string" json:"productKey,omitempty" required:"true"`
}

// String returns the string representation
func (s GetQuotaInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetQuotaInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetQuotaInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetQuotaInfoInput"}
	if s.DeviceName == nil {
		invalidParams.Add(request.NewErrParamRequired("DeviceName"))
	}
	if s.ProductKey == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductKey"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeviceName sets the DeviceName field's value.
func (s *GetQuotaInfoInput) SetDeviceName(v string) *GetQuotaInfoInput {
	s.DeviceName = &v
	return s
}

// SetProductKey sets the ProductKey field's value.
func (s *GetQuotaInfoInput) SetProductKey(v string) *GetQuotaInfoInput {
	s.ProductKey = &v
	return s
}

type GetQuotaInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DeviceInfoList []*DeviceInfoListForGetQuotaInfoOutput `type:"list" json:"deviceInfoList,omitempty"`

	QuotaInfoList []*QuotaInfoListForGetQuotaInfoOutput `type:"list" json:"quotaInfoList,omitempty"`
}

// String returns the string representation
func (s GetQuotaInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetQuotaInfoOutput) GoString() string {
	return s.String()
}

// SetDeviceInfoList sets the DeviceInfoList field's value.
func (s *GetQuotaInfoOutput) SetDeviceInfoList(v []*DeviceInfoListForGetQuotaInfoOutput) *GetQuotaInfoOutput {
	s.DeviceInfoList = v
	return s
}

// SetQuotaInfoList sets the QuotaInfoList field's value.
func (s *GetQuotaInfoOutput) SetQuotaInfoList(v []*QuotaInfoListForGetQuotaInfoOutput) *GetQuotaInfoOutput {
	s.QuotaInfoList = v
	return s
}

type QuotaInfoListForGetQuotaInfoOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailableAmount *int32 `type:"int32" json:"availableAmount,omitempty"`

	ConfigurationCode *string `type:"string" json:"configurationCode,omitempty"`

	PackageName *string `type:"string" json:"packageName,omitempty"`

	TotalAmount *int32 `type:"int32" json:"totalAmount,omitempty"`
}

// String returns the string representation
func (s QuotaInfoListForGetQuotaInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuotaInfoListForGetQuotaInfoOutput) GoString() string {
	return s.String()
}

// SetAvailableAmount sets the AvailableAmount field's value.
func (s *QuotaInfoListForGetQuotaInfoOutput) SetAvailableAmount(v int32) *QuotaInfoListForGetQuotaInfoOutput {
	s.AvailableAmount = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *QuotaInfoListForGetQuotaInfoOutput) SetConfigurationCode(v string) *QuotaInfoListForGetQuotaInfoOutput {
	s.ConfigurationCode = &v
	return s
}

// SetPackageName sets the PackageName field's value.
func (s *QuotaInfoListForGetQuotaInfoOutput) SetPackageName(v string) *QuotaInfoListForGetQuotaInfoOutput {
	s.PackageName = &v
	return s
}

// SetTotalAmount sets the TotalAmount field's value.
func (s *QuotaInfoListForGetQuotaInfoOutput) SetTotalAmount(v int32) *QuotaInfoListForGetQuotaInfoOutput {
	s.TotalAmount = &v
	return s
}
