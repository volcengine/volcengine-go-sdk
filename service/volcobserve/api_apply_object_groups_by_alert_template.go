// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package volcobserve

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opApplyObjectGroupsByAlertTemplateCommon = "ApplyObjectGroupsByAlertTemplate"

// ApplyObjectGroupsByAlertTemplateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ApplyObjectGroupsByAlertTemplateCommon operation. The "output" return
// value will be populated with the ApplyObjectGroupsByAlertTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ApplyObjectGroupsByAlertTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after ApplyObjectGroupsByAlertTemplateCommon Send returns without error.
//
// See ApplyObjectGroupsByAlertTemplateCommon for more information on using the ApplyObjectGroupsByAlertTemplateCommon
// API call, and error handling.
//
//    // Example sending a request using the ApplyObjectGroupsByAlertTemplateCommonRequest method.
//    req, resp := client.ApplyObjectGroupsByAlertTemplateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opApplyObjectGroupsByAlertTemplateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ApplyObjectGroupsByAlertTemplateCommon API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation ApplyObjectGroupsByAlertTemplateCommon for usage and error information.
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ApplyObjectGroupsByAlertTemplateCommonRequest(input)
	return out, req.Send()
}

// ApplyObjectGroupsByAlertTemplateCommonWithContext is the same as ApplyObjectGroupsByAlertTemplateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ApplyObjectGroupsByAlertTemplateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ApplyObjectGroupsByAlertTemplateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opApplyObjectGroupsByAlertTemplate = "ApplyObjectGroupsByAlertTemplate"

// ApplyObjectGroupsByAlertTemplateRequest generates a "volcengine/request.Request" representing the
// client's request for the ApplyObjectGroupsByAlertTemplate operation. The "output" return
// value will be populated with the ApplyObjectGroupsByAlertTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ApplyObjectGroupsByAlertTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after ApplyObjectGroupsByAlertTemplateCommon Send returns without error.
//
// See ApplyObjectGroupsByAlertTemplate for more information on using the ApplyObjectGroupsByAlertTemplate
// API call, and error handling.
//
//    // Example sending a request using the ApplyObjectGroupsByAlertTemplateRequest method.
//    req, resp := client.ApplyObjectGroupsByAlertTemplateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplateRequest(input *ApplyObjectGroupsByAlertTemplateInput) (req *request.Request, output *ApplyObjectGroupsByAlertTemplateOutput) {
	op := &request.Operation{
		Name:       opApplyObjectGroupsByAlertTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ApplyObjectGroupsByAlertTemplateInput{}
	}

	output = &ApplyObjectGroupsByAlertTemplateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ApplyObjectGroupsByAlertTemplate API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation ApplyObjectGroupsByAlertTemplate for usage and error information.
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplate(input *ApplyObjectGroupsByAlertTemplateInput) (*ApplyObjectGroupsByAlertTemplateOutput, error) {
	req, out := c.ApplyObjectGroupsByAlertTemplateRequest(input)
	return out, req.Send()
}

// ApplyObjectGroupsByAlertTemplateWithContext is the same as ApplyObjectGroupsByAlertTemplate with the addition of
// the ability to pass a context and additional request options.
//
// See ApplyObjectGroupsByAlertTemplate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ApplyObjectGroupsByAlertTemplateWithContext(ctx volcengine.Context, input *ApplyObjectGroupsByAlertTemplateInput, opts ...request.Option) (*ApplyObjectGroupsByAlertTemplateOutput, error) {
	req, out := c.ApplyObjectGroupsByAlertTemplateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApplyObjectForApplyObjectGroupsByAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlertMethods []*string `type:"list" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	EffectEndAt *string `type:"string" json:",omitempty"`

	EffectStartAt *string `type:"string" json:",omitempty"`

	NotificationId *string `type:"string" json:",omitempty"`

	ObjectGroupId *string `type:"string" json:",omitempty"`

	Webhook *string `type:"string" json:",omitempty"`

	WebhookIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ApplyObjectForApplyObjectGroupsByAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyObjectForApplyObjectGroupsByAlertTemplateInput) GoString() string {
	return s.String()
}

// SetAlertMethods sets the AlertMethods field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetAlertMethods(v []*string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.AlertMethods = v
	return s
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetContactGroupIds(v []*string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.ContactGroupIds = v
	return s
}

// SetEffectEndAt sets the EffectEndAt field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetEffectEndAt(v string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.EffectEndAt = &v
	return s
}

// SetEffectStartAt sets the EffectStartAt field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetEffectStartAt(v string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.EffectStartAt = &v
	return s
}

// SetNotificationId sets the NotificationId field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetNotificationId(v string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.NotificationId = &v
	return s
}

// SetObjectGroupId sets the ObjectGroupId field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetObjectGroupId(v string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.ObjectGroupId = &v
	return s
}

// SetWebhook sets the Webhook field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetWebhook(v string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.Webhook = &v
	return s
}

// SetWebhookIds sets the WebhookIds field's value.
func (s *ApplyObjectForApplyObjectGroupsByAlertTemplateInput) SetWebhookIds(v []*string) *ApplyObjectForApplyObjectGroupsByAlertTemplateInput {
	s.WebhookIds = v
	return s
}

type ApplyObjectGroupsByAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AlertTemplateId is a required field
	AlertTemplateId *string `type:"string" json:",omitempty" required:"true"`

	ApplyObjects []*ApplyObjectForApplyObjectGroupsByAlertTemplateInput `type:"list" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ApplyObjectGroupsByAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyObjectGroupsByAlertTemplateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ApplyObjectGroupsByAlertTemplateInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ApplyObjectGroupsByAlertTemplateInput"}
	if s.AlertTemplateId == nil {
		invalidParams.Add(request.NewErrParamRequired("AlertTemplateId"))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlertTemplateId sets the AlertTemplateId field's value.
func (s *ApplyObjectGroupsByAlertTemplateInput) SetAlertTemplateId(v string) *ApplyObjectGroupsByAlertTemplateInput {
	s.AlertTemplateId = &v
	return s
}

// SetApplyObjects sets the ApplyObjects field's value.
func (s *ApplyObjectGroupsByAlertTemplateInput) SetApplyObjects(v []*ApplyObjectForApplyObjectGroupsByAlertTemplateInput) *ApplyObjectGroupsByAlertTemplateInput {
	s.ApplyObjects = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ApplyObjectGroupsByAlertTemplateInput) SetProjectName(v string) *ApplyObjectGroupsByAlertTemplateInput {
	s.ProjectName = &v
	return s
}

type ApplyObjectGroupsByAlertTemplateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ApplyObjectGroupsByAlertTemplateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApplyObjectGroupsByAlertTemplateOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ApplyObjectGroupsByAlertTemplateOutput) SetData(v []*string) *ApplyObjectGroupsByAlertTemplateOutput {
	s.Data = v
	return s
}
