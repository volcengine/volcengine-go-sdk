// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package volcobserve

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteAlertTemplatesByIdsCommon = "DeleteAlertTemplatesByIds"

// DeleteAlertTemplatesByIdsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAlertTemplatesByIdsCommon operation. The "output" return
// value will be populated with the DeleteAlertTemplatesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAlertTemplatesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAlertTemplatesByIdsCommon Send returns without error.
//
// See DeleteAlertTemplatesByIdsCommon for more information on using the DeleteAlertTemplatesByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteAlertTemplatesByIdsCommonRequest method.
//    req, resp := client.DeleteAlertTemplatesByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteAlertTemplatesByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAlertTemplatesByIdsCommon API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation DeleteAlertTemplatesByIdsCommon for usage and error information.
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteAlertTemplatesByIdsCommonRequest(input)
	return out, req.Send()
}

// DeleteAlertTemplatesByIdsCommonWithContext is the same as DeleteAlertTemplatesByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAlertTemplatesByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIdsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteAlertTemplatesByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteAlertTemplatesByIds = "DeleteAlertTemplatesByIds"

// DeleteAlertTemplatesByIdsRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAlertTemplatesByIds operation. The "output" return
// value will be populated with the DeleteAlertTemplatesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAlertTemplatesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAlertTemplatesByIdsCommon Send returns without error.
//
// See DeleteAlertTemplatesByIds for more information on using the DeleteAlertTemplatesByIds
// API call, and error handling.
//
//    // Example sending a request using the DeleteAlertTemplatesByIdsRequest method.
//    req, resp := client.DeleteAlertTemplatesByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIdsRequest(input *DeleteAlertTemplatesByIdsInput) (req *request.Request, output *DeleteAlertTemplatesByIdsOutput) {
	op := &request.Operation{
		Name:       opDeleteAlertTemplatesByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAlertTemplatesByIdsInput{}
	}

	output = &DeleteAlertTemplatesByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAlertTemplatesByIds API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation DeleteAlertTemplatesByIds for usage and error information.
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIds(input *DeleteAlertTemplatesByIdsInput) (*DeleteAlertTemplatesByIdsOutput, error) {
	req, out := c.DeleteAlertTemplatesByIdsRequest(input)
	return out, req.Send()
}

// DeleteAlertTemplatesByIdsWithContext is the same as DeleteAlertTemplatesByIds with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAlertTemplatesByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) DeleteAlertTemplatesByIdsWithContext(ctx volcengine.Context, input *DeleteAlertTemplatesByIdsInput, opts ...request.Option) (*DeleteAlertTemplatesByIdsOutput, error) {
	req, out := c.DeleteAlertTemplatesByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteAlertTemplatesByIdsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteAlertTemplatesByIdsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAlertTemplatesByIdsInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DeleteAlertTemplatesByIdsInput) SetIds(v []*string) *DeleteAlertTemplatesByIdsInput {
	s.Ids = v
	return s
}

type DeleteAlertTemplatesByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteAlertTemplatesByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAlertTemplatesByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *DeleteAlertTemplatesByIdsOutput) SetData(v []*string) *DeleteAlertTemplatesByIdsOutput {
	s.Data = v
	return s
}
