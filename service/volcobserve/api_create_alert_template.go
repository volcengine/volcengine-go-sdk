// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package volcobserve

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateAlertTemplateCommon = "CreateAlertTemplate"

// CreateAlertTemplateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlertTemplateCommon operation. The "output" return
// value will be populated with the CreateAlertTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlertTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlertTemplateCommon Send returns without error.
//
// See CreateAlertTemplateCommon for more information on using the CreateAlertTemplateCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateAlertTemplateCommonRequest method.
//    req, resp := client.CreateAlertTemplateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) CreateAlertTemplateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateAlertTemplateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlertTemplateCommon API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation CreateAlertTemplateCommon for usage and error information.
func (c *VOLCOBSERVE) CreateAlertTemplateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateAlertTemplateCommonRequest(input)
	return out, req.Send()
}

// CreateAlertTemplateCommonWithContext is the same as CreateAlertTemplateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlertTemplateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) CreateAlertTemplateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateAlertTemplateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateAlertTemplate = "CreateAlertTemplate"

// CreateAlertTemplateRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAlertTemplate operation. The "output" return
// value will be populated with the CreateAlertTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAlertTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAlertTemplateCommon Send returns without error.
//
// See CreateAlertTemplate for more information on using the CreateAlertTemplate
// API call, and error handling.
//
//    // Example sending a request using the CreateAlertTemplateRequest method.
//    req, resp := client.CreateAlertTemplateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) CreateAlertTemplateRequest(input *CreateAlertTemplateInput) (req *request.Request, output *CreateAlertTemplateOutput) {
	op := &request.Operation{
		Name:       opCreateAlertTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAlertTemplateInput{}
	}

	output = &CreateAlertTemplateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAlertTemplate API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation CreateAlertTemplate for usage and error information.
func (c *VOLCOBSERVE) CreateAlertTemplate(input *CreateAlertTemplateInput) (*CreateAlertTemplateOutput, error) {
	req, out := c.CreateAlertTemplateRequest(input)
	return out, req.Send()
}

// CreateAlertTemplateWithContext is the same as CreateAlertTemplate with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAlertTemplate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) CreateAlertTemplateWithContext(ctx volcengine.Context, input *CreateAlertTemplateInput, opts ...request.Option) (*CreateAlertTemplateOutput, error) {
	req, out := c.CreateAlertTemplateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionForCreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ComparisonOperator *string `type:"string" json:",omitempty"`

	MetricName *string `type:"string" json:",omitempty"`

	MetricUnit *string `type:"string" json:",omitempty"`

	Statistics *string `type:"string" json:",omitempty"`

	Threshold *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionForCreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForCreateAlertTemplateInput) GoString() string {
	return s.String()
}

// SetComparisonOperator sets the ComparisonOperator field's value.
func (s *ConditionForCreateAlertTemplateInput) SetComparisonOperator(v string) *ConditionForCreateAlertTemplateInput {
	s.ComparisonOperator = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *ConditionForCreateAlertTemplateInput) SetMetricName(v string) *ConditionForCreateAlertTemplateInput {
	s.MetricName = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *ConditionForCreateAlertTemplateInput) SetMetricUnit(v string) *ConditionForCreateAlertTemplateInput {
	s.MetricUnit = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *ConditionForCreateAlertTemplateInput) SetStatistics(v string) *ConditionForCreateAlertTemplateInput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *ConditionForCreateAlertTemplateInput) SetThreshold(v string) *ConditionForCreateAlertTemplateInput {
	s.Threshold = &v
	return s
}

type CreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	NoData *NoDataForCreateAlertTemplateInput `type:"structure" json:",omitempty"`

	// NotifyMode is a required field
	NotifyMode *string `type:"string" json:",omitempty" required:"true"`

	RecoveryNotify *RecoveryNotifyForCreateAlertTemplateInput `type:"structure" json:",omitempty"`

	// SilenceTime is a required field
	SilenceTime *int64 `type:"integer" json:",omitempty" required:"true"`

	TemplateRules []*TemplateRuleForCreateAlertTemplateInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlertTemplateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAlertTemplateInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateAlertTemplateInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.NotifyMode == nil {
		invalidParams.Add(request.NewErrParamRequired("NotifyMode"))
	}
	if s.SilenceTime == nil {
		invalidParams.Add(request.NewErrParamRequired("SilenceTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *CreateAlertTemplateInput) SetDescription(v string) *CreateAlertTemplateInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateAlertTemplateInput) SetName(v string) *CreateAlertTemplateInput {
	s.Name = &v
	return s
}

// SetNoData sets the NoData field's value.
func (s *CreateAlertTemplateInput) SetNoData(v *NoDataForCreateAlertTemplateInput) *CreateAlertTemplateInput {
	s.NoData = v
	return s
}

// SetNotifyMode sets the NotifyMode field's value.
func (s *CreateAlertTemplateInput) SetNotifyMode(v string) *CreateAlertTemplateInput {
	s.NotifyMode = &v
	return s
}

// SetRecoveryNotify sets the RecoveryNotify field's value.
func (s *CreateAlertTemplateInput) SetRecoveryNotify(v *RecoveryNotifyForCreateAlertTemplateInput) *CreateAlertTemplateInput {
	s.RecoveryNotify = v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *CreateAlertTemplateInput) SetSilenceTime(v int64) *CreateAlertTemplateInput {
	s.SilenceTime = &v
	return s
}

// SetTemplateRules sets the TemplateRules field's value.
func (s *CreateAlertTemplateInput) SetTemplateRules(v []*TemplateRuleForCreateAlertTemplateInput) *CreateAlertTemplateInput {
	s.TemplateRules = v
	return s
}

type CreateAlertTemplateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateAlertTemplateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAlertTemplateOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *CreateAlertTemplateOutput) SetData(v string) *CreateAlertTemplateOutput {
	s.Data = &v
	return s
}

type LevelConditionForCreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions []*ConditionForCreateAlertTemplateInput `type:"list" json:",omitempty"`

	Level *string `type:"string" json:",omitempty" enum:"EnumOfLevelForCreateAlertTemplateInput"`
}

// String returns the string representation
func (s LevelConditionForCreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelConditionForCreateAlertTemplateInput) GoString() string {
	return s.String()
}

// SetConditions sets the Conditions field's value.
func (s *LevelConditionForCreateAlertTemplateInput) SetConditions(v []*ConditionForCreateAlertTemplateInput) *LevelConditionForCreateAlertTemplateInput {
	s.Conditions = v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelConditionForCreateAlertTemplateInput) SetLevel(v string) *LevelConditionForCreateAlertTemplateInput {
	s.Level = &v
	return s
}

type NoDataForCreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	EvaluationCount *int64 `type:"integer" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NoDataForCreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NoDataForCreateAlertTemplateInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *NoDataForCreateAlertTemplateInput) SetEnable(v bool) *NoDataForCreateAlertTemplateInput {
	s.Enable = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *NoDataForCreateAlertTemplateInput) SetEvaluationCount(v int64) *NoDataForCreateAlertTemplateInput {
	s.EvaluationCount = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *NoDataForCreateAlertTemplateInput) SetLevel(v string) *NoDataForCreateAlertTemplateInput {
	s.Level = &v
	return s
}

type RecoveryNotifyForCreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RecoveryNotifyForCreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecoveryNotifyForCreateAlertTemplateInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RecoveryNotifyForCreateAlertTemplateInput) SetEnable(v bool) *RecoveryNotifyForCreateAlertTemplateInput {
	s.Enable = &v
	return s
}

type TemplateRuleForCreateAlertTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConditionOperator *string `type:"string" json:",omitempty"`

	EvaluationCount *int64 `type:"integer" json:",omitempty"`

	LevelConditions []*LevelConditionForCreateAlertTemplateInput `type:"list" json:",omitempty"`

	MultipleConditions *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	SubNamespace *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TemplateRuleForCreateAlertTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TemplateRuleForCreateAlertTemplateInput) GoString() string {
	return s.String()
}

// SetConditionOperator sets the ConditionOperator field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetConditionOperator(v string) *TemplateRuleForCreateAlertTemplateInput {
	s.ConditionOperator = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetEvaluationCount(v int64) *TemplateRuleForCreateAlertTemplateInput {
	s.EvaluationCount = &v
	return s
}

// SetLevelConditions sets the LevelConditions field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetLevelConditions(v []*LevelConditionForCreateAlertTemplateInput) *TemplateRuleForCreateAlertTemplateInput {
	s.LevelConditions = v
	return s
}

// SetMultipleConditions sets the MultipleConditions field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetMultipleConditions(v bool) *TemplateRuleForCreateAlertTemplateInput {
	s.MultipleConditions = &v
	return s
}

// SetName sets the Name field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetName(v string) *TemplateRuleForCreateAlertTemplateInput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetNamespace(v string) *TemplateRuleForCreateAlertTemplateInput {
	s.Namespace = &v
	return s
}

// SetSubNamespace sets the SubNamespace field's value.
func (s *TemplateRuleForCreateAlertTemplateInput) SetSubNamespace(v string) *TemplateRuleForCreateAlertTemplateInput {
	s.SubNamespace = &v
	return s
}

const (
	// EnumOfLevelForCreateAlertTemplateInputNotice is a EnumOfLevelForCreateAlertTemplateInput enum value
	EnumOfLevelForCreateAlertTemplateInputNotice = "notice"

	// EnumOfLevelForCreateAlertTemplateInputWarning is a EnumOfLevelForCreateAlertTemplateInput enum value
	EnumOfLevelForCreateAlertTemplateInputWarning = "warning"

	// EnumOfLevelForCreateAlertTemplateInputCritical is a EnumOfLevelForCreateAlertTemplateInput enum value
	EnumOfLevelForCreateAlertTemplateInputCritical = "critical"
)
