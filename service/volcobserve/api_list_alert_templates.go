// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package volcobserve

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlertTemplatesCommon = "ListAlertTemplates"

// ListAlertTemplatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlertTemplatesCommon operation. The "output" return
// value will be populated with the ListAlertTemplatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlertTemplatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlertTemplatesCommon Send returns without error.
//
// See ListAlertTemplatesCommon for more information on using the ListAlertTemplatesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlertTemplatesCommonRequest method.
//    req, resp := client.ListAlertTemplatesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ListAlertTemplatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlertTemplatesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlertTemplatesCommon API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation ListAlertTemplatesCommon for usage and error information.
func (c *VOLCOBSERVE) ListAlertTemplatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlertTemplatesCommonRequest(input)
	return out, req.Send()
}

// ListAlertTemplatesCommonWithContext is the same as ListAlertTemplatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlertTemplatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ListAlertTemplatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlertTemplatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlertTemplates = "ListAlertTemplates"

// ListAlertTemplatesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlertTemplates operation. The "output" return
// value will be populated with the ListAlertTemplatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlertTemplatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlertTemplatesCommon Send returns without error.
//
// See ListAlertTemplates for more information on using the ListAlertTemplates
// API call, and error handling.
//
//    // Example sending a request using the ListAlertTemplatesRequest method.
//    req, resp := client.ListAlertTemplatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOLCOBSERVE) ListAlertTemplatesRequest(input *ListAlertTemplatesInput) (req *request.Request, output *ListAlertTemplatesOutput) {
	op := &request.Operation{
		Name:       opListAlertTemplates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlertTemplatesInput{}
	}

	output = &ListAlertTemplatesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlertTemplates API operation for VOLC_OBSERVE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOLC_OBSERVE's
// API operation ListAlertTemplates for usage and error information.
func (c *VOLCOBSERVE) ListAlertTemplates(input *ListAlertTemplatesInput) (*ListAlertTemplatesOutput, error) {
	req, out := c.ListAlertTemplatesRequest(input)
	return out, req.Send()
}

// ListAlertTemplatesWithContext is the same as ListAlertTemplates with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlertTemplates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOLCOBSERVE) ListAlertTemplatesWithContext(ctx volcengine.Context, input *ListAlertTemplatesInput, opts ...request.Option) (*ListAlertTemplatesOutput, error) {
	req, out := c.ListAlertTemplatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AppliedRuleForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AppliedRuleForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AppliedRuleForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *AppliedRuleForListAlertTemplatesOutput) SetId(v string) *AppliedRuleForListAlertTemplatesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *AppliedRuleForListAlertTemplatesOutput) SetName(v string) *AppliedRuleForListAlertTemplatesOutput {
	s.Name = &v
	return s
}

type ConditionForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ComparisonOperator *string `type:"string" json:",omitempty"`

	MetricName *string `type:"string" json:",omitempty"`

	MetricUnit *string `type:"string" json:",omitempty"`

	Statistics *string `type:"string" json:",omitempty"`

	Threshold *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetComparisonOperator sets the ComparisonOperator field's value.
func (s *ConditionForListAlertTemplatesOutput) SetComparisonOperator(v string) *ConditionForListAlertTemplatesOutput {
	s.ComparisonOperator = &v
	return s
}

// SetMetricName sets the MetricName field's value.
func (s *ConditionForListAlertTemplatesOutput) SetMetricName(v string) *ConditionForListAlertTemplatesOutput {
	s.MetricName = &v
	return s
}

// SetMetricUnit sets the MetricUnit field's value.
func (s *ConditionForListAlertTemplatesOutput) SetMetricUnit(v string) *ConditionForListAlertTemplatesOutput {
	s.MetricUnit = &v
	return s
}

// SetStatistics sets the Statistics field's value.
func (s *ConditionForListAlertTemplatesOutput) SetStatistics(v string) *ConditionForListAlertTemplatesOutput {
	s.Statistics = &v
	return s
}

// SetThreshold sets the Threshold field's value.
func (s *ConditionForListAlertTemplatesOutput) SetThreshold(v string) *ConditionForListAlertTemplatesOutput {
	s.Threshold = &v
	return s
}

type DataForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AppliedProjectName *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	NoData *NoDataForListAlertTemplatesOutput `type:"structure" json:",omitempty"`

	NotifyMode *string `type:"string" json:",omitempty"`

	ObjectGroups []*ObjectGroupForListAlertTemplatesOutput `type:"list" json:",omitempty"`

	RecoveryNotify *RecoveryNotifyForListAlertTemplatesOutput `type:"structure" json:",omitempty"`

	SilenceTime *int64 `type:"integer" json:",omitempty"`

	TemplateRules []*TemplateRuleForListAlertTemplatesOutput `type:"list" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetAppliedProjectName sets the AppliedProjectName field's value.
func (s *DataForListAlertTemplatesOutput) SetAppliedProjectName(v string) *DataForListAlertTemplatesOutput {
	s.AppliedProjectName = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *DataForListAlertTemplatesOutput) SetCreatedAt(v string) *DataForListAlertTemplatesOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForListAlertTemplatesOutput) SetDescription(v string) *DataForListAlertTemplatesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListAlertTemplatesOutput) SetId(v string) *DataForListAlertTemplatesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListAlertTemplatesOutput) SetName(v string) *DataForListAlertTemplatesOutput {
	s.Name = &v
	return s
}

// SetNoData sets the NoData field's value.
func (s *DataForListAlertTemplatesOutput) SetNoData(v *NoDataForListAlertTemplatesOutput) *DataForListAlertTemplatesOutput {
	s.NoData = v
	return s
}

// SetNotifyMode sets the NotifyMode field's value.
func (s *DataForListAlertTemplatesOutput) SetNotifyMode(v string) *DataForListAlertTemplatesOutput {
	s.NotifyMode = &v
	return s
}

// SetObjectGroups sets the ObjectGroups field's value.
func (s *DataForListAlertTemplatesOutput) SetObjectGroups(v []*ObjectGroupForListAlertTemplatesOutput) *DataForListAlertTemplatesOutput {
	s.ObjectGroups = v
	return s
}

// SetRecoveryNotify sets the RecoveryNotify field's value.
func (s *DataForListAlertTemplatesOutput) SetRecoveryNotify(v *RecoveryNotifyForListAlertTemplatesOutput) *DataForListAlertTemplatesOutput {
	s.RecoveryNotify = v
	return s
}

// SetSilenceTime sets the SilenceTime field's value.
func (s *DataForListAlertTemplatesOutput) SetSilenceTime(v int64) *DataForListAlertTemplatesOutput {
	s.SilenceTime = &v
	return s
}

// SetTemplateRules sets the TemplateRules field's value.
func (s *DataForListAlertTemplatesOutput) SetTemplateRules(v []*TemplateRuleForListAlertTemplatesOutput) *DataForListAlertTemplatesOutput {
	s.TemplateRules = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *DataForListAlertTemplatesOutput) SetUpdatedAt(v string) *DataForListAlertTemplatesOutput {
	s.UpdatedAt = &v
	return s
}

type LevelConditionForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions []*ConditionForListAlertTemplatesOutput `type:"list" json:",omitempty"`

	Level *string `type:"string" json:",omitempty" enum:"EnumOfLevelForListAlertTemplatesOutput"`
}

// String returns the string representation
func (s LevelConditionForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LevelConditionForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetConditions sets the Conditions field's value.
func (s *LevelConditionForListAlertTemplatesOutput) SetConditions(v []*ConditionForListAlertTemplatesOutput) *LevelConditionForListAlertTemplatesOutput {
	s.Conditions = v
	return s
}

// SetLevel sets the Level field's value.
func (s *LevelConditionForListAlertTemplatesOutput) SetLevel(v string) *LevelConditionForListAlertTemplatesOutput {
	s.Level = &v
	return s
}

type ListAlertTemplatesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespaces []*string `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"integer" json:",omitempty"`

	PageSize *int64 `type:"integer" json:",omitempty"`

	TemplateIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAlertTemplatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlertTemplatesInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *ListAlertTemplatesInput) SetName(v string) *ListAlertTemplatesInput {
	s.Name = &v
	return s
}

// SetNamespaces sets the Namespaces field's value.
func (s *ListAlertTemplatesInput) SetNamespaces(v []*string) *ListAlertTemplatesInput {
	s.Namespaces = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAlertTemplatesInput) SetPageNumber(v int64) *ListAlertTemplatesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAlertTemplatesInput) SetPageSize(v int64) *ListAlertTemplatesInput {
	s.PageSize = &v
	return s
}

// SetTemplateIds sets the TemplateIds field's value.
func (s *ListAlertTemplatesInput) SetTemplateIds(v []*string) *ListAlertTemplatesInput {
	s.TemplateIds = v
	return s
}

type ListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListAlertTemplatesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAlertTemplatesOutput) SetData(v []*DataForListAlertTemplatesOutput) *ListAlertTemplatesOutput {
	s.Data = v
	return s
}

type NoDataForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	EvaluationCount *int64 `type:"integer" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NoDataForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NoDataForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *NoDataForListAlertTemplatesOutput) SetEnable(v bool) *NoDataForListAlertTemplatesOutput {
	s.Enable = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *NoDataForListAlertTemplatesOutput) SetEvaluationCount(v int64) *NoDataForListAlertTemplatesOutput {
	s.EvaluationCount = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *NoDataForListAlertTemplatesOutput) SetLevel(v string) *NoDataForListAlertTemplatesOutput {
	s.Level = &v
	return s
}

type ObjectGroupForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlertMethods []*string `type:"list" json:",omitempty"`

	ContactGroupIds []*string `type:"list" json:",omitempty"`

	EffectEndAt *string `type:"string" json:",omitempty"`

	EffectStartAt *string `type:"string" json:",omitempty"`

	NotificationId *string `type:"string" json:",omitempty"`

	ObjectGroupId *string `type:"string" json:",omitempty"`

	ObjectGroupName *string `type:"string" json:",omitempty"`

	Webhook *string `type:"string" json:",omitempty"`

	WebhookIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ObjectGroupForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ObjectGroupForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetAlertMethods sets the AlertMethods field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetAlertMethods(v []*string) *ObjectGroupForListAlertTemplatesOutput {
	s.AlertMethods = v
	return s
}

// SetContactGroupIds sets the ContactGroupIds field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetContactGroupIds(v []*string) *ObjectGroupForListAlertTemplatesOutput {
	s.ContactGroupIds = v
	return s
}

// SetEffectEndAt sets the EffectEndAt field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetEffectEndAt(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.EffectEndAt = &v
	return s
}

// SetEffectStartAt sets the EffectStartAt field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetEffectStartAt(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.EffectStartAt = &v
	return s
}

// SetNotificationId sets the NotificationId field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetNotificationId(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.NotificationId = &v
	return s
}

// SetObjectGroupId sets the ObjectGroupId field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetObjectGroupId(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.ObjectGroupId = &v
	return s
}

// SetObjectGroupName sets the ObjectGroupName field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetObjectGroupName(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.ObjectGroupName = &v
	return s
}

// SetWebhook sets the Webhook field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetWebhook(v string) *ObjectGroupForListAlertTemplatesOutput {
	s.Webhook = &v
	return s
}

// SetWebhookIds sets the WebhookIds field's value.
func (s *ObjectGroupForListAlertTemplatesOutput) SetWebhookIds(v []*string) *ObjectGroupForListAlertTemplatesOutput {
	s.WebhookIds = v
	return s
}

type RecoveryNotifyForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RecoveryNotifyForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecoveryNotifyForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *RecoveryNotifyForListAlertTemplatesOutput) SetEnable(v bool) *RecoveryNotifyForListAlertTemplatesOutput {
	s.Enable = &v
	return s
}

type TemplateRuleForListAlertTemplatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AppliedRules []*AppliedRuleForListAlertTemplatesOutput `type:"list" json:",omitempty"`

	CheckInterval *int64 `type:"integer" json:",omitempty"`

	ConditionOperator *string `type:"string" json:",omitempty"`

	EvaluationCount *int64 `type:"integer" json:",omitempty"`

	LevelConditions []*LevelConditionForListAlertTemplatesOutput `type:"list" json:",omitempty"`

	MultipleConditions *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	SubNamespace *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TemplateRuleForListAlertTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TemplateRuleForListAlertTemplatesOutput) GoString() string {
	return s.String()
}

// SetAppliedRules sets the AppliedRules field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetAppliedRules(v []*AppliedRuleForListAlertTemplatesOutput) *TemplateRuleForListAlertTemplatesOutput {
	s.AppliedRules = v
	return s
}

// SetCheckInterval sets the CheckInterval field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetCheckInterval(v int64) *TemplateRuleForListAlertTemplatesOutput {
	s.CheckInterval = &v
	return s
}

// SetConditionOperator sets the ConditionOperator field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetConditionOperator(v string) *TemplateRuleForListAlertTemplatesOutput {
	s.ConditionOperator = &v
	return s
}

// SetEvaluationCount sets the EvaluationCount field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetEvaluationCount(v int64) *TemplateRuleForListAlertTemplatesOutput {
	s.EvaluationCount = &v
	return s
}

// SetLevelConditions sets the LevelConditions field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetLevelConditions(v []*LevelConditionForListAlertTemplatesOutput) *TemplateRuleForListAlertTemplatesOutput {
	s.LevelConditions = v
	return s
}

// SetMultipleConditions sets the MultipleConditions field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetMultipleConditions(v bool) *TemplateRuleForListAlertTemplatesOutput {
	s.MultipleConditions = &v
	return s
}

// SetName sets the Name field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetName(v string) *TemplateRuleForListAlertTemplatesOutput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetNamespace(v string) *TemplateRuleForListAlertTemplatesOutput {
	s.Namespace = &v
	return s
}

// SetSubNamespace sets the SubNamespace field's value.
func (s *TemplateRuleForListAlertTemplatesOutput) SetSubNamespace(v string) *TemplateRuleForListAlertTemplatesOutput {
	s.SubNamespace = &v
	return s
}

const (
	// EnumOfLevelForListAlertTemplatesOutputNotice is a EnumOfLevelForListAlertTemplatesOutput enum value
	EnumOfLevelForListAlertTemplatesOutputNotice = "notice"

	// EnumOfLevelForListAlertTemplatesOutputWarning is a EnumOfLevelForListAlertTemplatesOutput enum value
	EnumOfLevelForListAlertTemplatesOutputWarning = "warning"

	// EnumOfLevelForListAlertTemplatesOutputCritical is a EnumOfLevelForListAlertTemplatesOutput enum value
	EnumOfLevelForListAlertTemplatesOutputCritical = "critical"
)
