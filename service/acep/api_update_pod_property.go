// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdatePodPropertyCommon = "UpdatePodProperty"

// UpdatePodPropertyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePodPropertyCommon operation. The "output" return
// value will be populated with the UpdatePodPropertyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePodPropertyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePodPropertyCommon Send returns without error.
//
// See UpdatePodPropertyCommon for more information on using the UpdatePodPropertyCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdatePodPropertyCommonRequest method.
//    req, resp := client.UpdatePodPropertyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) UpdatePodPropertyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdatePodPropertyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePodPropertyCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation UpdatePodPropertyCommon for usage and error information.
func (c *ACEP) UpdatePodPropertyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdatePodPropertyCommonRequest(input)
	return out, req.Send()
}

// UpdatePodPropertyCommonWithContext is the same as UpdatePodPropertyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePodPropertyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) UpdatePodPropertyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdatePodPropertyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdatePodProperty = "UpdatePodProperty"

// UpdatePodPropertyRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePodProperty operation. The "output" return
// value will be populated with the UpdatePodPropertyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePodPropertyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePodPropertyCommon Send returns without error.
//
// See UpdatePodProperty for more information on using the UpdatePodProperty
// API call, and error handling.
//
//    // Example sending a request using the UpdatePodPropertyRequest method.
//    req, resp := client.UpdatePodPropertyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) UpdatePodPropertyRequest(input *UpdatePodPropertyInput) (req *request.Request, output *UpdatePodPropertyOutput) {
	op := &request.Operation{
		Name:       opUpdatePodProperty,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdatePodPropertyInput{}
	}

	output = &UpdatePodPropertyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePodProperty API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation UpdatePodProperty for usage and error information.
func (c *ACEP) UpdatePodProperty(input *UpdatePodPropertyInput) (*UpdatePodPropertyOutput, error) {
	req, out := c.UpdatePodPropertyRequest(input)
	return out, req.Send()
}

// UpdatePodPropertyWithContext is the same as UpdatePodProperty with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePodProperty for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) UpdatePodPropertyWithContext(ctx volcengine.Context, input *UpdatePodPropertyInput, opts ...request.Option) (*UpdatePodPropertyOutput, error) {
	req, out := c.UpdatePodPropertyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type PodPersistPropertyForUpdatePodPropertyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SystemPropertyName *string `type:"string" json:",omitempty"`

	SystemPropertyValue *string `type:"string" json:",omitempty"`

	SystemPropertyValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PodPersistPropertyForUpdatePodPropertyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PodPersistPropertyForUpdatePodPropertyInput) GoString() string {
	return s.String()
}

// SetSystemPropertyName sets the SystemPropertyName field's value.
func (s *PodPersistPropertyForUpdatePodPropertyInput) SetSystemPropertyName(v string) *PodPersistPropertyForUpdatePodPropertyInput {
	s.SystemPropertyName = &v
	return s
}

// SetSystemPropertyValue sets the SystemPropertyValue field's value.
func (s *PodPersistPropertyForUpdatePodPropertyInput) SetSystemPropertyValue(v string) *PodPersistPropertyForUpdatePodPropertyInput {
	s.SystemPropertyValue = &v
	return s
}

// SetSystemPropertyValueType sets the SystemPropertyValueType field's value.
func (s *PodPersistPropertyForUpdatePodPropertyInput) SetSystemPropertyValueType(v string) *PodPersistPropertyForUpdatePodPropertyInput {
	s.SystemPropertyValueType = &v
	return s
}

type PodPropertyForUpdatePodPropertyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SystemPropertyName *string `type:"string" json:",omitempty"`

	SystemPropertyValue *string `type:"string" json:",omitempty"`

	SystemPropertyValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PodPropertyForUpdatePodPropertyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PodPropertyForUpdatePodPropertyInput) GoString() string {
	return s.String()
}

// SetSystemPropertyName sets the SystemPropertyName field's value.
func (s *PodPropertyForUpdatePodPropertyInput) SetSystemPropertyName(v string) *PodPropertyForUpdatePodPropertyInput {
	s.SystemPropertyName = &v
	return s
}

// SetSystemPropertyValue sets the SystemPropertyValue field's value.
func (s *PodPropertyForUpdatePodPropertyInput) SetSystemPropertyValue(v string) *PodPropertyForUpdatePodPropertyInput {
	s.SystemPropertyValue = &v
	return s
}

// SetSystemPropertyValueType sets the SystemPropertyValueType field's value.
func (s *PodPropertyForUpdatePodPropertyInput) SetSystemPropertyValueType(v string) *PodPropertyForUpdatePodPropertyInput {
	s.SystemPropertyValueType = &v
	return s
}

type PodSettingForUpdatePodPropertyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SettingsName *string `type:"string" json:",omitempty"`

	SettingsType *string `type:"string" json:",omitempty"`

	SettingsValue *string `type:"string" json:",omitempty"`

	SettingsValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PodSettingForUpdatePodPropertyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PodSettingForUpdatePodPropertyInput) GoString() string {
	return s.String()
}

// SetSettingsName sets the SettingsName field's value.
func (s *PodSettingForUpdatePodPropertyInput) SetSettingsName(v string) *PodSettingForUpdatePodPropertyInput {
	s.SettingsName = &v
	return s
}

// SetSettingsType sets the SettingsType field's value.
func (s *PodSettingForUpdatePodPropertyInput) SetSettingsType(v string) *PodSettingForUpdatePodPropertyInput {
	s.SettingsType = &v
	return s
}

// SetSettingsValue sets the SettingsValue field's value.
func (s *PodSettingForUpdatePodPropertyInput) SetSettingsValue(v string) *PodSettingForUpdatePodPropertyInput {
	s.SettingsValue = &v
	return s
}

// SetSettingsValueType sets the SettingsValueType field's value.
func (s *PodSettingForUpdatePodPropertyInput) SetSettingsValueType(v string) *PodSettingForUpdatePodPropertyInput {
	s.SettingsValueType = &v
	return s
}

type UpdatePodPropertyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PhoneTemplateId *string `type:"string" json:",omitempty"`

	PodId *string `type:"string" json:",omitempty"`

	PodIdList []*string `type:"list" json:",omitempty"`

	PodPersistProperties []*PodPersistPropertyForUpdatePodPropertyInput `type:"list" json:",omitempty"`

	PodProperties []*PodPropertyForUpdatePodPropertyInput `type:"list" json:",omitempty"`

	PodSettings []*PodSettingForUpdatePodPropertyInput `type:"list" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdatePodPropertyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePodPropertyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdatePodPropertyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdatePodPropertyInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPhoneTemplateId sets the PhoneTemplateId field's value.
func (s *UpdatePodPropertyInput) SetPhoneTemplateId(v string) *UpdatePodPropertyInput {
	s.PhoneTemplateId = &v
	return s
}

// SetPodId sets the PodId field's value.
func (s *UpdatePodPropertyInput) SetPodId(v string) *UpdatePodPropertyInput {
	s.PodId = &v
	return s
}

// SetPodIdList sets the PodIdList field's value.
func (s *UpdatePodPropertyInput) SetPodIdList(v []*string) *UpdatePodPropertyInput {
	s.PodIdList = v
	return s
}

// SetPodPersistProperties sets the PodPersistProperties field's value.
func (s *UpdatePodPropertyInput) SetPodPersistProperties(v []*PodPersistPropertyForUpdatePodPropertyInput) *UpdatePodPropertyInput {
	s.PodPersistProperties = v
	return s
}

// SetPodProperties sets the PodProperties field's value.
func (s *UpdatePodPropertyInput) SetPodProperties(v []*PodPropertyForUpdatePodPropertyInput) *UpdatePodPropertyInput {
	s.PodProperties = v
	return s
}

// SetPodSettings sets the PodSettings field's value.
func (s *UpdatePodPropertyInput) SetPodSettings(v []*PodSettingForUpdatePodPropertyInput) *UpdatePodPropertyInput {
	s.PodSettings = v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *UpdatePodPropertyInput) SetProductId(v string) *UpdatePodPropertyInput {
	s.ProductId = &v
	return s
}

type UpdatePodPropertyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdatePodPropertyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePodPropertyOutput) GoString() string {
	return s.String()
}
