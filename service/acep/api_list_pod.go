// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListPodCommon = "ListPod"

// ListPodCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListPodCommon operation. The "output" return
// value will be populated with the ListPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListPodCommon Send returns without error.
//
// See ListPodCommon for more information on using the ListPodCommon
// API call, and error handling.
//
//    // Example sending a request using the ListPodCommonRequest method.
//    req, resp := client.ListPodCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListPodCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListPodCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListPodCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListPodCommon for usage and error information.
func (c *ACEP) ListPodCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListPodCommonRequest(input)
	return out, req.Send()
}

// ListPodCommonWithContext is the same as ListPodCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListPodCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListPodCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListPodCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListPod = "ListPod"

// ListPodRequest generates a "volcengine/request.Request" representing the
// client's request for the ListPod operation. The "output" return
// value will be populated with the ListPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListPodCommon Send returns without error.
//
// See ListPod for more information on using the ListPod
// API call, and error handling.
//
//    // Example sending a request using the ListPodRequest method.
//    req, resp := client.ListPodRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListPodRequest(input *ListPodInput) (req *request.Request, output *ListPodOutput) {
	op := &request.Operation{
		Name:       opListPod,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListPodInput{}
	}

	output = &ListPodOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListPod API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListPod for usage and error information.
func (c *ACEP) ListPod(input *ListPodInput) (*ListPodOutput, error) {
	req, out := c.ListPodRequest(input)
	return out, req.Send()
}

// ListPodWithContext is the same as ListPod with the addition of
// the ability to pass a context and additional request options.
//
// See ListPod for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListPodWithContext(ctx volcengine.Context, input *ListPodInput, opts ...request.Option) (*ListPodOutput, error) {
	req, out := c.ListPodRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigurationForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	ConfigurationName *string `type:"string" json:",omitempty"`

	ConfigurationType *int32 `type:"int32" json:",omitempty"`

	ServerTypeCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConfigurationForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigurationForListPodOutput) GoString() string {
	return s.String()
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *ConfigurationForListPodOutput) SetConfigurationCode(v string) *ConfigurationForListPodOutput {
	s.ConfigurationCode = &v
	return s
}

// SetConfigurationName sets the ConfigurationName field's value.
func (s *ConfigurationForListPodOutput) SetConfigurationName(v string) *ConfigurationForListPodOutput {
	s.ConfigurationName = &v
	return s
}

// SetConfigurationType sets the ConfigurationType field's value.
func (s *ConfigurationForListPodOutput) SetConfigurationType(v int32) *ConfigurationForListPodOutput {
	s.ConfigurationType = &v
	return s
}

// SetServerTypeCode sets the ServerTypeCode field's value.
func (s *ConfigurationForListPodOutput) SetServerTypeCode(v string) *ConfigurationForListPodOutput {
	s.ServerTypeCode = &v
	return s
}

type DcInfoForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Dc *string `type:"string" json:",omitempty"`

	DcName *string `type:"string" json:",omitempty"`

	Isp *int32 `type:"int32" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DcInfoForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DcInfoForListPodOutput) GoString() string {
	return s.String()
}

// SetDc sets the Dc field's value.
func (s *DcInfoForListPodOutput) SetDc(v string) *DcInfoForListPodOutput {
	s.Dc = &v
	return s
}

// SetDcName sets the DcName field's value.
func (s *DcInfoForListPodOutput) SetDcName(v string) *DcInfoForListPodOutput {
	s.DcName = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *DcInfoForListPodOutput) SetIsp(v int32) *DcInfoForListPodOutput {
	s.Isp = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *DcInfoForListPodOutput) SetRegion(v string) *DcInfoForListPodOutput {
	s.Region = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DcInfoForListPodOutput) SetZoneId(v string) *DcInfoForListPodOutput {
	s.ZoneId = &v
	return s
}

type DisplayStatusForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DisplayStatusForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisplayStatusForListPodOutput) GoString() string {
	return s.String()
}

type EipForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	Isp *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s EipForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EipForListPodOutput) GoString() string {
	return s.String()
}

// SetEipAddress sets the EipAddress field's value.
func (s *EipForListPodOutput) SetEipAddress(v string) *EipForListPodOutput {
	s.EipAddress = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *EipForListPodOutput) SetEipId(v string) *EipForListPodOutput {
	s.EipId = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *EipForListPodOutput) SetIsp(v int32) *EipForListPodOutput {
	s.Isp = &v
	return s
}

type ListPodInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ArchiveStatus *string `type:"string" json:",omitempty"`

	AuthorityStatus *int32 `type:"int32" json:",omitempty"`

	ConfigurationCodeList []*string `type:"list" json:",omitempty"`

	DNSId *string `type:"string" json:",omitempty"`

	DcList []*string `type:"list" json:",omitempty"`

	HostId *string `type:"string" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	OnlineList []*int32 `type:"list" json:",omitempty"`

	PodIdList []*string `type:"list" json:",omitempty"`

	PodName *string `type:"string" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`

	RegionList []*string `type:"list" json:",omitempty"`

	ServerTypeCode *string `type:"string" json:",omitempty"`

	StreamStatusList []*int32 `type:"list" json:",omitempty"`

	TagIdList []*string `type:"list" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListPodInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListPodInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListPodInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListPodInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetArchiveStatus sets the ArchiveStatus field's value.
func (s *ListPodInput) SetArchiveStatus(v string) *ListPodInput {
	s.ArchiveStatus = &v
	return s
}

// SetAuthorityStatus sets the AuthorityStatus field's value.
func (s *ListPodInput) SetAuthorityStatus(v int32) *ListPodInput {
	s.AuthorityStatus = &v
	return s
}

// SetConfigurationCodeList sets the ConfigurationCodeList field's value.
func (s *ListPodInput) SetConfigurationCodeList(v []*string) *ListPodInput {
	s.ConfigurationCodeList = v
	return s
}

// SetDNSId sets the DNSId field's value.
func (s *ListPodInput) SetDNSId(v string) *ListPodInput {
	s.DNSId = &v
	return s
}

// SetDcList sets the DcList field's value.
func (s *ListPodInput) SetDcList(v []*string) *ListPodInput {
	s.DcList = v
	return s
}

// SetHostId sets the HostId field's value.
func (s *ListPodInput) SetHostId(v string) *ListPodInput {
	s.HostId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListPodInput) SetMaxResults(v int32) *ListPodInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListPodInput) SetNextToken(v string) *ListPodInput {
	s.NextToken = &v
	return s
}

// SetOnlineList sets the OnlineList field's value.
func (s *ListPodInput) SetOnlineList(v []*int32) *ListPodInput {
	s.OnlineList = v
	return s
}

// SetPodIdList sets the PodIdList field's value.
func (s *ListPodInput) SetPodIdList(v []*string) *ListPodInput {
	s.PodIdList = v
	return s
}

// SetPodName sets the PodName field's value.
func (s *ListPodInput) SetPodName(v string) *ListPodInput {
	s.PodName = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *ListPodInput) SetProductId(v string) *ListPodInput {
	s.ProductId = &v
	return s
}

// SetRegionList sets the RegionList field's value.
func (s *ListPodInput) SetRegionList(v []*string) *ListPodInput {
	s.RegionList = v
	return s
}

// SetServerTypeCode sets the ServerTypeCode field's value.
func (s *ListPodInput) SetServerTypeCode(v string) *ListPodInput {
	s.ServerTypeCode = &v
	return s
}

// SetStreamStatusList sets the StreamStatusList field's value.
func (s *ListPodInput) SetStreamStatusList(v []*int32) *ListPodInput {
	s.StreamStatusList = v
	return s
}

// SetTagIdList sets the TagIdList field's value.
func (s *ListPodInput) SetTagIdList(v []*string) *ListPodInput {
	s.TagIdList = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ListPodInput) SetZoneId(v string) *ListPodInput {
	s.ZoneId = &v
	return s
}

type ListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	Row []*RowForListPodOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListPodOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListPodOutput) SetNextToken(v string) *ListPodOutput {
	s.NextToken = &v
	return s
}

// SetRow sets the Row field's value.
func (s *ListPodOutput) SetRow(v []*RowForListPodOutput) *ListPodOutput {
	s.Row = v
	return s
}

type PortMappingRuleListForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PortMappingRuleId *string `type:"string" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`

	PublicIp *string `type:"string" json:",omitempty"`

	PublicPort *int32 `type:"int32" json:",omitempty"`

	PublicPortInfoList []*PublicPortInfoListForListPodOutput `type:"list" json:",omitempty"`

	SourcePort *int32 `type:"int32" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PortMappingRuleListForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PortMappingRuleListForListPodOutput) GoString() string {
	return s.String()
}

// SetPortMappingRuleId sets the PortMappingRuleId field's value.
func (s *PortMappingRuleListForListPodOutput) SetPortMappingRuleId(v string) *PortMappingRuleListForListPodOutput {
	s.PortMappingRuleId = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *PortMappingRuleListForListPodOutput) SetProtocol(v string) *PortMappingRuleListForListPodOutput {
	s.Protocol = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *PortMappingRuleListForListPodOutput) SetPublicIp(v string) *PortMappingRuleListForListPodOutput {
	s.PublicIp = &v
	return s
}

// SetPublicPort sets the PublicPort field's value.
func (s *PortMappingRuleListForListPodOutput) SetPublicPort(v int32) *PortMappingRuleListForListPodOutput {
	s.PublicPort = &v
	return s
}

// SetPublicPortInfoList sets the PublicPortInfoList field's value.
func (s *PortMappingRuleListForListPodOutput) SetPublicPortInfoList(v []*PublicPortInfoListForListPodOutput) *PortMappingRuleListForListPodOutput {
	s.PublicPortInfoList = v
	return s
}

// SetSourcePort sets the SourcePort field's value.
func (s *PortMappingRuleListForListPodOutput) SetSourcePort(v int32) *PortMappingRuleListForListPodOutput {
	s.SourcePort = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *PortMappingRuleListForListPodOutput) SetStatus(v int32) *PortMappingRuleListForListPodOutput {
	s.Status = &v
	return s
}

type PublicPortInfoListForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Isp *int32 `type:"int32" json:",omitempty"`

	PublicIp *string `type:"string" json:",omitempty"`

	PublicPort *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PublicPortInfoListForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PublicPortInfoListForListPodOutput) GoString() string {
	return s.String()
}

// SetIsp sets the Isp field's value.
func (s *PublicPortInfoListForListPodOutput) SetIsp(v int32) *PublicPortInfoListForListPodOutput {
	s.Isp = &v
	return s
}

// SetPublicIp sets the PublicIp field's value.
func (s *PublicPortInfoListForListPodOutput) SetPublicIp(v string) *PublicPortInfoListForListPodOutput {
	s.PublicIp = &v
	return s
}

// SetPublicPort sets the PublicPort field's value.
func (s *PublicPortInfoListForListPodOutput) SetPublicPort(v int32) *PublicPortInfoListForListPodOutput {
	s.PublicPort = &v
	return s
}

type RowForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Adb *string `type:"string" json:",omitempty"`

	AdbExpireTime *int64 `type:"int64" json:",omitempty"`

	AdbStatus *int32 `type:"int32" json:",omitempty"`

	AospVersion *string `type:"string" json:",omitempty"`

	ArchiveStatus *int32 `type:"int32" json:",omitempty"`

	AuthorityExpireTime *int64 `type:"int64" json:",omitempty"`

	AuthorityStatus *int32 `type:"int32" json:",omitempty"`

	CidrBlock *string `type:"string" json:",omitempty"`

	Configuration *ConfigurationForListPodOutput `type:"structure" json:",omitempty"`

	CreateAt *int64 `type:"int64" json:",omitempty"`

	DNSId *string `type:"string" json:",omitempty"`

	DataSize *string `type:"string" json:",omitempty"`

	DataSizeUsed *string `type:"string" json:",omitempty"`

	DcInfo *DcInfoForListPodOutput `type:"structure" json:",omitempty"`

	DisplayLayoutId *string `type:"string" json:",omitempty"`

	DisplayStatus *DisplayStatusForListPodOutput `type:"structure" json:",omitempty"`

	DownBandwidthLimit *int32 `type:"int32" json:",omitempty"`

	Eip *EipForListPodOutput `type:"structure" json:",omitempty"`

	HostId *string `type:"string" json:",omitempty"`

	ImageId *string `type:"string" json:",omitempty"`

	ImageName *string `type:"string" json:",omitempty"`

	IntranetIP *string `type:"string" json:",omitempty"`

	Online *int32 `type:"int32" json:",omitempty"`

	PodId *string `type:"string" json:",omitempty"`

	PodName *string `type:"string" json:",omitempty"`

	PortMappingRuleList []*PortMappingRuleListForListPodOutput `type:"list" json:",omitempty"`

	ProductId *string `type:"string" json:",omitempty"`

	SNATId *string `type:"string" json:",omitempty"`

	ServerTypeCode *string `type:"string" json:",omitempty"`

	StreamStatus *int32 `type:"int32" json:",omitempty"`

	Tag *TagForListPodOutput `type:"structure" json:",omitempty"`

	UpBandwidthLimit *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RowForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RowForListPodOutput) GoString() string {
	return s.String()
}

// SetAdb sets the Adb field's value.
func (s *RowForListPodOutput) SetAdb(v string) *RowForListPodOutput {
	s.Adb = &v
	return s
}

// SetAdbExpireTime sets the AdbExpireTime field's value.
func (s *RowForListPodOutput) SetAdbExpireTime(v int64) *RowForListPodOutput {
	s.AdbExpireTime = &v
	return s
}

// SetAdbStatus sets the AdbStatus field's value.
func (s *RowForListPodOutput) SetAdbStatus(v int32) *RowForListPodOutput {
	s.AdbStatus = &v
	return s
}

// SetAospVersion sets the AospVersion field's value.
func (s *RowForListPodOutput) SetAospVersion(v string) *RowForListPodOutput {
	s.AospVersion = &v
	return s
}

// SetArchiveStatus sets the ArchiveStatus field's value.
func (s *RowForListPodOutput) SetArchiveStatus(v int32) *RowForListPodOutput {
	s.ArchiveStatus = &v
	return s
}

// SetAuthorityExpireTime sets the AuthorityExpireTime field's value.
func (s *RowForListPodOutput) SetAuthorityExpireTime(v int64) *RowForListPodOutput {
	s.AuthorityExpireTime = &v
	return s
}

// SetAuthorityStatus sets the AuthorityStatus field's value.
func (s *RowForListPodOutput) SetAuthorityStatus(v int32) *RowForListPodOutput {
	s.AuthorityStatus = &v
	return s
}

// SetCidrBlock sets the CidrBlock field's value.
func (s *RowForListPodOutput) SetCidrBlock(v string) *RowForListPodOutput {
	s.CidrBlock = &v
	return s
}

// SetConfiguration sets the Configuration field's value.
func (s *RowForListPodOutput) SetConfiguration(v *ConfigurationForListPodOutput) *RowForListPodOutput {
	s.Configuration = v
	return s
}

// SetCreateAt sets the CreateAt field's value.
func (s *RowForListPodOutput) SetCreateAt(v int64) *RowForListPodOutput {
	s.CreateAt = &v
	return s
}

// SetDNSId sets the DNSId field's value.
func (s *RowForListPodOutput) SetDNSId(v string) *RowForListPodOutput {
	s.DNSId = &v
	return s
}

// SetDataSize sets the DataSize field's value.
func (s *RowForListPodOutput) SetDataSize(v string) *RowForListPodOutput {
	s.DataSize = &v
	return s
}

// SetDataSizeUsed sets the DataSizeUsed field's value.
func (s *RowForListPodOutput) SetDataSizeUsed(v string) *RowForListPodOutput {
	s.DataSizeUsed = &v
	return s
}

// SetDcInfo sets the DcInfo field's value.
func (s *RowForListPodOutput) SetDcInfo(v *DcInfoForListPodOutput) *RowForListPodOutput {
	s.DcInfo = v
	return s
}

// SetDisplayLayoutId sets the DisplayLayoutId field's value.
func (s *RowForListPodOutput) SetDisplayLayoutId(v string) *RowForListPodOutput {
	s.DisplayLayoutId = &v
	return s
}

// SetDisplayStatus sets the DisplayStatus field's value.
func (s *RowForListPodOutput) SetDisplayStatus(v *DisplayStatusForListPodOutput) *RowForListPodOutput {
	s.DisplayStatus = v
	return s
}

// SetDownBandwidthLimit sets the DownBandwidthLimit field's value.
func (s *RowForListPodOutput) SetDownBandwidthLimit(v int32) *RowForListPodOutput {
	s.DownBandwidthLimit = &v
	return s
}

// SetEip sets the Eip field's value.
func (s *RowForListPodOutput) SetEip(v *EipForListPodOutput) *RowForListPodOutput {
	s.Eip = v
	return s
}

// SetHostId sets the HostId field's value.
func (s *RowForListPodOutput) SetHostId(v string) *RowForListPodOutput {
	s.HostId = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *RowForListPodOutput) SetImageId(v string) *RowForListPodOutput {
	s.ImageId = &v
	return s
}

// SetImageName sets the ImageName field's value.
func (s *RowForListPodOutput) SetImageName(v string) *RowForListPodOutput {
	s.ImageName = &v
	return s
}

// SetIntranetIP sets the IntranetIP field's value.
func (s *RowForListPodOutput) SetIntranetIP(v string) *RowForListPodOutput {
	s.IntranetIP = &v
	return s
}

// SetOnline sets the Online field's value.
func (s *RowForListPodOutput) SetOnline(v int32) *RowForListPodOutput {
	s.Online = &v
	return s
}

// SetPodId sets the PodId field's value.
func (s *RowForListPodOutput) SetPodId(v string) *RowForListPodOutput {
	s.PodId = &v
	return s
}

// SetPodName sets the PodName field's value.
func (s *RowForListPodOutput) SetPodName(v string) *RowForListPodOutput {
	s.PodName = &v
	return s
}

// SetPortMappingRuleList sets the PortMappingRuleList field's value.
func (s *RowForListPodOutput) SetPortMappingRuleList(v []*PortMappingRuleListForListPodOutput) *RowForListPodOutput {
	s.PortMappingRuleList = v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *RowForListPodOutput) SetProductId(v string) *RowForListPodOutput {
	s.ProductId = &v
	return s
}

// SetSNATId sets the SNATId field's value.
func (s *RowForListPodOutput) SetSNATId(v string) *RowForListPodOutput {
	s.SNATId = &v
	return s
}

// SetServerTypeCode sets the ServerTypeCode field's value.
func (s *RowForListPodOutput) SetServerTypeCode(v string) *RowForListPodOutput {
	s.ServerTypeCode = &v
	return s
}

// SetStreamStatus sets the StreamStatus field's value.
func (s *RowForListPodOutput) SetStreamStatus(v int32) *RowForListPodOutput {
	s.StreamStatus = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *RowForListPodOutput) SetTag(v *TagForListPodOutput) *RowForListPodOutput {
	s.Tag = v
	return s
}

// SetUpBandwidthLimit sets the UpBandwidthLimit field's value.
func (s *RowForListPodOutput) SetUpBandwidthLimit(v int32) *RowForListPodOutput {
	s.UpBandwidthLimit = &v
	return s
}

type TagForListPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PodNum *int64 `type:"int64" json:",omitempty"`

	ProductId *string `type:"string" json:",omitempty"`

	TagDesc *string `type:"string" json:",omitempty"`

	TagId *string `type:"string" json:",omitempty"`

	TagName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListPodOutput) GoString() string {
	return s.String()
}

// SetPodNum sets the PodNum field's value.
func (s *TagForListPodOutput) SetPodNum(v int64) *TagForListPodOutput {
	s.PodNum = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *TagForListPodOutput) SetProductId(v string) *TagForListPodOutput {
	s.ProductId = &v
	return s
}

// SetTagDesc sets the TagDesc field's value.
func (s *TagForListPodOutput) SetTagDesc(v string) *TagForListPodOutput {
	s.TagDesc = &v
	return s
}

// SetTagId sets the TagId field's value.
func (s *TagForListPodOutput) SetTagId(v string) *TagForListPodOutput {
	s.TagId = &v
	return s
}

// SetTagName sets the TagName field's value.
func (s *TagForListPodOutput) SetTagName(v string) *TagForListPodOutput {
	s.TagName = &v
	return s
}
