// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAppCommon = "ListApp"

// ListAppCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAppCommon operation. The "output" return
// value will be populated with the ListAppCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAppCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAppCommon Send returns without error.
//
// See ListAppCommon for more information on using the ListAppCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAppCommonRequest method.
//    req, resp := client.ListAppCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListAppCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAppCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAppCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListAppCommon for usage and error information.
func (c *ACEP) ListAppCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAppCommonRequest(input)
	return out, req.Send()
}

// ListAppCommonWithContext is the same as ListAppCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAppCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListAppCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAppCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListApp = "ListApp"

// ListAppRequest generates a "volcengine/request.Request" representing the
// client's request for the ListApp operation. The "output" return
// value will be populated with the ListAppCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAppCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAppCommon Send returns without error.
//
// See ListApp for more information on using the ListApp
// API call, and error handling.
//
//    // Example sending a request using the ListAppRequest method.
//    req, resp := client.ListAppRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListAppRequest(input *ListAppInput) (req *request.Request, output *ListAppOutput) {
	op := &request.Operation{
		Name:       opListApp,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAppInput{}
	}

	output = &ListAppOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListApp API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListApp for usage and error information.
func (c *ACEP) ListApp(input *ListAppInput) (*ListAppOutput, error) {
	req, out := c.ListAppRequest(input)
	return out, req.Send()
}

// ListAppWithContext is the same as ListApp with the addition of
// the ability to pass a context and additional request options.
//
// See ListApp for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListAppWithContext(ctx volcengine.Context, input *ListAppInput, opts ...request.Option) (*ListAppOutput, error) {
	req, out := c.ListAppRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type LatestVersionForListAppOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AppId *string `type:"string" json:",omitempty"`

	AppVersionDesc *string `type:"string" json:",omitempty"`

	DownloadUrl *string `type:"string" json:",omitempty"`

	MD5 *string `type:"string" json:",omitempty"`

	PackageName *string `type:"string" json:",omitempty"`

	VersionCode *int64 `type:"int64" json:",omitempty"`

	VersionId *string `type:"string" json:",omitempty"`

	VersionName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LatestVersionForListAppOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LatestVersionForListAppOutput) GoString() string {
	return s.String()
}

// SetAppId sets the AppId field's value.
func (s *LatestVersionForListAppOutput) SetAppId(v string) *LatestVersionForListAppOutput {
	s.AppId = &v
	return s
}

// SetAppVersionDesc sets the AppVersionDesc field's value.
func (s *LatestVersionForListAppOutput) SetAppVersionDesc(v string) *LatestVersionForListAppOutput {
	s.AppVersionDesc = &v
	return s
}

// SetDownloadUrl sets the DownloadUrl field's value.
func (s *LatestVersionForListAppOutput) SetDownloadUrl(v string) *LatestVersionForListAppOutput {
	s.DownloadUrl = &v
	return s
}

// SetMD5 sets the MD5 field's value.
func (s *LatestVersionForListAppOutput) SetMD5(v string) *LatestVersionForListAppOutput {
	s.MD5 = &v
	return s
}

// SetPackageName sets the PackageName field's value.
func (s *LatestVersionForListAppOutput) SetPackageName(v string) *LatestVersionForListAppOutput {
	s.PackageName = &v
	return s
}

// SetVersionCode sets the VersionCode field's value.
func (s *LatestVersionForListAppOutput) SetVersionCode(v int64) *LatestVersionForListAppOutput {
	s.VersionCode = &v
	return s
}

// SetVersionId sets the VersionId field's value.
func (s *LatestVersionForListAppOutput) SetVersionId(v string) *LatestVersionForListAppOutput {
	s.VersionId = &v
	return s
}

// SetVersionName sets the VersionName field's value.
func (s *LatestVersionForListAppOutput) SetVersionName(v string) *LatestVersionForListAppOutput {
	s.VersionName = &v
	return s
}

type ListAppInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AppId *string `type:"string" json:",omitempty"`

	AppName *string `type:"string" json:",omitempty"`

	AppType *int32 `type:"int32" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	PackageNameList []*string `type:"list" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListAppInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAppInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAppInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAppInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAppId sets the AppId field's value.
func (s *ListAppInput) SetAppId(v string) *ListAppInput {
	s.AppId = &v
	return s
}

// SetAppName sets the AppName field's value.
func (s *ListAppInput) SetAppName(v string) *ListAppInput {
	s.AppName = &v
	return s
}

// SetAppType sets the AppType field's value.
func (s *ListAppInput) SetAppType(v int32) *ListAppInput {
	s.AppType = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListAppInput) SetMaxResults(v int32) *ListAppInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAppInput) SetNextToken(v string) *ListAppInput {
	s.NextToken = &v
	return s
}

// SetPackageNameList sets the PackageNameList field's value.
func (s *ListAppInput) SetPackageNameList(v []*string) *ListAppInput {
	s.PackageNameList = v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *ListAppInput) SetProductId(v string) *ListAppInput {
	s.ProductId = &v
	return s
}

type ListAppOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	Row []*RowForListAppOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAppOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAppOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListAppOutput) SetNextToken(v string) *ListAppOutput {
	s.NextToken = &v
	return s
}

// SetRow sets the Row field's value.
func (s *ListAppOutput) SetRow(v []*RowForListAppOutput) *ListAppOutput {
	s.Row = v
	return s
}

type RowForListAppOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AppDesc *string `type:"string" json:",omitempty"`

	AppId *string `type:"string" json:",omitempty"`

	AppMode *string `type:"string" json:",omitempty"`

	AppName *string `type:"string" json:",omitempty"`

	AppStatus *int32 `type:"int32" json:",omitempty"`

	AppType *int32 `type:"int32" json:",omitempty"`

	ApplyNum *int64 `type:"int64" json:",omitempty"`

	DeployStatus *int32 `type:"int32" json:",omitempty"`

	DeployVersionNum *int64 `type:"int64" json:",omitempty"`

	IconUrl *string `type:"string" json:",omitempty"`

	LatestVersion *LatestVersionForListAppOutput `type:"structure" json:",omitempty"`

	PackageName *string `type:"string" json:",omitempty"`

	ProductId *string `type:"string" json:",omitempty"`

	ReadyNum *int64 `type:"int64" json:",omitempty"`

	Rotation *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RowForListAppOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RowForListAppOutput) GoString() string {
	return s.String()
}

// SetAppDesc sets the AppDesc field's value.
func (s *RowForListAppOutput) SetAppDesc(v string) *RowForListAppOutput {
	s.AppDesc = &v
	return s
}

// SetAppId sets the AppId field's value.
func (s *RowForListAppOutput) SetAppId(v string) *RowForListAppOutput {
	s.AppId = &v
	return s
}

// SetAppMode sets the AppMode field's value.
func (s *RowForListAppOutput) SetAppMode(v string) *RowForListAppOutput {
	s.AppMode = &v
	return s
}

// SetAppName sets the AppName field's value.
func (s *RowForListAppOutput) SetAppName(v string) *RowForListAppOutput {
	s.AppName = &v
	return s
}

// SetAppStatus sets the AppStatus field's value.
func (s *RowForListAppOutput) SetAppStatus(v int32) *RowForListAppOutput {
	s.AppStatus = &v
	return s
}

// SetAppType sets the AppType field's value.
func (s *RowForListAppOutput) SetAppType(v int32) *RowForListAppOutput {
	s.AppType = &v
	return s
}

// SetApplyNum sets the ApplyNum field's value.
func (s *RowForListAppOutput) SetApplyNum(v int64) *RowForListAppOutput {
	s.ApplyNum = &v
	return s
}

// SetDeployStatus sets the DeployStatus field's value.
func (s *RowForListAppOutput) SetDeployStatus(v int32) *RowForListAppOutput {
	s.DeployStatus = &v
	return s
}

// SetDeployVersionNum sets the DeployVersionNum field's value.
func (s *RowForListAppOutput) SetDeployVersionNum(v int64) *RowForListAppOutput {
	s.DeployVersionNum = &v
	return s
}

// SetIconUrl sets the IconUrl field's value.
func (s *RowForListAppOutput) SetIconUrl(v string) *RowForListAppOutput {
	s.IconUrl = &v
	return s
}

// SetLatestVersion sets the LatestVersion field's value.
func (s *RowForListAppOutput) SetLatestVersion(v *LatestVersionForListAppOutput) *RowForListAppOutput {
	s.LatestVersion = v
	return s
}

// SetPackageName sets the PackageName field's value.
func (s *RowForListAppOutput) SetPackageName(v string) *RowForListAppOutput {
	s.PackageName = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *RowForListAppOutput) SetProductId(v string) *RowForListAppOutput {
	s.ProductId = &v
	return s
}

// SetReadyNum sets the ReadyNum field's value.
func (s *RowForListAppOutput) SetReadyNum(v int64) *RowForListAppOutput {
	s.ReadyNum = &v
	return s
}

// SetRotation sets the Rotation field's value.
func (s *RowForListAppOutput) SetRotation(v int32) *RowForListAppOutput {
	s.Rotation = &v
	return s
}
