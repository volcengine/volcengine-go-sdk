// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opResetPodCommon = "ResetPod"

// ResetPodCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ResetPodCommon operation. The "output" return
// value will be populated with the ResetPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResetPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResetPodCommon Send returns without error.
//
// See ResetPodCommon for more information on using the ResetPodCommon
// API call, and error handling.
//
//    // Example sending a request using the ResetPodCommonRequest method.
//    req, resp := client.ResetPodCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ResetPodCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opResetPodCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResetPodCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ResetPodCommon for usage and error information.
func (c *ACEP) ResetPodCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ResetPodCommonRequest(input)
	return out, req.Send()
}

// ResetPodCommonWithContext is the same as ResetPodCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ResetPodCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ResetPodCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ResetPodCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opResetPod = "ResetPod"

// ResetPodRequest generates a "volcengine/request.Request" representing the
// client's request for the ResetPod operation. The "output" return
// value will be populated with the ResetPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResetPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResetPodCommon Send returns without error.
//
// See ResetPod for more information on using the ResetPod
// API call, and error handling.
//
//    // Example sending a request using the ResetPodRequest method.
//    req, resp := client.ResetPodRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ResetPodRequest(input *ResetPodInput) (req *request.Request, output *ResetPodOutput) {
	op := &request.Operation{
		Name:       opResetPod,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ResetPodInput{}
	}

	output = &ResetPodOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResetPod API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ResetPod for usage and error information.
func (c *ACEP) ResetPod(input *ResetPodInput) (*ResetPodOutput, error) {
	req, out := c.ResetPodRequest(input)
	return out, req.Send()
}

// ResetPodWithContext is the same as ResetPod with the addition of
// the ability to pass a context and additional request options.
//
// See ResetPod for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ResetPodWithContext(ctx volcengine.Context, input *ResetPodInput, opts ...request.Option) (*ResetPodOutput, error) {
	req, out := c.ResetPodRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type JobForResetPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupDataId *string `type:"string" json:",omitempty"`

	HostId *string `type:"string" json:",omitempty"`

	JobAction *string `type:"string" json:",omitempty"`

	JobId *string `type:"string" json:",omitempty"`

	JobMessage *string `type:"string" json:",omitempty"`

	PackageName *string `type:"string" json:",omitempty"`

	PodId *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s JobForResetPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s JobForResetPodOutput) GoString() string {
	return s.String()
}

// SetBackupDataId sets the BackupDataId field's value.
func (s *JobForResetPodOutput) SetBackupDataId(v string) *JobForResetPodOutput {
	s.BackupDataId = &v
	return s
}

// SetHostId sets the HostId field's value.
func (s *JobForResetPodOutput) SetHostId(v string) *JobForResetPodOutput {
	s.HostId = &v
	return s
}

// SetJobAction sets the JobAction field's value.
func (s *JobForResetPodOutput) SetJobAction(v string) *JobForResetPodOutput {
	s.JobAction = &v
	return s
}

// SetJobId sets the JobId field's value.
func (s *JobForResetPodOutput) SetJobId(v string) *JobForResetPodOutput {
	s.JobId = &v
	return s
}

// SetJobMessage sets the JobMessage field's value.
func (s *JobForResetPodOutput) SetJobMessage(v string) *JobForResetPodOutput {
	s.JobMessage = &v
	return s
}

// SetPackageName sets the PackageName field's value.
func (s *JobForResetPodOutput) SetPackageName(v string) *JobForResetPodOutput {
	s.PackageName = &v
	return s
}

// SetPodId sets the PodId field's value.
func (s *JobForResetPodOutput) SetPodId(v string) *JobForResetPodOutput {
	s.PodId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *JobForResetPodOutput) SetStatus(v int32) *JobForResetPodOutput {
	s.Status = &v
	return s
}

type ResetPodInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DataSize *string `type:"string" json:",omitempty"`

	PhoneTemplateId *string `type:"string" json:",omitempty"`

	PodIdList []*string `type:"list" json:",omitempty"`

	PreInstallAppPersistedType *int32 `type:"int32" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`

	ResetType *int32 `type:"int32" json:",omitempty"`

	SystemDirPersistedType *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ResetPodInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResetPodInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResetPodInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ResetPodInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDataSize sets the DataSize field's value.
func (s *ResetPodInput) SetDataSize(v string) *ResetPodInput {
	s.DataSize = &v
	return s
}

// SetPhoneTemplateId sets the PhoneTemplateId field's value.
func (s *ResetPodInput) SetPhoneTemplateId(v string) *ResetPodInput {
	s.PhoneTemplateId = &v
	return s
}

// SetPodIdList sets the PodIdList field's value.
func (s *ResetPodInput) SetPodIdList(v []*string) *ResetPodInput {
	s.PodIdList = v
	return s
}

// SetPreInstallAppPersistedType sets the PreInstallAppPersistedType field's value.
func (s *ResetPodInput) SetPreInstallAppPersistedType(v int32) *ResetPodInput {
	s.PreInstallAppPersistedType = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *ResetPodInput) SetProductId(v string) *ResetPodInput {
	s.ProductId = &v
	return s
}

// SetResetType sets the ResetType field's value.
func (s *ResetPodInput) SetResetType(v int32) *ResetPodInput {
	s.ResetType = &v
	return s
}

// SetSystemDirPersistedType sets the SystemDirPersistedType field's value.
func (s *ResetPodInput) SetSystemDirPersistedType(v int32) *ResetPodInput {
	s.SystemDirPersistedType = &v
	return s
}

type ResetPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Jobs []*JobForResetPodOutput `type:"list" json:",omitempty"`

	TaskAction *string `type:"string" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResetPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResetPodOutput) GoString() string {
	return s.String()
}

// SetJobs sets the Jobs field's value.
func (s *ResetPodOutput) SetJobs(v []*JobForResetPodOutput) *ResetPodOutput {
	s.Jobs = v
	return s
}

// SetTaskAction sets the TaskAction field's value.
func (s *ResetPodOutput) SetTaskAction(v string) *ResetPodOutput {
	s.TaskAction = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *ResetPodOutput) SetTaskId(v string) *ResetPodOutput {
	s.TaskId = &v
	return s
}
