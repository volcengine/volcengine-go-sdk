// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddPhoneTemplateCommon = "AddPhoneTemplate"

// AddPhoneTemplateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddPhoneTemplateCommon operation. The "output" return
// value will be populated with the AddPhoneTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddPhoneTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddPhoneTemplateCommon Send returns without error.
//
// See AddPhoneTemplateCommon for more information on using the AddPhoneTemplateCommon
// API call, and error handling.
//
//    // Example sending a request using the AddPhoneTemplateCommonRequest method.
//    req, resp := client.AddPhoneTemplateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) AddPhoneTemplateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddPhoneTemplateCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddPhoneTemplateCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation AddPhoneTemplateCommon for usage and error information.
func (c *ACEP) AddPhoneTemplateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddPhoneTemplateCommonRequest(input)
	return out, req.Send()
}

// AddPhoneTemplateCommonWithContext is the same as AddPhoneTemplateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddPhoneTemplateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) AddPhoneTemplateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddPhoneTemplateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddPhoneTemplate = "AddPhoneTemplate"

// AddPhoneTemplateRequest generates a "volcengine/request.Request" representing the
// client's request for the AddPhoneTemplate operation. The "output" return
// value will be populated with the AddPhoneTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddPhoneTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddPhoneTemplateCommon Send returns without error.
//
// See AddPhoneTemplate for more information on using the AddPhoneTemplate
// API call, and error handling.
//
//    // Example sending a request using the AddPhoneTemplateRequest method.
//    req, resp := client.AddPhoneTemplateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) AddPhoneTemplateRequest(input *AddPhoneTemplateInput) (req *request.Request, output *AddPhoneTemplateOutput) {
	op := &request.Operation{
		Name:       opAddPhoneTemplate,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddPhoneTemplateInput{}
	}

	output = &AddPhoneTemplateOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddPhoneTemplate API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation AddPhoneTemplate for usage and error information.
func (c *ACEP) AddPhoneTemplate(input *AddPhoneTemplateInput) (*AddPhoneTemplateOutput, error) {
	req, out := c.AddPhoneTemplateRequest(input)
	return out, req.Send()
}

// AddPhoneTemplateWithContext is the same as AddPhoneTemplate with the addition of
// the ability to pass a context and additional request options.
//
// See AddPhoneTemplate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) AddPhoneTemplateWithContext(ctx volcengine.Context, input *AddPhoneTemplateInput, opts ...request.Option) (*AddPhoneTemplateOutput, error) {
	req, out := c.AddPhoneTemplateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddPhoneTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AospVersion is a required field
	AospVersion *string `type:"string" json:",omitempty" required:"true"`

	OverlayPersistProperty []*OverlayPersistPropertyForAddPhoneTemplateInput `type:"list" json:",omitempty"`

	OverlayProperty []*OverlayPropertyForAddPhoneTemplateInput `type:"list" json:",omitempty"`

	OverlaySettings []*OverlaySettingForAddPhoneTemplateInput `type:"list" json:",omitempty"`

	// PhoneTemplateName is a required field
	PhoneTemplateName *string `type:"string" json:",omitempty" required:"true"`

	// Status is a required field
	Status *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s AddPhoneTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddPhoneTemplateInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddPhoneTemplateInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddPhoneTemplateInput"}
	if s.AospVersion == nil {
		invalidParams.Add(request.NewErrParamRequired("AospVersion"))
	}
	if s.PhoneTemplateName == nil {
		invalidParams.Add(request.NewErrParamRequired("PhoneTemplateName"))
	}
	if s.Status == nil {
		invalidParams.Add(request.NewErrParamRequired("Status"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAospVersion sets the AospVersion field's value.
func (s *AddPhoneTemplateInput) SetAospVersion(v string) *AddPhoneTemplateInput {
	s.AospVersion = &v
	return s
}

// SetOverlayPersistProperty sets the OverlayPersistProperty field's value.
func (s *AddPhoneTemplateInput) SetOverlayPersistProperty(v []*OverlayPersistPropertyForAddPhoneTemplateInput) *AddPhoneTemplateInput {
	s.OverlayPersistProperty = v
	return s
}

// SetOverlayProperty sets the OverlayProperty field's value.
func (s *AddPhoneTemplateInput) SetOverlayProperty(v []*OverlayPropertyForAddPhoneTemplateInput) *AddPhoneTemplateInput {
	s.OverlayProperty = v
	return s
}

// SetOverlaySettings sets the OverlaySettings field's value.
func (s *AddPhoneTemplateInput) SetOverlaySettings(v []*OverlaySettingForAddPhoneTemplateInput) *AddPhoneTemplateInput {
	s.OverlaySettings = v
	return s
}

// SetPhoneTemplateName sets the PhoneTemplateName field's value.
func (s *AddPhoneTemplateInput) SetPhoneTemplateName(v string) *AddPhoneTemplateInput {
	s.PhoneTemplateName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *AddPhoneTemplateInput) SetStatus(v int32) *AddPhoneTemplateInput {
	s.Status = &v
	return s
}

type AddPhoneTemplateOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PhoneTemplateId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AddPhoneTemplateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddPhoneTemplateOutput) GoString() string {
	return s.String()
}

// SetPhoneTemplateId sets the PhoneTemplateId field's value.
func (s *AddPhoneTemplateOutput) SetPhoneTemplateId(v string) *AddPhoneTemplateOutput {
	s.PhoneTemplateId = &v
	return s
}

type OverlayPersistPropertyForAddPhoneTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SystemPropertyName *string `type:"string" json:",omitempty"`

	SystemPropertyValue *string `type:"string" json:",omitempty"`

	SystemPropertyValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OverlayPersistPropertyForAddPhoneTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverlayPersistPropertyForAddPhoneTemplateInput) GoString() string {
	return s.String()
}

// SetSystemPropertyName sets the SystemPropertyName field's value.
func (s *OverlayPersistPropertyForAddPhoneTemplateInput) SetSystemPropertyName(v string) *OverlayPersistPropertyForAddPhoneTemplateInput {
	s.SystemPropertyName = &v
	return s
}

// SetSystemPropertyValue sets the SystemPropertyValue field's value.
func (s *OverlayPersistPropertyForAddPhoneTemplateInput) SetSystemPropertyValue(v string) *OverlayPersistPropertyForAddPhoneTemplateInput {
	s.SystemPropertyValue = &v
	return s
}

// SetSystemPropertyValueType sets the SystemPropertyValueType field's value.
func (s *OverlayPersistPropertyForAddPhoneTemplateInput) SetSystemPropertyValueType(v string) *OverlayPersistPropertyForAddPhoneTemplateInput {
	s.SystemPropertyValueType = &v
	return s
}

type OverlayPropertyForAddPhoneTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SystemPropertyName *string `type:"string" json:",omitempty"`

	SystemPropertyValue *string `type:"string" json:",omitempty"`

	SystemPropertyValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OverlayPropertyForAddPhoneTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverlayPropertyForAddPhoneTemplateInput) GoString() string {
	return s.String()
}

// SetSystemPropertyName sets the SystemPropertyName field's value.
func (s *OverlayPropertyForAddPhoneTemplateInput) SetSystemPropertyName(v string) *OverlayPropertyForAddPhoneTemplateInput {
	s.SystemPropertyName = &v
	return s
}

// SetSystemPropertyValue sets the SystemPropertyValue field's value.
func (s *OverlayPropertyForAddPhoneTemplateInput) SetSystemPropertyValue(v string) *OverlayPropertyForAddPhoneTemplateInput {
	s.SystemPropertyValue = &v
	return s
}

// SetSystemPropertyValueType sets the SystemPropertyValueType field's value.
func (s *OverlayPropertyForAddPhoneTemplateInput) SetSystemPropertyValueType(v string) *OverlayPropertyForAddPhoneTemplateInput {
	s.SystemPropertyValueType = &v
	return s
}

type OverlaySettingForAddPhoneTemplateInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SettingsName *string `type:"string" json:",omitempty"`

	SettingsType *string `type:"string" json:",omitempty"`

	SettingsValue *string `type:"string" json:",omitempty"`

	SettingsValueType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OverlaySettingForAddPhoneTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverlaySettingForAddPhoneTemplateInput) GoString() string {
	return s.String()
}

// SetSettingsName sets the SettingsName field's value.
func (s *OverlaySettingForAddPhoneTemplateInput) SetSettingsName(v string) *OverlaySettingForAddPhoneTemplateInput {
	s.SettingsName = &v
	return s
}

// SetSettingsType sets the SettingsType field's value.
func (s *OverlaySettingForAddPhoneTemplateInput) SetSettingsType(v string) *OverlaySettingForAddPhoneTemplateInput {
	s.SettingsType = &v
	return s
}

// SetSettingsValue sets the SettingsValue field's value.
func (s *OverlaySettingForAddPhoneTemplateInput) SetSettingsValue(v string) *OverlaySettingForAddPhoneTemplateInput {
	s.SettingsValue = &v
	return s
}

// SetSettingsValueType sets the SettingsValueType field's value.
func (s *OverlaySettingForAddPhoneTemplateInput) SetSettingsValueType(v string) *OverlaySettingForAddPhoneTemplateInput {
	s.SettingsValueType = &v
	return s
}
