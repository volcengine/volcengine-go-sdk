// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateCustomRouteCommon = "UpdateCustomRoute"

// UpdateCustomRouteCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomRouteCommon operation. The "output" return
// value will be populated with the UpdateCustomRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomRouteCommon Send returns without error.
//
// See UpdateCustomRouteCommon for more information on using the UpdateCustomRouteCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomRouteCommonRequest method.
//    req, resp := client.UpdateCustomRouteCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) UpdateCustomRouteCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateCustomRouteCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomRouteCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation UpdateCustomRouteCommon for usage and error information.
func (c *ACEP) UpdateCustomRouteCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomRouteCommonRequest(input)
	return out, req.Send()
}

// UpdateCustomRouteCommonWithContext is the same as UpdateCustomRouteCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomRouteCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) UpdateCustomRouteCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomRouteCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateCustomRoute = "UpdateCustomRoute"

// UpdateCustomRouteRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomRoute operation. The "output" return
// value will be populated with the UpdateCustomRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomRouteCommon Send returns without error.
//
// See UpdateCustomRoute for more information on using the UpdateCustomRoute
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomRouteRequest method.
//    req, resp := client.UpdateCustomRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) UpdateCustomRouteRequest(input *UpdateCustomRouteInput) (req *request.Request, output *UpdateCustomRouteOutput) {
	op := &request.Operation{
		Name:       opUpdateCustomRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateCustomRouteInput{}
	}

	output = &UpdateCustomRouteOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomRoute API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation UpdateCustomRoute for usage and error information.
func (c *ACEP) UpdateCustomRoute(input *UpdateCustomRouteInput) (*UpdateCustomRouteOutput, error) {
	req, out := c.UpdateCustomRouteRequest(input)
	return out, req.Send()
}

// UpdateCustomRouteWithContext is the same as UpdateCustomRoute with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) UpdateCustomRouteWithContext(ctx volcengine.Context, input *UpdateCustomRouteInput, opts ...request.Option) (*UpdateCustomRouteOutput, error) {
	req, out := c.UpdateCustomRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateCustomRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// CustomRouteId is a required field
	CustomRouteId *string `type:"string" json:",omitempty" required:"true"`

	CustomRouteName *string `type:"string" json:",omitempty"`

	DstIP *string `type:"string" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`

	ProxyCipher *string `type:"string" json:",omitempty"`

	ProxyPassword *string `type:"string" json:",omitempty"`

	ProxyPort *int32 `type:"int32" json:",omitempty"`

	ProxyProtocol *string `type:"string" json:",omitempty"`

	ProxyUserName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateCustomRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomRouteInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateCustomRouteInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateCustomRouteInput"}
	if s.CustomRouteId == nil {
		invalidParams.Add(request.NewErrParamRequired("CustomRouteId"))
	}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomRouteId sets the CustomRouteId field's value.
func (s *UpdateCustomRouteInput) SetCustomRouteId(v string) *UpdateCustomRouteInput {
	s.CustomRouteId = &v
	return s
}

// SetCustomRouteName sets the CustomRouteName field's value.
func (s *UpdateCustomRouteInput) SetCustomRouteName(v string) *UpdateCustomRouteInput {
	s.CustomRouteName = &v
	return s
}

// SetDstIP sets the DstIP field's value.
func (s *UpdateCustomRouteInput) SetDstIP(v string) *UpdateCustomRouteInput {
	s.DstIP = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *UpdateCustomRouteInput) SetProductId(v string) *UpdateCustomRouteInput {
	s.ProductId = &v
	return s
}

// SetProxyCipher sets the ProxyCipher field's value.
func (s *UpdateCustomRouteInput) SetProxyCipher(v string) *UpdateCustomRouteInput {
	s.ProxyCipher = &v
	return s
}

// SetProxyPassword sets the ProxyPassword field's value.
func (s *UpdateCustomRouteInput) SetProxyPassword(v string) *UpdateCustomRouteInput {
	s.ProxyPassword = &v
	return s
}

// SetProxyPort sets the ProxyPort field's value.
func (s *UpdateCustomRouteInput) SetProxyPort(v int32) *UpdateCustomRouteInput {
	s.ProxyPort = &v
	return s
}

// SetProxyProtocol sets the ProxyProtocol field's value.
func (s *UpdateCustomRouteInput) SetProxyProtocol(v string) *UpdateCustomRouteInput {
	s.ProxyProtocol = &v
	return s
}

// SetProxyUserName sets the ProxyUserName field's value.
func (s *UpdateCustomRouteInput) SetProxyUserName(v string) *UpdateCustomRouteInput {
	s.ProxyUserName = &v
	return s
}

type UpdateCustomRouteOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateCustomRouteOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomRouteOutput) GoString() string {
	return s.String()
}
