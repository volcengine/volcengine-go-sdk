// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListCustomRouteCommon = "ListCustomRoute"

// ListCustomRouteCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCustomRouteCommon operation. The "output" return
// value will be populated with the ListCustomRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCustomRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCustomRouteCommon Send returns without error.
//
// See ListCustomRouteCommon for more information on using the ListCustomRouteCommon
// API call, and error handling.
//
//    // Example sending a request using the ListCustomRouteCommonRequest method.
//    req, resp := client.ListCustomRouteCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListCustomRouteCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListCustomRouteCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCustomRouteCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListCustomRouteCommon for usage and error information.
func (c *ACEP) ListCustomRouteCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListCustomRouteCommonRequest(input)
	return out, req.Send()
}

// ListCustomRouteCommonWithContext is the same as ListCustomRouteCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListCustomRouteCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListCustomRouteCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListCustomRouteCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCustomRoute = "ListCustomRoute"

// ListCustomRouteRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCustomRoute operation. The "output" return
// value will be populated with the ListCustomRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCustomRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCustomRouteCommon Send returns without error.
//
// See ListCustomRoute for more information on using the ListCustomRoute
// API call, and error handling.
//
//    // Example sending a request using the ListCustomRouteRequest method.
//    req, resp := client.ListCustomRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListCustomRouteRequest(input *ListCustomRouteInput) (req *request.Request, output *ListCustomRouteOutput) {
	op := &request.Operation{
		Name:       opListCustomRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCustomRouteInput{}
	}

	output = &ListCustomRouteOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCustomRoute API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListCustomRoute for usage and error information.
func (c *ACEP) ListCustomRoute(input *ListCustomRouteInput) (*ListCustomRouteOutput, error) {
	req, out := c.ListCustomRouteRequest(input)
	return out, req.Send()
}

// ListCustomRouteWithContext is the same as ListCustomRoute with the addition of
// the ability to pass a context and additional request options.
//
// See ListCustomRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListCustomRouteWithContext(ctx volcengine.Context, input *ListCustomRouteInput, opts ...request.Option) (*ListCustomRouteOutput, error) {
	req, out := c.ListCustomRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListCustomRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CustomRouteId *string `type:"string" json:",omitempty"`

	CustomRouteName *string `type:"string" json:",omitempty"`

	DstIP *string `type:"string" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`

	Zone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListCustomRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCustomRouteInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListCustomRouteInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListCustomRouteInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomRouteId sets the CustomRouteId field's value.
func (s *ListCustomRouteInput) SetCustomRouteId(v string) *ListCustomRouteInput {
	s.CustomRouteId = &v
	return s
}

// SetCustomRouteName sets the CustomRouteName field's value.
func (s *ListCustomRouteInput) SetCustomRouteName(v string) *ListCustomRouteInput {
	s.CustomRouteName = &v
	return s
}

// SetDstIP sets the DstIP field's value.
func (s *ListCustomRouteInput) SetDstIP(v string) *ListCustomRouteInput {
	s.DstIP = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListCustomRouteInput) SetMaxResults(v int32) *ListCustomRouteInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListCustomRouteInput) SetNextToken(v string) *ListCustomRouteInput {
	s.NextToken = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *ListCustomRouteInput) SetProductId(v string) *ListCustomRouteInput {
	s.ProductId = &v
	return s
}

// SetZone sets the Zone field's value.
func (s *ListCustomRouteInput) SetZone(v string) *ListCustomRouteInput {
	s.Zone = &v
	return s
}

type ListCustomRouteOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	Row []*RowForListCustomRouteOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListCustomRouteOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCustomRouteOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListCustomRouteOutput) SetNextToken(v string) *ListCustomRouteOutput {
	s.NextToken = &v
	return s
}

// SetRow sets the Row field's value.
func (s *ListCustomRouteOutput) SetRow(v []*RowForListCustomRouteOutput) *ListCustomRouteOutput {
	s.Row = v
	return s
}

type RowForListCustomRouteOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateAt *int64 `type:"int64" json:",omitempty"`

	CustomRouteId *string `type:"string" json:",omitempty"`

	CustomRouteName *string `type:"string" json:",omitempty"`

	DstIP *string `type:"string" json:",omitempty"`

	ProxyCipher *string `type:"string" json:",omitempty"`

	ProxyPort *int32 `type:"int32" json:",omitempty"`

	ProxyProtocol *string `type:"string" json:",omitempty"`

	UpdateAt *int64 `type:"int64" json:",omitempty"`

	Zone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RowForListCustomRouteOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RowForListCustomRouteOutput) GoString() string {
	return s.String()
}

// SetCreateAt sets the CreateAt field's value.
func (s *RowForListCustomRouteOutput) SetCreateAt(v int64) *RowForListCustomRouteOutput {
	s.CreateAt = &v
	return s
}

// SetCustomRouteId sets the CustomRouteId field's value.
func (s *RowForListCustomRouteOutput) SetCustomRouteId(v string) *RowForListCustomRouteOutput {
	s.CustomRouteId = &v
	return s
}

// SetCustomRouteName sets the CustomRouteName field's value.
func (s *RowForListCustomRouteOutput) SetCustomRouteName(v string) *RowForListCustomRouteOutput {
	s.CustomRouteName = &v
	return s
}

// SetDstIP sets the DstIP field's value.
func (s *RowForListCustomRouteOutput) SetDstIP(v string) *RowForListCustomRouteOutput {
	s.DstIP = &v
	return s
}

// SetProxyCipher sets the ProxyCipher field's value.
func (s *RowForListCustomRouteOutput) SetProxyCipher(v string) *RowForListCustomRouteOutput {
	s.ProxyCipher = &v
	return s
}

// SetProxyPort sets the ProxyPort field's value.
func (s *RowForListCustomRouteOutput) SetProxyPort(v int32) *RowForListCustomRouteOutput {
	s.ProxyPort = &v
	return s
}

// SetProxyProtocol sets the ProxyProtocol field's value.
func (s *RowForListCustomRouteOutput) SetProxyProtocol(v string) *RowForListCustomRouteOutput {
	s.ProxyProtocol = &v
	return s
}

// SetUpdateAt sets the UpdateAt field's value.
func (s *RowForListCustomRouteOutput) SetUpdateAt(v int64) *RowForListCustomRouteOutput {
	s.UpdateAt = &v
	return s
}

// SetZone sets the Zone field's value.
func (s *RowForListCustomRouteOutput) SetZone(v string) *RowForListCustomRouteOutput {
	s.Zone = &v
	return s
}
