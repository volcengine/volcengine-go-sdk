// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package acep

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBackupDataCommon = "ListBackupData"

// ListBackupDataCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBackupDataCommon operation. The "output" return
// value will be populated with the ListBackupDataCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBackupDataCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBackupDataCommon Send returns without error.
//
// See ListBackupDataCommon for more information on using the ListBackupDataCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBackupDataCommonRequest method.
//    req, resp := client.ListBackupDataCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListBackupDataCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBackupDataCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBackupDataCommon API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListBackupDataCommon for usage and error information.
func (c *ACEP) ListBackupDataCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBackupDataCommonRequest(input)
	return out, req.Send()
}

// ListBackupDataCommonWithContext is the same as ListBackupDataCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBackupDataCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListBackupDataCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBackupDataCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBackupData = "ListBackupData"

// ListBackupDataRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBackupData operation. The "output" return
// value will be populated with the ListBackupDataCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBackupDataCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBackupDataCommon Send returns without error.
//
// See ListBackupData for more information on using the ListBackupData
// API call, and error handling.
//
//    // Example sending a request using the ListBackupDataRequest method.
//    req, resp := client.ListBackupDataRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ACEP) ListBackupDataRequest(input *ListBackupDataInput) (req *request.Request, output *ListBackupDataOutput) {
	op := &request.Operation{
		Name:       opListBackupData,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBackupDataInput{}
	}

	output = &ListBackupDataOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBackupData API operation for ACEP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ACEP's
// API operation ListBackupData for usage and error information.
func (c *ACEP) ListBackupData(input *ListBackupDataInput) (*ListBackupDataOutput, error) {
	req, out := c.ListBackupDataRequest(input)
	return out, req.Send()
}

// ListBackupDataWithContext is the same as ListBackupData with the addition of
// the ability to pass a context and additional request options.
//
// See ListBackupData for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ACEP) ListBackupDataWithContext(ctx volcengine.Context, input *ListBackupDataInput, opts ...request.Option) (*ListBackupDataOutput, error) {
	req, out := c.ListBackupDataRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListBackupDataInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BackupDataIdList []*string `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// ProductId is a required field
	ProductId *string `type:"string" json:",omitempty" required:"true"`

	SourcePodId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListBackupDataInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBackupDataInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBackupDataInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBackupDataInput"}
	if s.ProductId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProductId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBackupDataIdList sets the BackupDataIdList field's value.
func (s *ListBackupDataInput) SetBackupDataIdList(v []*string) *ListBackupDataInput {
	s.BackupDataIdList = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListBackupDataInput) SetMaxResults(v int32) *ListBackupDataInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListBackupDataInput) SetNextToken(v string) *ListBackupDataInput {
	s.NextToken = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *ListBackupDataInput) SetProductId(v string) *ListBackupDataInput {
	s.ProductId = &v
	return s
}

// SetSourcePodId sets the SourcePodId field's value.
func (s *ListBackupDataInput) SetSourcePodId(v string) *ListBackupDataInput {
	s.SourcePodId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListBackupDataInput) SetStatus(v string) *ListBackupDataInput {
	s.Status = &v
	return s
}

type ListBackupDataOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	Rows []*RowForListBackupDataOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBackupDataOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBackupDataOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListBackupDataOutput) SetNextToken(v string) *ListBackupDataOutput {
	s.NextToken = &v
	return s
}

// SetRows sets the Rows field's value.
func (s *ListBackupDataOutput) SetRows(v []*RowForListBackupDataOutput) *ListBackupDataOutput {
	s.Rows = v
	return s
}

type RowForListBackupDataOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AOSPVersion *string `type:"string" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	BackupDataId *string `type:"string" json:",omitempty"`

	BackupDataName *string `type:"string" json:",omitempty"`

	BackupJobId *string `type:"string" json:",omitempty"`

	BackupSize *int64 `type:"int64" json:",omitempty"`

	BackupTaskId *string `type:"string" json:",omitempty"`

	BackupType *string `type:"string" json:",omitempty"`

	CompletedTime *int64 `type:"int64" json:",omitempty"`

	CompressionType *string `type:"string" json:",omitempty"`

	CreatedTime *int64 `type:"int64" json:",omitempty"`

	DataSize *int64 `type:"int64" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Detail *string `type:"string" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	FinishedTime *int64 `type:"int64" json:",omitempty"`

	InUseCount *int64 `type:"int64" json:",omitempty"`

	Md5Sum *string `type:"string" json:",omitempty"`

	ProductId *string `type:"string" json:",omitempty"`

	RestoreCount *int64 `type:"int64" json:",omitempty"`

	Size *int64 `type:"int64" json:",omitempty"`

	SourcePodId *string `type:"string" json:",omitempty"`

	StartedTime *int64 `type:"int64" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	StorageResource *string `type:"string" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty"`

	UpdatedTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s RowForListBackupDataOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RowForListBackupDataOutput) GoString() string {
	return s.String()
}

// SetAOSPVersion sets the AOSPVersion field's value.
func (s *RowForListBackupDataOutput) SetAOSPVersion(v string) *RowForListBackupDataOutput {
	s.AOSPVersion = &v
	return s
}

// SetAccountId sets the AccountId field's value.
func (s *RowForListBackupDataOutput) SetAccountId(v string) *RowForListBackupDataOutput {
	s.AccountId = &v
	return s
}

// SetBackupDataId sets the BackupDataId field's value.
func (s *RowForListBackupDataOutput) SetBackupDataId(v string) *RowForListBackupDataOutput {
	s.BackupDataId = &v
	return s
}

// SetBackupDataName sets the BackupDataName field's value.
func (s *RowForListBackupDataOutput) SetBackupDataName(v string) *RowForListBackupDataOutput {
	s.BackupDataName = &v
	return s
}

// SetBackupJobId sets the BackupJobId field's value.
func (s *RowForListBackupDataOutput) SetBackupJobId(v string) *RowForListBackupDataOutput {
	s.BackupJobId = &v
	return s
}

// SetBackupSize sets the BackupSize field's value.
func (s *RowForListBackupDataOutput) SetBackupSize(v int64) *RowForListBackupDataOutput {
	s.BackupSize = &v
	return s
}

// SetBackupTaskId sets the BackupTaskId field's value.
func (s *RowForListBackupDataOutput) SetBackupTaskId(v string) *RowForListBackupDataOutput {
	s.BackupTaskId = &v
	return s
}

// SetBackupType sets the BackupType field's value.
func (s *RowForListBackupDataOutput) SetBackupType(v string) *RowForListBackupDataOutput {
	s.BackupType = &v
	return s
}

// SetCompletedTime sets the CompletedTime field's value.
func (s *RowForListBackupDataOutput) SetCompletedTime(v int64) *RowForListBackupDataOutput {
	s.CompletedTime = &v
	return s
}

// SetCompressionType sets the CompressionType field's value.
func (s *RowForListBackupDataOutput) SetCompressionType(v string) *RowForListBackupDataOutput {
	s.CompressionType = &v
	return s
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *RowForListBackupDataOutput) SetCreatedTime(v int64) *RowForListBackupDataOutput {
	s.CreatedTime = &v
	return s
}

// SetDataSize sets the DataSize field's value.
func (s *RowForListBackupDataOutput) SetDataSize(v int64) *RowForListBackupDataOutput {
	s.DataSize = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RowForListBackupDataOutput) SetDescription(v string) *RowForListBackupDataOutput {
	s.Description = &v
	return s
}

// SetDetail sets the Detail field's value.
func (s *RowForListBackupDataOutput) SetDetail(v string) *RowForListBackupDataOutput {
	s.Detail = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *RowForListBackupDataOutput) SetExpireTime(v int64) *RowForListBackupDataOutput {
	s.ExpireTime = &v
	return s
}

// SetFinishedTime sets the FinishedTime field's value.
func (s *RowForListBackupDataOutput) SetFinishedTime(v int64) *RowForListBackupDataOutput {
	s.FinishedTime = &v
	return s
}

// SetInUseCount sets the InUseCount field's value.
func (s *RowForListBackupDataOutput) SetInUseCount(v int64) *RowForListBackupDataOutput {
	s.InUseCount = &v
	return s
}

// SetMd5Sum sets the Md5Sum field's value.
func (s *RowForListBackupDataOutput) SetMd5Sum(v string) *RowForListBackupDataOutput {
	s.Md5Sum = &v
	return s
}

// SetProductId sets the ProductId field's value.
func (s *RowForListBackupDataOutput) SetProductId(v string) *RowForListBackupDataOutput {
	s.ProductId = &v
	return s
}

// SetRestoreCount sets the RestoreCount field's value.
func (s *RowForListBackupDataOutput) SetRestoreCount(v int64) *RowForListBackupDataOutput {
	s.RestoreCount = &v
	return s
}

// SetSize sets the Size field's value.
func (s *RowForListBackupDataOutput) SetSize(v int64) *RowForListBackupDataOutput {
	s.Size = &v
	return s
}

// SetSourcePodId sets the SourcePodId field's value.
func (s *RowForListBackupDataOutput) SetSourcePodId(v string) *RowForListBackupDataOutput {
	s.SourcePodId = &v
	return s
}

// SetStartedTime sets the StartedTime field's value.
func (s *RowForListBackupDataOutput) SetStartedTime(v int64) *RowForListBackupDataOutput {
	s.StartedTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *RowForListBackupDataOutput) SetStatus(v string) *RowForListBackupDataOutput {
	s.Status = &v
	return s
}

// SetStorageResource sets the StorageResource field's value.
func (s *RowForListBackupDataOutput) SetStorageResource(v string) *RowForListBackupDataOutput {
	s.StorageResource = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *RowForListBackupDataOutput) SetStorageType(v string) *RowForListBackupDataOutput {
	s.StorageType = &v
	return s
}

// SetUpdatedTime sets the UpdatedTime field's value.
func (s *RowForListBackupDataOutput) SetUpdatedTime(v int64) *RowForListBackupDataOutput {
	s.UpdatedTime = &v
	return s
}
