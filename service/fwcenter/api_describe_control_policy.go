// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeControlPolicyCommon = "DescribeControlPolicy"

// DescribeControlPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeControlPolicyCommon operation. The "output" return
// value will be populated with the DescribeControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeControlPolicyCommon Send returns without error.
//
// See DescribeControlPolicyCommon for more information on using the DescribeControlPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeControlPolicyCommonRequest method.
//    req, resp := client.DescribeControlPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) DescribeControlPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeControlPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeControlPolicyCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation DescribeControlPolicyCommon for usage and error information.
func (c *FWCENTER) DescribeControlPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeControlPolicyCommonRequest(input)
	return out, req.Send()
}

// DescribeControlPolicyCommonWithContext is the same as DescribeControlPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeControlPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) DescribeControlPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeControlPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeControlPolicy = "DescribeControlPolicy"

// DescribeControlPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeControlPolicy operation. The "output" return
// value will be populated with the DescribeControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeControlPolicyCommon Send returns without error.
//
// See DescribeControlPolicy for more information on using the DescribeControlPolicy
// API call, and error handling.
//
//    // Example sending a request using the DescribeControlPolicyRequest method.
//    req, resp := client.DescribeControlPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) DescribeControlPolicyRequest(input *DescribeControlPolicyInput) (req *request.Request, output *DescribeControlPolicyOutput) {
	op := &request.Operation{
		Name:       opDescribeControlPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeControlPolicyInput{}
	}

	output = &DescribeControlPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeControlPolicy API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation DescribeControlPolicy for usage and error information.
func (c *FWCENTER) DescribeControlPolicy(input *DescribeControlPolicyInput) (*DescribeControlPolicyOutput, error) {
	req, out := c.DescribeControlPolicyRequest(input)
	return out, req.Send()
}

// DescribeControlPolicyWithContext is the same as DescribeControlPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeControlPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) DescribeControlPolicyWithContext(ctx volcengine.Context, input *DescribeControlPolicyInput, opts ...request.Option) (*DescribeControlPolicyOutput, error) {
	req, out := c.DescribeControlPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForDescribeControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	Action *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DestPort *string `type:"string" json:",omitempty"`

	DestPortGroupType *string `type:"string" json:",omitempty"`

	DestPortList []*string `type:"list" json:",omitempty"`

	DestPortListV1 []*DestPortListV1ForDescribeControlPolicyOutput `type:"list" json:",omitempty"`

	DestPortType *string `type:"string" json:",omitempty"`

	Destination *string `type:"string" json:",omitempty"`

	DestinationCidrList []*string `type:"list" json:",omitempty"`

	DestinationCidrListV1 []*DestinationCidrListV1ForDescribeControlPolicyOutput `type:"list" json:",omitempty"`

	DestinationDomainList []*string `type:"list" json:",omitempty"`

	DestinationGroupType *string `type:"string" json:",omitempty"`

	DestinationType *string `type:"string" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	EffectStatus *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	HitCnt *int32 `type:"int32" json:",omitempty"`

	IpType *string `type:"string" json:",omitempty"`

	IsEffected *bool `type:"boolean" json:",omitempty"`

	Prio *int32 `type:"int32" json:",omitempty"`

	Proto *string `type:"string" json:",omitempty"`

	RepeatDays []*int32 `type:"list" json:",omitempty"`

	RepeatEndTime *string `type:"string" json:",omitempty"`

	RepeatStartTime *string `type:"string" json:",omitempty"`

	RepeatType *string `type:"string" json:",omitempty"`

	RuleId *string `type:"string" json:",omitempty"`

	Source *string `type:"string" json:",omitempty"`

	SourceCidrList []*string `type:"list" json:",omitempty"`

	SourceCidrListV1 []*SourceCidrListV1ForDescribeControlPolicyOutput `type:"list" json:",omitempty"`

	SourceGroupType *string `type:"string" json:",omitempty"`

	SourceType *string `type:"string" json:",omitempty"`

	StartTime *int32 `type:"int32" json:",omitempty"`

	Status *bool `type:"boolean" json:",omitempty"`

	UpdateTime *int32 `type:"int32" json:",omitempty"`

	UseCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DataForDescribeControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForDescribeControlPolicyOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DataForDescribeControlPolicyOutput) SetAccountId(v string) *DataForDescribeControlPolicyOutput {
	s.AccountId = &v
	return s
}

// SetAction sets the Action field's value.
func (s *DataForDescribeControlPolicyOutput) SetAction(v string) *DataForDescribeControlPolicyOutput {
	s.Action = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForDescribeControlPolicyOutput) SetDescription(v string) *DataForDescribeControlPolicyOutput {
	s.Description = &v
	return s
}

// SetDestPort sets the DestPort field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestPort(v string) *DataForDescribeControlPolicyOutput {
	s.DestPort = &v
	return s
}

// SetDestPortGroupType sets the DestPortGroupType field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestPortGroupType(v string) *DataForDescribeControlPolicyOutput {
	s.DestPortGroupType = &v
	return s
}

// SetDestPortList sets the DestPortList field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestPortList(v []*string) *DataForDescribeControlPolicyOutput {
	s.DestPortList = v
	return s
}

// SetDestPortListV1 sets the DestPortListV1 field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestPortListV1(v []*DestPortListV1ForDescribeControlPolicyOutput) *DataForDescribeControlPolicyOutput {
	s.DestPortListV1 = v
	return s
}

// SetDestPortType sets the DestPortType field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestPortType(v string) *DataForDescribeControlPolicyOutput {
	s.DestPortType = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestination(v string) *DataForDescribeControlPolicyOutput {
	s.Destination = &v
	return s
}

// SetDestinationCidrList sets the DestinationCidrList field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestinationCidrList(v []*string) *DataForDescribeControlPolicyOutput {
	s.DestinationCidrList = v
	return s
}

// SetDestinationCidrListV1 sets the DestinationCidrListV1 field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestinationCidrListV1(v []*DestinationCidrListV1ForDescribeControlPolicyOutput) *DataForDescribeControlPolicyOutput {
	s.DestinationCidrListV1 = v
	return s
}

// SetDestinationDomainList sets the DestinationDomainList field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestinationDomainList(v []*string) *DataForDescribeControlPolicyOutput {
	s.DestinationDomainList = v
	return s
}

// SetDestinationGroupType sets the DestinationGroupType field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestinationGroupType(v string) *DataForDescribeControlPolicyOutput {
	s.DestinationGroupType = &v
	return s
}

// SetDestinationType sets the DestinationType field's value.
func (s *DataForDescribeControlPolicyOutput) SetDestinationType(v string) *DataForDescribeControlPolicyOutput {
	s.DestinationType = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *DataForDescribeControlPolicyOutput) SetDirection(v string) *DataForDescribeControlPolicyOutput {
	s.Direction = &v
	return s
}

// SetEffectStatus sets the EffectStatus field's value.
func (s *DataForDescribeControlPolicyOutput) SetEffectStatus(v int32) *DataForDescribeControlPolicyOutput {
	s.EffectStatus = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DataForDescribeControlPolicyOutput) SetEndTime(v int32) *DataForDescribeControlPolicyOutput {
	s.EndTime = &v
	return s
}

// SetHitCnt sets the HitCnt field's value.
func (s *DataForDescribeControlPolicyOutput) SetHitCnt(v int32) *DataForDescribeControlPolicyOutput {
	s.HitCnt = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *DataForDescribeControlPolicyOutput) SetIpType(v string) *DataForDescribeControlPolicyOutput {
	s.IpType = &v
	return s
}

// SetIsEffected sets the IsEffected field's value.
func (s *DataForDescribeControlPolicyOutput) SetIsEffected(v bool) *DataForDescribeControlPolicyOutput {
	s.IsEffected = &v
	return s
}

// SetPrio sets the Prio field's value.
func (s *DataForDescribeControlPolicyOutput) SetPrio(v int32) *DataForDescribeControlPolicyOutput {
	s.Prio = &v
	return s
}

// SetProto sets the Proto field's value.
func (s *DataForDescribeControlPolicyOutput) SetProto(v string) *DataForDescribeControlPolicyOutput {
	s.Proto = &v
	return s
}

// SetRepeatDays sets the RepeatDays field's value.
func (s *DataForDescribeControlPolicyOutput) SetRepeatDays(v []*int32) *DataForDescribeControlPolicyOutput {
	s.RepeatDays = v
	return s
}

// SetRepeatEndTime sets the RepeatEndTime field's value.
func (s *DataForDescribeControlPolicyOutput) SetRepeatEndTime(v string) *DataForDescribeControlPolicyOutput {
	s.RepeatEndTime = &v
	return s
}

// SetRepeatStartTime sets the RepeatStartTime field's value.
func (s *DataForDescribeControlPolicyOutput) SetRepeatStartTime(v string) *DataForDescribeControlPolicyOutput {
	s.RepeatStartTime = &v
	return s
}

// SetRepeatType sets the RepeatType field's value.
func (s *DataForDescribeControlPolicyOutput) SetRepeatType(v string) *DataForDescribeControlPolicyOutput {
	s.RepeatType = &v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *DataForDescribeControlPolicyOutput) SetRuleId(v string) *DataForDescribeControlPolicyOutput {
	s.RuleId = &v
	return s
}

// SetSource sets the Source field's value.
func (s *DataForDescribeControlPolicyOutput) SetSource(v string) *DataForDescribeControlPolicyOutput {
	s.Source = &v
	return s
}

// SetSourceCidrList sets the SourceCidrList field's value.
func (s *DataForDescribeControlPolicyOutput) SetSourceCidrList(v []*string) *DataForDescribeControlPolicyOutput {
	s.SourceCidrList = v
	return s
}

// SetSourceCidrListV1 sets the SourceCidrListV1 field's value.
func (s *DataForDescribeControlPolicyOutput) SetSourceCidrListV1(v []*SourceCidrListV1ForDescribeControlPolicyOutput) *DataForDescribeControlPolicyOutput {
	s.SourceCidrListV1 = v
	return s
}

// SetSourceGroupType sets the SourceGroupType field's value.
func (s *DataForDescribeControlPolicyOutput) SetSourceGroupType(v string) *DataForDescribeControlPolicyOutput {
	s.SourceGroupType = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *DataForDescribeControlPolicyOutput) SetSourceType(v string) *DataForDescribeControlPolicyOutput {
	s.SourceType = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForDescribeControlPolicyOutput) SetStartTime(v int32) *DataForDescribeControlPolicyOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForDescribeControlPolicyOutput) SetStatus(v bool) *DataForDescribeControlPolicyOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForDescribeControlPolicyOutput) SetUpdateTime(v int32) *DataForDescribeControlPolicyOutput {
	s.UpdateTime = &v
	return s
}

// SetUseCount sets the UseCount field's value.
func (s *DataForDescribeControlPolicyOutput) SetUseCount(v int32) *DataForDescribeControlPolicyOutput {
	s.UseCount = &v
	return s
}

type DescribeControlPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Action []*string `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Destination *string `type:"string" json:",omitempty"`

	// Direction is a required field
	Direction *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfDirectionForDescribeControlPolicyInput"`

	InternetFirewallId *string `type:"string" json:",omitempty"`

	IpType *string `type:"string" json:",omitempty" enum:"EnumOfIpTypeForDescribeControlPolicyInput"`

	OrderDir *string `type:"string" json:",omitempty" enum:"EnumOfOrderDirForDescribeControlPolicyInput"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `max:"1000" type:"int32" json:",omitempty"`

	Proto []*string `type:"list" json:",omitempty"`

	RepeatType []*string `type:"list" json:",omitempty"`

	RuleId *string `type:"string" json:",omitempty"`

	Source *string `type:"string" json:",omitempty"`

	Status []*bool `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeControlPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeControlPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeControlPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeControlPolicyInput"}
	if s.Direction == nil {
		invalidParams.Add(request.NewErrParamRequired("Direction"))
	}
	if s.PageSize != nil && *s.PageSize > 1000 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 1000))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *DescribeControlPolicyInput) SetAction(v []*string) *DescribeControlPolicyInput {
	s.Action = v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeControlPolicyInput) SetDescription(v string) *DescribeControlPolicyInput {
	s.Description = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *DescribeControlPolicyInput) SetDestination(v string) *DescribeControlPolicyInput {
	s.Destination = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *DescribeControlPolicyInput) SetDirection(v string) *DescribeControlPolicyInput {
	s.Direction = &v
	return s
}

// SetInternetFirewallId sets the InternetFirewallId field's value.
func (s *DescribeControlPolicyInput) SetInternetFirewallId(v string) *DescribeControlPolicyInput {
	s.InternetFirewallId = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *DescribeControlPolicyInput) SetIpType(v string) *DescribeControlPolicyInput {
	s.IpType = &v
	return s
}

// SetOrderDir sets the OrderDir field's value.
func (s *DescribeControlPolicyInput) SetOrderDir(v string) *DescribeControlPolicyInput {
	s.OrderDir = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeControlPolicyInput) SetPageNumber(v int32) *DescribeControlPolicyInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeControlPolicyInput) SetPageSize(v int32) *DescribeControlPolicyInput {
	s.PageSize = &v
	return s
}

// SetProto sets the Proto field's value.
func (s *DescribeControlPolicyInput) SetProto(v []*string) *DescribeControlPolicyInput {
	s.Proto = v
	return s
}

// SetRepeatType sets the RepeatType field's value.
func (s *DescribeControlPolicyInput) SetRepeatType(v []*string) *DescribeControlPolicyInput {
	s.RepeatType = v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *DescribeControlPolicyInput) SetRuleId(v string) *DescribeControlPolicyInput {
	s.RuleId = &v
	return s
}

// SetSource sets the Source field's value.
func (s *DescribeControlPolicyInput) SetSource(v string) *DescribeControlPolicyInput {
	s.Source = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeControlPolicyInput) SetStatus(v []*bool) *DescribeControlPolicyInput {
	s.Status = v
	return s
}

type DescribeControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int32 `type:"int32" json:",omitempty"`

	Data []*DataForDescribeControlPolicyOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeControlPolicyOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *DescribeControlPolicyOutput) SetCount(v int32) *DescribeControlPolicyOutput {
	s.Count = &v
	return s
}

// SetData sets the Data field's value.
func (s *DescribeControlPolicyOutput) SetData(v []*DataForDescribeControlPolicyOutput) *DescribeControlPolicyOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeControlPolicyOutput) SetPageNumber(v int32) *DescribeControlPolicyOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeControlPolicyOutput) SetPageSize(v int32) *DescribeControlPolicyOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeControlPolicyOutput) SetTotalCount(v int32) *DescribeControlPolicyOutput {
	s.TotalCount = &v
	return s
}

type DestPortListV1ForDescribeControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	Description *string `max:"32" type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DestPortListV1ForDescribeControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DestPortListV1ForDescribeControlPolicyOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *DestPortListV1ForDescribeControlPolicyOutput) SetAddress(v string) *DestPortListV1ForDescribeControlPolicyOutput {
	s.Address = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DestPortListV1ForDescribeControlPolicyOutput) SetDescription(v string) *DestPortListV1ForDescribeControlPolicyOutput {
	s.Description = &v
	return s
}

// SetType sets the Type field's value.
func (s *DestPortListV1ForDescribeControlPolicyOutput) SetType(v string) *DestPortListV1ForDescribeControlPolicyOutput {
	s.Type = &v
	return s
}

type DestinationCidrListV1ForDescribeControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	Description *string `max:"32" type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DestinationCidrListV1ForDescribeControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DestinationCidrListV1ForDescribeControlPolicyOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *DestinationCidrListV1ForDescribeControlPolicyOutput) SetAddress(v string) *DestinationCidrListV1ForDescribeControlPolicyOutput {
	s.Address = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DestinationCidrListV1ForDescribeControlPolicyOutput) SetDescription(v string) *DestinationCidrListV1ForDescribeControlPolicyOutput {
	s.Description = &v
	return s
}

// SetType sets the Type field's value.
func (s *DestinationCidrListV1ForDescribeControlPolicyOutput) SetType(v string) *DestinationCidrListV1ForDescribeControlPolicyOutput {
	s.Type = &v
	return s
}

type SourceCidrListV1ForDescribeControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	Description *string `max:"32" type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SourceCidrListV1ForDescribeControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceCidrListV1ForDescribeControlPolicyOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *SourceCidrListV1ForDescribeControlPolicyOutput) SetAddress(v string) *SourceCidrListV1ForDescribeControlPolicyOutput {
	s.Address = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SourceCidrListV1ForDescribeControlPolicyOutput) SetDescription(v string) *SourceCidrListV1ForDescribeControlPolicyOutput {
	s.Description = &v
	return s
}

// SetType sets the Type field's value.
func (s *SourceCidrListV1ForDescribeControlPolicyOutput) SetType(v string) *SourceCidrListV1ForDescribeControlPolicyOutput {
	s.Type = &v
	return s
}

const (
	// EnumOfDirectionForDescribeControlPolicyInputIn is a EnumOfDirectionForDescribeControlPolicyInput enum value
	EnumOfDirectionForDescribeControlPolicyInputIn = "in"

	// EnumOfDirectionForDescribeControlPolicyInputOut is a EnumOfDirectionForDescribeControlPolicyInput enum value
	EnumOfDirectionForDescribeControlPolicyInputOut = "out"
)

const (
	// EnumOfIpTypeForDescribeControlPolicyInputV4 is a EnumOfIpTypeForDescribeControlPolicyInput enum value
	EnumOfIpTypeForDescribeControlPolicyInputV4 = "v4"

	// EnumOfIpTypeForDescribeControlPolicyInputV6 is a EnumOfIpTypeForDescribeControlPolicyInput enum value
	EnumOfIpTypeForDescribeControlPolicyInputV6 = "v6"
)

const (
	// EnumOfOrderDirForDescribeControlPolicyInputAsc is a EnumOfOrderDirForDescribeControlPolicyInput enum value
	EnumOfOrderDirForDescribeControlPolicyInputAsc = "asc"

	// EnumOfOrderDirForDescribeControlPolicyInputDesc is a EnumOfOrderDirForDescribeControlPolicyInput enum value
	EnumOfOrderDirForDescribeControlPolicyInputDesc = "desc"
)
