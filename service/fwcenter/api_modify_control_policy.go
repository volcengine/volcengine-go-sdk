// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyControlPolicyCommon = "ModifyControlPolicy"

// ModifyControlPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyControlPolicyCommon operation. The "output" return
// value will be populated with the ModifyControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyControlPolicyCommon Send returns without error.
//
// See ModifyControlPolicyCommon for more information on using the ModifyControlPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyControlPolicyCommonRequest method.
//    req, resp := client.ModifyControlPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) ModifyControlPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyControlPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyControlPolicyCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation ModifyControlPolicyCommon for usage and error information.
func (c *FWCENTER) ModifyControlPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyControlPolicyCommonRequest(input)
	return out, req.Send()
}

// ModifyControlPolicyCommonWithContext is the same as ModifyControlPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyControlPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) ModifyControlPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyControlPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyControlPolicy = "ModifyControlPolicy"

// ModifyControlPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyControlPolicy operation. The "output" return
// value will be populated with the ModifyControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyControlPolicyCommon Send returns without error.
//
// See ModifyControlPolicy for more information on using the ModifyControlPolicy
// API call, and error handling.
//
//    // Example sending a request using the ModifyControlPolicyRequest method.
//    req, resp := client.ModifyControlPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) ModifyControlPolicyRequest(input *ModifyControlPolicyInput) (req *request.Request, output *ModifyControlPolicyOutput) {
	op := &request.Operation{
		Name:       opModifyControlPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyControlPolicyInput{}
	}

	output = &ModifyControlPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyControlPolicy API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation ModifyControlPolicy for usage and error information.
func (c *FWCENTER) ModifyControlPolicy(input *ModifyControlPolicyInput) (*ModifyControlPolicyOutput, error) {
	req, out := c.ModifyControlPolicyRequest(input)
	return out, req.Send()
}

// ModifyControlPolicyWithContext is the same as ModifyControlPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyControlPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) ModifyControlPolicyWithContext(ctx volcengine.Context, input *ModifyControlPolicyInput, opts ...request.Option) (*ModifyControlPolicyOutput, error) {
	req, out := c.ModifyControlPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyControlPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Action is a required field
	Action *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfActionForModifyControlPolicyInput"`

	Description *string `type:"string" json:",omitempty"`

	DestPort *string `type:"string" json:",omitempty"`

	DestPortType *string `type:"string" json:",omitempty" enum:"EnumOfDestPortTypeForModifyControlPolicyInput"`

	// Destination is a required field
	Destination *string `type:"string" json:",omitempty" required:"true"`

	// DestinationType is a required field
	DestinationType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfDestinationTypeForModifyControlPolicyInput"`

	// Direction is a required field
	Direction *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfDirectionForModifyControlPolicyInput"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	InternetFirewallId *string `type:"string" json:",omitempty"`

	IpType *string `type:"string" json:",omitempty" enum:"EnumOfIpTypeForModifyControlPolicyInput"`

	// Proto is a required field
	Proto *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfProtoForModifyControlPolicyInput"`

	RepeatDays []*int32 `type:"list" json:",omitempty"`

	RepeatEndTime *string `type:"string" json:",omitempty"`

	RepeatStartTime *string `type:"string" json:",omitempty"`

	RepeatType *string `type:"string" json:",omitempty" enum:"EnumOfRepeatTypeForModifyControlPolicyInput"`

	// RuleId is a required field
	RuleId *string `type:"string" json:",omitempty" required:"true"`

	// Source is a required field
	Source *string `type:"string" json:",omitempty" required:"true"`

	// SourceType is a required field
	SourceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfSourceTypeForModifyControlPolicyInput"`

	StartTime *int32 `type:"int32" json:",omitempty"`

	Status *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ModifyControlPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyControlPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyControlPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyControlPolicyInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}
	if s.Destination == nil {
		invalidParams.Add(request.NewErrParamRequired("Destination"))
	}
	if s.DestinationType == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationType"))
	}
	if s.Direction == nil {
		invalidParams.Add(request.NewErrParamRequired("Direction"))
	}
	if s.Proto == nil {
		invalidParams.Add(request.NewErrParamRequired("Proto"))
	}
	if s.RuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleId"))
	}
	if s.Source == nil {
		invalidParams.Add(request.NewErrParamRequired("Source"))
	}
	if s.SourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *ModifyControlPolicyInput) SetAction(v string) *ModifyControlPolicyInput {
	s.Action = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyControlPolicyInput) SetDescription(v string) *ModifyControlPolicyInput {
	s.Description = &v
	return s
}

// SetDestPort sets the DestPort field's value.
func (s *ModifyControlPolicyInput) SetDestPort(v string) *ModifyControlPolicyInput {
	s.DestPort = &v
	return s
}

// SetDestPortType sets the DestPortType field's value.
func (s *ModifyControlPolicyInput) SetDestPortType(v string) *ModifyControlPolicyInput {
	s.DestPortType = &v
	return s
}

// SetDestination sets the Destination field's value.
func (s *ModifyControlPolicyInput) SetDestination(v string) *ModifyControlPolicyInput {
	s.Destination = &v
	return s
}

// SetDestinationType sets the DestinationType field's value.
func (s *ModifyControlPolicyInput) SetDestinationType(v string) *ModifyControlPolicyInput {
	s.DestinationType = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *ModifyControlPolicyInput) SetDirection(v string) *ModifyControlPolicyInput {
	s.Direction = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *ModifyControlPolicyInput) SetEndTime(v int32) *ModifyControlPolicyInput {
	s.EndTime = &v
	return s
}

// SetInternetFirewallId sets the InternetFirewallId field's value.
func (s *ModifyControlPolicyInput) SetInternetFirewallId(v string) *ModifyControlPolicyInput {
	s.InternetFirewallId = &v
	return s
}

// SetIpType sets the IpType field's value.
func (s *ModifyControlPolicyInput) SetIpType(v string) *ModifyControlPolicyInput {
	s.IpType = &v
	return s
}

// SetProto sets the Proto field's value.
func (s *ModifyControlPolicyInput) SetProto(v string) *ModifyControlPolicyInput {
	s.Proto = &v
	return s
}

// SetRepeatDays sets the RepeatDays field's value.
func (s *ModifyControlPolicyInput) SetRepeatDays(v []*int32) *ModifyControlPolicyInput {
	s.RepeatDays = v
	return s
}

// SetRepeatEndTime sets the RepeatEndTime field's value.
func (s *ModifyControlPolicyInput) SetRepeatEndTime(v string) *ModifyControlPolicyInput {
	s.RepeatEndTime = &v
	return s
}

// SetRepeatStartTime sets the RepeatStartTime field's value.
func (s *ModifyControlPolicyInput) SetRepeatStartTime(v string) *ModifyControlPolicyInput {
	s.RepeatStartTime = &v
	return s
}

// SetRepeatType sets the RepeatType field's value.
func (s *ModifyControlPolicyInput) SetRepeatType(v string) *ModifyControlPolicyInput {
	s.RepeatType = &v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *ModifyControlPolicyInput) SetRuleId(v string) *ModifyControlPolicyInput {
	s.RuleId = &v
	return s
}

// SetSource sets the Source field's value.
func (s *ModifyControlPolicyInput) SetSource(v string) *ModifyControlPolicyInput {
	s.Source = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *ModifyControlPolicyInput) SetSourceType(v string) *ModifyControlPolicyInput {
	s.SourceType = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ModifyControlPolicyInput) SetStartTime(v int32) *ModifyControlPolicyInput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModifyControlPolicyInput) SetStatus(v bool) *ModifyControlPolicyInput {
	s.Status = &v
	return s
}

type ModifyControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RuleId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyControlPolicyOutput) GoString() string {
	return s.String()
}

// SetRuleId sets the RuleId field's value.
func (s *ModifyControlPolicyOutput) SetRuleId(v string) *ModifyControlPolicyOutput {
	s.RuleId = &v
	return s
}

const (
	// EnumOfActionForModifyControlPolicyInputAccept is a EnumOfActionForModifyControlPolicyInput enum value
	EnumOfActionForModifyControlPolicyInputAccept = "accept"

	// EnumOfActionForModifyControlPolicyInputDeny is a EnumOfActionForModifyControlPolicyInput enum value
	EnumOfActionForModifyControlPolicyInputDeny = "deny"

	// EnumOfActionForModifyControlPolicyInputMonitor is a EnumOfActionForModifyControlPolicyInput enum value
	EnumOfActionForModifyControlPolicyInputMonitor = "monitor"
)

const (
	// EnumOfDestPortTypeForModifyControlPolicyInputPort is a EnumOfDestPortTypeForModifyControlPolicyInput enum value
	EnumOfDestPortTypeForModifyControlPolicyInputPort = "port"

	// EnumOfDestPortTypeForModifyControlPolicyInputGroup is a EnumOfDestPortTypeForModifyControlPolicyInput enum value
	EnumOfDestPortTypeForModifyControlPolicyInputGroup = "group"
)

const (
	// EnumOfDestinationTypeForModifyControlPolicyInputNet is a EnumOfDestinationTypeForModifyControlPolicyInput enum value
	EnumOfDestinationTypeForModifyControlPolicyInputNet = "net"

	// EnumOfDestinationTypeForModifyControlPolicyInputLocation is a EnumOfDestinationTypeForModifyControlPolicyInput enum value
	EnumOfDestinationTypeForModifyControlPolicyInputLocation = "location"

	// EnumOfDestinationTypeForModifyControlPolicyInputGroup is a EnumOfDestinationTypeForModifyControlPolicyInput enum value
	EnumOfDestinationTypeForModifyControlPolicyInputGroup = "group"

	// EnumOfDestinationTypeForModifyControlPolicyInputDomain is a EnumOfDestinationTypeForModifyControlPolicyInput enum value
	EnumOfDestinationTypeForModifyControlPolicyInputDomain = "domain"
)

const (
	// EnumOfDirectionForModifyControlPolicyInputIn is a EnumOfDirectionForModifyControlPolicyInput enum value
	EnumOfDirectionForModifyControlPolicyInputIn = "in"

	// EnumOfDirectionForModifyControlPolicyInputOut is a EnumOfDirectionForModifyControlPolicyInput enum value
	EnumOfDirectionForModifyControlPolicyInputOut = "out"
)

const (
	// EnumOfIpTypeForModifyControlPolicyInputV4 is a EnumOfIpTypeForModifyControlPolicyInput enum value
	EnumOfIpTypeForModifyControlPolicyInputV4 = "v4"

	// EnumOfIpTypeForModifyControlPolicyInputV6 is a EnumOfIpTypeForModifyControlPolicyInput enum value
	EnumOfIpTypeForModifyControlPolicyInputV6 = "v6"
)

const (
	// EnumOfProtoForModifyControlPolicyInputIcmp is a EnumOfProtoForModifyControlPolicyInput enum value
	EnumOfProtoForModifyControlPolicyInputIcmp = "ICMP"

	// EnumOfProtoForModifyControlPolicyInputTcp is a EnumOfProtoForModifyControlPolicyInput enum value
	EnumOfProtoForModifyControlPolicyInputTcp = "TCP"

	// EnumOfProtoForModifyControlPolicyInputUdp is a EnumOfProtoForModifyControlPolicyInput enum value
	EnumOfProtoForModifyControlPolicyInputUdp = "UDP"

	// EnumOfProtoForModifyControlPolicyInputAny is a EnumOfProtoForModifyControlPolicyInput enum value
	EnumOfProtoForModifyControlPolicyInputAny = "ANY"
)

const (
	// EnumOfRepeatTypeForModifyControlPolicyInputPermanent is a EnumOfRepeatTypeForModifyControlPolicyInput enum value
	EnumOfRepeatTypeForModifyControlPolicyInputPermanent = "Permanent"

	// EnumOfRepeatTypeForModifyControlPolicyInputOnce is a EnumOfRepeatTypeForModifyControlPolicyInput enum value
	EnumOfRepeatTypeForModifyControlPolicyInputOnce = "Once"

	// EnumOfRepeatTypeForModifyControlPolicyInputDaily is a EnumOfRepeatTypeForModifyControlPolicyInput enum value
	EnumOfRepeatTypeForModifyControlPolicyInputDaily = "Daily"

	// EnumOfRepeatTypeForModifyControlPolicyInputWeekly is a EnumOfRepeatTypeForModifyControlPolicyInput enum value
	EnumOfRepeatTypeForModifyControlPolicyInputWeekly = "Weekly"

	// EnumOfRepeatTypeForModifyControlPolicyInputMonthly is a EnumOfRepeatTypeForModifyControlPolicyInput enum value
	EnumOfRepeatTypeForModifyControlPolicyInputMonthly = "Monthly"
)

const (
	// EnumOfSourceTypeForModifyControlPolicyInputNet is a EnumOfSourceTypeForModifyControlPolicyInput enum value
	EnumOfSourceTypeForModifyControlPolicyInputNet = "net"

	// EnumOfSourceTypeForModifyControlPolicyInputLocation is a EnumOfSourceTypeForModifyControlPolicyInput enum value
	EnumOfSourceTypeForModifyControlPolicyInputLocation = "location"

	// EnumOfSourceTypeForModifyControlPolicyInputGroup is a EnumOfSourceTypeForModifyControlPolicyInput enum value
	EnumOfSourceTypeForModifyControlPolicyInputGroup = "group"
)
