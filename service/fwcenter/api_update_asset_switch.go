// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateAssetSwitchCommon = "UpdateAssetSwitch"

// UpdateAssetSwitchCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAssetSwitchCommon operation. The "output" return
// value will be populated with the UpdateAssetSwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAssetSwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAssetSwitchCommon Send returns without error.
//
// See UpdateAssetSwitchCommon for more information on using the UpdateAssetSwitchCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAssetSwitchCommonRequest method.
//    req, resp := client.UpdateAssetSwitchCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateAssetSwitchCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAssetSwitchCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAssetSwitchCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateAssetSwitchCommon for usage and error information.
func (c *FWCENTER) UpdateAssetSwitchCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAssetSwitchCommonRequest(input)
	return out, req.Send()
}

// UpdateAssetSwitchCommonWithContext is the same as UpdateAssetSwitchCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAssetSwitchCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateAssetSwitchCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAssetSwitchCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAssetSwitch = "UpdateAssetSwitch"

// UpdateAssetSwitchRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAssetSwitch operation. The "output" return
// value will be populated with the UpdateAssetSwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAssetSwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAssetSwitchCommon Send returns without error.
//
// See UpdateAssetSwitch for more information on using the UpdateAssetSwitch
// API call, and error handling.
//
//    // Example sending a request using the UpdateAssetSwitchRequest method.
//    req, resp := client.UpdateAssetSwitchRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateAssetSwitchRequest(input *UpdateAssetSwitchInput) (req *request.Request, output *UpdateAssetSwitchOutput) {
	op := &request.Operation{
		Name:       opUpdateAssetSwitch,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssetSwitchInput{}
	}

	output = &UpdateAssetSwitchOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAssetSwitch API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateAssetSwitch for usage and error information.
func (c *FWCENTER) UpdateAssetSwitch(input *UpdateAssetSwitchInput) (*UpdateAssetSwitchOutput, error) {
	req, out := c.UpdateAssetSwitchRequest(input)
	return out, req.Send()
}

// UpdateAssetSwitchWithContext is the same as UpdateAssetSwitch with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAssetSwitch for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateAssetSwitchWithContext(ctx volcengine.Context, input *UpdateAssetSwitchInput, opts ...request.Option) (*UpdateAssetSwitchOutput, error) {
	req, out := c.UpdateAssetSwitchRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AssetListForUpdateAssetSwitchInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AssetListForUpdateAssetSwitchInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AssetListForUpdateAssetSwitchInput) GoString() string {
	return s.String()
}

// SetIP sets the IP field's value.
func (s *AssetListForUpdateAssetSwitchInput) SetIP(v string) *AssetListForUpdateAssetSwitchInput {
	s.IP = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *AssetListForUpdateAssetSwitchInput) SetRegion(v string) *AssetListForUpdateAssetSwitchInput {
	s.Region = &v
	return s
}

type AssetListForUpdateAssetSwitchOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AssetListForUpdateAssetSwitchOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AssetListForUpdateAssetSwitchOutput) GoString() string {
	return s.String()
}

// SetIP sets the IP field's value.
func (s *AssetListForUpdateAssetSwitchOutput) SetIP(v string) *AssetListForUpdateAssetSwitchOutput {
	s.IP = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *AssetListForUpdateAssetSwitchOutput) SetRegion(v string) *AssetListForUpdateAssetSwitchOutput {
	s.Region = &v
	return s
}

type ControlPolicyListForUpdateAssetSwitchOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	FirewallId *string `type:"string" json:",omitempty"`

	FirewallType *string `type:"string" json:",omitempty"`

	RuleId *string `type:"string" json:",omitempty"`

	RuleType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ControlPolicyListForUpdateAssetSwitchOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ControlPolicyListForUpdateAssetSwitchOutput) GoString() string {
	return s.String()
}

// SetDirection sets the Direction field's value.
func (s *ControlPolicyListForUpdateAssetSwitchOutput) SetDirection(v string) *ControlPolicyListForUpdateAssetSwitchOutput {
	s.Direction = &v
	return s
}

// SetFirewallId sets the FirewallId field's value.
func (s *ControlPolicyListForUpdateAssetSwitchOutput) SetFirewallId(v string) *ControlPolicyListForUpdateAssetSwitchOutput {
	s.FirewallId = &v
	return s
}

// SetFirewallType sets the FirewallType field's value.
func (s *ControlPolicyListForUpdateAssetSwitchOutput) SetFirewallType(v string) *ControlPolicyListForUpdateAssetSwitchOutput {
	s.FirewallType = &v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *ControlPolicyListForUpdateAssetSwitchOutput) SetRuleId(v string) *ControlPolicyListForUpdateAssetSwitchOutput {
	s.RuleId = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *ControlPolicyListForUpdateAssetSwitchOutput) SetRuleType(v string) *ControlPolicyListForUpdateAssetSwitchOutput {
	s.RuleType = &v
	return s
}

type UpdateAssetSwitchInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetList []*AssetListForUpdateAssetSwitchInput `type:"list" json:",omitempty"`

	// Enable is a required field
	Enable *int32 `type:"int32" json:",omitempty" required:"true"`

	InternetFirewallId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAssetSwitchInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssetSwitchInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAssetSwitchInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAssetSwitchInput"}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetList sets the AssetList field's value.
func (s *UpdateAssetSwitchInput) SetAssetList(v []*AssetListForUpdateAssetSwitchInput) *UpdateAssetSwitchInput {
	s.AssetList = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateAssetSwitchInput) SetEnable(v int32) *UpdateAssetSwitchInput {
	s.Enable = &v
	return s
}

// SetInternetFirewallId sets the InternetFirewallId field's value.
func (s *UpdateAssetSwitchInput) SetInternetFirewallId(v string) *UpdateAssetSwitchInput {
	s.InternetFirewallId = &v
	return s
}

type UpdateAssetSwitchOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AssetList []*AssetListForUpdateAssetSwitchOutput `type:"list" json:",omitempty"`

	ControlPolicyList []*ControlPolicyListForUpdateAssetSwitchOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAssetSwitchOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssetSwitchOutput) GoString() string {
	return s.String()
}

// SetAssetList sets the AssetList field's value.
func (s *UpdateAssetSwitchOutput) SetAssetList(v []*AssetListForUpdateAssetSwitchOutput) *UpdateAssetSwitchOutput {
	s.AssetList = v
	return s
}

// SetControlPolicyList sets the ControlPolicyList field's value.
func (s *UpdateAssetSwitchOutput) SetControlPolicyList(v []*ControlPolicyListForUpdateAssetSwitchOutput) *UpdateAssetSwitchOutput {
	s.ControlPolicyList = v
	return s
}
