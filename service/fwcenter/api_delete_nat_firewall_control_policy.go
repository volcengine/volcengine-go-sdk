// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteNatFirewallControlPolicyCommon = "DeleteNatFirewallControlPolicy"

// DeleteNatFirewallControlPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNatFirewallControlPolicyCommon operation. The "output" return
// value will be populated with the DeleteNatFirewallControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNatFirewallControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNatFirewallControlPolicyCommon Send returns without error.
//
// See DeleteNatFirewallControlPolicyCommon for more information on using the DeleteNatFirewallControlPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteNatFirewallControlPolicyCommonRequest method.
//    req, resp := client.DeleteNatFirewallControlPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) DeleteNatFirewallControlPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteNatFirewallControlPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteNatFirewallControlPolicyCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation DeleteNatFirewallControlPolicyCommon for usage and error information.
func (c *FWCENTER) DeleteNatFirewallControlPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteNatFirewallControlPolicyCommonRequest(input)
	return out, req.Send()
}

// DeleteNatFirewallControlPolicyCommonWithContext is the same as DeleteNatFirewallControlPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNatFirewallControlPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) DeleteNatFirewallControlPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteNatFirewallControlPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteNatFirewallControlPolicy = "DeleteNatFirewallControlPolicy"

// DeleteNatFirewallControlPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNatFirewallControlPolicy operation. The "output" return
// value will be populated with the DeleteNatFirewallControlPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNatFirewallControlPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNatFirewallControlPolicyCommon Send returns without error.
//
// See DeleteNatFirewallControlPolicy for more information on using the DeleteNatFirewallControlPolicy
// API call, and error handling.
//
//    // Example sending a request using the DeleteNatFirewallControlPolicyRequest method.
//    req, resp := client.DeleteNatFirewallControlPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) DeleteNatFirewallControlPolicyRequest(input *DeleteNatFirewallControlPolicyInput) (req *request.Request, output *DeleteNatFirewallControlPolicyOutput) {
	op := &request.Operation{
		Name:       opDeleteNatFirewallControlPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNatFirewallControlPolicyInput{}
	}

	output = &DeleteNatFirewallControlPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteNatFirewallControlPolicy API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation DeleteNatFirewallControlPolicy for usage and error information.
func (c *FWCENTER) DeleteNatFirewallControlPolicy(input *DeleteNatFirewallControlPolicyInput) (*DeleteNatFirewallControlPolicyOutput, error) {
	req, out := c.DeleteNatFirewallControlPolicyRequest(input)
	return out, req.Send()
}

// DeleteNatFirewallControlPolicyWithContext is the same as DeleteNatFirewallControlPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNatFirewallControlPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) DeleteNatFirewallControlPolicyWithContext(ctx volcengine.Context, input *DeleteNatFirewallControlPolicyInput, opts ...request.Option) (*DeleteNatFirewallControlPolicyOutput, error) {
	req, out := c.DeleteNatFirewallControlPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteNatFirewallControlPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Direction is a required field
	Direction *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfDirectionForDeleteNatFirewallControlPolicyInput"`

	// NatFirewallId is a required field
	NatFirewallId *string `type:"string" json:",omitempty" required:"true"`

	RuleId *string `type:"string" json:",omitempty"`

	RuleIdList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteNatFirewallControlPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNatFirewallControlPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNatFirewallControlPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteNatFirewallControlPolicyInput"}
	if s.Direction == nil {
		invalidParams.Add(request.NewErrParamRequired("Direction"))
	}
	if s.NatFirewallId == nil {
		invalidParams.Add(request.NewErrParamRequired("NatFirewallId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDirection sets the Direction field's value.
func (s *DeleteNatFirewallControlPolicyInput) SetDirection(v string) *DeleteNatFirewallControlPolicyInput {
	s.Direction = &v
	return s
}

// SetNatFirewallId sets the NatFirewallId field's value.
func (s *DeleteNatFirewallControlPolicyInput) SetNatFirewallId(v string) *DeleteNatFirewallControlPolicyInput {
	s.NatFirewallId = &v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *DeleteNatFirewallControlPolicyInput) SetRuleId(v string) *DeleteNatFirewallControlPolicyInput {
	s.RuleId = &v
	return s
}

// SetRuleIdList sets the RuleIdList field's value.
func (s *DeleteNatFirewallControlPolicyInput) SetRuleIdList(v []*string) *DeleteNatFirewallControlPolicyInput {
	s.RuleIdList = v
	return s
}

type DeleteNatFirewallControlPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RuleId *string `type:"string" json:",omitempty"`

	RuleIdList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteNatFirewallControlPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNatFirewallControlPolicyOutput) GoString() string {
	return s.String()
}

// SetRuleId sets the RuleId field's value.
func (s *DeleteNatFirewallControlPolicyOutput) SetRuleId(v string) *DeleteNatFirewallControlPolicyOutput {
	s.RuleId = &v
	return s
}

// SetRuleIdList sets the RuleIdList field's value.
func (s *DeleteNatFirewallControlPolicyOutput) SetRuleIdList(v []*string) *DeleteNatFirewallControlPolicyOutput {
	s.RuleIdList = v
	return s
}

const (
	// EnumOfDirectionForDeleteNatFirewallControlPolicyInputIn is a EnumOfDirectionForDeleteNatFirewallControlPolicyInput enum value
	EnumOfDirectionForDeleteNatFirewallControlPolicyInputIn = "in"

	// EnumOfDirectionForDeleteNatFirewallControlPolicyInputOut is a EnumOfDirectionForDeleteNatFirewallControlPolicyInput enum value
	EnumOfDirectionForDeleteNatFirewallControlPolicyInputOut = "out"
)
