// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package fwcenter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateAssetsCommon = "UpdateAssets"

// UpdateAssetsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAssetsCommon operation. The "output" return
// value will be populated with the UpdateAssetsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAssetsCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAssetsCommon Send returns without error.
//
// See UpdateAssetsCommon for more information on using the UpdateAssetsCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAssetsCommonRequest method.
//    req, resp := client.UpdateAssetsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateAssetsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAssetsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAssetsCommon API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateAssetsCommon for usage and error information.
func (c *FWCENTER) UpdateAssetsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAssetsCommonRequest(input)
	return out, req.Send()
}

// UpdateAssetsCommonWithContext is the same as UpdateAssetsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAssetsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateAssetsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAssetsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAssets = "UpdateAssets"

// UpdateAssetsRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAssets operation. The "output" return
// value will be populated with the UpdateAssetsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAssetsCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAssetsCommon Send returns without error.
//
// See UpdateAssets for more information on using the UpdateAssets
// API call, and error handling.
//
//    // Example sending a request using the UpdateAssetsRequest method.
//    req, resp := client.UpdateAssetsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *FWCENTER) UpdateAssetsRequest(input *UpdateAssetsInput) (req *request.Request, output *UpdateAssetsOutput) {
	op := &request.Operation{
		Name:       opUpdateAssets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAssetsInput{}
	}

	output = &UpdateAssetsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAssets API operation for FWCENTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for FWCENTER's
// API operation UpdateAssets for usage and error information.
func (c *FWCENTER) UpdateAssets(input *UpdateAssetsInput) (*UpdateAssetsOutput, error) {
	req, out := c.UpdateAssetsRequest(input)
	return out, req.Send()
}

// UpdateAssetsWithContext is the same as UpdateAssets with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAssets for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *FWCENTER) UpdateAssetsWithContext(ctx volcengine.Context, input *UpdateAssetsInput, opts ...request.Option) (*UpdateAssetsOutput, error) {
	req, out := c.UpdateAssetsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateAssetsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Asset_ips []*string `type:"list" json:"asset_ips,omitempty"`

	Enable *bool `type:"boolean" json:"enable,omitempty"`

	InternetFirewallId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAssetsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssetsInput) GoString() string {
	return s.String()
}

// SetAsset_ips sets the Asset_ips field's value.
func (s *UpdateAssetsInput) SetAsset_ips(v []*string) *UpdateAssetsInput {
	s.Asset_ips = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateAssetsInput) SetEnable(v bool) *UpdateAssetsInput {
	s.Enable = &v
	return s
}

// SetInternetFirewallId sets the InternetFirewallId field's value.
func (s *UpdateAssetsInput) SetInternetFirewallId(v string) *UpdateAssetsInput {
	s.InternetFirewallId = &v
	return s
}

type UpdateAssetsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Asset_ips []*string `type:"list" json:"asset_ips,omitempty"`
}

// String returns the string representation
func (s UpdateAssetsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAssetsOutput) GoString() string {
	return s.String()
}

// SetAsset_ips sets the Asset_ips field's value.
func (s *UpdateAssetsOutput) SetAsset_ips(v []*string) *UpdateAssetsOutput {
	s.Asset_ips = v
	return s
}
