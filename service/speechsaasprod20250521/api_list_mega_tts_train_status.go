// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod20250521

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListMegaTTSTrainStatusCommon = "ListMegaTTSTrainStatus"

// ListMegaTTSTrainStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListMegaTTSTrainStatusCommon operation. The "output" return
// value will be populated with the ListMegaTTSTrainStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListMegaTTSTrainStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListMegaTTSTrainStatusCommon Send returns without error.
//
// See ListMegaTTSTrainStatusCommon for more information on using the ListMegaTTSTrainStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the ListMegaTTSTrainStatusCommonRequest method.
//    req, resp := client.ListMegaTTSTrainStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListMegaTTSTrainStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListMegaTTSTrainStatusCommon API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation ListMegaTTSTrainStatusCommon for usage and error information.
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListMegaTTSTrainStatusCommonRequest(input)
	return out, req.Send()
}

// ListMegaTTSTrainStatusCommonWithContext is the same as ListMegaTTSTrainStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListMegaTTSTrainStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListMegaTTSTrainStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListMegaTTSTrainStatus = "ListMegaTTSTrainStatus"

// ListMegaTTSTrainStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the ListMegaTTSTrainStatus operation. The "output" return
// value will be populated with the ListMegaTTSTrainStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListMegaTTSTrainStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListMegaTTSTrainStatusCommon Send returns without error.
//
// See ListMegaTTSTrainStatus for more information on using the ListMegaTTSTrainStatus
// API call, and error handling.
//
//    // Example sending a request using the ListMegaTTSTrainStatusRequest method.
//    req, resp := client.ListMegaTTSTrainStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatusRequest(input *ListMegaTTSTrainStatusInput) (req *request.Request, output *ListMegaTTSTrainStatusOutput) {
	op := &request.Operation{
		Name:       opListMegaTTSTrainStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListMegaTTSTrainStatusInput{}
	}

	output = &ListMegaTTSTrainStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListMegaTTSTrainStatus API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation ListMegaTTSTrainStatus for usage and error information.
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatus(input *ListMegaTTSTrainStatusInput) (*ListMegaTTSTrainStatusOutput, error) {
	req, out := c.ListMegaTTSTrainStatusRequest(input)
	return out, req.Send()
}

// ListMegaTTSTrainStatusWithContext is the same as ListMegaTTSTrainStatus with the addition of
// the ability to pass a context and additional request options.
//
// See ListMegaTTSTrainStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) ListMegaTTSTrainStatusWithContext(ctx volcengine.Context, input *ListMegaTTSTrainStatusInput, opts ...request.Option) (*ListMegaTTSTrainStatusOutput, error) {
	req, out := c.ListMegaTTSTrainStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListMegaTTSTrainStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExpireTimeEnd *int64 `type:"int64" json:",omitempty"`

	ExpireTimeStart *int64 `type:"int64" json:",omitempty"`

	OrderTimeEnd *int64 `type:"int64" json:",omitempty"`

	OrderTimeStart *int64 `type:"int64" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	SpeakerIDs []*string `type:"list" json:",omitempty"`

	// State is a required field
	State *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListMegaTTSTrainStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMegaTTSTrainStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListMegaTTSTrainStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListMegaTTSTrainStatusInput"}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}
	if s.State == nil {
		invalidParams.Add(request.NewErrParamRequired("State"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetExpireTimeEnd sets the ExpireTimeEnd field's value.
func (s *ListMegaTTSTrainStatusInput) SetExpireTimeEnd(v int64) *ListMegaTTSTrainStatusInput {
	s.ExpireTimeEnd = &v
	return s
}

// SetExpireTimeStart sets the ExpireTimeStart field's value.
func (s *ListMegaTTSTrainStatusInput) SetExpireTimeStart(v int64) *ListMegaTTSTrainStatusInput {
	s.ExpireTimeStart = &v
	return s
}

// SetOrderTimeEnd sets the OrderTimeEnd field's value.
func (s *ListMegaTTSTrainStatusInput) SetOrderTimeEnd(v int64) *ListMegaTTSTrainStatusInput {
	s.OrderTimeEnd = &v
	return s
}

// SetOrderTimeStart sets the OrderTimeStart field's value.
func (s *ListMegaTTSTrainStatusInput) SetOrderTimeStart(v int64) *ListMegaTTSTrainStatusInput {
	s.OrderTimeStart = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListMegaTTSTrainStatusInput) SetProjectName(v string) *ListMegaTTSTrainStatusInput {
	s.ProjectName = &v
	return s
}

// SetSpeakerIDs sets the SpeakerIDs field's value.
func (s *ListMegaTTSTrainStatusInput) SetSpeakerIDs(v []*string) *ListMegaTTSTrainStatusInput {
	s.SpeakerIDs = v
	return s
}

// SetState sets the State field's value.
func (s *ListMegaTTSTrainStatusInput) SetState(v string) *ListMegaTTSTrainStatusInput {
	s.State = &v
	return s
}

type ListMegaTTSTrainStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Statuses []*StatusForListMegaTTSTrainStatusOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListMegaTTSTrainStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMegaTTSTrainStatusOutput) GoString() string {
	return s.String()
}

// SetStatuses sets the Statuses field's value.
func (s *ListMegaTTSTrainStatusOutput) SetStatuses(v []*StatusForListMegaTTSTrainStatusOutput) *ListMegaTTSTrainStatusOutput {
	s.Statuses = v
	return s
}

type StatusForListMegaTTSTrainStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alias *string `type:"string" json:",omitempty"`

	AvailableTrainingTimes *int32 `type:"int32" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	DemoAudio *string `type:"string" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	InstanceNO *string `type:"string" json:",omitempty"`

	IsActivable *string `type:"string" json:",omitempty"`

	OrderTime *int64 `type:"int64" json:",omitempty"`

	SpeakerID *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StatusForListMegaTTSTrainStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatusForListMegaTTSTrainStatusOutput) GoString() string {
	return s.String()
}

// SetAlias sets the Alias field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetAlias(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.Alias = &v
	return s
}

// SetAvailableTrainingTimes sets the AvailableTrainingTimes field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetAvailableTrainingTimes(v int32) *StatusForListMegaTTSTrainStatusOutput {
	s.AvailableTrainingTimes = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetCreateTime(v int64) *StatusForListMegaTTSTrainStatusOutput {
	s.CreateTime = &v
	return s
}

// SetDemoAudio sets the DemoAudio field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetDemoAudio(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.DemoAudio = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetExpireTime(v int64) *StatusForListMegaTTSTrainStatusOutput {
	s.ExpireTime = &v
	return s
}

// SetInstanceNO sets the InstanceNO field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetInstanceNO(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.InstanceNO = &v
	return s
}

// SetIsActivable sets the IsActivable field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetIsActivable(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.IsActivable = &v
	return s
}

// SetOrderTime sets the OrderTime field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetOrderTime(v int64) *StatusForListMegaTTSTrainStatusOutput {
	s.OrderTime = &v
	return s
}

// SetSpeakerID sets the SpeakerID field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetSpeakerID(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.SpeakerID = &v
	return s
}

// SetState sets the State field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetState(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.State = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *StatusForListMegaTTSTrainStatusOutput) SetVersion(v string) *StatusForListMegaTTSTrainStatusOutput {
	s.Version = &v
	return s
}
