// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod20250521

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opBatchListMegaTTSTrainStatusCommon = "BatchListMegaTTSTrainStatus"

// BatchListMegaTTSTrainStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchListMegaTTSTrainStatusCommon operation. The "output" return
// value will be populated with the BatchListMegaTTSTrainStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchListMegaTTSTrainStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchListMegaTTSTrainStatusCommon Send returns without error.
//
// See BatchListMegaTTSTrainStatusCommon for more information on using the BatchListMegaTTSTrainStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the BatchListMegaTTSTrainStatusCommonRequest method.
//    req, resp := client.BatchListMegaTTSTrainStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBatchListMegaTTSTrainStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchListMegaTTSTrainStatusCommon API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation BatchListMegaTTSTrainStatusCommon for usage and error information.
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BatchListMegaTTSTrainStatusCommonRequest(input)
	return out, req.Send()
}

// BatchListMegaTTSTrainStatusCommonWithContext is the same as BatchListMegaTTSTrainStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BatchListMegaTTSTrainStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BatchListMegaTTSTrainStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchListMegaTTSTrainStatus = "BatchListMegaTTSTrainStatus"

// BatchListMegaTTSTrainStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchListMegaTTSTrainStatus operation. The "output" return
// value will be populated with the BatchListMegaTTSTrainStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchListMegaTTSTrainStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchListMegaTTSTrainStatusCommon Send returns without error.
//
// See BatchListMegaTTSTrainStatus for more information on using the BatchListMegaTTSTrainStatus
// API call, and error handling.
//
//    // Example sending a request using the BatchListMegaTTSTrainStatusRequest method.
//    req, resp := client.BatchListMegaTTSTrainStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatusRequest(input *BatchListMegaTTSTrainStatusInput) (req *request.Request, output *BatchListMegaTTSTrainStatusOutput) {
	op := &request.Operation{
		Name:       opBatchListMegaTTSTrainStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BatchListMegaTTSTrainStatusInput{}
	}

	output = &BatchListMegaTTSTrainStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchListMegaTTSTrainStatus API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation BatchListMegaTTSTrainStatus for usage and error information.
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatus(input *BatchListMegaTTSTrainStatusInput) (*BatchListMegaTTSTrainStatusOutput, error) {
	req, out := c.BatchListMegaTTSTrainStatusRequest(input)
	return out, req.Send()
}

// BatchListMegaTTSTrainStatusWithContext is the same as BatchListMegaTTSTrainStatus with the addition of
// the ability to pass a context and additional request options.
//
// See BatchListMegaTTSTrainStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) BatchListMegaTTSTrainStatusWithContext(ctx volcengine.Context, input *BatchListMegaTTSTrainStatusInput, opts ...request.Option) (*BatchListMegaTTSTrainStatusOutput, error) {
	req, out := c.BatchListMegaTTSTrainStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BatchListMegaTTSTrainStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExpireTimeEnd *int64 `type:"int64" json:",omitempty"`

	ExpireTimeStart *int64 `type:"int64" json:",omitempty"`

	MaxResults *int32 `max:"1000" type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	OrderTimeEnd *int64 `type:"int64" json:",omitempty"`

	OrderTimeStart *int64 `type:"int64" json:",omitempty"`

	PageNumber *int32 `min:"1" max:"10000" type:"int32" json:",omitempty"`

	PageSize *int32 `min:"1" max:"1000" type:"int32" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	SpeakerIDs []*string `type:"list" json:",omitempty"`

	// State is a required field
	State *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s BatchListMegaTTSTrainStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchListMegaTTSTrainStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *BatchListMegaTTSTrainStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "BatchListMegaTTSTrainStatusInput"}
	if s.MaxResults != nil && *s.MaxResults > 1000 {
		invalidParams.Add(request.NewErrParamMaxValue("MaxResults", 1000))
	}
	if s.PageNumber != nil && *s.PageNumber < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageNumber", 1))
	}
	if s.PageNumber != nil && *s.PageNumber > 10000 {
		invalidParams.Add(request.NewErrParamMaxValue("PageNumber", 10000))
	}
	if s.PageSize != nil && *s.PageSize < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageSize", 1))
	}
	if s.PageSize != nil && *s.PageSize > 1000 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 1000))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}
	if s.State == nil {
		invalidParams.Add(request.NewErrParamRequired("State"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetExpireTimeEnd sets the ExpireTimeEnd field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetExpireTimeEnd(v int64) *BatchListMegaTTSTrainStatusInput {
	s.ExpireTimeEnd = &v
	return s
}

// SetExpireTimeStart sets the ExpireTimeStart field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetExpireTimeStart(v int64) *BatchListMegaTTSTrainStatusInput {
	s.ExpireTimeStart = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetMaxResults(v int32) *BatchListMegaTTSTrainStatusInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetNextToken(v string) *BatchListMegaTTSTrainStatusInput {
	s.NextToken = &v
	return s
}

// SetOrderTimeEnd sets the OrderTimeEnd field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetOrderTimeEnd(v int64) *BatchListMegaTTSTrainStatusInput {
	s.OrderTimeEnd = &v
	return s
}

// SetOrderTimeStart sets the OrderTimeStart field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetOrderTimeStart(v int64) *BatchListMegaTTSTrainStatusInput {
	s.OrderTimeStart = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetPageNumber(v int32) *BatchListMegaTTSTrainStatusInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetPageSize(v int32) *BatchListMegaTTSTrainStatusInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetProjectName(v string) *BatchListMegaTTSTrainStatusInput {
	s.ProjectName = &v
	return s
}

// SetSpeakerIDs sets the SpeakerIDs field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetSpeakerIDs(v []*string) *BatchListMegaTTSTrainStatusInput {
	s.SpeakerIDs = v
	return s
}

// SetState sets the State field's value.
func (s *BatchListMegaTTSTrainStatusInput) SetState(v string) *BatchListMegaTTSTrainStatusInput {
	s.State = &v
	return s
}

type BatchListMegaTTSTrainStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Statuses []*StatusForBatchListMegaTTSTrainStatusOutput `type:"list" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s BatchListMegaTTSTrainStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchListMegaTTSTrainStatusOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *BatchListMegaTTSTrainStatusOutput) SetNextToken(v string) *BatchListMegaTTSTrainStatusOutput {
	s.NextToken = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *BatchListMegaTTSTrainStatusOutput) SetPageNumber(v int32) *BatchListMegaTTSTrainStatusOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *BatchListMegaTTSTrainStatusOutput) SetPageSize(v int32) *BatchListMegaTTSTrainStatusOutput {
	s.PageSize = &v
	return s
}

// SetStatuses sets the Statuses field's value.
func (s *BatchListMegaTTSTrainStatusOutput) SetStatuses(v []*StatusForBatchListMegaTTSTrainStatusOutput) *BatchListMegaTTSTrainStatusOutput {
	s.Statuses = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *BatchListMegaTTSTrainStatusOutput) SetTotalCount(v int32) *BatchListMegaTTSTrainStatusOutput {
	s.TotalCount = &v
	return s
}

type StatusForBatchListMegaTTSTrainStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alias *string `type:"string" json:",omitempty"`

	AvailableTrainingTimes *int32 `type:"int32" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	DemoAudio *string `type:"string" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	InstanceNO *string `type:"string" json:",omitempty"`

	IsActivable *string `type:"string" json:",omitempty"`

	OrderTime *int64 `type:"int64" json:",omitempty"`

	SpeakerID *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StatusForBatchListMegaTTSTrainStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatusForBatchListMegaTTSTrainStatusOutput) GoString() string {
	return s.String()
}

// SetAlias sets the Alias field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetAlias(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.Alias = &v
	return s
}

// SetAvailableTrainingTimes sets the AvailableTrainingTimes field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetAvailableTrainingTimes(v int32) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.AvailableTrainingTimes = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetCreateTime(v int64) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.CreateTime = &v
	return s
}

// SetDemoAudio sets the DemoAudio field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetDemoAudio(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.DemoAudio = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetExpireTime(v int64) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.ExpireTime = &v
	return s
}

// SetInstanceNO sets the InstanceNO field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetInstanceNO(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.InstanceNO = &v
	return s
}

// SetIsActivable sets the IsActivable field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetIsActivable(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.IsActivable = &v
	return s
}

// SetOrderTime sets the OrderTime field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetOrderTime(v int64) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.OrderTime = &v
	return s
}

// SetSpeakerID sets the SpeakerID field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetSpeakerID(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.SpeakerID = &v
	return s
}

// SetState sets the State field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetState(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.State = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *StatusForBatchListMegaTTSTrainStatusOutput) SetVersion(v string) *StatusForBatchListMegaTTSTrainStatusOutput {
	s.Version = &v
	return s
}
