// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod20250521

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opOrderAccessResourcePacksCommon = "OrderAccessResourcePacks"

// OrderAccessResourcePacksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the OrderAccessResourcePacksCommon operation. The "output" return
// value will be populated with the OrderAccessResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned OrderAccessResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after OrderAccessResourcePacksCommon Send returns without error.
//
// See OrderAccessResourcePacksCommon for more information on using the OrderAccessResourcePacksCommon
// API call, and error handling.
//
//    // Example sending a request using the OrderAccessResourcePacksCommonRequest method.
//    req, resp := client.OrderAccessResourcePacksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opOrderAccessResourcePacksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// OrderAccessResourcePacksCommon API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation OrderAccessResourcePacksCommon for usage and error information.
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.OrderAccessResourcePacksCommonRequest(input)
	return out, req.Send()
}

// OrderAccessResourcePacksCommonWithContext is the same as OrderAccessResourcePacksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See OrderAccessResourcePacksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.OrderAccessResourcePacksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opOrderAccessResourcePacks = "OrderAccessResourcePacks"

// OrderAccessResourcePacksRequest generates a "volcengine/request.Request" representing the
// client's request for the OrderAccessResourcePacks operation. The "output" return
// value will be populated with the OrderAccessResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned OrderAccessResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after OrderAccessResourcePacksCommon Send returns without error.
//
// See OrderAccessResourcePacks for more information on using the OrderAccessResourcePacks
// API call, and error handling.
//
//    // Example sending a request using the OrderAccessResourcePacksRequest method.
//    req, resp := client.OrderAccessResourcePacksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacksRequest(input *OrderAccessResourcePacksInput) (req *request.Request, output *OrderAccessResourcePacksOutput) {
	op := &request.Operation{
		Name:       opOrderAccessResourcePacks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &OrderAccessResourcePacksInput{}
	}

	output = &OrderAccessResourcePacksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// OrderAccessResourcePacks API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation OrderAccessResourcePacks for usage and error information.
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacks(input *OrderAccessResourcePacksInput) (*OrderAccessResourcePacksOutput, error) {
	req, out := c.OrderAccessResourcePacksRequest(input)
	return out, req.Send()
}

// OrderAccessResourcePacksWithContext is the same as OrderAccessResourcePacks with the addition of
// the ability to pass a context and additional request options.
//
// See OrderAccessResourcePacks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) OrderAccessResourcePacksWithContext(ctx volcengine.Context, input *OrderAccessResourcePacksInput, opts ...request.Option) (*OrderAccessResourcePacksOutput, error) {
	req, out := c.OrderAccessResourcePacksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type OrderAccessResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoUseCoupon *bool `type:"boolean" json:",omitempty"`

	// Code is a required field
	Code *string `type:"string" json:",omitempty" required:"true"`

	CouponID *string `type:"string" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	// Quantity is a required field
	Quantity *int32 `type:"int32" json:",omitempty" required:"true"`

	// ResourceID is a required field
	ResourceID *string `type:"string" json:",omitempty" required:"true"`

	Tags []*TagForOrderAccessResourcePacksInput `type:"list" json:",omitempty"`

	// Times is a required field
	Times *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s OrderAccessResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderAccessResourcePacksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *OrderAccessResourcePacksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "OrderAccessResourcePacksInput"}
	if s.Code == nil {
		invalidParams.Add(request.NewErrParamRequired("Code"))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}
	if s.Quantity == nil {
		invalidParams.Add(request.NewErrParamRequired("Quantity"))
	}
	if s.ResourceID == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceID"))
	}
	if s.Times == nil {
		invalidParams.Add(request.NewErrParamRequired("Times"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoUseCoupon sets the AutoUseCoupon field's value.
func (s *OrderAccessResourcePacksInput) SetAutoUseCoupon(v bool) *OrderAccessResourcePacksInput {
	s.AutoUseCoupon = &v
	return s
}

// SetCode sets the Code field's value.
func (s *OrderAccessResourcePacksInput) SetCode(v string) *OrderAccessResourcePacksInput {
	s.Code = &v
	return s
}

// SetCouponID sets the CouponID field's value.
func (s *OrderAccessResourcePacksInput) SetCouponID(v string) *OrderAccessResourcePacksInput {
	s.CouponID = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *OrderAccessResourcePacksInput) SetProjectName(v string) *OrderAccessResourcePacksInput {
	s.ProjectName = &v
	return s
}

// SetQuantity sets the Quantity field's value.
func (s *OrderAccessResourcePacksInput) SetQuantity(v int32) *OrderAccessResourcePacksInput {
	s.Quantity = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *OrderAccessResourcePacksInput) SetResourceID(v string) *OrderAccessResourcePacksInput {
	s.ResourceID = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *OrderAccessResourcePacksInput) SetTags(v []*TagForOrderAccessResourcePacksInput) *OrderAccessResourcePacksInput {
	s.Tags = v
	return s
}

// SetTimes sets the Times field's value.
func (s *OrderAccessResourcePacksInput) SetTimes(v int32) *OrderAccessResourcePacksInput {
	s.Times = &v
	return s
}

type OrderAccessResourcePacksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderIDs []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s OrderAccessResourcePacksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderAccessResourcePacksOutput) GoString() string {
	return s.String()
}

// SetOrderIDs sets the OrderIDs field's value.
func (s *OrderAccessResourcePacksOutput) SetOrderIDs(v []*string) *OrderAccessResourcePacksOutput {
	s.OrderIDs = v
	return s
}

type TagForOrderAccessResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForOrderAccessResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForOrderAccessResourcePacksInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForOrderAccessResourcePacksInput) SetKey(v string) *TagForOrderAccessResourcePacksInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForOrderAccessResourcePacksInput) SetValue(v string) *TagForOrderAccessResourcePacksInput {
	s.Value = &v
	return s
}
