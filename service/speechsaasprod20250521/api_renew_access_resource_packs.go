// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod20250521

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opRenewAccessResourcePacksCommon = "RenewAccessResourcePacks"

// RenewAccessResourcePacksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the RenewAccessResourcePacksCommon operation. The "output" return
// value will be populated with the RenewAccessResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RenewAccessResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after RenewAccessResourcePacksCommon Send returns without error.
//
// See RenewAccessResourcePacksCommon for more information on using the RenewAccessResourcePacksCommon
// API call, and error handling.
//
//    // Example sending a request using the RenewAccessResourcePacksCommonRequest method.
//    req, resp := client.RenewAccessResourcePacksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRenewAccessResourcePacksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RenewAccessResourcePacksCommon API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation RenewAccessResourcePacksCommon for usage and error information.
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RenewAccessResourcePacksCommonRequest(input)
	return out, req.Send()
}

// RenewAccessResourcePacksCommonWithContext is the same as RenewAccessResourcePacksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RenewAccessResourcePacksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RenewAccessResourcePacksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRenewAccessResourcePacks = "RenewAccessResourcePacks"

// RenewAccessResourcePacksRequest generates a "volcengine/request.Request" representing the
// client's request for the RenewAccessResourcePacks operation. The "output" return
// value will be populated with the RenewAccessResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RenewAccessResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after RenewAccessResourcePacksCommon Send returns without error.
//
// See RenewAccessResourcePacks for more information on using the RenewAccessResourcePacks
// API call, and error handling.
//
//    // Example sending a request using the RenewAccessResourcePacksRequest method.
//    req, resp := client.RenewAccessResourcePacksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacksRequest(input *RenewAccessResourcePacksInput) (req *request.Request, output *RenewAccessResourcePacksOutput) {
	op := &request.Operation{
		Name:       opRenewAccessResourcePacks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RenewAccessResourcePacksInput{}
	}

	output = &RenewAccessResourcePacksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RenewAccessResourcePacks API operation for SPEECH_SAAS_PROD20250521.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD20250521's
// API operation RenewAccessResourcePacks for usage and error information.
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacks(input *RenewAccessResourcePacksInput) (*RenewAccessResourcePacksOutput, error) {
	req, out := c.RenewAccessResourcePacksRequest(input)
	return out, req.Send()
}

// RenewAccessResourcePacksWithContext is the same as RenewAccessResourcePacks with the addition of
// the ability to pass a context and additional request options.
//
// See RenewAccessResourcePacks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD20250521) RenewAccessResourcePacksWithContext(ctx volcengine.Context, input *RenewAccessResourcePacksInput, opts ...request.Option) (*RenewAccessResourcePacksOutput, error) {
	req, out := c.RenewAccessResourcePacksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type RenewAccessResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoUseCoupon *bool `type:"boolean" json:",omitempty"`

	CouponID *string `type:"string" json:",omitempty"`

	SpeakerIDs []*string `type:"list" json:",omitempty"`

	// Times is a required field
	Times *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s RenewAccessResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RenewAccessResourcePacksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RenewAccessResourcePacksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RenewAccessResourcePacksInput"}
	if s.Times == nil {
		invalidParams.Add(request.NewErrParamRequired("Times"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoUseCoupon sets the AutoUseCoupon field's value.
func (s *RenewAccessResourcePacksInput) SetAutoUseCoupon(v bool) *RenewAccessResourcePacksInput {
	s.AutoUseCoupon = &v
	return s
}

// SetCouponID sets the CouponID field's value.
func (s *RenewAccessResourcePacksInput) SetCouponID(v string) *RenewAccessResourcePacksInput {
	s.CouponID = &v
	return s
}

// SetSpeakerIDs sets the SpeakerIDs field's value.
func (s *RenewAccessResourcePacksInput) SetSpeakerIDs(v []*string) *RenewAccessResourcePacksInput {
	s.SpeakerIDs = v
	return s
}

// SetTimes sets the Times field's value.
func (s *RenewAccessResourcePacksInput) SetTimes(v int32) *RenewAccessResourcePacksInput {
	s.Times = &v
	return s
}

type RenewAccessResourcePacksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderIDs []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s RenewAccessResourcePacksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RenewAccessResourcePacksOutput) GoString() string {
	return s.String()
}

// SetOrderIDs sets the OrderIDs field's value.
func (s *RenewAccessResourcePacksOutput) SetOrderIDs(v []*string) *RenewAccessResourcePacksOutput {
	s.OrderIDs = v
	return s
}
