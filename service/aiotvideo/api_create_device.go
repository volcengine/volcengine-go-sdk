// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateDeviceCommon = "CreateDevice"

// CreateDeviceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDeviceCommon operation. The "output" return
// value will be populated with the CreateDeviceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDeviceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDeviceCommon Send returns without error.
//
// See CreateDeviceCommon for more information on using the CreateDeviceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDeviceCommonRequest method.
//    req, resp := client.CreateDeviceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) CreateDeviceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDeviceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDeviceCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation CreateDeviceCommon for usage and error information.
func (c *AIOTVIDEO) CreateDeviceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDeviceCommonRequest(input)
	return out, req.Send()
}

// CreateDeviceCommonWithContext is the same as CreateDeviceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDeviceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) CreateDeviceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDeviceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDevice = "CreateDevice"

// CreateDeviceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDevice operation. The "output" return
// value will be populated with the CreateDeviceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDeviceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDeviceCommon Send returns without error.
//
// See CreateDevice for more information on using the CreateDevice
// API call, and error handling.
//
//    // Example sending a request using the CreateDeviceRequest method.
//    req, resp := client.CreateDeviceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) CreateDeviceRequest(input *CreateDeviceInput) (req *request.Request, output *CreateDeviceOutput) {
	op := &request.Operation{
		Name:       opCreateDevice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDeviceInput{}
	}

	output = &CreateDeviceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDevice API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation CreateDevice for usage and error information.
func (c *AIOTVIDEO) CreateDevice(input *CreateDeviceInput) (*CreateDeviceOutput, error) {
	req, out := c.CreateDeviceRequest(input)
	return out, req.Send()
}

// CreateDeviceWithContext is the same as CreateDevice with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDevice for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) CreateDeviceWithContext(ctx volcengine.Context, input *CreateDeviceInput, opts ...request.Option) (*CreateDeviceOutput, error) {
	req, out := c.CreateDeviceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AlertNotificationForCreateDeviceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Device *bool `type:"boolean" json:",omitempty"`

	DeviceFault *bool `type:"boolean" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	GPS *bool `type:"boolean" json:",omitempty"`

	Other *bool `type:"boolean" json:",omitempty"`

	Phone *bool `type:"boolean" json:",omitempty"`

	SMS *bool `type:"boolean" json:",omitempty"`

	Video *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AlertNotificationForCreateDeviceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AlertNotificationForCreateDeviceInput) GoString() string {
	return s.String()
}

// SetDevice sets the Device field's value.
func (s *AlertNotificationForCreateDeviceInput) SetDevice(v bool) *AlertNotificationForCreateDeviceInput {
	s.Device = &v
	return s
}

// SetDeviceFault sets the DeviceFault field's value.
func (s *AlertNotificationForCreateDeviceInput) SetDeviceFault(v bool) *AlertNotificationForCreateDeviceInput {
	s.DeviceFault = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *AlertNotificationForCreateDeviceInput) SetEnabled(v bool) *AlertNotificationForCreateDeviceInput {
	s.Enabled = &v
	return s
}

// SetGPS sets the GPS field's value.
func (s *AlertNotificationForCreateDeviceInput) SetGPS(v bool) *AlertNotificationForCreateDeviceInput {
	s.GPS = &v
	return s
}

// SetOther sets the Other field's value.
func (s *AlertNotificationForCreateDeviceInput) SetOther(v bool) *AlertNotificationForCreateDeviceInput {
	s.Other = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *AlertNotificationForCreateDeviceInput) SetPhone(v bool) *AlertNotificationForCreateDeviceInput {
	s.Phone = &v
	return s
}

// SetSMS sets the SMS field's value.
func (s *AlertNotificationForCreateDeviceInput) SetSMS(v bool) *AlertNotificationForCreateDeviceInput {
	s.SMS = &v
	return s
}

// SetVideo sets the Video field's value.
func (s *AlertNotificationForCreateDeviceInput) SetVideo(v bool) *AlertNotificationForCreateDeviceInput {
	s.Video = &v
	return s
}

type CoordinatesForCreateDeviceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Latitude *float64 `type:"float" json:",omitempty"`

	Longitude *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s CoordinatesForCreateDeviceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CoordinatesForCreateDeviceInput) GoString() string {
	return s.String()
}

// SetLatitude sets the Latitude field's value.
func (s *CoordinatesForCreateDeviceInput) SetLatitude(v float64) *CoordinatesForCreateDeviceInput {
	s.Latitude = &v
	return s
}

// SetLongitude sets the Longitude field's value.
func (s *CoordinatesForCreateDeviceInput) SetLongitude(v float64) *CoordinatesForCreateDeviceInput {
	s.Longitude = &v
	return s
}

type CoordinatesForCreateDeviceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Latitude *float64 `type:"float" json:",omitempty"`

	Longitude *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s CoordinatesForCreateDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CoordinatesForCreateDeviceOutput) GoString() string {
	return s.String()
}

// SetLatitude sets the Latitude field's value.
func (s *CoordinatesForCreateDeviceOutput) SetLatitude(v float64) *CoordinatesForCreateDeviceOutput {
	s.Latitude = &v
	return s
}

// SetLongitude sets the Longitude field's value.
func (s *CoordinatesForCreateDeviceOutput) SetLongitude(v float64) *CoordinatesForCreateDeviceOutput {
	s.Longitude = &v
	return s
}

type CreateDeviceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlertNotification *AlertNotificationForCreateDeviceInput `type:"structure" json:",omitempty"`

	AutoPullAfterRegister *bool `type:"boolean" json:",omitempty"`

	AutoPullAfterRegiter *bool `type:"boolean" json:",omitempty"`

	Coordinates *CoordinatesForCreateDeviceInput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DeviceNSID *string `type:"string" json:",omitempty"`

	// DeviceName is a required field
	DeviceName *string `type:"string" json:",omitempty" required:"true"`

	Location *string `type:"string" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	RtpTransportTcp *bool `type:"boolean" json:",omitempty"`

	// SpaceID is a required field
	SpaceID *string `type:"string" json:",omitempty" required:"true"`

	// Type is a required field
	Type *string `type:"string" json:",omitempty" required:"true"`

	UseSubStream *bool `type:"boolean" json:",omitempty"`

	// UserName is a required field
	UserName *string `type:"string" json:",omitempty" required:"true"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateDeviceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDeviceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDeviceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDeviceInput"}
	if s.DeviceName == nil {
		invalidParams.Add(request.NewErrParamRequired("DeviceName"))
	}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}
	if s.UserName == nil {
		invalidParams.Add(request.NewErrParamRequired("UserName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlertNotification sets the AlertNotification field's value.
func (s *CreateDeviceInput) SetAlertNotification(v *AlertNotificationForCreateDeviceInput) *CreateDeviceInput {
	s.AlertNotification = v
	return s
}

// SetAutoPullAfterRegister sets the AutoPullAfterRegister field's value.
func (s *CreateDeviceInput) SetAutoPullAfterRegister(v bool) *CreateDeviceInput {
	s.AutoPullAfterRegister = &v
	return s
}

// SetAutoPullAfterRegiter sets the AutoPullAfterRegiter field's value.
func (s *CreateDeviceInput) SetAutoPullAfterRegiter(v bool) *CreateDeviceInput {
	s.AutoPullAfterRegiter = &v
	return s
}

// SetCoordinates sets the Coordinates field's value.
func (s *CreateDeviceInput) SetCoordinates(v *CoordinatesForCreateDeviceInput) *CreateDeviceInput {
	s.Coordinates = v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateDeviceInput) SetDescription(v string) *CreateDeviceInput {
	s.Description = &v
	return s
}

// SetDeviceNSID sets the DeviceNSID field's value.
func (s *CreateDeviceInput) SetDeviceNSID(v string) *CreateDeviceInput {
	s.DeviceNSID = &v
	return s
}

// SetDeviceName sets the DeviceName field's value.
func (s *CreateDeviceInput) SetDeviceName(v string) *CreateDeviceInput {
	s.DeviceName = &v
	return s
}

// SetLocation sets the Location field's value.
func (s *CreateDeviceInput) SetLocation(v string) *CreateDeviceInput {
	s.Location = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateDeviceInput) SetPassword(v string) *CreateDeviceInput {
	s.Password = &v
	return s
}

// SetRtpTransportTcp sets the RtpTransportTcp field's value.
func (s *CreateDeviceInput) SetRtpTransportTcp(v bool) *CreateDeviceInput {
	s.RtpTransportTcp = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *CreateDeviceInput) SetSpaceID(v string) *CreateDeviceInput {
	s.SpaceID = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateDeviceInput) SetType(v string) *CreateDeviceInput {
	s.Type = &v
	return s
}

// SetUseSubStream sets the UseSubStream field's value.
func (s *CreateDeviceInput) SetUseSubStream(v bool) *CreateDeviceInput {
	s.UseSubStream = &v
	return s
}

// SetUserName sets the UserName field's value.
func (s *CreateDeviceInput) SetUserName(v string) *CreateDeviceInput {
	s.UserName = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *CreateDeviceInput) SetUsername(v string) *CreateDeviceInput {
	s.Username = &v
	return s
}

type CreateDeviceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AutoPullAfterRegiter *bool `type:"boolean" json:",omitempty"`

	ChannelNum *int32 `type:"int32" json:",omitempty"`

	ContactCount *int32 `type:"int32" json:",omitempty"`

	Coordinates *CoordinatesForCreateDeviceOutput `type:"structure" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DeviceID *string `type:"string" json:",omitempty"`

	DeviceNSID *string `type:"string" json:",omitempty"`

	DeviceName *string `type:"string" json:",omitempty"`

	DownloadSpeed *int32 `type:"int32" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	Manufactory *string `type:"string" json:",omitempty"`

	OnChannelNum *int32 `type:"int32" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	RtpTransportTcp *bool `type:"boolean" json:",omitempty"`

	SpaceID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	UseSubStream *bool `type:"boolean" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDeviceOutput) GoString() string {
	return s.String()
}

// SetAutoPullAfterRegiter sets the AutoPullAfterRegiter field's value.
func (s *CreateDeviceOutput) SetAutoPullAfterRegiter(v bool) *CreateDeviceOutput {
	s.AutoPullAfterRegiter = &v
	return s
}

// SetChannelNum sets the ChannelNum field's value.
func (s *CreateDeviceOutput) SetChannelNum(v int32) *CreateDeviceOutput {
	s.ChannelNum = &v
	return s
}

// SetContactCount sets the ContactCount field's value.
func (s *CreateDeviceOutput) SetContactCount(v int32) *CreateDeviceOutput {
	s.ContactCount = &v
	return s
}

// SetCoordinates sets the Coordinates field's value.
func (s *CreateDeviceOutput) SetCoordinates(v *CoordinatesForCreateDeviceOutput) *CreateDeviceOutput {
	s.Coordinates = v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *CreateDeviceOutput) SetCreatedAt(v string) *CreateDeviceOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateDeviceOutput) SetDescription(v string) *CreateDeviceOutput {
	s.Description = &v
	return s
}

// SetDeviceID sets the DeviceID field's value.
func (s *CreateDeviceOutput) SetDeviceID(v string) *CreateDeviceOutput {
	s.DeviceID = &v
	return s
}

// SetDeviceNSID sets the DeviceNSID field's value.
func (s *CreateDeviceOutput) SetDeviceNSID(v string) *CreateDeviceOutput {
	s.DeviceNSID = &v
	return s
}

// SetDeviceName sets the DeviceName field's value.
func (s *CreateDeviceOutput) SetDeviceName(v string) *CreateDeviceOutput {
	s.DeviceName = &v
	return s
}

// SetDownloadSpeed sets the DownloadSpeed field's value.
func (s *CreateDeviceOutput) SetDownloadSpeed(v int32) *CreateDeviceOutput {
	s.DownloadSpeed = &v
	return s
}

// SetID sets the ID field's value.
func (s *CreateDeviceOutput) SetID(v string) *CreateDeviceOutput {
	s.ID = &v
	return s
}

// SetLocation sets the Location field's value.
func (s *CreateDeviceOutput) SetLocation(v string) *CreateDeviceOutput {
	s.Location = &v
	return s
}

// SetManufactory sets the Manufactory field's value.
func (s *CreateDeviceOutput) SetManufactory(v string) *CreateDeviceOutput {
	s.Manufactory = &v
	return s
}

// SetOnChannelNum sets the OnChannelNum field's value.
func (s *CreateDeviceOutput) SetOnChannelNum(v int32) *CreateDeviceOutput {
	s.OnChannelNum = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateDeviceOutput) SetPassword(v string) *CreateDeviceOutput {
	s.Password = &v
	return s
}

// SetRtpTransportTcp sets the RtpTransportTcp field's value.
func (s *CreateDeviceOutput) SetRtpTransportTcp(v bool) *CreateDeviceOutput {
	s.RtpTransportTcp = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *CreateDeviceOutput) SetSpaceID(v string) *CreateDeviceOutput {
	s.SpaceID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CreateDeviceOutput) SetStatus(v string) *CreateDeviceOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateDeviceOutput) SetType(v string) *CreateDeviceOutput {
	s.Type = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *CreateDeviceOutput) SetUpdatedAt(v string) *CreateDeviceOutput {
	s.UpdatedAt = &v
	return s
}

// SetUseSubStream sets the UseSubStream field's value.
func (s *CreateDeviceOutput) SetUseSubStream(v bool) *CreateDeviceOutput {
	s.UseSubStream = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *CreateDeviceOutput) SetUsername(v string) *CreateDeviceOutput {
	s.Username = &v
	return s
}
