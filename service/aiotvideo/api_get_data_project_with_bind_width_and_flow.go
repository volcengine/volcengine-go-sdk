// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDataProjectWithBindWidthAndFlowCommon = "GetDataProjectWithBindWidthAndFlow"

// GetDataProjectWithBindWidthAndFlowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDataProjectWithBindWidthAndFlowCommon operation. The "output" return
// value will be populated with the GetDataProjectWithBindWidthAndFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDataProjectWithBindWidthAndFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDataProjectWithBindWidthAndFlowCommon Send returns without error.
//
// See GetDataProjectWithBindWidthAndFlowCommon for more information on using the GetDataProjectWithBindWidthAndFlowCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDataProjectWithBindWidthAndFlowCommonRequest method.
//    req, resp := client.GetDataProjectWithBindWidthAndFlowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDataProjectWithBindWidthAndFlowCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetDataProjectWithBindWidthAndFlowCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetDataProjectWithBindWidthAndFlowCommon for usage and error information.
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDataProjectWithBindWidthAndFlowCommonRequest(input)
	return out, req.Send()
}

// GetDataProjectWithBindWidthAndFlowCommonWithContext is the same as GetDataProjectWithBindWidthAndFlowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDataProjectWithBindWidthAndFlowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDataProjectWithBindWidthAndFlowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDataProjectWithBindWidthAndFlow = "GetDataProjectWithBindWidthAndFlow"

// GetDataProjectWithBindWidthAndFlowRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDataProjectWithBindWidthAndFlow operation. The "output" return
// value will be populated with the GetDataProjectWithBindWidthAndFlowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDataProjectWithBindWidthAndFlowCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDataProjectWithBindWidthAndFlowCommon Send returns without error.
//
// See GetDataProjectWithBindWidthAndFlow for more information on using the GetDataProjectWithBindWidthAndFlow
// API call, and error handling.
//
//    // Example sending a request using the GetDataProjectWithBindWidthAndFlowRequest method.
//    req, resp := client.GetDataProjectWithBindWidthAndFlowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlowRequest(input *GetDataProjectWithBindWidthAndFlowInput) (req *request.Request, output *GetDataProjectWithBindWidthAndFlowOutput) {
	op := &request.Operation{
		Name:       opGetDataProjectWithBindWidthAndFlow,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDataProjectWithBindWidthAndFlowInput{}
	}

	output = &GetDataProjectWithBindWidthAndFlowOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetDataProjectWithBindWidthAndFlow API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetDataProjectWithBindWidthAndFlow for usage and error information.
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlow(input *GetDataProjectWithBindWidthAndFlowInput) (*GetDataProjectWithBindWidthAndFlowOutput, error) {
	req, out := c.GetDataProjectWithBindWidthAndFlowRequest(input)
	return out, req.Send()
}

// GetDataProjectWithBindWidthAndFlowWithContext is the same as GetDataProjectWithBindWidthAndFlow with the addition of
// the ability to pass a context and additional request options.
//
// See GetDataProjectWithBindWidthAndFlow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetDataProjectWithBindWidthAndFlowWithContext(ctx volcengine.Context, input *GetDataProjectWithBindWidthAndFlowInput, opts ...request.Option) (*GetDataProjectWithBindWidthAndFlowOutput, error) {
	req, out := c.GetDataProjectWithBindWidthAndFlowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataDownForGetDataProjectWithBindWidthAndFlowOutput struct {
	_ struct{} `type:"structure"`

	TimeStamp *string `type:"string"`

	Value *float64 `type:"float"`
}

// String returns the string representation
func (s DataDownForGetDataProjectWithBindWidthAndFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataDownForGetDataProjectWithBindWidthAndFlowOutput) GoString() string {
	return s.String()
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *DataDownForGetDataProjectWithBindWidthAndFlowOutput) SetTimeStamp(v string) *DataDownForGetDataProjectWithBindWidthAndFlowOutput {
	s.TimeStamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DataDownForGetDataProjectWithBindWidthAndFlowOutput) SetValue(v float64) *DataDownForGetDataProjectWithBindWidthAndFlowOutput {
	s.Value = &v
	return s
}

type DataUpForGetDataProjectWithBindWidthAndFlowOutput struct {
	_ struct{} `type:"structure"`

	TimeStamp *string `type:"string"`

	Value *float64 `type:"float"`
}

// String returns the string representation
func (s DataUpForGetDataProjectWithBindWidthAndFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataUpForGetDataProjectWithBindWidthAndFlowOutput) GoString() string {
	return s.String()
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *DataUpForGetDataProjectWithBindWidthAndFlowOutput) SetTimeStamp(v string) *DataUpForGetDataProjectWithBindWidthAndFlowOutput {
	s.TimeStamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DataUpForGetDataProjectWithBindWidthAndFlowOutput) SetValue(v float64) *DataUpForGetDataProjectWithBindWidthAndFlowOutput {
	s.Value = &v
	return s
}

type GetDataProjectWithBindWidthAndFlowInput struct {
	_ struct{} `type:"structure"`

	// Data is a required field
	Data *string `type:"string" required:"true"`

	// EndTime is a required field
	EndTime *string `type:"string" required:"true"`

	// SpaceID is a required field
	SpaceID *string `type:"string" required:"true"`

	// StartTime is a required field
	StartTime *string `type:"string" required:"true"`

	// StreamName is a required field
	StreamName *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetDataProjectWithBindWidthAndFlowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDataProjectWithBindWidthAndFlowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDataProjectWithBindWidthAndFlowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDataProjectWithBindWidthAndFlowInput"}
	if s.Data == nil {
		invalidParams.Add(request.NewErrParamRequired("Data"))
	}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}
	if s.StreamName == nil {
		invalidParams.Add(request.NewErrParamRequired("StreamName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetData sets the Data field's value.
func (s *GetDataProjectWithBindWidthAndFlowInput) SetData(v string) *GetDataProjectWithBindWidthAndFlowInput {
	s.Data = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *GetDataProjectWithBindWidthAndFlowInput) SetEndTime(v string) *GetDataProjectWithBindWidthAndFlowInput {
	s.EndTime = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *GetDataProjectWithBindWidthAndFlowInput) SetSpaceID(v string) *GetDataProjectWithBindWidthAndFlowInput {
	s.SpaceID = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *GetDataProjectWithBindWidthAndFlowInput) SetStartTime(v string) *GetDataProjectWithBindWidthAndFlowInput {
	s.StartTime = &v
	return s
}

// SetStreamName sets the StreamName field's value.
func (s *GetDataProjectWithBindWidthAndFlowInput) SetStreamName(v string) *GetDataProjectWithBindWidthAndFlowInput {
	s.StreamName = &v
	return s
}

type GetDataProjectWithBindWidthAndFlowOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DataDown []*DataDownForGetDataProjectWithBindWidthAndFlowOutput `type:"list"`

	DataUp []*DataUpForGetDataProjectWithBindWidthAndFlowOutput `type:"list"`

	TotalDown *float64 `type:"float"`

	TotalUp *float64 `type:"float"`
}

// String returns the string representation
func (s GetDataProjectWithBindWidthAndFlowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDataProjectWithBindWidthAndFlowOutput) GoString() string {
	return s.String()
}

// SetDataDown sets the DataDown field's value.
func (s *GetDataProjectWithBindWidthAndFlowOutput) SetDataDown(v []*DataDownForGetDataProjectWithBindWidthAndFlowOutput) *GetDataProjectWithBindWidthAndFlowOutput {
	s.DataDown = v
	return s
}

// SetDataUp sets the DataUp field's value.
func (s *GetDataProjectWithBindWidthAndFlowOutput) SetDataUp(v []*DataUpForGetDataProjectWithBindWidthAndFlowOutput) *GetDataProjectWithBindWidthAndFlowOutput {
	s.DataUp = v
	return s
}

// SetTotalDown sets the TotalDown field's value.
func (s *GetDataProjectWithBindWidthAndFlowOutput) SetTotalDown(v float64) *GetDataProjectWithBindWidthAndFlowOutput {
	s.TotalDown = &v
	return s
}

// SetTotalUp sets the TotalUp field's value.
func (s *GetDataProjectWithBindWidthAndFlowOutput) SetTotalUp(v float64) *GetDataProjectWithBindWidthAndFlowOutput {
	s.TotalUp = &v
	return s
}
