// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListStreamsCommon = "ListStreams"

// ListStreamsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListStreamsCommon operation. The "output" return
// value will be populated with the ListStreamsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListStreamsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListStreamsCommon Send returns without error.
//
// See ListStreamsCommon for more information on using the ListStreamsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListStreamsCommonRequest method.
//    req, resp := client.ListStreamsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) ListStreamsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListStreamsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListStreamsCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation ListStreamsCommon for usage and error information.
func (c *AIOTVIDEO) ListStreamsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListStreamsCommonRequest(input)
	return out, req.Send()
}

// ListStreamsCommonWithContext is the same as ListStreamsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListStreamsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) ListStreamsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListStreamsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListStreams = "ListStreams"

// ListStreamsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListStreams operation. The "output" return
// value will be populated with the ListStreamsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListStreamsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListStreamsCommon Send returns without error.
//
// See ListStreams for more information on using the ListStreams
// API call, and error handling.
//
//    // Example sending a request using the ListStreamsRequest method.
//    req, resp := client.ListStreamsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) ListStreamsRequest(input *ListStreamsInput) (req *request.Request, output *ListStreamsOutput) {
	op := &request.Operation{
		Name:       opListStreams,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListStreamsInput{}
	}

	output = &ListStreamsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListStreams API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation ListStreams for usage and error information.
func (c *AIOTVIDEO) ListStreams(input *ListStreamsInput) (*ListStreamsOutput, error) {
	req, out := c.ListStreamsRequest(input)
	return out, req.Send()
}

// ListStreamsWithContext is the same as ListStreams with the addition of
// the ability to pass a context and additional request options.
//
// See ListStreams for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) ListStreamsWithContext(ctx volcengine.Context, input *ListStreamsInput, opts ...request.Option) (*ListStreamsOutput, error) {
	req, out := c.ListStreamsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AIForListStreamsOutput struct {
	_ struct{} `type:"structure"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s AIForListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AIForListStreamsOutput) GoString() string {
	return s.String()
}

// SetTemplateID sets the TemplateID field's value.
func (s *AIForListStreamsOutput) SetTemplateID(v string) *AIForListStreamsOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *AIForListStreamsOutput) SetTemplateName(v string) *AIForListStreamsOutput {
	s.TemplateName = &v
	return s
}

type ListStreamsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *string `type:"string"`

	PageSize *string `type:"string"`

	// SpaceID is a required field
	SpaceID *string `type:"string" required:"true"`

	StreamName *string `type:"string"`
}

// String returns the string representation
func (s ListStreamsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListStreamsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListStreamsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListStreamsInput"}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListStreamsInput) SetPageNumber(v string) *ListStreamsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListStreamsInput) SetPageSize(v string) *ListStreamsInput {
	s.PageSize = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *ListStreamsInput) SetSpaceID(v string) *ListStreamsInput {
	s.SpaceID = &v
	return s
}

// SetStreamName sets the StreamName field's value.
func (s *ListStreamsInput) SetStreamName(v string) *ListStreamsInput {
	s.StreamName = &v
	return s
}

type ListStreamsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	Streams []*StreamForListStreamsOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s ListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListStreamsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListStreamsOutput) SetPageNumber(v int32) *ListStreamsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListStreamsOutput) SetPageSize(v int32) *ListStreamsOutput {
	s.PageSize = &v
	return s
}

// SetStreams sets the Streams field's value.
func (s *ListStreamsOutput) SetStreams(v []*StreamForListStreamsOutput) *ListStreamsOutput {
	s.Streams = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListStreamsOutput) SetTotalCount(v int32) *ListStreamsOutput {
	s.TotalCount = &v
	return s
}

type RecordForListStreamsOutput struct {
	_ struct{} `type:"structure"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s RecordForListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordForListStreamsOutput) GoString() string {
	return s.String()
}

// SetTemplateID sets the TemplateID field's value.
func (s *RecordForListStreamsOutput) SetTemplateID(v string) *RecordForListStreamsOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *RecordForListStreamsOutput) SetTemplateName(v string) *RecordForListStreamsOutput {
	s.TemplateName = &v
	return s
}

type ScreenshotForListStreamsOutput struct {
	_ struct{} `type:"structure"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s ScreenshotForListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScreenshotForListStreamsOutput) GoString() string {
	return s.String()
}

// SetTemplateID sets the TemplateID field's value.
func (s *ScreenshotForListStreamsOutput) SetTemplateID(v string) *ScreenshotForListStreamsOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *ScreenshotForListStreamsOutput) SetTemplateName(v string) *ScreenshotForListStreamsOutput {
	s.TemplateName = &v
	return s
}

type StreamForListStreamsOutput struct {
	_ struct{} `type:"structure"`

	AI *AIForListStreamsOutput `type:"structure"`

	ChannelID *string `type:"string"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	DeviceID *string `type:"string"`

	DeviceNSID *string `type:"string"`

	PullUrls []*string `type:"list"`

	RecentPushTs *string `type:"string"`

	Record *RecordForListStreamsOutput `type:"structure"`

	Resolution *string `type:"string"`

	RtpTransportTcp *bool `type:"boolean"`

	SIPID *string `type:"string"`

	Screenshot *ScreenshotForListStreamsOutput `type:"structure"`

	SpaceAccessType *string `type:"string"`

	SpaceID *string `type:"string"`

	Status *string `type:"string"`

	StreamID *string `type:"string"`

	StreamName *string `type:"string"`

	StreamingType *string `type:"string"`

	TransPullUrls *TransPullUrlsForListStreamsOutput `type:"structure"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s StreamForListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StreamForListStreamsOutput) GoString() string {
	return s.String()
}

// SetAI sets the AI field's value.
func (s *StreamForListStreamsOutput) SetAI(v *AIForListStreamsOutput) *StreamForListStreamsOutput {
	s.AI = v
	return s
}

// SetChannelID sets the ChannelID field's value.
func (s *StreamForListStreamsOutput) SetChannelID(v string) *StreamForListStreamsOutput {
	s.ChannelID = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *StreamForListStreamsOutput) SetCreatedAt(v string) *StreamForListStreamsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *StreamForListStreamsOutput) SetDescription(v string) *StreamForListStreamsOutput {
	s.Description = &v
	return s
}

// SetDeviceID sets the DeviceID field's value.
func (s *StreamForListStreamsOutput) SetDeviceID(v string) *StreamForListStreamsOutput {
	s.DeviceID = &v
	return s
}

// SetDeviceNSID sets the DeviceNSID field's value.
func (s *StreamForListStreamsOutput) SetDeviceNSID(v string) *StreamForListStreamsOutput {
	s.DeviceNSID = &v
	return s
}

// SetPullUrls sets the PullUrls field's value.
func (s *StreamForListStreamsOutput) SetPullUrls(v []*string) *StreamForListStreamsOutput {
	s.PullUrls = v
	return s
}

// SetRecentPushTs sets the RecentPushTs field's value.
func (s *StreamForListStreamsOutput) SetRecentPushTs(v string) *StreamForListStreamsOutput {
	s.RecentPushTs = &v
	return s
}

// SetRecord sets the Record field's value.
func (s *StreamForListStreamsOutput) SetRecord(v *RecordForListStreamsOutput) *StreamForListStreamsOutput {
	s.Record = v
	return s
}

// SetResolution sets the Resolution field's value.
func (s *StreamForListStreamsOutput) SetResolution(v string) *StreamForListStreamsOutput {
	s.Resolution = &v
	return s
}

// SetRtpTransportTcp sets the RtpTransportTcp field's value.
func (s *StreamForListStreamsOutput) SetRtpTransportTcp(v bool) *StreamForListStreamsOutput {
	s.RtpTransportTcp = &v
	return s
}

// SetSIPID sets the SIPID field's value.
func (s *StreamForListStreamsOutput) SetSIPID(v string) *StreamForListStreamsOutput {
	s.SIPID = &v
	return s
}

// SetScreenshot sets the Screenshot field's value.
func (s *StreamForListStreamsOutput) SetScreenshot(v *ScreenshotForListStreamsOutput) *StreamForListStreamsOutput {
	s.Screenshot = v
	return s
}

// SetSpaceAccessType sets the SpaceAccessType field's value.
func (s *StreamForListStreamsOutput) SetSpaceAccessType(v string) *StreamForListStreamsOutput {
	s.SpaceAccessType = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *StreamForListStreamsOutput) SetSpaceID(v string) *StreamForListStreamsOutput {
	s.SpaceID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *StreamForListStreamsOutput) SetStatus(v string) *StreamForListStreamsOutput {
	s.Status = &v
	return s
}

// SetStreamID sets the StreamID field's value.
func (s *StreamForListStreamsOutput) SetStreamID(v string) *StreamForListStreamsOutput {
	s.StreamID = &v
	return s
}

// SetStreamName sets the StreamName field's value.
func (s *StreamForListStreamsOutput) SetStreamName(v string) *StreamForListStreamsOutput {
	s.StreamName = &v
	return s
}

// SetStreamingType sets the StreamingType field's value.
func (s *StreamForListStreamsOutput) SetStreamingType(v string) *StreamForListStreamsOutput {
	s.StreamingType = &v
	return s
}

// SetTransPullUrls sets the TransPullUrls field's value.
func (s *StreamForListStreamsOutput) SetTransPullUrls(v *TransPullUrlsForListStreamsOutput) *StreamForListStreamsOutput {
	s.TransPullUrls = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *StreamForListStreamsOutput) SetUpdatedAt(v string) *StreamForListStreamsOutput {
	s.UpdatedAt = &v
	return s
}

type TransPullUrlsForListStreamsOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s TransPullUrlsForListStreamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TransPullUrlsForListStreamsOutput) GoString() string {
	return s.String()
}
