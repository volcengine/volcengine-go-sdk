// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetLocalDownloadCommon = "GetLocalDownload"

// GetLocalDownloadCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetLocalDownloadCommon operation. The "output" return
// value will be populated with the GetLocalDownloadCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetLocalDownloadCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetLocalDownloadCommon Send returns without error.
//
// See GetLocalDownloadCommon for more information on using the GetLocalDownloadCommon
// API call, and error handling.
//
//    // Example sending a request using the GetLocalDownloadCommonRequest method.
//    req, resp := client.GetLocalDownloadCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetLocalDownloadCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetLocalDownloadCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetLocalDownloadCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetLocalDownloadCommon for usage and error information.
func (c *AIOTVIDEO) GetLocalDownloadCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetLocalDownloadCommonRequest(input)
	return out, req.Send()
}

// GetLocalDownloadCommonWithContext is the same as GetLocalDownloadCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetLocalDownloadCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetLocalDownloadCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetLocalDownloadCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetLocalDownload = "GetLocalDownload"

// GetLocalDownloadRequest generates a "volcengine/request.Request" representing the
// client's request for the GetLocalDownload operation. The "output" return
// value will be populated with the GetLocalDownloadCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetLocalDownloadCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetLocalDownloadCommon Send returns without error.
//
// See GetLocalDownload for more information on using the GetLocalDownload
// API call, and error handling.
//
//    // Example sending a request using the GetLocalDownloadRequest method.
//    req, resp := client.GetLocalDownloadRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetLocalDownloadRequest(input *GetLocalDownloadInput) (req *request.Request, output *GetLocalDownloadOutput) {
	op := &request.Operation{
		Name:       opGetLocalDownload,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetLocalDownloadInput{}
	}

	output = &GetLocalDownloadOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetLocalDownload API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetLocalDownload for usage and error information.
func (c *AIOTVIDEO) GetLocalDownload(input *GetLocalDownloadInput) (*GetLocalDownloadOutput, error) {
	req, out := c.GetLocalDownloadRequest(input)
	return out, req.Send()
}

// GetLocalDownloadWithContext is the same as GetLocalDownload with the addition of
// the ability to pass a context and additional request options.
//
// See GetLocalDownload for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetLocalDownloadWithContext(ctx volcengine.Context, input *GetLocalDownloadInput, opts ...request.Option) (*GetLocalDownloadOutput, error) {
	req, out := c.GetLocalDownloadRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GBMediaForGetLocalDownloadOutput struct {
	_ struct{} `type:"structure"`

	CallID *string `type:"string"`

	EndTime *int64 `type:"int64"`

	FileName *string `type:"string"`

	FileSize *int64 `type:"int64"`

	FileStreamLength *int64 `type:"int64"`

	ID *string `type:"string"`

	Msg *string `type:"string"`

	StartTime *int64 `type:"int64"`

	Status *string `type:"string"`

	SubtitleUrl *string `type:"string"`

	Url *string `type:"string"`
}

// String returns the string representation
func (s GBMediaForGetLocalDownloadOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GBMediaForGetLocalDownloadOutput) GoString() string {
	return s.String()
}

// SetCallID sets the CallID field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetCallID(v string) *GBMediaForGetLocalDownloadOutput {
	s.CallID = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetEndTime(v int64) *GBMediaForGetLocalDownloadOutput {
	s.EndTime = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetFileName(v string) *GBMediaForGetLocalDownloadOutput {
	s.FileName = &v
	return s
}

// SetFileSize sets the FileSize field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetFileSize(v int64) *GBMediaForGetLocalDownloadOutput {
	s.FileSize = &v
	return s
}

// SetFileStreamLength sets the FileStreamLength field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetFileStreamLength(v int64) *GBMediaForGetLocalDownloadOutput {
	s.FileStreamLength = &v
	return s
}

// SetID sets the ID field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetID(v string) *GBMediaForGetLocalDownloadOutput {
	s.ID = &v
	return s
}

// SetMsg sets the Msg field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetMsg(v string) *GBMediaForGetLocalDownloadOutput {
	s.Msg = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetStartTime(v int64) *GBMediaForGetLocalDownloadOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetStatus(v string) *GBMediaForGetLocalDownloadOutput {
	s.Status = &v
	return s
}

// SetSubtitleUrl sets the SubtitleUrl field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetSubtitleUrl(v string) *GBMediaForGetLocalDownloadOutput {
	s.SubtitleUrl = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *GBMediaForGetLocalDownloadOutput) SetUrl(v string) *GBMediaForGetLocalDownloadOutput {
	s.Url = &v
	return s
}

type GetLocalDownloadInput struct {
	_ struct{} `type:"structure"`

	ID *string `type:"string"`

	SpaceID *string `type:"string"`
}

// String returns the string representation
func (s GetLocalDownloadInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetLocalDownloadInput) GoString() string {
	return s.String()
}

// SetID sets the ID field's value.
func (s *GetLocalDownloadInput) SetID(v string) *GetLocalDownloadInput {
	s.ID = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *GetLocalDownloadInput) SetSpaceID(v string) *GetLocalDownloadInput {
	s.SpaceID = &v
	return s
}

type GetLocalDownloadOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	GBMedias []*GBMediaForGetLocalDownloadOutput `type:"list"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s GetLocalDownloadOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetLocalDownloadOutput) GoString() string {
	return s.String()
}

// SetGBMedias sets the GBMedias field's value.
func (s *GetLocalDownloadOutput) SetGBMedias(v []*GBMediaForGetLocalDownloadOutput) *GetLocalDownloadOutput {
	s.GBMedias = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetLocalDownloadOutput) SetPageNumber(v int32) *GetLocalDownloadOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetLocalDownloadOutput) SetPageSize(v int32) *GetLocalDownloadOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetLocalDownloadOutput) SetTotalCount(v int32) *GetLocalDownloadOutput {
	s.TotalCount = &v
	return s
}
