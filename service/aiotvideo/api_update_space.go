// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateSpaceCommon = "UpdateSpace"

// UpdateSpaceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateSpaceCommon operation. The "output" return
// value will be populated with the UpdateSpaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateSpaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateSpaceCommon Send returns without error.
//
// See UpdateSpaceCommon for more information on using the UpdateSpaceCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateSpaceCommonRequest method.
//    req, resp := client.UpdateSpaceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) UpdateSpaceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateSpaceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateSpaceCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation UpdateSpaceCommon for usage and error information.
func (c *AIOTVIDEO) UpdateSpaceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateSpaceCommonRequest(input)
	return out, req.Send()
}

// UpdateSpaceCommonWithContext is the same as UpdateSpaceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSpaceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) UpdateSpaceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateSpaceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateSpace = "UpdateSpace"

// UpdateSpaceRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateSpace operation. The "output" return
// value will be populated with the UpdateSpaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateSpaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateSpaceCommon Send returns without error.
//
// See UpdateSpace for more information on using the UpdateSpace
// API call, and error handling.
//
//    // Example sending a request using the UpdateSpaceRequest method.
//    req, resp := client.UpdateSpaceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) UpdateSpaceRequest(input *UpdateSpaceInput) (req *request.Request, output *UpdateSpaceOutput) {
	op := &request.Operation{
		Name:       opUpdateSpace,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateSpaceInput{}
	}

	output = &UpdateSpaceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateSpace API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation UpdateSpace for usage and error information.
func (c *AIOTVIDEO) UpdateSpace(input *UpdateSpaceInput) (*UpdateSpaceOutput, error) {
	req, out := c.UpdateSpaceRequest(input)
	return out, req.Send()
}

// UpdateSpaceWithContext is the same as UpdateSpace with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateSpace for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) UpdateSpaceWithContext(ctx volcengine.Context, input *UpdateSpaceInput, opts ...request.Option) (*UpdateSpaceOutput, error) {
	req, out := c.UpdateSpaceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GBForUpdateSpaceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PullOnDemand *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s GBForUpdateSpaceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GBForUpdateSpaceInput) GoString() string {
	return s.String()
}

// SetPullOnDemand sets the PullOnDemand field's value.
func (s *GBForUpdateSpaceInput) SetPullOnDemand(v bool) *GBForUpdateSpaceInput {
	s.PullOnDemand = &v
	return s
}

type UpdateSpaceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CallbackURL *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	GB *GBForUpdateSpaceInput `type:"structure" json:",omitempty"`

	HLSLowLatency *bool `type:"boolean" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	// SpaceID is a required field
	SpaceID *string `type:"string" json:",omitempty" required:"true"`

	SpaceName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateSpaceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSpaceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateSpaceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateSpaceInput"}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCallbackURL sets the CallbackURL field's value.
func (s *UpdateSpaceInput) SetCallbackURL(v string) *UpdateSpaceInput {
	s.CallbackURL = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateSpaceInput) SetDescription(v string) *UpdateSpaceInput {
	s.Description = &v
	return s
}

// SetGB sets the GB field's value.
func (s *UpdateSpaceInput) SetGB(v *GBForUpdateSpaceInput) *UpdateSpaceInput {
	s.GB = v
	return s
}

// SetHLSLowLatency sets the HLSLowLatency field's value.
func (s *UpdateSpaceInput) SetHLSLowLatency(v bool) *UpdateSpaceInput {
	s.HLSLowLatency = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *UpdateSpaceInput) SetRegion(v string) *UpdateSpaceInput {
	s.Region = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *UpdateSpaceInput) SetSpaceID(v string) *UpdateSpaceInput {
	s.SpaceID = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *UpdateSpaceInput) SetSpaceName(v string) *UpdateSpaceInput {
	s.SpaceName = &v
	return s
}

type UpdateSpaceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateSpaceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateSpaceOutput) GoString() string {
	return s.String()
}

// SetID sets the ID field's value.
func (s *UpdateSpaceOutput) SetID(v string) *UpdateSpaceOutput {
	s.ID = &v
	return s
}
