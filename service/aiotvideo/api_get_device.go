// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDeviceCommon = "GetDevice"

// GetDeviceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDeviceCommon operation. The "output" return
// value will be populated with the GetDeviceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDeviceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDeviceCommon Send returns without error.
//
// See GetDeviceCommon for more information on using the GetDeviceCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDeviceCommonRequest method.
//    req, resp := client.GetDeviceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetDeviceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDeviceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetDeviceCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetDeviceCommon for usage and error information.
func (c *AIOTVIDEO) GetDeviceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDeviceCommonRequest(input)
	return out, req.Send()
}

// GetDeviceCommonWithContext is the same as GetDeviceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDeviceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetDeviceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDeviceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDevice = "GetDevice"

// GetDeviceRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevice operation. The "output" return
// value will be populated with the GetDeviceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDeviceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDeviceCommon Send returns without error.
//
// See GetDevice for more information on using the GetDevice
// API call, and error handling.
//
//    // Example sending a request using the GetDeviceRequest method.
//    req, resp := client.GetDeviceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) GetDeviceRequest(input *GetDeviceInput) (req *request.Request, output *GetDeviceOutput) {
	op := &request.Operation{
		Name:       opGetDevice,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDeviceInput{}
	}

	output = &GetDeviceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetDevice API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation GetDevice for usage and error information.
func (c *AIOTVIDEO) GetDevice(input *GetDeviceInput) (*GetDeviceOutput, error) {
	req, out := c.GetDeviceRequest(input)
	return out, req.Send()
}

// GetDeviceWithContext is the same as GetDevice with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevice for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) GetDeviceWithContext(ctx volcengine.Context, input *GetDeviceInput, opts ...request.Option) (*GetDeviceOutput, error) {
	req, out := c.GetDeviceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AlertNotificationForGetDeviceOutput struct {
	_ struct{} `type:"structure"`

	Device *bool `type:"boolean"`

	DeviceFault *bool `type:"boolean"`

	Enabled *bool `type:"boolean"`

	GPS *bool `type:"boolean"`

	Other *bool `type:"boolean"`

	Phone *bool `type:"boolean"`

	SMS *bool `type:"boolean"`

	Video *bool `type:"boolean"`
}

// String returns the string representation
func (s AlertNotificationForGetDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AlertNotificationForGetDeviceOutput) GoString() string {
	return s.String()
}

// SetDevice sets the Device field's value.
func (s *AlertNotificationForGetDeviceOutput) SetDevice(v bool) *AlertNotificationForGetDeviceOutput {
	s.Device = &v
	return s
}

// SetDeviceFault sets the DeviceFault field's value.
func (s *AlertNotificationForGetDeviceOutput) SetDeviceFault(v bool) *AlertNotificationForGetDeviceOutput {
	s.DeviceFault = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *AlertNotificationForGetDeviceOutput) SetEnabled(v bool) *AlertNotificationForGetDeviceOutput {
	s.Enabled = &v
	return s
}

// SetGPS sets the GPS field's value.
func (s *AlertNotificationForGetDeviceOutput) SetGPS(v bool) *AlertNotificationForGetDeviceOutput {
	s.GPS = &v
	return s
}

// SetOther sets the Other field's value.
func (s *AlertNotificationForGetDeviceOutput) SetOther(v bool) *AlertNotificationForGetDeviceOutput {
	s.Other = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *AlertNotificationForGetDeviceOutput) SetPhone(v bool) *AlertNotificationForGetDeviceOutput {
	s.Phone = &v
	return s
}

// SetSMS sets the SMS field's value.
func (s *AlertNotificationForGetDeviceOutput) SetSMS(v bool) *AlertNotificationForGetDeviceOutput {
	s.SMS = &v
	return s
}

// SetVideo sets the Video field's value.
func (s *AlertNotificationForGetDeviceOutput) SetVideo(v bool) *AlertNotificationForGetDeviceOutput {
	s.Video = &v
	return s
}

type CoordinatesForGetDeviceOutput struct {
	_ struct{} `type:"structure"`

	Latitude *float64 `type:"float"`

	Longitude *float64 `type:"float"`
}

// String returns the string representation
func (s CoordinatesForGetDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CoordinatesForGetDeviceOutput) GoString() string {
	return s.String()
}

// SetLatitude sets the Latitude field's value.
func (s *CoordinatesForGetDeviceOutput) SetLatitude(v float64) *CoordinatesForGetDeviceOutput {
	s.Latitude = &v
	return s
}

// SetLongitude sets the Longitude field's value.
func (s *CoordinatesForGetDeviceOutput) SetLongitude(v float64) *CoordinatesForGetDeviceOutput {
	s.Longitude = &v
	return s
}

type DeviceStreamsForGetDeviceOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DeviceStreamsForGetDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeviceStreamsForGetDeviceOutput) GoString() string {
	return s.String()
}

type DeviceSubStreamForGetDeviceOutput struct {
	_ struct{} `type:"structure"`

	PullUrls []*string `type:"list"`

	PushUrl *string `type:"string"`

	Status *string `type:"string"`

	StreamID *string `type:"string"`
}

// String returns the string representation
func (s DeviceSubStreamForGetDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeviceSubStreamForGetDeviceOutput) GoString() string {
	return s.String()
}

// SetPullUrls sets the PullUrls field's value.
func (s *DeviceSubStreamForGetDeviceOutput) SetPullUrls(v []*string) *DeviceSubStreamForGetDeviceOutput {
	s.PullUrls = v
	return s
}

// SetPushUrl sets the PushUrl field's value.
func (s *DeviceSubStreamForGetDeviceOutput) SetPushUrl(v string) *DeviceSubStreamForGetDeviceOutput {
	s.PushUrl = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DeviceSubStreamForGetDeviceOutput) SetStatus(v string) *DeviceSubStreamForGetDeviceOutput {
	s.Status = &v
	return s
}

// SetStreamID sets the StreamID field's value.
func (s *DeviceSubStreamForGetDeviceOutput) SetStreamID(v string) *DeviceSubStreamForGetDeviceOutput {
	s.StreamID = &v
	return s
}

type GetDeviceInput struct {
	_ struct{} `type:"structure"`

	// DeviceID is a required field
	DeviceID *string `type:"string" required:"true"`

	// SpaceID is a required field
	SpaceID *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetDeviceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDeviceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDeviceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDeviceInput"}
	if s.DeviceID == nil {
		invalidParams.Add(request.NewErrParamRequired("DeviceID"))
	}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeviceID sets the DeviceID field's value.
func (s *GetDeviceInput) SetDeviceID(v string) *GetDeviceInput {
	s.DeviceID = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *GetDeviceInput) SetSpaceID(v string) *GetDeviceInput {
	s.SpaceID = &v
	return s
}

type GetDeviceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AlertNotification *AlertNotificationForGetDeviceOutput `type:"structure"`

	AutoPullAfterRegister *bool `type:"boolean"`

	ChannelNum *int32 `type:"int32"`

	Coordinates *CoordinatesForGetDeviceOutput `type:"structure"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	DeviceID *string `type:"string"`

	DeviceIP *string `type:"string"`

	DeviceNSID *string `type:"string"`

	DeviceName *string `type:"string"`

	DeviceStreams *DeviceStreamsForGetDeviceOutput `type:"structure"`

	DeviceSubStreams []*DeviceSubStreamForGetDeviceOutput `type:"list"`

	Location *string `type:"string"`

	Manufactory *string `type:"string"`

	Password *string `type:"string"`

	RtpTransportTcp *bool `type:"boolean"`

	SpaceID *string `type:"string"`

	Status *string `type:"string"`

	Type *string `type:"string"`

	UpdatedAt *string `type:"string"`

	UseSubStream *bool `type:"boolean"`

	Username *string `type:"string"`
}

// String returns the string representation
func (s GetDeviceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDeviceOutput) GoString() string {
	return s.String()
}

// SetAlertNotification sets the AlertNotification field's value.
func (s *GetDeviceOutput) SetAlertNotification(v *AlertNotificationForGetDeviceOutput) *GetDeviceOutput {
	s.AlertNotification = v
	return s
}

// SetAutoPullAfterRegister sets the AutoPullAfterRegister field's value.
func (s *GetDeviceOutput) SetAutoPullAfterRegister(v bool) *GetDeviceOutput {
	s.AutoPullAfterRegister = &v
	return s
}

// SetChannelNum sets the ChannelNum field's value.
func (s *GetDeviceOutput) SetChannelNum(v int32) *GetDeviceOutput {
	s.ChannelNum = &v
	return s
}

// SetCoordinates sets the Coordinates field's value.
func (s *GetDeviceOutput) SetCoordinates(v *CoordinatesForGetDeviceOutput) *GetDeviceOutput {
	s.Coordinates = v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *GetDeviceOutput) SetCreatedAt(v string) *GetDeviceOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetDeviceOutput) SetDescription(v string) *GetDeviceOutput {
	s.Description = &v
	return s
}

// SetDeviceID sets the DeviceID field's value.
func (s *GetDeviceOutput) SetDeviceID(v string) *GetDeviceOutput {
	s.DeviceID = &v
	return s
}

// SetDeviceIP sets the DeviceIP field's value.
func (s *GetDeviceOutput) SetDeviceIP(v string) *GetDeviceOutput {
	s.DeviceIP = &v
	return s
}

// SetDeviceNSID sets the DeviceNSID field's value.
func (s *GetDeviceOutput) SetDeviceNSID(v string) *GetDeviceOutput {
	s.DeviceNSID = &v
	return s
}

// SetDeviceName sets the DeviceName field's value.
func (s *GetDeviceOutput) SetDeviceName(v string) *GetDeviceOutput {
	s.DeviceName = &v
	return s
}

// SetDeviceStreams sets the DeviceStreams field's value.
func (s *GetDeviceOutput) SetDeviceStreams(v *DeviceStreamsForGetDeviceOutput) *GetDeviceOutput {
	s.DeviceStreams = v
	return s
}

// SetDeviceSubStreams sets the DeviceSubStreams field's value.
func (s *GetDeviceOutput) SetDeviceSubStreams(v []*DeviceSubStreamForGetDeviceOutput) *GetDeviceOutput {
	s.DeviceSubStreams = v
	return s
}

// SetLocation sets the Location field's value.
func (s *GetDeviceOutput) SetLocation(v string) *GetDeviceOutput {
	s.Location = &v
	return s
}

// SetManufactory sets the Manufactory field's value.
func (s *GetDeviceOutput) SetManufactory(v string) *GetDeviceOutput {
	s.Manufactory = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *GetDeviceOutput) SetPassword(v string) *GetDeviceOutput {
	s.Password = &v
	return s
}

// SetRtpTransportTcp sets the RtpTransportTcp field's value.
func (s *GetDeviceOutput) SetRtpTransportTcp(v bool) *GetDeviceOutput {
	s.RtpTransportTcp = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *GetDeviceOutput) SetSpaceID(v string) *GetDeviceOutput {
	s.SpaceID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetDeviceOutput) SetStatus(v string) *GetDeviceOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *GetDeviceOutput) SetType(v string) *GetDeviceOutput {
	s.Type = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *GetDeviceOutput) SetUpdatedAt(v string) *GetDeviceOutput {
	s.UpdatedAt = &v
	return s
}

// SetUseSubStream sets the UseSubStream field's value.
func (s *GetDeviceOutput) SetUseSubStream(v bool) *GetDeviceOutput {
	s.UseSubStream = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *GetDeviceOutput) SetUsername(v string) *GetDeviceOutput {
	s.Username = &v
	return s
}
