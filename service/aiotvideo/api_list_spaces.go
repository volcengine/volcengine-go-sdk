// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSpacesCommon = "ListSpaces"

// ListSpacesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSpacesCommon operation. The "output" return
// value will be populated with the ListSpacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSpacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSpacesCommon Send returns without error.
//
// See ListSpacesCommon for more information on using the ListSpacesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSpacesCommonRequest method.
//    req, resp := client.ListSpacesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) ListSpacesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSpacesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListSpacesCommon API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation ListSpacesCommon for usage and error information.
func (c *AIOTVIDEO) ListSpacesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSpacesCommonRequest(input)
	return out, req.Send()
}

// ListSpacesCommonWithContext is the same as ListSpacesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSpacesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) ListSpacesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSpacesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSpaces = "ListSpaces"

// ListSpacesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSpaces operation. The "output" return
// value will be populated with the ListSpacesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSpacesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSpacesCommon Send returns without error.
//
// See ListSpaces for more information on using the ListSpaces
// API call, and error handling.
//
//    // Example sending a request using the ListSpacesRequest method.
//    req, resp := client.ListSpacesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO) ListSpacesRequest(input *ListSpacesInput) (req *request.Request, output *ListSpacesOutput) {
	op := &request.Operation{
		Name:       opListSpaces,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSpacesInput{}
	}

	output = &ListSpacesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListSpaces API operation for AIOTVIDEO.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO's
// API operation ListSpaces for usage and error information.
func (c *AIOTVIDEO) ListSpaces(input *ListSpacesInput) (*ListSpacesOutput, error) {
	req, out := c.ListSpacesRequest(input)
	return out, req.Send()
}

// ListSpacesWithContext is the same as ListSpaces with the addition of
// the ability to pass a context and additional request options.
//
// See ListSpaces for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO) ListSpacesWithContext(ctx volcengine.Context, input *ListSpacesInput, opts ...request.Option) (*ListSpacesOutput, error) {
	req, out := c.ListSpacesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AIForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	BindTime *string `type:"string"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s AIForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AIForListSpacesOutput) GoString() string {
	return s.String()
}

// SetBindTime sets the BindTime field's value.
func (s *AIForListSpacesOutput) SetBindTime(v string) *AIForListSpacesOutput {
	s.BindTime = &v
	return s
}

// SetTemplateID sets the TemplateID field's value.
func (s *AIForListSpacesOutput) SetTemplateID(v string) *AIForListSpacesOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *AIForListSpacesOutput) SetTemplateName(v string) *AIForListSpacesOutput {
	s.TemplateName = &v
	return s
}

type DomainsForListSpacesOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s DomainsForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DomainsForListSpacesOutput) GoString() string {
	return s.String()
}

type GBForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	PullOnDemand *bool `type:"boolean"`
}

// String returns the string representation
func (s GBForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GBForListSpacesOutput) GoString() string {
	return s.String()
}

// SetPullOnDemand sets the PullOnDemand field's value.
func (s *GBForListSpacesOutput) SetPullOnDemand(v bool) *GBForListSpacesOutput {
	s.PullOnDemand = &v
	return s
}

type ListSpacesInput struct {
	_ struct{} `type:"structure"`

	Order *string `type:"string"`

	PageNumber *string `type:"string"`

	PageSize *string `type:"string"`

	ProjectName *string `type:"string"`

	TagFilters []*TagFilterForListSpacesInput `type:"list"`
}

// String returns the string representation
func (s ListSpacesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSpacesInput) GoString() string {
	return s.String()
}

// SetOrder sets the Order field's value.
func (s *ListSpacesInput) SetOrder(v string) *ListSpacesInput {
	s.Order = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSpacesInput) SetPageNumber(v string) *ListSpacesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSpacesInput) SetPageSize(v string) *ListSpacesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListSpacesInput) SetProjectName(v string) *ListSpacesInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListSpacesInput) SetTagFilters(v []*TagFilterForListSpacesInput) *ListSpacesInput {
	s.TagFilters = v
	return s
}

type ListSpacesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Spaces []*SpaceForListSpacesOutput `type:"list"`
}

// String returns the string representation
func (s ListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSpacesOutput) GoString() string {
	return s.String()
}

// SetSpaces sets the Spaces field's value.
func (s *ListSpacesOutput) SetSpaces(v []*SpaceForListSpacesOutput) *ListSpacesOutput {
	s.Spaces = v
	return s
}

type RecordForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	BindTime *string `type:"string"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s RecordForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordForListSpacesOutput) GoString() string {
	return s.String()
}

// SetBindTime sets the BindTime field's value.
func (s *RecordForListSpacesOutput) SetBindTime(v string) *RecordForListSpacesOutput {
	s.BindTime = &v
	return s
}

// SetTemplateID sets the TemplateID field's value.
func (s *RecordForListSpacesOutput) SetTemplateID(v string) *RecordForListSpacesOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *RecordForListSpacesOutput) SetTemplateName(v string) *RecordForListSpacesOutput {
	s.TemplateName = &v
	return s
}

type ScreenshotForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	BindTime *string `type:"string"`

	TemplateID *string `type:"string"`

	TemplateName *string `type:"string"`
}

// String returns the string representation
func (s ScreenshotForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScreenshotForListSpacesOutput) GoString() string {
	return s.String()
}

// SetBindTime sets the BindTime field's value.
func (s *ScreenshotForListSpacesOutput) SetBindTime(v string) *ScreenshotForListSpacesOutput {
	s.BindTime = &v
	return s
}

// SetTemplateID sets the TemplateID field's value.
func (s *ScreenshotForListSpacesOutput) SetTemplateID(v string) *ScreenshotForListSpacesOutput {
	s.TemplateID = &v
	return s
}

// SetTemplateName sets the TemplateName field's value.
func (s *ScreenshotForListSpacesOutput) SetTemplateName(v string) *ScreenshotForListSpacesOutput {
	s.TemplateName = &v
	return s
}

type SipPortForListSpacesOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s SipPortForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SipPortForListSpacesOutput) GoString() string {
	return s.String()
}

type SipServerForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	SipDomain *string `type:"string"`

	SipId *string `type:"string"`

	SipIp *string `type:"string"`

	SipPort *SipPortForListSpacesOutput `type:"structure"`
}

// String returns the string representation
func (s SipServerForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SipServerForListSpacesOutput) GoString() string {
	return s.String()
}

// SetSipDomain sets the SipDomain field's value.
func (s *SipServerForListSpacesOutput) SetSipDomain(v string) *SipServerForListSpacesOutput {
	s.SipDomain = &v
	return s
}

// SetSipId sets the SipId field's value.
func (s *SipServerForListSpacesOutput) SetSipId(v string) *SipServerForListSpacesOutput {
	s.SipId = &v
	return s
}

// SetSipIp sets the SipIp field's value.
func (s *SipServerForListSpacesOutput) SetSipIp(v string) *SipServerForListSpacesOutput {
	s.SipIp = &v
	return s
}

// SetSipPort sets the SipPort field's value.
func (s *SipServerForListSpacesOutput) SetSipPort(v *SipPortForListSpacesOutput) *SipServerForListSpacesOutput {
	s.SipPort = v
	return s
}

type SpaceForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	AccessType *string `type:"string"`

	CallbackURL *string `type:"string"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	Domains *DomainsForListSpacesOutput `type:"structure"`

	GB *GBForListSpacesOutput `type:"structure"`

	HLSLowLatency *bool `type:"boolean"`

	Region *string `type:"string"`

	SipServer *SipServerForListSpacesOutput `type:"structure"`

	SpaceID *string `type:"string"`

	SpaceName *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForListSpacesOutput `type:"list"`

	Template *TemplateForListSpacesOutput `type:"structure"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s SpaceForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SpaceForListSpacesOutput) GoString() string {
	return s.String()
}

// SetAccessType sets the AccessType field's value.
func (s *SpaceForListSpacesOutput) SetAccessType(v string) *SpaceForListSpacesOutput {
	s.AccessType = &v
	return s
}

// SetCallbackURL sets the CallbackURL field's value.
func (s *SpaceForListSpacesOutput) SetCallbackURL(v string) *SpaceForListSpacesOutput {
	s.CallbackURL = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *SpaceForListSpacesOutput) SetCreatedAt(v string) *SpaceForListSpacesOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SpaceForListSpacesOutput) SetDescription(v string) *SpaceForListSpacesOutput {
	s.Description = &v
	return s
}

// SetDomains sets the Domains field's value.
func (s *SpaceForListSpacesOutput) SetDomains(v *DomainsForListSpacesOutput) *SpaceForListSpacesOutput {
	s.Domains = v
	return s
}

// SetGB sets the GB field's value.
func (s *SpaceForListSpacesOutput) SetGB(v *GBForListSpacesOutput) *SpaceForListSpacesOutput {
	s.GB = v
	return s
}

// SetHLSLowLatency sets the HLSLowLatency field's value.
func (s *SpaceForListSpacesOutput) SetHLSLowLatency(v bool) *SpaceForListSpacesOutput {
	s.HLSLowLatency = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *SpaceForListSpacesOutput) SetRegion(v string) *SpaceForListSpacesOutput {
	s.Region = &v
	return s
}

// SetSipServer sets the SipServer field's value.
func (s *SpaceForListSpacesOutput) SetSipServer(v *SipServerForListSpacesOutput) *SpaceForListSpacesOutput {
	s.SipServer = v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *SpaceForListSpacesOutput) SetSpaceID(v string) *SpaceForListSpacesOutput {
	s.SpaceID = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *SpaceForListSpacesOutput) SetSpaceName(v string) *SpaceForListSpacesOutput {
	s.SpaceName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SpaceForListSpacesOutput) SetStatus(v string) *SpaceForListSpacesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *SpaceForListSpacesOutput) SetTags(v []*TagForListSpacesOutput) *SpaceForListSpacesOutput {
	s.Tags = v
	return s
}

// SetTemplate sets the Template field's value.
func (s *SpaceForListSpacesOutput) SetTemplate(v *TemplateForListSpacesOutput) *SpaceForListSpacesOutput {
	s.Template = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *SpaceForListSpacesOutput) SetUpdatedAt(v string) *SpaceForListSpacesOutput {
	s.UpdatedAt = &v
	return s
}

type TagFilterForListSpacesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForListSpacesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListSpacesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListSpacesInput) SetKey(v string) *TagFilterForListSpacesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListSpacesInput) SetValues(v []*string) *TagFilterForListSpacesInput {
	s.Values = v
	return s
}

type TagForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListSpacesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListSpacesOutput) SetKey(v string) *TagForListSpacesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListSpacesOutput) SetValue(v string) *TagForListSpacesOutput {
	s.Value = &v
	return s
}

type TemplateForListSpacesOutput struct {
	_ struct{} `type:"structure"`

	AI *AIForListSpacesOutput `type:"structure"`

	Record *RecordForListSpacesOutput `type:"structure"`

	Screenshot *ScreenshotForListSpacesOutput `type:"structure"`
}

// String returns the string representation
func (s TemplateForListSpacesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TemplateForListSpacesOutput) GoString() string {
	return s.String()
}

// SetAI sets the AI field's value.
func (s *TemplateForListSpacesOutput) SetAI(v *AIForListSpacesOutput) *TemplateForListSpacesOutput {
	s.AI = v
	return s
}

// SetRecord sets the Record field's value.
func (s *TemplateForListSpacesOutput) SetRecord(v *RecordForListSpacesOutput) *TemplateForListSpacesOutput {
	s.Record = v
	return s
}

// SetScreenshot sets the Screenshot field's value.
func (s *TemplateForListSpacesOutput) SetScreenshot(v *ScreenshotForListSpacesOutput) *TemplateForListSpacesOutput {
	s.Screenshot = v
	return s
}
