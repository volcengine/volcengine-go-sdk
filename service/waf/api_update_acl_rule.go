// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateAclRuleCommon = "UpdateAclRule"

// UpdateAclRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAclRuleCommon operation. The "output" return
// value will be populated with the UpdateAclRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAclRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAclRuleCommon Send returns without error.
//
// See UpdateAclRuleCommon for more information on using the UpdateAclRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAclRuleCommonRequest method.
//    req, resp := client.UpdateAclRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateAclRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAclRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAclRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateAclRuleCommon for usage and error information.
func (c *WAF) UpdateAclRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAclRuleCommonRequest(input)
	return out, req.Send()
}

// UpdateAclRuleCommonWithContext is the same as UpdateAclRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAclRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateAclRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAclRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAclRule = "UpdateAclRule"

// UpdateAclRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAclRule operation. The "output" return
// value will be populated with the UpdateAclRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAclRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAclRuleCommon Send returns without error.
//
// See UpdateAclRule for more information on using the UpdateAclRule
// API call, and error handling.
//
//    // Example sending a request using the UpdateAclRuleRequest method.
//    req, resp := client.UpdateAclRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) UpdateAclRuleRequest(input *UpdateAclRuleInput) (req *request.Request, output *UpdateAclRuleOutput) {
	op := &request.Operation{
		Name:       opUpdateAclRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAclRuleInput{}
	}

	output = &UpdateAclRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAclRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation UpdateAclRule for usage and error information.
func (c *WAF) UpdateAclRule(input *UpdateAclRuleInput) (*UpdateAclRuleOutput, error) {
	req, out := c.UpdateAclRuleRequest(input)
	return out, req.Send()
}

// UpdateAclRuleWithContext is the same as UpdateAclRule with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAclRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) UpdateAclRuleWithContext(ctx volcengine.Context, input *UpdateAclRuleInput, opts ...request.Option) (*UpdateAclRuleOutput, error) {
	req, out := c.UpdateAclRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccurateGroupForUpdateAclRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateRules []*AccurateRuleForUpdateAclRuleInput `type:"list" json:",omitempty"`

	Logic *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AccurateGroupForUpdateAclRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateGroupForUpdateAclRuleInput) GoString() string {
	return s.String()
}

// SetAccurateRules sets the AccurateRules field's value.
func (s *AccurateGroupForUpdateAclRuleInput) SetAccurateRules(v []*AccurateRuleForUpdateAclRuleInput) *AccurateGroupForUpdateAclRuleInput {
	s.AccurateRules = v
	return s
}

// SetLogic sets the Logic field's value.
func (s *AccurateGroupForUpdateAclRuleInput) SetLogic(v int32) *AccurateGroupForUpdateAclRuleInput {
	s.Logic = &v
	return s
}

type AccurateRuleForUpdateAclRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HttpObj *string `type:"string" json:",omitempty"`

	ObjType *int32 `type:"int32" json:",omitempty"`

	Opretar *int32 `type:"int32" json:",omitempty"`

	Property *int32 `type:"int32" json:",omitempty"`

	ValueString *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AccurateRuleForUpdateAclRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateRuleForUpdateAclRuleInput) GoString() string {
	return s.String()
}

// SetHttpObj sets the HttpObj field's value.
func (s *AccurateRuleForUpdateAclRuleInput) SetHttpObj(v string) *AccurateRuleForUpdateAclRuleInput {
	s.HttpObj = &v
	return s
}

// SetObjType sets the ObjType field's value.
func (s *AccurateRuleForUpdateAclRuleInput) SetObjType(v int32) *AccurateRuleForUpdateAclRuleInput {
	s.ObjType = &v
	return s
}

// SetOpretar sets the Opretar field's value.
func (s *AccurateRuleForUpdateAclRuleInput) SetOpretar(v int32) *AccurateRuleForUpdateAclRuleInput {
	s.Opretar = &v
	return s
}

// SetProperty sets the Property field's value.
func (s *AccurateRuleForUpdateAclRuleInput) SetProperty(v int32) *AccurateRuleForUpdateAclRuleInput {
	s.Property = &v
	return s
}

// SetValueString sets the ValueString field's value.
func (s *AccurateRuleForUpdateAclRuleInput) SetValueString(v string) *AccurateRuleForUpdateAclRuleInput {
	s.ValueString = &v
	return s
}

type UpdateAclRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateGroup *AccurateGroupForUpdateAclRuleInput `type:"structure" json:",omitempty"`

	// AclType is a required field
	AclType *string `type:"string" json:",omitempty" required:"true"`

	Action *string `type:"string" json:",omitempty"`

	Advanced *int32 `type:"int32" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// Enable is a required field
	Enable *int32 `type:"int32" json:",omitempty" required:"true"`

	// HostAddType is a required field
	HostAddType *int32 `type:"int32" json:",omitempty" required:"true"`

	HostGroupId []*int32 `type:"list" json:",omitempty"`

	HostList []*string `type:"list" json:",omitempty"`

	// ID is a required field
	ID *int32 `type:"int32" json:",omitempty" required:"true"`

	// IpAddType is a required field
	IpAddType *int32 `type:"int32" json:",omitempty" required:"true"`

	IpGroupId []*int32 `type:"list" json:",omitempty"`

	IpList []*string `type:"list" json:",omitempty"`

	IpLocationCountry []*string `type:"list" json:",omitempty"`

	IpLocationSubregion []*string `type:"list" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	// Url is a required field
	Url *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateAclRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAclRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAclRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAclRuleInput"}
	if s.AclType == nil {
		invalidParams.Add(request.NewErrParamRequired("AclType"))
	}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}
	if s.HostAddType == nil {
		invalidParams.Add(request.NewErrParamRequired("HostAddType"))
	}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}
	if s.IpAddType == nil {
		invalidParams.Add(request.NewErrParamRequired("IpAddType"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Url == nil {
		invalidParams.Add(request.NewErrParamRequired("Url"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccurateGroup sets the AccurateGroup field's value.
func (s *UpdateAclRuleInput) SetAccurateGroup(v *AccurateGroupForUpdateAclRuleInput) *UpdateAclRuleInput {
	s.AccurateGroup = v
	return s
}

// SetAclType sets the AclType field's value.
func (s *UpdateAclRuleInput) SetAclType(v string) *UpdateAclRuleInput {
	s.AclType = &v
	return s
}

// SetAction sets the Action field's value.
func (s *UpdateAclRuleInput) SetAction(v string) *UpdateAclRuleInput {
	s.Action = &v
	return s
}

// SetAdvanced sets the Advanced field's value.
func (s *UpdateAclRuleInput) SetAdvanced(v int32) *UpdateAclRuleInput {
	s.Advanced = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateAclRuleInput) SetDescription(v string) *UpdateAclRuleInput {
	s.Description = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateAclRuleInput) SetEnable(v int32) *UpdateAclRuleInput {
	s.Enable = &v
	return s
}

// SetHostAddType sets the HostAddType field's value.
func (s *UpdateAclRuleInput) SetHostAddType(v int32) *UpdateAclRuleInput {
	s.HostAddType = &v
	return s
}

// SetHostGroupId sets the HostGroupId field's value.
func (s *UpdateAclRuleInput) SetHostGroupId(v []*int32) *UpdateAclRuleInput {
	s.HostGroupId = v
	return s
}

// SetHostList sets the HostList field's value.
func (s *UpdateAclRuleInput) SetHostList(v []*string) *UpdateAclRuleInput {
	s.HostList = v
	return s
}

// SetID sets the ID field's value.
func (s *UpdateAclRuleInput) SetID(v int32) *UpdateAclRuleInput {
	s.ID = &v
	return s
}

// SetIpAddType sets the IpAddType field's value.
func (s *UpdateAclRuleInput) SetIpAddType(v int32) *UpdateAclRuleInput {
	s.IpAddType = &v
	return s
}

// SetIpGroupId sets the IpGroupId field's value.
func (s *UpdateAclRuleInput) SetIpGroupId(v []*int32) *UpdateAclRuleInput {
	s.IpGroupId = v
	return s
}

// SetIpList sets the IpList field's value.
func (s *UpdateAclRuleInput) SetIpList(v []*string) *UpdateAclRuleInput {
	s.IpList = v
	return s
}

// SetIpLocationCountry sets the IpLocationCountry field's value.
func (s *UpdateAclRuleInput) SetIpLocationCountry(v []*string) *UpdateAclRuleInput {
	s.IpLocationCountry = v
	return s
}

// SetIpLocationSubregion sets the IpLocationSubregion field's value.
func (s *UpdateAclRuleInput) SetIpLocationSubregion(v []*string) *UpdateAclRuleInput {
	s.IpLocationSubregion = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateAclRuleInput) SetName(v string) *UpdateAclRuleInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *UpdateAclRuleInput) SetProjectName(v string) *UpdateAclRuleInput {
	s.ProjectName = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *UpdateAclRuleInput) SetUrl(v string) *UpdateAclRuleInput {
	s.Url = &v
	return s
}

type UpdateAclRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAclRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAclRuleOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateAclRuleOutput) SetId(v int32) *UpdateAclRuleOutput {
	s.Id = &v
	return s
}
