// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package waf

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBotAnalyseProtectRuleCommon = "CreateBotAnalyseProtectRule"

// CreateBotAnalyseProtectRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBotAnalyseProtectRuleCommon operation. The "output" return
// value will be populated with the CreateBotAnalyseProtectRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBotAnalyseProtectRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBotAnalyseProtectRuleCommon Send returns without error.
//
// See CreateBotAnalyseProtectRuleCommon for more information on using the CreateBotAnalyseProtectRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBotAnalyseProtectRuleCommonRequest method.
//    req, resp := client.CreateBotAnalyseProtectRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) CreateBotAnalyseProtectRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBotAnalyseProtectRuleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBotAnalyseProtectRuleCommon API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation CreateBotAnalyseProtectRuleCommon for usage and error information.
func (c *WAF) CreateBotAnalyseProtectRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBotAnalyseProtectRuleCommonRequest(input)
	return out, req.Send()
}

// CreateBotAnalyseProtectRuleCommonWithContext is the same as CreateBotAnalyseProtectRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBotAnalyseProtectRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) CreateBotAnalyseProtectRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBotAnalyseProtectRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBotAnalyseProtectRule = "CreateBotAnalyseProtectRule"

// CreateBotAnalyseProtectRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBotAnalyseProtectRule operation. The "output" return
// value will be populated with the CreateBotAnalyseProtectRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBotAnalyseProtectRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBotAnalyseProtectRuleCommon Send returns without error.
//
// See CreateBotAnalyseProtectRule for more information on using the CreateBotAnalyseProtectRule
// API call, and error handling.
//
//    // Example sending a request using the CreateBotAnalyseProtectRuleRequest method.
//    req, resp := client.CreateBotAnalyseProtectRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *WAF) CreateBotAnalyseProtectRuleRequest(input *CreateBotAnalyseProtectRuleInput) (req *request.Request, output *CreateBotAnalyseProtectRuleOutput) {
	op := &request.Operation{
		Name:       opCreateBotAnalyseProtectRule,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBotAnalyseProtectRuleInput{}
	}

	output = &CreateBotAnalyseProtectRuleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBotAnalyseProtectRule API operation for WAF.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for WAF's
// API operation CreateBotAnalyseProtectRule for usage and error information.
func (c *WAF) CreateBotAnalyseProtectRule(input *CreateBotAnalyseProtectRuleInput) (*CreateBotAnalyseProtectRuleOutput, error) {
	req, out := c.CreateBotAnalyseProtectRuleRequest(input)
	return out, req.Send()
}

// CreateBotAnalyseProtectRuleWithContext is the same as CreateBotAnalyseProtectRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBotAnalyseProtectRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *WAF) CreateBotAnalyseProtectRuleWithContext(ctx volcengine.Context, input *CreateBotAnalyseProtectRuleInput, opts ...request.Option) (*CreateBotAnalyseProtectRuleOutput, error) {
	req, out := c.CreateBotAnalyseProtectRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccurateGroupForCreateBotAnalyseProtectRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateRules []*AccurateRuleForCreateBotAnalyseProtectRuleInput `type:"list" json:",omitempty"`

	Logic *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AccurateGroupForCreateBotAnalyseProtectRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateGroupForCreateBotAnalyseProtectRuleInput) GoString() string {
	return s.String()
}

// SetAccurateRules sets the AccurateRules field's value.
func (s *AccurateGroupForCreateBotAnalyseProtectRuleInput) SetAccurateRules(v []*AccurateRuleForCreateBotAnalyseProtectRuleInput) *AccurateGroupForCreateBotAnalyseProtectRuleInput {
	s.AccurateRules = v
	return s
}

// SetLogic sets the Logic field's value.
func (s *AccurateGroupForCreateBotAnalyseProtectRuleInput) SetLogic(v int32) *AccurateGroupForCreateBotAnalyseProtectRuleInput {
	s.Logic = &v
	return s
}

type AccurateRuleForCreateBotAnalyseProtectRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HttpObj *string `type:"string" json:",omitempty"`

	ObjType *int32 `type:"int32" json:",omitempty"`

	Opretar *int32 `type:"int32" json:",omitempty"`

	Property *int32 `type:"int32" json:",omitempty"`

	ValueString *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AccurateRuleForCreateBotAnalyseProtectRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccurateRuleForCreateBotAnalyseProtectRuleInput) GoString() string {
	return s.String()
}

// SetHttpObj sets the HttpObj field's value.
func (s *AccurateRuleForCreateBotAnalyseProtectRuleInput) SetHttpObj(v string) *AccurateRuleForCreateBotAnalyseProtectRuleInput {
	s.HttpObj = &v
	return s
}

// SetObjType sets the ObjType field's value.
func (s *AccurateRuleForCreateBotAnalyseProtectRuleInput) SetObjType(v int32) *AccurateRuleForCreateBotAnalyseProtectRuleInput {
	s.ObjType = &v
	return s
}

// SetOpretar sets the Opretar field's value.
func (s *AccurateRuleForCreateBotAnalyseProtectRuleInput) SetOpretar(v int32) *AccurateRuleForCreateBotAnalyseProtectRuleInput {
	s.Opretar = &v
	return s
}

// SetProperty sets the Property field's value.
func (s *AccurateRuleForCreateBotAnalyseProtectRuleInput) SetProperty(v int32) *AccurateRuleForCreateBotAnalyseProtectRuleInput {
	s.Property = &v
	return s
}

// SetValueString sets the ValueString field's value.
func (s *AccurateRuleForCreateBotAnalyseProtectRuleInput) SetValueString(v string) *AccurateRuleForCreateBotAnalyseProtectRuleInput {
	s.ValueString = &v
	return s
}

type CreateBotAnalyseProtectRuleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccurateGroup []*AccurateGroupForCreateBotAnalyseProtectRuleInput `type:"list" json:",omitempty"`

	ActionAfterVerification *int32 `type:"int32" json:",omitempty"`

	// ActionType is a required field
	ActionType *int32 `type:"int32" json:",omitempty" required:"true"`

	// EffectTime is a required field
	EffectTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// Enable is a required field
	Enable *int32 `type:"int32" json:",omitempty" required:"true"`

	ExemptionTime *int32 `type:"int32" json:",omitempty"`

	// Field is a required field
	Field *string `type:"string" json:",omitempty" required:"true"`

	// Host is a required field
	Host *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// Path is a required field
	Path *string `type:"string" json:",omitempty" required:"true"`

	PathThreshold *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	// RulePriority is a required field
	RulePriority *int32 `type:"int32" json:",omitempty" required:"true"`

	SingleProportion *float64 `type:"float" json:",omitempty"`

	// SingleThreshold is a required field
	SingleThreshold *int32 `type:"int32" json:",omitempty" required:"true"`

	// StatisticalDuration is a required field
	StatisticalDuration *int32 `type:"int32" json:",omitempty" required:"true"`

	// StatisticalType is a required field
	StatisticalType *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateBotAnalyseProtectRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBotAnalyseProtectRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBotAnalyseProtectRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateBotAnalyseProtectRuleInput"}
	if s.ActionType == nil {
		invalidParams.Add(request.NewErrParamRequired("ActionType"))
	}
	if s.EffectTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EffectTime"))
	}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}
	if s.Field == nil {
		invalidParams.Add(request.NewErrParamRequired("Field"))
	}
	if s.Host == nil {
		invalidParams.Add(request.NewErrParamRequired("Host"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Path == nil {
		invalidParams.Add(request.NewErrParamRequired("Path"))
	}
	if s.RulePriority == nil {
		invalidParams.Add(request.NewErrParamRequired("RulePriority"))
	}
	if s.SingleThreshold == nil {
		invalidParams.Add(request.NewErrParamRequired("SingleThreshold"))
	}
	if s.StatisticalDuration == nil {
		invalidParams.Add(request.NewErrParamRequired("StatisticalDuration"))
	}
	if s.StatisticalType == nil {
		invalidParams.Add(request.NewErrParamRequired("StatisticalType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccurateGroup sets the AccurateGroup field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetAccurateGroup(v []*AccurateGroupForCreateBotAnalyseProtectRuleInput) *CreateBotAnalyseProtectRuleInput {
	s.AccurateGroup = v
	return s
}

// SetActionAfterVerification sets the ActionAfterVerification field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetActionAfterVerification(v int32) *CreateBotAnalyseProtectRuleInput {
	s.ActionAfterVerification = &v
	return s
}

// SetActionType sets the ActionType field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetActionType(v int32) *CreateBotAnalyseProtectRuleInput {
	s.ActionType = &v
	return s
}

// SetEffectTime sets the EffectTime field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetEffectTime(v int32) *CreateBotAnalyseProtectRuleInput {
	s.EffectTime = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetEnable(v int32) *CreateBotAnalyseProtectRuleInput {
	s.Enable = &v
	return s
}

// SetExemptionTime sets the ExemptionTime field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetExemptionTime(v int32) *CreateBotAnalyseProtectRuleInput {
	s.ExemptionTime = &v
	return s
}

// SetField sets the Field field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetField(v string) *CreateBotAnalyseProtectRuleInput {
	s.Field = &v
	return s
}

// SetHost sets the Host field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetHost(v string) *CreateBotAnalyseProtectRuleInput {
	s.Host = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetName(v string) *CreateBotAnalyseProtectRuleInput {
	s.Name = &v
	return s
}

// SetPath sets the Path field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetPath(v string) *CreateBotAnalyseProtectRuleInput {
	s.Path = &v
	return s
}

// SetPathThreshold sets the PathThreshold field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetPathThreshold(v int32) *CreateBotAnalyseProtectRuleInput {
	s.PathThreshold = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetProjectName(v string) *CreateBotAnalyseProtectRuleInput {
	s.ProjectName = &v
	return s
}

// SetRulePriority sets the RulePriority field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetRulePriority(v int32) *CreateBotAnalyseProtectRuleInput {
	s.RulePriority = &v
	return s
}

// SetSingleProportion sets the SingleProportion field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetSingleProportion(v float64) *CreateBotAnalyseProtectRuleInput {
	s.SingleProportion = &v
	return s
}

// SetSingleThreshold sets the SingleThreshold field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetSingleThreshold(v int32) *CreateBotAnalyseProtectRuleInput {
	s.SingleThreshold = &v
	return s
}

// SetStatisticalDuration sets the StatisticalDuration field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetStatisticalDuration(v int32) *CreateBotAnalyseProtectRuleInput {
	s.StatisticalDuration = &v
	return s
}

// SetStatisticalType sets the StatisticalType field's value.
func (s *CreateBotAnalyseProtectRuleInput) SetStatisticalType(v int32) *CreateBotAnalyseProtectRuleInput {
	s.StatisticalType = &v
	return s
}

type CreateBotAnalyseProtectRuleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s CreateBotAnalyseProtectRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBotAnalyseProtectRuleOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateBotAnalyseProtectRuleOutput) SetId(v int32) *CreateBotAnalyseProtectRuleOutput {
	s.Id = &v
	return s
}
