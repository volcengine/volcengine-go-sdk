// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vms

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpgradeAXToAXBCommon = "UpgradeAXToAXB"

// UpgradeAXToAXBCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpgradeAXToAXBCommon operation. The "output" return
// value will be populated with the UpgradeAXToAXBCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpgradeAXToAXBCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpgradeAXToAXBCommon Send returns without error.
//
// See UpgradeAXToAXBCommon for more information on using the UpgradeAXToAXBCommon
// API call, and error handling.
//
//    // Example sending a request using the UpgradeAXToAXBCommonRequest method.
//    req, resp := client.UpgradeAXToAXBCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) UpgradeAXToAXBCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpgradeAXToAXBCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpgradeAXToAXBCommon API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation UpgradeAXToAXBCommon for usage and error information.
func (c *VMS) UpgradeAXToAXBCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpgradeAXToAXBCommonRequest(input)
	return out, req.Send()
}

// UpgradeAXToAXBCommonWithContext is the same as UpgradeAXToAXBCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpgradeAXToAXBCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) UpgradeAXToAXBCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpgradeAXToAXBCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpgradeAXToAXB = "UpgradeAXToAXB"

// UpgradeAXToAXBRequest generates a "volcengine/request.Request" representing the
// client's request for the UpgradeAXToAXB operation. The "output" return
// value will be populated with the UpgradeAXToAXBCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpgradeAXToAXBCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpgradeAXToAXBCommon Send returns without error.
//
// See UpgradeAXToAXB for more information on using the UpgradeAXToAXB
// API call, and error handling.
//
//    // Example sending a request using the UpgradeAXToAXBRequest method.
//    req, resp := client.UpgradeAXToAXBRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) UpgradeAXToAXBRequest(input *UpgradeAXToAXBInput) (req *request.Request, output *UpgradeAXToAXBOutput) {
	op := &request.Operation{
		Name:       opUpgradeAXToAXB,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpgradeAXToAXBInput{}
	}

	output = &UpgradeAXToAXBOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpgradeAXToAXB API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation UpgradeAXToAXB for usage and error information.
func (c *VMS) UpgradeAXToAXB(input *UpgradeAXToAXBInput) (*UpgradeAXToAXBOutput, error) {
	req, out := c.UpgradeAXToAXBRequest(input)
	return out, req.Send()
}

// UpgradeAXToAXBWithContext is the same as UpgradeAXToAXB with the addition of
// the ability to pass a context and additional request options.
//
// See UpgradeAXToAXB for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) UpgradeAXToAXBWithContext(ctx volcengine.Context, input *UpgradeAXToAXBInput, opts ...request.Option) (*UpgradeAXToAXBOutput, error) {
	req, out := c.UpgradeAXToAXBRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpgradeAXToAXBInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CallDisplayType *int32 `type:"int32" json:",omitempty"`

	// NumberPoolNo is a required field
	NumberPoolNo *string `type:"string" json:",omitempty" required:"true"`

	OutId *string `type:"string" json:",omitempty"`

	// PhoneNoB is a required field
	PhoneNoB *string `type:"string" json:",omitempty" required:"true"`

	// SubId is a required field
	SubId *string `type:"string" json:",omitempty" required:"true"`

	UserData *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpgradeAXToAXBInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpgradeAXToAXBInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpgradeAXToAXBInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpgradeAXToAXBInput"}
	if s.NumberPoolNo == nil {
		invalidParams.Add(request.NewErrParamRequired("NumberPoolNo"))
	}
	if s.PhoneNoB == nil {
		invalidParams.Add(request.NewErrParamRequired("PhoneNoB"))
	}
	if s.SubId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCallDisplayType sets the CallDisplayType field's value.
func (s *UpgradeAXToAXBInput) SetCallDisplayType(v int32) *UpgradeAXToAXBInput {
	s.CallDisplayType = &v
	return s
}

// SetNumberPoolNo sets the NumberPoolNo field's value.
func (s *UpgradeAXToAXBInput) SetNumberPoolNo(v string) *UpgradeAXToAXBInput {
	s.NumberPoolNo = &v
	return s
}

// SetOutId sets the OutId field's value.
func (s *UpgradeAXToAXBInput) SetOutId(v string) *UpgradeAXToAXBInput {
	s.OutId = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *UpgradeAXToAXBInput) SetPhoneNoB(v string) *UpgradeAXToAXBInput {
	s.PhoneNoB = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *UpgradeAXToAXBInput) SetSubId(v string) *UpgradeAXToAXBInput {
	s.SubId = &v
	return s
}

// SetUserData sets the UserData field's value.
func (s *UpgradeAXToAXBInput) SetUserData(v string) *UpgradeAXToAXBInput {
	s.UserData = &v
	return s
}

type UpgradeAXToAXBOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PhoneNoA *string `type:"string" json:",omitempty"`

	PhoneNoACityCode *string `type:"string" json:",omitempty"`

	PhoneNoB *string `type:"string" json:",omitempty"`

	PhoneNoBCityCode *string `type:"string" json:",omitempty"`

	PhoneNoX *string `type:"string" json:",omitempty"`

	PhoneNoXCityCode *string `type:"string" json:",omitempty"`

	SubId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpgradeAXToAXBOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpgradeAXToAXBOutput) GoString() string {
	return s.String()
}

// SetPhoneNoA sets the PhoneNoA field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoA(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoA = &v
	return s
}

// SetPhoneNoACityCode sets the PhoneNoACityCode field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoACityCode(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoACityCode = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoB(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoB = &v
	return s
}

// SetPhoneNoBCityCode sets the PhoneNoBCityCode field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoBCityCode(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoBCityCode = &v
	return s
}

// SetPhoneNoX sets the PhoneNoX field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoX(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoX = &v
	return s
}

// SetPhoneNoXCityCode sets the PhoneNoXCityCode field's value.
func (s *UpgradeAXToAXBOutput) SetPhoneNoXCityCode(v string) *UpgradeAXToAXBOutput {
	s.PhoneNoXCityCode = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *UpgradeAXToAXBOutput) SetSubId(v string) *UpgradeAXToAXBOutput {
	s.SubId = &v
	return s
}
