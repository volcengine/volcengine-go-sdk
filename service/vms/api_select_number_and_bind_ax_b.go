// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vms

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSelectNumberAndBindAXBCommon = "SelectNumberAndBindAXB"

// SelectNumberAndBindAXBCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SelectNumberAndBindAXBCommon operation. The "output" return
// value will be populated with the SelectNumberAndBindAXBCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SelectNumberAndBindAXBCommon Request to send the API call to the service.
// the "output" return value is not valid until after SelectNumberAndBindAXBCommon Send returns without error.
//
// See SelectNumberAndBindAXBCommon for more information on using the SelectNumberAndBindAXBCommon
// API call, and error handling.
//
//    // Example sending a request using the SelectNumberAndBindAXBCommonRequest method.
//    req, resp := client.SelectNumberAndBindAXBCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) SelectNumberAndBindAXBCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSelectNumberAndBindAXBCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SelectNumberAndBindAXBCommon API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation SelectNumberAndBindAXBCommon for usage and error information.
func (c *VMS) SelectNumberAndBindAXBCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SelectNumberAndBindAXBCommonRequest(input)
	return out, req.Send()
}

// SelectNumberAndBindAXBCommonWithContext is the same as SelectNumberAndBindAXBCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SelectNumberAndBindAXBCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) SelectNumberAndBindAXBCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SelectNumberAndBindAXBCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSelectNumberAndBindAXB = "SelectNumberAndBindAXB"

// SelectNumberAndBindAXBRequest generates a "volcengine/request.Request" representing the
// client's request for the SelectNumberAndBindAXB operation. The "output" return
// value will be populated with the SelectNumberAndBindAXBCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SelectNumberAndBindAXBCommon Request to send the API call to the service.
// the "output" return value is not valid until after SelectNumberAndBindAXBCommon Send returns without error.
//
// See SelectNumberAndBindAXB for more information on using the SelectNumberAndBindAXB
// API call, and error handling.
//
//    // Example sending a request using the SelectNumberAndBindAXBRequest method.
//    req, resp := client.SelectNumberAndBindAXBRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) SelectNumberAndBindAXBRequest(input *SelectNumberAndBindAXBInput) (req *request.Request, output *SelectNumberAndBindAXBOutput) {
	op := &request.Operation{
		Name:       opSelectNumberAndBindAXB,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SelectNumberAndBindAXBInput{}
	}

	output = &SelectNumberAndBindAXBOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SelectNumberAndBindAXB API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation SelectNumberAndBindAXB for usage and error information.
func (c *VMS) SelectNumberAndBindAXB(input *SelectNumberAndBindAXBInput) (*SelectNumberAndBindAXBOutput, error) {
	req, out := c.SelectNumberAndBindAXBRequest(input)
	return out, req.Send()
}

// SelectNumberAndBindAXBWithContext is the same as SelectNumberAndBindAXB with the addition of
// the ability to pass a context and additional request options.
//
// See SelectNumberAndBindAXB for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) SelectNumberAndBindAXBWithContext(ctx volcengine.Context, input *SelectNumberAndBindAXBInput, opts ...request.Option) (*SelectNumberAndBindAXBOutput, error) {
	req, out := c.SelectNumberAndBindAXBRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SelectNumberAndBindAXBInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AudioRecordFlag *int32 `type:"int32" json:",omitempty"`

	AxConflictAxbFlag *int32 `type:"int32" json:",omitempty"`

	CallDisplayType *int32 `type:"int32" json:",omitempty"`

	CityCode *string `type:"string" json:",omitempty"`

	CityCodeByPhoneNo *string `type:"string" json:",omitempty" enum:"EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInput"`

	DegradeCityList []*string `type:"list" json:",omitempty"`

	// ExpireTime is a required field
	ExpireTime *int64 `type:"int64" json:",omitempty" required:"true"`

	// NumberPoolNo is a required field
	NumberPoolNo *string `type:"string" json:",omitempty" required:"true"`

	OutId *string `type:"string" json:",omitempty"`

	// PhoneNoA is a required field
	PhoneNoA *string `type:"string" json:",omitempty" required:"true"`

	PhoneNoB *string `type:"string" json:",omitempty"`

	RandomFlag *int32 `type:"int32" json:",omitempty"`

	UserData *string `type:"string" json:",omitempty"`

	VerifyFlag *int32 `type:"int32" json:",omitempty"`

	VoiceCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SelectNumberAndBindAXBInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SelectNumberAndBindAXBInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SelectNumberAndBindAXBInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SelectNumberAndBindAXBInput"}
	if s.ExpireTime == nil {
		invalidParams.Add(request.NewErrParamRequired("ExpireTime"))
	}
	if s.NumberPoolNo == nil {
		invalidParams.Add(request.NewErrParamRequired("NumberPoolNo"))
	}
	if s.PhoneNoA == nil {
		invalidParams.Add(request.NewErrParamRequired("PhoneNoA"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAudioRecordFlag sets the AudioRecordFlag field's value.
func (s *SelectNumberAndBindAXBInput) SetAudioRecordFlag(v int32) *SelectNumberAndBindAXBInput {
	s.AudioRecordFlag = &v
	return s
}

// SetAxConflictAxbFlag sets the AxConflictAxbFlag field's value.
func (s *SelectNumberAndBindAXBInput) SetAxConflictAxbFlag(v int32) *SelectNumberAndBindAXBInput {
	s.AxConflictAxbFlag = &v
	return s
}

// SetCallDisplayType sets the CallDisplayType field's value.
func (s *SelectNumberAndBindAXBInput) SetCallDisplayType(v int32) *SelectNumberAndBindAXBInput {
	s.CallDisplayType = &v
	return s
}

// SetCityCode sets the CityCode field's value.
func (s *SelectNumberAndBindAXBInput) SetCityCode(v string) *SelectNumberAndBindAXBInput {
	s.CityCode = &v
	return s
}

// SetCityCodeByPhoneNo sets the CityCodeByPhoneNo field's value.
func (s *SelectNumberAndBindAXBInput) SetCityCodeByPhoneNo(v string) *SelectNumberAndBindAXBInput {
	s.CityCodeByPhoneNo = &v
	return s
}

// SetDegradeCityList sets the DegradeCityList field's value.
func (s *SelectNumberAndBindAXBInput) SetDegradeCityList(v []*string) *SelectNumberAndBindAXBInput {
	s.DegradeCityList = v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *SelectNumberAndBindAXBInput) SetExpireTime(v int64) *SelectNumberAndBindAXBInput {
	s.ExpireTime = &v
	return s
}

// SetNumberPoolNo sets the NumberPoolNo field's value.
func (s *SelectNumberAndBindAXBInput) SetNumberPoolNo(v string) *SelectNumberAndBindAXBInput {
	s.NumberPoolNo = &v
	return s
}

// SetOutId sets the OutId field's value.
func (s *SelectNumberAndBindAXBInput) SetOutId(v string) *SelectNumberAndBindAXBInput {
	s.OutId = &v
	return s
}

// SetPhoneNoA sets the PhoneNoA field's value.
func (s *SelectNumberAndBindAXBInput) SetPhoneNoA(v string) *SelectNumberAndBindAXBInput {
	s.PhoneNoA = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *SelectNumberAndBindAXBInput) SetPhoneNoB(v string) *SelectNumberAndBindAXBInput {
	s.PhoneNoB = &v
	return s
}

// SetRandomFlag sets the RandomFlag field's value.
func (s *SelectNumberAndBindAXBInput) SetRandomFlag(v int32) *SelectNumberAndBindAXBInput {
	s.RandomFlag = &v
	return s
}

// SetUserData sets the UserData field's value.
func (s *SelectNumberAndBindAXBInput) SetUserData(v string) *SelectNumberAndBindAXBInput {
	s.UserData = &v
	return s
}

// SetVerifyFlag sets the VerifyFlag field's value.
func (s *SelectNumberAndBindAXBInput) SetVerifyFlag(v int32) *SelectNumberAndBindAXBInput {
	s.VerifyFlag = &v
	return s
}

// SetVoiceCode sets the VoiceCode field's value.
func (s *SelectNumberAndBindAXBInput) SetVoiceCode(v string) *SelectNumberAndBindAXBInput {
	s.VoiceCode = &v
	return s
}

type SelectNumberAndBindAXBOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PhoneNoA *string `type:"string" json:",omitempty"`

	PhoneNoACityCode *string `type:"string" json:",omitempty"`

	PhoneNoB *string `type:"string" json:",omitempty"`

	PhoneNoBCityCode *string `type:"string" json:",omitempty"`

	PhoneNoX *string `type:"string" json:",omitempty"`

	PhoneNoXCityCode *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	SubId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SelectNumberAndBindAXBOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SelectNumberAndBindAXBOutput) GoString() string {
	return s.String()
}

// SetPhoneNoA sets the PhoneNoA field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoA(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoA = &v
	return s
}

// SetPhoneNoACityCode sets the PhoneNoACityCode field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoACityCode(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoACityCode = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoB(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoB = &v
	return s
}

// SetPhoneNoBCityCode sets the PhoneNoBCityCode field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoBCityCode(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoBCityCode = &v
	return s
}

// SetPhoneNoX sets the PhoneNoX field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoX(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoX = &v
	return s
}

// SetPhoneNoXCityCode sets the PhoneNoXCityCode field's value.
func (s *SelectNumberAndBindAXBOutput) SetPhoneNoXCityCode(v string) *SelectNumberAndBindAXBOutput {
	s.PhoneNoXCityCode = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SelectNumberAndBindAXBOutput) SetStatus(v int32) *SelectNumberAndBindAXBOutput {
	s.Status = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *SelectNumberAndBindAXBOutput) SetSubId(v string) *SelectNumberAndBindAXBOutput {
	s.SubId = &v
	return s
}

const (
	// EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInputA is a EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInput enum value
	EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInputA = "A"

	// EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInputB is a EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInput enum value
	EnumOfCityCodeByPhoneNoForSelectNumberAndBindAXBInputB = "B"
)
