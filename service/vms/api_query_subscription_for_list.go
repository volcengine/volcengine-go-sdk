// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vms

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opQuerySubscriptionForListCommon = "QuerySubscriptionForList"

// QuerySubscriptionForListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the QuerySubscriptionForListCommon operation. The "output" return
// value will be populated with the QuerySubscriptionForListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QuerySubscriptionForListCommon Request to send the API call to the service.
// the "output" return value is not valid until after QuerySubscriptionForListCommon Send returns without error.
//
// See QuerySubscriptionForListCommon for more information on using the QuerySubscriptionForListCommon
// API call, and error handling.
//
//    // Example sending a request using the QuerySubscriptionForListCommonRequest method.
//    req, resp := client.QuerySubscriptionForListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) QuerySubscriptionForListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opQuerySubscriptionForListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// QuerySubscriptionForListCommon API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation QuerySubscriptionForListCommon for usage and error information.
func (c *VMS) QuerySubscriptionForListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.QuerySubscriptionForListCommonRequest(input)
	return out, req.Send()
}

// QuerySubscriptionForListCommonWithContext is the same as QuerySubscriptionForListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See QuerySubscriptionForListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) QuerySubscriptionForListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.QuerySubscriptionForListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opQuerySubscriptionForList = "QuerySubscriptionForList"

// QuerySubscriptionForListRequest generates a "volcengine/request.Request" representing the
// client's request for the QuerySubscriptionForList operation. The "output" return
// value will be populated with the QuerySubscriptionForListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned QuerySubscriptionForListCommon Request to send the API call to the service.
// the "output" return value is not valid until after QuerySubscriptionForListCommon Send returns without error.
//
// See QuerySubscriptionForList for more information on using the QuerySubscriptionForList
// API call, and error handling.
//
//    // Example sending a request using the QuerySubscriptionForListRequest method.
//    req, resp := client.QuerySubscriptionForListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) QuerySubscriptionForListRequest(input *QuerySubscriptionForListInput) (req *request.Request, output *QuerySubscriptionForListOutput) {
	op := &request.Operation{
		Name:       opQuerySubscriptionForList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &QuerySubscriptionForListInput{}
	}

	output = &QuerySubscriptionForListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// QuerySubscriptionForList API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation QuerySubscriptionForList for usage and error information.
func (c *VMS) QuerySubscriptionForList(input *QuerySubscriptionForListInput) (*QuerySubscriptionForListOutput, error) {
	req, out := c.QuerySubscriptionForListRequest(input)
	return out, req.Send()
}

// QuerySubscriptionForListWithContext is the same as QuerySubscriptionForList with the addition of
// the ability to pass a context and additional request options.
//
// See QuerySubscriptionForList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) QuerySubscriptionForListWithContext(ctx volcengine.Context, input *QuerySubscriptionForListInput, opts ...request.Option) (*QuerySubscriptionForListOutput, error) {
	req, out := c.QuerySubscriptionForListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type QuerySubscriptionForListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Limit *int32 `type:"int32" json:",omitempty"`

	NumberPoolNo *string `type:"string" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	OutId *string `type:"string" json:",omitempty"`

	PhoneNoA *string `type:"string" json:",omitempty"`

	PhoneNoB *string `type:"string" json:",omitempty"`

	PhoneNoX *string `type:"string" json:",omitempty"`

	PhoneNoY *string `type:"string" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	SubId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s QuerySubscriptionForListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuerySubscriptionForListInput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *QuerySubscriptionForListInput) SetLimit(v int32) *QuerySubscriptionForListInput {
	s.Limit = &v
	return s
}

// SetNumberPoolNo sets the NumberPoolNo field's value.
func (s *QuerySubscriptionForListInput) SetNumberPoolNo(v string) *QuerySubscriptionForListInput {
	s.NumberPoolNo = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *QuerySubscriptionForListInput) SetOffset(v int32) *QuerySubscriptionForListInput {
	s.Offset = &v
	return s
}

// SetOutId sets the OutId field's value.
func (s *QuerySubscriptionForListInput) SetOutId(v string) *QuerySubscriptionForListInput {
	s.OutId = &v
	return s
}

// SetPhoneNoA sets the PhoneNoA field's value.
func (s *QuerySubscriptionForListInput) SetPhoneNoA(v string) *QuerySubscriptionForListInput {
	s.PhoneNoA = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *QuerySubscriptionForListInput) SetPhoneNoB(v string) *QuerySubscriptionForListInput {
	s.PhoneNoB = &v
	return s
}

// SetPhoneNoX sets the PhoneNoX field's value.
func (s *QuerySubscriptionForListInput) SetPhoneNoX(v string) *QuerySubscriptionForListInput {
	s.PhoneNoX = &v
	return s
}

// SetPhoneNoY sets the PhoneNoY field's value.
func (s *QuerySubscriptionForListInput) SetPhoneNoY(v string) *QuerySubscriptionForListInput {
	s.PhoneNoY = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *QuerySubscriptionForListInput) SetStatus(v int32) *QuerySubscriptionForListInput {
	s.Status = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *QuerySubscriptionForListInput) SetSubId(v string) *QuerySubscriptionForListInput {
	s.SubId = &v
	return s
}

type QuerySubscriptionForListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Limit *int32 `type:"int32" json:",omitempty"`

	Offset *int32 `type:"int32" json:",omitempty"`

	Records []*RecordForQuerySubscriptionForListOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s QuerySubscriptionForListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuerySubscriptionForListOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *QuerySubscriptionForListOutput) SetLimit(v int32) *QuerySubscriptionForListOutput {
	s.Limit = &v
	return s
}

// SetOffset sets the Offset field's value.
func (s *QuerySubscriptionForListOutput) SetOffset(v int32) *QuerySubscriptionForListOutput {
	s.Offset = &v
	return s
}

// SetRecords sets the Records field's value.
func (s *QuerySubscriptionForListOutput) SetRecords(v []*RecordForQuerySubscriptionForListOutput) *QuerySubscriptionForListOutput {
	s.Records = v
	return s
}

// SetTotal sets the Total field's value.
func (s *QuerySubscriptionForListOutput) SetTotal(v int32) *QuerySubscriptionForListOutput {
	s.Total = &v
	return s
}

type RecordForQuerySubscriptionForListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CallDisplayType *int32 `type:"int32" json:",omitempty"`

	CallDisplayTypeName *string `type:"string" json:",omitempty"`

	EnableTime *string `type:"string" json:",omitempty"`

	ExpireTime *string `type:"string" json:",omitempty"`

	OutId *string `type:"string" json:",omitempty"`

	ParentSubId *string `type:"string" json:",omitempty"`

	PhoneNoA *string `type:"string" json:",omitempty"`

	PhoneNoB *string `type:"string" json:",omitempty"`

	PhoneNoE *string `type:"string" json:",omitempty"`

	PhoneNoX *string `type:"string" json:",omitempty"`

	PhoneNoY *string `type:"string" json:",omitempty"`

	RecordFlag *int32 `type:"int32" json:",omitempty"`

	Status *int32 `type:"int32" json:",omitempty"`

	SubId *string `type:"string" json:",omitempty"`

	UserData *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RecordForQuerySubscriptionForListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordForQuerySubscriptionForListOutput) GoString() string {
	return s.String()
}

// SetCallDisplayType sets the CallDisplayType field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetCallDisplayType(v int32) *RecordForQuerySubscriptionForListOutput {
	s.CallDisplayType = &v
	return s
}

// SetCallDisplayTypeName sets the CallDisplayTypeName field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetCallDisplayTypeName(v string) *RecordForQuerySubscriptionForListOutput {
	s.CallDisplayTypeName = &v
	return s
}

// SetEnableTime sets the EnableTime field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetEnableTime(v string) *RecordForQuerySubscriptionForListOutput {
	s.EnableTime = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetExpireTime(v string) *RecordForQuerySubscriptionForListOutput {
	s.ExpireTime = &v
	return s
}

// SetOutId sets the OutId field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetOutId(v string) *RecordForQuerySubscriptionForListOutput {
	s.OutId = &v
	return s
}

// SetParentSubId sets the ParentSubId field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetParentSubId(v string) *RecordForQuerySubscriptionForListOutput {
	s.ParentSubId = &v
	return s
}

// SetPhoneNoA sets the PhoneNoA field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetPhoneNoA(v string) *RecordForQuerySubscriptionForListOutput {
	s.PhoneNoA = &v
	return s
}

// SetPhoneNoB sets the PhoneNoB field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetPhoneNoB(v string) *RecordForQuerySubscriptionForListOutput {
	s.PhoneNoB = &v
	return s
}

// SetPhoneNoE sets the PhoneNoE field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetPhoneNoE(v string) *RecordForQuerySubscriptionForListOutput {
	s.PhoneNoE = &v
	return s
}

// SetPhoneNoX sets the PhoneNoX field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetPhoneNoX(v string) *RecordForQuerySubscriptionForListOutput {
	s.PhoneNoX = &v
	return s
}

// SetPhoneNoY sets the PhoneNoY field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetPhoneNoY(v string) *RecordForQuerySubscriptionForListOutput {
	s.PhoneNoY = &v
	return s
}

// SetRecordFlag sets the RecordFlag field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetRecordFlag(v int32) *RecordForQuerySubscriptionForListOutput {
	s.RecordFlag = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetStatus(v int32) *RecordForQuerySubscriptionForListOutput {
	s.Status = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetSubId(v string) *RecordForQuerySubscriptionForListOutput {
	s.SubId = &v
	return s
}

// SetUserData sets the UserData field's value.
func (s *RecordForQuerySubscriptionForListOutput) SetUserData(v string) *RecordForQuerySubscriptionForListOutput {
	s.UserData = &v
	return s
}
