// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vms

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUnbindAXYBV2Common = "UnbindAXYBV2"

// UnbindAXYBV2CommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UnbindAXYBV2Common operation. The "output" return
// value will be populated with the UnbindAXYBV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UnbindAXYBV2Common Request to send the API call to the service.
// the "output" return value is not valid until after UnbindAXYBV2Common Send returns without error.
//
// See UnbindAXYBV2Common for more information on using the UnbindAXYBV2Common
// API call, and error handling.
//
//    // Example sending a request using the UnbindAXYBV2CommonRequest method.
//    req, resp := client.UnbindAXYBV2CommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) UnbindAXYBV2CommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUnbindAXYBV2Common,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UnbindAXYBV2Common API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation UnbindAXYBV2Common for usage and error information.
func (c *VMS) UnbindAXYBV2Common(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UnbindAXYBV2CommonRequest(input)
	return out, req.Send()
}

// UnbindAXYBV2CommonWithContext is the same as UnbindAXYBV2Common with the addition of
// the ability to pass a context and additional request options.
//
// See UnbindAXYBV2Common for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) UnbindAXYBV2CommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UnbindAXYBV2CommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUnbindAXYBV2 = "UnbindAXYBV2"

// UnbindAXYBV2Request generates a "volcengine/request.Request" representing the
// client's request for the UnbindAXYBV2 operation. The "output" return
// value will be populated with the UnbindAXYBV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UnbindAXYBV2Common Request to send the API call to the service.
// the "output" return value is not valid until after UnbindAXYBV2Common Send returns without error.
//
// See UnbindAXYBV2 for more information on using the UnbindAXYBV2
// API call, and error handling.
//
//    // Example sending a request using the UnbindAXYBV2Request method.
//    req, resp := client.UnbindAXYBV2Request(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VMS) UnbindAXYBV2Request(input *UnbindAXYBV2Input) (req *request.Request, output *UnbindAXYBV2Output) {
	op := &request.Operation{
		Name:       opUnbindAXYBV2,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UnbindAXYBV2Input{}
	}

	output = &UnbindAXYBV2Output{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UnbindAXYBV2 API operation for VMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VMS's
// API operation UnbindAXYBV2 for usage and error information.
func (c *VMS) UnbindAXYBV2(input *UnbindAXYBV2Input) (*UnbindAXYBV2Output, error) {
	req, out := c.UnbindAXYBV2Request(input)
	return out, req.Send()
}

// UnbindAXYBV2WithContext is the same as UnbindAXYBV2 with the addition of
// the ability to pass a context and additional request options.
//
// See UnbindAXYBV2 for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VMS) UnbindAXYBV2WithContext(ctx volcengine.Context, input *UnbindAXYBV2Input, opts ...request.Option) (*UnbindAXYBV2Output, error) {
	req, out := c.UnbindAXYBV2Request(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UnbindAXYBV2Input struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// NumberPoolNo is a required field
	NumberPoolNo *string `type:"string" json:",omitempty" required:"true"`

	// SubId is a required field
	SubId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UnbindAXYBV2Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnbindAXYBV2Input) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UnbindAXYBV2Input) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UnbindAXYBV2Input"}
	if s.NumberPoolNo == nil {
		invalidParams.Add(request.NewErrParamRequired("NumberPoolNo"))
	}
	if s.SubId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNumberPoolNo sets the NumberPoolNo field's value.
func (s *UnbindAXYBV2Input) SetNumberPoolNo(v string) *UnbindAXYBV2Input {
	s.NumberPoolNo = &v
	return s
}

// SetSubId sets the SubId field's value.
func (s *UnbindAXYBV2Input) SetSubId(v string) *UnbindAXYBV2Input {
	s.SubId = &v
	return s
}

type UnbindAXYBV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Success *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s UnbindAXYBV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnbindAXYBV2Output) GoString() string {
	return s.String()
}

// SetSuccess sets the Success field's value.
func (s *UnbindAXYBV2Output) SetSuccess(v bool) *UnbindAXYBV2Output {
	s.Success = &v
	return s
}
