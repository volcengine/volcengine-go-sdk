// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyCenServiceRouteEntryAttributesCommon = "ModifyCenServiceRouteEntryAttributes"

// ModifyCenServiceRouteEntryAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenServiceRouteEntryAttributesCommon operation. The "output" return
// value will be populated with the ModifyCenServiceRouteEntryAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenServiceRouteEntryAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenServiceRouteEntryAttributesCommon Send returns without error.
//
// See ModifyCenServiceRouteEntryAttributesCommon for more information on using the ModifyCenServiceRouteEntryAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenServiceRouteEntryAttributesCommonRequest method.
//    req, resp := client.ModifyCenServiceRouteEntryAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenServiceRouteEntryAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyCenServiceRouteEntryAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenServiceRouteEntryAttributesCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenServiceRouteEntryAttributesCommon for usage and error information.
func (c *CEN) ModifyCenServiceRouteEntryAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyCenServiceRouteEntryAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyCenServiceRouteEntryAttributesCommonWithContext is the same as ModifyCenServiceRouteEntryAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenServiceRouteEntryAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenServiceRouteEntryAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyCenServiceRouteEntryAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyCenServiceRouteEntryAttributes = "ModifyCenServiceRouteEntryAttributes"

// ModifyCenServiceRouteEntryAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenServiceRouteEntryAttributes operation. The "output" return
// value will be populated with the ModifyCenServiceRouteEntryAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenServiceRouteEntryAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenServiceRouteEntryAttributesCommon Send returns without error.
//
// See ModifyCenServiceRouteEntryAttributes for more information on using the ModifyCenServiceRouteEntryAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenServiceRouteEntryAttributesRequest method.
//    req, resp := client.ModifyCenServiceRouteEntryAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenServiceRouteEntryAttributesRequest(input *ModifyCenServiceRouteEntryAttributesInput) (req *request.Request, output *ModifyCenServiceRouteEntryAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyCenServiceRouteEntryAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyCenServiceRouteEntryAttributesInput{}
	}

	output = &ModifyCenServiceRouteEntryAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenServiceRouteEntryAttributes API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenServiceRouteEntryAttributes for usage and error information.
func (c *CEN) ModifyCenServiceRouteEntryAttributes(input *ModifyCenServiceRouteEntryAttributesInput) (*ModifyCenServiceRouteEntryAttributesOutput, error) {
	req, out := c.ModifyCenServiceRouteEntryAttributesRequest(input)
	return out, req.Send()
}

// ModifyCenServiceRouteEntryAttributesWithContext is the same as ModifyCenServiceRouteEntryAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenServiceRouteEntryAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenServiceRouteEntryAttributesWithContext(ctx volcengine.Context, input *ModifyCenServiceRouteEntryAttributesInput, opts ...request.Option) (*ModifyCenServiceRouteEntryAttributesOutput, error) {
	req, out := c.ModifyCenServiceRouteEntryAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyCenServiceRouteEntryAttributesInput struct {
	_ struct{} `type:"structure"`

	// CenId is a required field
	CenId *string `type:"string" required:"true"`

	Description *string `type:"string"`

	// DestinationCidrBlock is a required field
	DestinationCidrBlock *string `type:"string" required:"true"`

	PublishMode *string `type:"string"`

	PublishToInstances []*PublishToInstanceForModifyCenServiceRouteEntryAttributesInput `type:"list"`

	// ServiceRegionId is a required field
	ServiceRegionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyCenServiceRouteEntryAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenServiceRouteEntryAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyCenServiceRouteEntryAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyCenServiceRouteEntryAttributesInput"}
	if s.CenId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenId"))
	}
	if s.DestinationCidrBlock == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationCidrBlock"))
	}
	if s.ServiceRegionId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceRegionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCenId sets the CenId field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetCenId(v string) *ModifyCenServiceRouteEntryAttributesInput {
	s.CenId = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetDescription(v string) *ModifyCenServiceRouteEntryAttributesInput {
	s.Description = &v
	return s
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetDestinationCidrBlock(v string) *ModifyCenServiceRouteEntryAttributesInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetPublishMode sets the PublishMode field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetPublishMode(v string) *ModifyCenServiceRouteEntryAttributesInput {
	s.PublishMode = &v
	return s
}

// SetPublishToInstances sets the PublishToInstances field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetPublishToInstances(v []*PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) *ModifyCenServiceRouteEntryAttributesInput {
	s.PublishToInstances = v
	return s
}

// SetServiceRegionId sets the ServiceRegionId field's value.
func (s *ModifyCenServiceRouteEntryAttributesInput) SetServiceRegionId(v string) *ModifyCenServiceRouteEntryAttributesInput {
	s.ServiceRegionId = &v
	return s
}

type ModifyCenServiceRouteEntryAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyCenServiceRouteEntryAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenServiceRouteEntryAttributesOutput) GoString() string {
	return s.String()
}

type PublishToInstanceForModifyCenServiceRouteEntryAttributesInput struct {
	_ struct{} `type:"structure"`

	InstanceId *string `type:"string"`

	InstanceRegionId *string `type:"string"`

	InstanceType *string `type:"string"`
}

// String returns the string representation
func (s PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) SetInstanceId(v string) *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceRegionId sets the InstanceRegionId field's value.
func (s *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) SetInstanceRegionId(v string) *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput {
	s.InstanceRegionId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput) SetInstanceType(v string) *PublishToInstanceForModifyCenServiceRouteEntryAttributesInput {
	s.InstanceType = &v
	return s
}
