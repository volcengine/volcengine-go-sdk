// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyCenAttributesCommon = "ModifyCenAttributes"

// ModifyCenAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenAttributesCommon operation. The "output" return
// value will be populated with the ModifyCenAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenAttributesCommon Send returns without error.
//
// See ModifyCenAttributesCommon for more information on using the ModifyCenAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenAttributesCommonRequest method.
//    req, resp := client.ModifyCenAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyCenAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenAttributesCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenAttributesCommon for usage and error information.
func (c *CEN) ModifyCenAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyCenAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyCenAttributesCommonWithContext is the same as ModifyCenAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyCenAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyCenAttributes = "ModifyCenAttributes"

// ModifyCenAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenAttributes operation. The "output" return
// value will be populated with the ModifyCenAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenAttributesCommon Send returns without error.
//
// See ModifyCenAttributes for more information on using the ModifyCenAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenAttributesRequest method.
//    req, resp := client.ModifyCenAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenAttributesRequest(input *ModifyCenAttributesInput) (req *request.Request, output *ModifyCenAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyCenAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyCenAttributesInput{}
	}

	output = &ModifyCenAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenAttributes API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenAttributes for usage and error information.
func (c *CEN) ModifyCenAttributes(input *ModifyCenAttributesInput) (*ModifyCenAttributesOutput, error) {
	req, out := c.ModifyCenAttributesRequest(input)
	return out, req.Send()
}

// ModifyCenAttributesWithContext is the same as ModifyCenAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenAttributesWithContext(ctx volcengine.Context, input *ModifyCenAttributesInput, opts ...request.Option) (*ModifyCenAttributesOutput, error) {
	req, out := c.ModifyCenAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyCenAttributesInput struct {
	_ struct{} `type:"structure"`

	// CenId is a required field
	CenId *string `type:"string" required:"true"`

	CenName *string `type:"string"`

	Description *string `type:"string"`
}

// String returns the string representation
func (s ModifyCenAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyCenAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyCenAttributesInput"}
	if s.CenId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCenId sets the CenId field's value.
func (s *ModifyCenAttributesInput) SetCenId(v string) *ModifyCenAttributesInput {
	s.CenId = &v
	return s
}

// SetCenName sets the CenName field's value.
func (s *ModifyCenAttributesInput) SetCenName(v string) *ModifyCenAttributesInput {
	s.CenName = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyCenAttributesInput) SetDescription(v string) *ModifyCenAttributesInput {
	s.Description = &v
	return s
}

type ModifyCenAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyCenAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenAttributesOutput) GoString() string {
	return s.String()
}
