// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyCenBandwidthPackageAssociationCommon = "ModifyCenBandwidthPackageAssociation"

// ModifyCenBandwidthPackageAssociationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenBandwidthPackageAssociationCommon operation. The "output" return
// value will be populated with the ModifyCenBandwidthPackageAssociationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenBandwidthPackageAssociationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenBandwidthPackageAssociationCommon Send returns without error.
//
// See ModifyCenBandwidthPackageAssociationCommon for more information on using the ModifyCenBandwidthPackageAssociationCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenBandwidthPackageAssociationCommonRequest method.
//    req, resp := client.ModifyCenBandwidthPackageAssociationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenBandwidthPackageAssociationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyCenBandwidthPackageAssociationCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenBandwidthPackageAssociationCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenBandwidthPackageAssociationCommon for usage and error information.
func (c *CEN) ModifyCenBandwidthPackageAssociationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyCenBandwidthPackageAssociationCommonRequest(input)
	return out, req.Send()
}

// ModifyCenBandwidthPackageAssociationCommonWithContext is the same as ModifyCenBandwidthPackageAssociationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenBandwidthPackageAssociationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenBandwidthPackageAssociationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyCenBandwidthPackageAssociationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyCenBandwidthPackageAssociation = "ModifyCenBandwidthPackageAssociation"

// ModifyCenBandwidthPackageAssociationRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenBandwidthPackageAssociation operation. The "output" return
// value will be populated with the ModifyCenBandwidthPackageAssociationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenBandwidthPackageAssociationCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenBandwidthPackageAssociationCommon Send returns without error.
//
// See ModifyCenBandwidthPackageAssociation for more information on using the ModifyCenBandwidthPackageAssociation
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenBandwidthPackageAssociationRequest method.
//    req, resp := client.ModifyCenBandwidthPackageAssociationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenBandwidthPackageAssociationRequest(input *ModifyCenBandwidthPackageAssociationInput) (req *request.Request, output *ModifyCenBandwidthPackageAssociationOutput) {
	op := &request.Operation{
		Name:       opModifyCenBandwidthPackageAssociation,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyCenBandwidthPackageAssociationInput{}
	}

	output = &ModifyCenBandwidthPackageAssociationOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenBandwidthPackageAssociation API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenBandwidthPackageAssociation for usage and error information.
func (c *CEN) ModifyCenBandwidthPackageAssociation(input *ModifyCenBandwidthPackageAssociationInput) (*ModifyCenBandwidthPackageAssociationOutput, error) {
	req, out := c.ModifyCenBandwidthPackageAssociationRequest(input)
	return out, req.Send()
}

// ModifyCenBandwidthPackageAssociationWithContext is the same as ModifyCenBandwidthPackageAssociation with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenBandwidthPackageAssociation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenBandwidthPackageAssociationWithContext(ctx volcengine.Context, input *ModifyCenBandwidthPackageAssociationInput, opts ...request.Option) (*ModifyCenBandwidthPackageAssociationOutput, error) {
	req, out := c.ModifyCenBandwidthPackageAssociationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyCenBandwidthPackageAssociationInput struct {
	_ struct{} `type:"structure"`

	// CenBandwidthPackageId is a required field
	CenBandwidthPackageId *string `type:"string" required:"true"`

	// CenId is a required field
	CenId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyCenBandwidthPackageAssociationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenBandwidthPackageAssociationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyCenBandwidthPackageAssociationInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyCenBandwidthPackageAssociationInput"}
	if s.CenBandwidthPackageId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenBandwidthPackageId"))
	}
	if s.CenId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCenBandwidthPackageId sets the CenBandwidthPackageId field's value.
func (s *ModifyCenBandwidthPackageAssociationInput) SetCenBandwidthPackageId(v string) *ModifyCenBandwidthPackageAssociationInput {
	s.CenBandwidthPackageId = &v
	return s
}

// SetCenId sets the CenId field's value.
func (s *ModifyCenBandwidthPackageAssociationInput) SetCenId(v string) *ModifyCenBandwidthPackageAssociationInput {
	s.CenId = &v
	return s
}

type ModifyCenBandwidthPackageAssociationOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyCenBandwidthPackageAssociationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenBandwidthPackageAssociationOutput) GoString() string {
	return s.String()
}
