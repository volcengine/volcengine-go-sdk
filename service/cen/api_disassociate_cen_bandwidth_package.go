// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDisassociateCenBandwidthPackageCommon = "DisassociateCenBandwidthPackage"

// DisassociateCenBandwidthPackageCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateCenBandwidthPackageCommon operation. The "output" return
// value will be populated with the DisassociateCenBandwidthPackageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateCenBandwidthPackageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateCenBandwidthPackageCommon Send returns without error.
//
// See DisassociateCenBandwidthPackageCommon for more information on using the DisassociateCenBandwidthPackageCommon
// API call, and error handling.
//
//    // Example sending a request using the DisassociateCenBandwidthPackageCommonRequest method.
//    req, resp := client.DisassociateCenBandwidthPackageCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DisassociateCenBandwidthPackageCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDisassociateCenBandwidthPackageCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DisassociateCenBandwidthPackageCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DisassociateCenBandwidthPackageCommon for usage and error information.
func (c *CEN) DisassociateCenBandwidthPackageCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DisassociateCenBandwidthPackageCommonRequest(input)
	return out, req.Send()
}

// DisassociateCenBandwidthPackageCommonWithContext is the same as DisassociateCenBandwidthPackageCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateCenBandwidthPackageCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DisassociateCenBandwidthPackageCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DisassociateCenBandwidthPackageCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDisassociateCenBandwidthPackage = "DisassociateCenBandwidthPackage"

// DisassociateCenBandwidthPackageRequest generates a "volcengine/request.Request" representing the
// client's request for the DisassociateCenBandwidthPackage operation. The "output" return
// value will be populated with the DisassociateCenBandwidthPackageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DisassociateCenBandwidthPackageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DisassociateCenBandwidthPackageCommon Send returns without error.
//
// See DisassociateCenBandwidthPackage for more information on using the DisassociateCenBandwidthPackage
// API call, and error handling.
//
//    // Example sending a request using the DisassociateCenBandwidthPackageRequest method.
//    req, resp := client.DisassociateCenBandwidthPackageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DisassociateCenBandwidthPackageRequest(input *DisassociateCenBandwidthPackageInput) (req *request.Request, output *DisassociateCenBandwidthPackageOutput) {
	op := &request.Operation{
		Name:       opDisassociateCenBandwidthPackage,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DisassociateCenBandwidthPackageInput{}
	}

	output = &DisassociateCenBandwidthPackageOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DisassociateCenBandwidthPackage API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DisassociateCenBandwidthPackage for usage and error information.
func (c *CEN) DisassociateCenBandwidthPackage(input *DisassociateCenBandwidthPackageInput) (*DisassociateCenBandwidthPackageOutput, error) {
	req, out := c.DisassociateCenBandwidthPackageRequest(input)
	return out, req.Send()
}

// DisassociateCenBandwidthPackageWithContext is the same as DisassociateCenBandwidthPackage with the addition of
// the ability to pass a context and additional request options.
//
// See DisassociateCenBandwidthPackage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DisassociateCenBandwidthPackageWithContext(ctx volcengine.Context, input *DisassociateCenBandwidthPackageInput, opts ...request.Option) (*DisassociateCenBandwidthPackageOutput, error) {
	req, out := c.DisassociateCenBandwidthPackageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DisassociateCenBandwidthPackageInput struct {
	_ struct{} `type:"structure"`

	// CenBandwidthPackageId is a required field
	CenBandwidthPackageId *string `type:"string" required:"true"`

	// CenId is a required field
	CenId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DisassociateCenBandwidthPackageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateCenBandwidthPackageInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DisassociateCenBandwidthPackageInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DisassociateCenBandwidthPackageInput"}
	if s.CenBandwidthPackageId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenBandwidthPackageId"))
	}
	if s.CenId == nil {
		invalidParams.Add(request.NewErrParamRequired("CenId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCenBandwidthPackageId sets the CenBandwidthPackageId field's value.
func (s *DisassociateCenBandwidthPackageInput) SetCenBandwidthPackageId(v string) *DisassociateCenBandwidthPackageInput {
	s.CenBandwidthPackageId = &v
	return s
}

// SetCenId sets the CenId field's value.
func (s *DisassociateCenBandwidthPackageInput) SetCenId(v string) *DisassociateCenBandwidthPackageInput {
	s.CenId = &v
	return s
}

type DisassociateCenBandwidthPackageOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DisassociateCenBandwidthPackageOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisassociateCenBandwidthPackageOutput) GoString() string {
	return s.String()
}
