// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyCenInterRegionBandwidthAttributesCommon = "ModifyCenInterRegionBandwidthAttributes"

// ModifyCenInterRegionBandwidthAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenInterRegionBandwidthAttributesCommon operation. The "output" return
// value will be populated with the ModifyCenInterRegionBandwidthAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenInterRegionBandwidthAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenInterRegionBandwidthAttributesCommon Send returns without error.
//
// See ModifyCenInterRegionBandwidthAttributesCommon for more information on using the ModifyCenInterRegionBandwidthAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenInterRegionBandwidthAttributesCommonRequest method.
//    req, resp := client.ModifyCenInterRegionBandwidthAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenInterRegionBandwidthAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyCenInterRegionBandwidthAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenInterRegionBandwidthAttributesCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenInterRegionBandwidthAttributesCommon for usage and error information.
func (c *CEN) ModifyCenInterRegionBandwidthAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyCenInterRegionBandwidthAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyCenInterRegionBandwidthAttributesCommonWithContext is the same as ModifyCenInterRegionBandwidthAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenInterRegionBandwidthAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenInterRegionBandwidthAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyCenInterRegionBandwidthAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyCenInterRegionBandwidthAttributes = "ModifyCenInterRegionBandwidthAttributes"

// ModifyCenInterRegionBandwidthAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCenInterRegionBandwidthAttributes operation. The "output" return
// value will be populated with the ModifyCenInterRegionBandwidthAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCenInterRegionBandwidthAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCenInterRegionBandwidthAttributesCommon Send returns without error.
//
// See ModifyCenInterRegionBandwidthAttributes for more information on using the ModifyCenInterRegionBandwidthAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyCenInterRegionBandwidthAttributesRequest method.
//    req, resp := client.ModifyCenInterRegionBandwidthAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) ModifyCenInterRegionBandwidthAttributesRequest(input *ModifyCenInterRegionBandwidthAttributesInput) (req *request.Request, output *ModifyCenInterRegionBandwidthAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyCenInterRegionBandwidthAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyCenInterRegionBandwidthAttributesInput{}
	}

	output = &ModifyCenInterRegionBandwidthAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyCenInterRegionBandwidthAttributes API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation ModifyCenInterRegionBandwidthAttributes for usage and error information.
func (c *CEN) ModifyCenInterRegionBandwidthAttributes(input *ModifyCenInterRegionBandwidthAttributesInput) (*ModifyCenInterRegionBandwidthAttributesOutput, error) {
	req, out := c.ModifyCenInterRegionBandwidthAttributesRequest(input)
	return out, req.Send()
}

// ModifyCenInterRegionBandwidthAttributesWithContext is the same as ModifyCenInterRegionBandwidthAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCenInterRegionBandwidthAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) ModifyCenInterRegionBandwidthAttributesWithContext(ctx volcengine.Context, input *ModifyCenInterRegionBandwidthAttributesInput, opts ...request.Option) (*ModifyCenInterRegionBandwidthAttributesOutput, error) {
	req, out := c.ModifyCenInterRegionBandwidthAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyCenInterRegionBandwidthAttributesInput struct {
	_ struct{} `type:"structure"`

	Bandwidth *int64 `type:"integer"`

	CenBandwidthPackageId *string `type:"string"`

	// InterRegionBandwidthId is a required field
	InterRegionBandwidthId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyCenInterRegionBandwidthAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenInterRegionBandwidthAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyCenInterRegionBandwidthAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyCenInterRegionBandwidthAttributesInput"}
	if s.InterRegionBandwidthId == nil {
		invalidParams.Add(request.NewErrParamRequired("InterRegionBandwidthId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidth sets the Bandwidth field's value.
func (s *ModifyCenInterRegionBandwidthAttributesInput) SetBandwidth(v int64) *ModifyCenInterRegionBandwidthAttributesInput {
	s.Bandwidth = &v
	return s
}

// SetCenBandwidthPackageId sets the CenBandwidthPackageId field's value.
func (s *ModifyCenInterRegionBandwidthAttributesInput) SetCenBandwidthPackageId(v string) *ModifyCenInterRegionBandwidthAttributesInput {
	s.CenBandwidthPackageId = &v
	return s
}

// SetInterRegionBandwidthId sets the InterRegionBandwidthId field's value.
func (s *ModifyCenInterRegionBandwidthAttributesInput) SetInterRegionBandwidthId(v string) *ModifyCenInterRegionBandwidthAttributesInput {
	s.InterRegionBandwidthId = &v
	return s
}

type ModifyCenInterRegionBandwidthAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyCenInterRegionBandwidthAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCenInterRegionBandwidthAttributesOutput) GoString() string {
	return s.String()
}
