// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeGrantRulesToCenCommon = "DescribeGrantRulesToCen"

// DescribeGrantRulesToCenCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeGrantRulesToCenCommon operation. The "output" return
// value will be populated with the DescribeGrantRulesToCenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeGrantRulesToCenCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeGrantRulesToCenCommon Send returns without error.
//
// See DescribeGrantRulesToCenCommon for more information on using the DescribeGrantRulesToCenCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeGrantRulesToCenCommonRequest method.
//    req, resp := client.DescribeGrantRulesToCenCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DescribeGrantRulesToCenCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeGrantRulesToCenCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeGrantRulesToCenCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DescribeGrantRulesToCenCommon for usage and error information.
func (c *CEN) DescribeGrantRulesToCenCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeGrantRulesToCenCommonRequest(input)
	return out, req.Send()
}

// DescribeGrantRulesToCenCommonWithContext is the same as DescribeGrantRulesToCenCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeGrantRulesToCenCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DescribeGrantRulesToCenCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeGrantRulesToCenCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeGrantRulesToCen = "DescribeGrantRulesToCen"

// DescribeGrantRulesToCenRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeGrantRulesToCen operation. The "output" return
// value will be populated with the DescribeGrantRulesToCenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeGrantRulesToCenCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeGrantRulesToCenCommon Send returns without error.
//
// See DescribeGrantRulesToCen for more information on using the DescribeGrantRulesToCen
// API call, and error handling.
//
//    // Example sending a request using the DescribeGrantRulesToCenRequest method.
//    req, resp := client.DescribeGrantRulesToCenRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DescribeGrantRulesToCenRequest(input *DescribeGrantRulesToCenInput) (req *request.Request, output *DescribeGrantRulesToCenOutput) {
	op := &request.Operation{
		Name:       opDescribeGrantRulesToCen,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeGrantRulesToCenInput{}
	}

	output = &DescribeGrantRulesToCenOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeGrantRulesToCen API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DescribeGrantRulesToCen for usage and error information.
func (c *CEN) DescribeGrantRulesToCen(input *DescribeGrantRulesToCenInput) (*DescribeGrantRulesToCenOutput, error) {
	req, out := c.DescribeGrantRulesToCenRequest(input)
	return out, req.Send()
}

// DescribeGrantRulesToCenWithContext is the same as DescribeGrantRulesToCen with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeGrantRulesToCen for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DescribeGrantRulesToCenWithContext(ctx volcengine.Context, input *DescribeGrantRulesToCenInput, opts ...request.Option) (*DescribeGrantRulesToCenOutput, error) {
	req, out := c.DescribeGrantRulesToCenRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CenGrantRuleForDescribeGrantRulesToCenOutput struct {
	_ struct{} `type:"structure"`

	CenId *string `type:"string"`

	CreationTime *string `type:"string"`

	InstanceId *string `type:"string"`

	InstanceOwnerId *string `type:"string"`

	InstanceRegionId *string `type:"string"`

	InstanceType *string `type:"string"`
}

// String returns the string representation
func (s CenGrantRuleForDescribeGrantRulesToCenOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CenGrantRuleForDescribeGrantRulesToCenOutput) GoString() string {
	return s.String()
}

// SetCenId sets the CenId field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetCenId(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.CenId = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetCreationTime(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.CreationTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetInstanceId(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceOwnerId sets the InstanceOwnerId field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetInstanceOwnerId(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.InstanceOwnerId = &v
	return s
}

// SetInstanceRegionId sets the InstanceRegionId field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetInstanceRegionId(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.InstanceRegionId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *CenGrantRuleForDescribeGrantRulesToCenOutput) SetInstanceType(v string) *CenGrantRuleForDescribeGrantRulesToCenOutput {
	s.InstanceType = &v
	return s
}

type DescribeGrantRulesToCenInput struct {
	_ struct{} `type:"structure"`

	CenId *string `type:"string"`

	InstanceOwnerId *string `type:"string"`

	InstanceRegionId *string `type:"string"`

	InstanceType *string `type:"string" enum:"InstanceTypeForDescribeGrantRulesToCenInput"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeGrantRulesToCenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeGrantRulesToCenInput) GoString() string {
	return s.String()
}

// SetCenId sets the CenId field's value.
func (s *DescribeGrantRulesToCenInput) SetCenId(v string) *DescribeGrantRulesToCenInput {
	s.CenId = &v
	return s
}

// SetInstanceOwnerId sets the InstanceOwnerId field's value.
func (s *DescribeGrantRulesToCenInput) SetInstanceOwnerId(v string) *DescribeGrantRulesToCenInput {
	s.InstanceOwnerId = &v
	return s
}

// SetInstanceRegionId sets the InstanceRegionId field's value.
func (s *DescribeGrantRulesToCenInput) SetInstanceRegionId(v string) *DescribeGrantRulesToCenInput {
	s.InstanceRegionId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DescribeGrantRulesToCenInput) SetInstanceType(v string) *DescribeGrantRulesToCenInput {
	s.InstanceType = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeGrantRulesToCenInput) SetPageNumber(v int64) *DescribeGrantRulesToCenInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeGrantRulesToCenInput) SetPageSize(v int64) *DescribeGrantRulesToCenInput {
	s.PageSize = &v
	return s
}

type DescribeGrantRulesToCenOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CenGrantRules []*CenGrantRuleForDescribeGrantRulesToCenOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeGrantRulesToCenOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeGrantRulesToCenOutput) GoString() string {
	return s.String()
}

// SetCenGrantRules sets the CenGrantRules field's value.
func (s *DescribeGrantRulesToCenOutput) SetCenGrantRules(v []*CenGrantRuleForDescribeGrantRulesToCenOutput) *DescribeGrantRulesToCenOutput {
	s.CenGrantRules = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeGrantRulesToCenOutput) SetPageNumber(v int64) *DescribeGrantRulesToCenOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeGrantRulesToCenOutput) SetPageSize(v int64) *DescribeGrantRulesToCenOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeGrantRulesToCenOutput) SetTotalCount(v int64) *DescribeGrantRulesToCenOutput {
	s.TotalCount = &v
	return s
}

const (
	// InstanceTypeForDescribeGrantRulesToCenInputVpc is a InstanceTypeForDescribeGrantRulesToCenInput enum value
	InstanceTypeForDescribeGrantRulesToCenInputVpc = "VPC"

	// InstanceTypeForDescribeGrantRulesToCenInputDcgw is a InstanceTypeForDescribeGrantRulesToCenInput enum value
	InstanceTypeForDescribeGrantRulesToCenInputDcgw = "DCGW"
)
