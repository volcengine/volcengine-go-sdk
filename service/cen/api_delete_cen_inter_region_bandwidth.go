// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cen

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteCenInterRegionBandwidthCommon = "DeleteCenInterRegionBandwidth"

// DeleteCenInterRegionBandwidthCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCenInterRegionBandwidthCommon operation. The "output" return
// value will be populated with the DeleteCenInterRegionBandwidthCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCenInterRegionBandwidthCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCenInterRegionBandwidthCommon Send returns without error.
//
// See DeleteCenInterRegionBandwidthCommon for more information on using the DeleteCenInterRegionBandwidthCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteCenInterRegionBandwidthCommonRequest method.
//    req, resp := client.DeleteCenInterRegionBandwidthCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DeleteCenInterRegionBandwidthCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteCenInterRegionBandwidthCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteCenInterRegionBandwidthCommon API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DeleteCenInterRegionBandwidthCommon for usage and error information.
func (c *CEN) DeleteCenInterRegionBandwidthCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteCenInterRegionBandwidthCommonRequest(input)
	return out, req.Send()
}

// DeleteCenInterRegionBandwidthCommonWithContext is the same as DeleteCenInterRegionBandwidthCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCenInterRegionBandwidthCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DeleteCenInterRegionBandwidthCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteCenInterRegionBandwidthCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteCenInterRegionBandwidth = "DeleteCenInterRegionBandwidth"

// DeleteCenInterRegionBandwidthRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteCenInterRegionBandwidth operation. The "output" return
// value will be populated with the DeleteCenInterRegionBandwidthCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteCenInterRegionBandwidthCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteCenInterRegionBandwidthCommon Send returns without error.
//
// See DeleteCenInterRegionBandwidth for more information on using the DeleteCenInterRegionBandwidth
// API call, and error handling.
//
//    // Example sending a request using the DeleteCenInterRegionBandwidthRequest method.
//    req, resp := client.DeleteCenInterRegionBandwidthRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CEN) DeleteCenInterRegionBandwidthRequest(input *DeleteCenInterRegionBandwidthInput) (req *request.Request, output *DeleteCenInterRegionBandwidthOutput) {
	op := &request.Operation{
		Name:       opDeleteCenInterRegionBandwidth,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteCenInterRegionBandwidthInput{}
	}

	output = &DeleteCenInterRegionBandwidthOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteCenInterRegionBandwidth API operation for CEN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CEN's
// API operation DeleteCenInterRegionBandwidth for usage and error information.
func (c *CEN) DeleteCenInterRegionBandwidth(input *DeleteCenInterRegionBandwidthInput) (*DeleteCenInterRegionBandwidthOutput, error) {
	req, out := c.DeleteCenInterRegionBandwidthRequest(input)
	return out, req.Send()
}

// DeleteCenInterRegionBandwidthWithContext is the same as DeleteCenInterRegionBandwidth with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteCenInterRegionBandwidth for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CEN) DeleteCenInterRegionBandwidthWithContext(ctx volcengine.Context, input *DeleteCenInterRegionBandwidthInput, opts ...request.Option) (*DeleteCenInterRegionBandwidthOutput, error) {
	req, out := c.DeleteCenInterRegionBandwidthRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteCenInterRegionBandwidthInput struct {
	_ struct{} `type:"structure"`

	// InterRegionBandwidthId is a required field
	InterRegionBandwidthId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteCenInterRegionBandwidthInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCenInterRegionBandwidthInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteCenInterRegionBandwidthInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteCenInterRegionBandwidthInput"}
	if s.InterRegionBandwidthId == nil {
		invalidParams.Add(request.NewErrParamRequired("InterRegionBandwidthId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInterRegionBandwidthId sets the InterRegionBandwidthId field's value.
func (s *DeleteCenInterRegionBandwidthInput) SetInterRegionBandwidthId(v string) *DeleteCenInterRegionBandwidthInput {
	s.InterRegionBandwidthId = &v
	return s
}

type DeleteCenInterRegionBandwidthOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteCenInterRegionBandwidthOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteCenInterRegionBandwidthOutput) GoString() string {
	return s.String()
}
