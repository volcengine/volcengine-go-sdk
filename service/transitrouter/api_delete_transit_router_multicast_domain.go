// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteTransitRouterMulticastDomainCommon = "DeleteTransitRouterMulticastDomain"

// DeleteTransitRouterMulticastDomainCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTransitRouterMulticastDomainCommon operation. The "output" return
// value will be populated with the DeleteTransitRouterMulticastDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterMulticastDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterMulticastDomainCommon Send returns without error.
//
// See DeleteTransitRouterMulticastDomainCommon for more information on using the DeleteTransitRouterMulticastDomainCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterMulticastDomainCommonRequest method.
//    req, resp := client.DeleteTransitRouterMulticastDomainCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomainCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterMulticastDomainCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterMulticastDomainCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterMulticastDomainCommon for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomainCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterMulticastDomainCommonRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterMulticastDomainCommonWithContext is the same as DeleteTransitRouterMulticastDomainCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterMulticastDomainCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomainCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteTransitRouterMulticastDomainCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteTransitRouterMulticastDomain = "DeleteTransitRouterMulticastDomain"

// DeleteTransitRouterMulticastDomainRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteTransitRouterMulticastDomain operation. The "output" return
// value will be populated with the DeleteTransitRouterMulticastDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteTransitRouterMulticastDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteTransitRouterMulticastDomainCommon Send returns without error.
//
// See DeleteTransitRouterMulticastDomain for more information on using the DeleteTransitRouterMulticastDomain
// API call, and error handling.
//
//    // Example sending a request using the DeleteTransitRouterMulticastDomainRequest method.
//    req, resp := client.DeleteTransitRouterMulticastDomainRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomainRequest(input *DeleteTransitRouterMulticastDomainInput) (req *request.Request, output *DeleteTransitRouterMulticastDomainOutput) {
	op := &request.Operation{
		Name:       opDeleteTransitRouterMulticastDomain,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteTransitRouterMulticastDomainInput{}
	}

	output = &DeleteTransitRouterMulticastDomainOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteTransitRouterMulticastDomain API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DeleteTransitRouterMulticastDomain for usage and error information.
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomain(input *DeleteTransitRouterMulticastDomainInput) (*DeleteTransitRouterMulticastDomainOutput, error) {
	req, out := c.DeleteTransitRouterMulticastDomainRequest(input)
	return out, req.Send()
}

// DeleteTransitRouterMulticastDomainWithContext is the same as DeleteTransitRouterMulticastDomain with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteTransitRouterMulticastDomain for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DeleteTransitRouterMulticastDomainWithContext(ctx volcengine.Context, input *DeleteTransitRouterMulticastDomainInput, opts ...request.Option) (*DeleteTransitRouterMulticastDomainOutput, error) {
	req, out := c.DeleteTransitRouterMulticastDomainRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTransitRouterMulticastDomainInput struct {
	_ struct{} `type:"structure"`

	// TransitRouterMulticastDomainId is a required field
	TransitRouterMulticastDomainId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteTransitRouterMulticastDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterMulticastDomainInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteTransitRouterMulticastDomainInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteTransitRouterMulticastDomainInput"}
	if s.TransitRouterMulticastDomainId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterMulticastDomainId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTransitRouterMulticastDomainId sets the TransitRouterMulticastDomainId field's value.
func (s *DeleteTransitRouterMulticastDomainInput) SetTransitRouterMulticastDomainId(v string) *DeleteTransitRouterMulticastDomainInput {
	s.TransitRouterMulticastDomainId = &v
	return s
}

type DeleteTransitRouterMulticastDomainOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteTransitRouterMulticastDomainOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTransitRouterMulticastDomainOutput) GoString() string {
	return s.String()
}
