// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateTransitRouterMulticastDomainCommon = "CreateTransitRouterMulticastDomain"

// CreateTransitRouterMulticastDomainCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTransitRouterMulticastDomainCommon operation. The "output" return
// value will be populated with the CreateTransitRouterMulticastDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterMulticastDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterMulticastDomainCommon Send returns without error.
//
// See CreateTransitRouterMulticastDomainCommon for more information on using the CreateTransitRouterMulticastDomainCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterMulticastDomainCommonRequest method.
//    req, resp := client.CreateTransitRouterMulticastDomainCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomainCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTransitRouterMulticastDomainCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterMulticastDomainCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterMulticastDomainCommon for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomainCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterMulticastDomainCommonRequest(input)
	return out, req.Send()
}

// CreateTransitRouterMulticastDomainCommonWithContext is the same as CreateTransitRouterMulticastDomainCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterMulticastDomainCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomainCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTransitRouterMulticastDomainCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTransitRouterMulticastDomain = "CreateTransitRouterMulticastDomain"

// CreateTransitRouterMulticastDomainRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTransitRouterMulticastDomain operation. The "output" return
// value will be populated with the CreateTransitRouterMulticastDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTransitRouterMulticastDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTransitRouterMulticastDomainCommon Send returns without error.
//
// See CreateTransitRouterMulticastDomain for more information on using the CreateTransitRouterMulticastDomain
// API call, and error handling.
//
//    // Example sending a request using the CreateTransitRouterMulticastDomainRequest method.
//    req, resp := client.CreateTransitRouterMulticastDomainRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomainRequest(input *CreateTransitRouterMulticastDomainInput) (req *request.Request, output *CreateTransitRouterMulticastDomainOutput) {
	op := &request.Operation{
		Name:       opCreateTransitRouterMulticastDomain,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTransitRouterMulticastDomainInput{}
	}

	output = &CreateTransitRouterMulticastDomainOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateTransitRouterMulticastDomain API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation CreateTransitRouterMulticastDomain for usage and error information.
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomain(input *CreateTransitRouterMulticastDomainInput) (*CreateTransitRouterMulticastDomainOutput, error) {
	req, out := c.CreateTransitRouterMulticastDomainRequest(input)
	return out, req.Send()
}

// CreateTransitRouterMulticastDomainWithContext is the same as CreateTransitRouterMulticastDomain with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTransitRouterMulticastDomain for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) CreateTransitRouterMulticastDomainWithContext(ctx volcengine.Context, input *CreateTransitRouterMulticastDomainInput, opts ...request.Option) (*CreateTransitRouterMulticastDomainOutput, error) {
	req, out := c.CreateTransitRouterMulticastDomainRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTransitRouterMulticastDomainInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	Description *string `type:"string"`

	Tags []*TagForCreateTransitRouterMulticastDomainInput `type:"list"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	TransitRouterMulticastDomainName *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterMulticastDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterMulticastDomainInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTransitRouterMulticastDomainInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTransitRouterMulticastDomainInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *CreateTransitRouterMulticastDomainInput) SetClientToken(v string) *CreateTransitRouterMulticastDomainInput {
	s.ClientToken = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateTransitRouterMulticastDomainInput) SetDescription(v string) *CreateTransitRouterMulticastDomainInput {
	s.Description = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateTransitRouterMulticastDomainInput) SetTags(v []*TagForCreateTransitRouterMulticastDomainInput) *CreateTransitRouterMulticastDomainInput {
	s.Tags = v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *CreateTransitRouterMulticastDomainInput) SetTransitRouterId(v string) *CreateTransitRouterMulticastDomainInput {
	s.TransitRouterId = &v
	return s
}

// SetTransitRouterMulticastDomainName sets the TransitRouterMulticastDomainName field's value.
func (s *CreateTransitRouterMulticastDomainInput) SetTransitRouterMulticastDomainName(v string) *CreateTransitRouterMulticastDomainInput {
	s.TransitRouterMulticastDomainName = &v
	return s
}

type CreateTransitRouterMulticastDomainOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	TransitRouterMulticastDomainId *string `type:"string"`
}

// String returns the string representation
func (s CreateTransitRouterMulticastDomainOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTransitRouterMulticastDomainOutput) GoString() string {
	return s.String()
}

// SetTransitRouterMulticastDomainId sets the TransitRouterMulticastDomainId field's value.
func (s *CreateTransitRouterMulticastDomainOutput) SetTransitRouterMulticastDomainId(v string) *CreateTransitRouterMulticastDomainOutput {
	s.TransitRouterMulticastDomainId = &v
	return s
}

type TagForCreateTransitRouterMulticastDomainInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateTransitRouterMulticastDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateTransitRouterMulticastDomainInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateTransitRouterMulticastDomainInput) SetKey(v string) *TagForCreateTransitRouterMulticastDomainInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateTransitRouterMulticastDomainInput) SetValue(v string) *TagForCreateTransitRouterMulticastDomainInput {
	s.Value = &v
	return s
}
