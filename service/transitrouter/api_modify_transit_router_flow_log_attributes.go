// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyTransitRouterFlowLogAttributesCommon = "ModifyTransitRouterFlowLogAttributes"

// ModifyTransitRouterFlowLogAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyTransitRouterFlowLogAttributesCommon operation. The "output" return
// value will be populated with the ModifyTransitRouterFlowLogAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterFlowLogAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterFlowLogAttributesCommon Send returns without error.
//
// See ModifyTransitRouterFlowLogAttributesCommon for more information on using the ModifyTransitRouterFlowLogAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterFlowLogAttributesCommonRequest method.
//    req, resp := client.ModifyTransitRouterFlowLogAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTransitRouterFlowLogAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterFlowLogAttributesCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterFlowLogAttributesCommon for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterFlowLogAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterFlowLogAttributesCommonWithContext is the same as ModifyTransitRouterFlowLogAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterFlowLogAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTransitRouterFlowLogAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTransitRouterFlowLogAttributes = "ModifyTransitRouterFlowLogAttributes"

// ModifyTransitRouterFlowLogAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyTransitRouterFlowLogAttributes operation. The "output" return
// value will be populated with the ModifyTransitRouterFlowLogAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTransitRouterFlowLogAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTransitRouterFlowLogAttributesCommon Send returns without error.
//
// See ModifyTransitRouterFlowLogAttributes for more information on using the ModifyTransitRouterFlowLogAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyTransitRouterFlowLogAttributesRequest method.
//    req, resp := client.ModifyTransitRouterFlowLogAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributesRequest(input *ModifyTransitRouterFlowLogAttributesInput) (req *request.Request, output *ModifyTransitRouterFlowLogAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyTransitRouterFlowLogAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTransitRouterFlowLogAttributesInput{}
	}

	output = &ModifyTransitRouterFlowLogAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTransitRouterFlowLogAttributes API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation ModifyTransitRouterFlowLogAttributes for usage and error information.
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributes(input *ModifyTransitRouterFlowLogAttributesInput) (*ModifyTransitRouterFlowLogAttributesOutput, error) {
	req, out := c.ModifyTransitRouterFlowLogAttributesRequest(input)
	return out, req.Send()
}

// ModifyTransitRouterFlowLogAttributesWithContext is the same as ModifyTransitRouterFlowLogAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTransitRouterFlowLogAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) ModifyTransitRouterFlowLogAttributesWithContext(ctx volcengine.Context, input *ModifyTransitRouterFlowLogAttributesInput, opts ...request.Option) (*ModifyTransitRouterFlowLogAttributesOutput, error) {
	req, out := c.ModifyTransitRouterFlowLogAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTransitRouterFlowLogAttributesInput struct {
	_ struct{} `type:"structure"`

	AggregationInterval *int32 `type:"int32"`

	Description *string `type:"string"`

	// TransitRouterFlowLogId is a required field
	TransitRouterFlowLogId *string `type:"string" required:"true"`

	TransitRouterFlowLogName *string `type:"string"`
}

// String returns the string representation
func (s ModifyTransitRouterFlowLogAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterFlowLogAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTransitRouterFlowLogAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTransitRouterFlowLogAttributesInput"}
	if s.TransitRouterFlowLogId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterFlowLogId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAggregationInterval sets the AggregationInterval field's value.
func (s *ModifyTransitRouterFlowLogAttributesInput) SetAggregationInterval(v int32) *ModifyTransitRouterFlowLogAttributesInput {
	s.AggregationInterval = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ModifyTransitRouterFlowLogAttributesInput) SetDescription(v string) *ModifyTransitRouterFlowLogAttributesInput {
	s.Description = &v
	return s
}

// SetTransitRouterFlowLogId sets the TransitRouterFlowLogId field's value.
func (s *ModifyTransitRouterFlowLogAttributesInput) SetTransitRouterFlowLogId(v string) *ModifyTransitRouterFlowLogAttributesInput {
	s.TransitRouterFlowLogId = &v
	return s
}

// SetTransitRouterFlowLogName sets the TransitRouterFlowLogName field's value.
func (s *ModifyTransitRouterFlowLogAttributesInput) SetTransitRouterFlowLogName(v string) *ModifyTransitRouterFlowLogAttributesInput {
	s.TransitRouterFlowLogName = &v
	return s
}

type ModifyTransitRouterFlowLogAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyTransitRouterFlowLogAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTransitRouterFlowLogAttributesOutput) GoString() string {
	return s.String()
}
