// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTransitRouterVpnAttachmentsCommon = "DescribeTransitRouterVpnAttachments"

// DescribeTransitRouterVpnAttachmentsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterVpnAttachmentsCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterVpnAttachmentsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterVpnAttachmentsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterVpnAttachmentsCommon Send returns without error.
//
// See DescribeTransitRouterVpnAttachmentsCommon for more information on using the DescribeTransitRouterVpnAttachmentsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterVpnAttachmentsCommonRequest method.
//    req, resp := client.DescribeTransitRouterVpnAttachmentsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachmentsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterVpnAttachmentsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterVpnAttachmentsCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterVpnAttachmentsCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachmentsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterVpnAttachmentsCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterVpnAttachmentsCommonWithContext is the same as DescribeTransitRouterVpnAttachmentsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterVpnAttachmentsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachmentsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterVpnAttachmentsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterVpnAttachments = "DescribeTransitRouterVpnAttachments"

// DescribeTransitRouterVpnAttachmentsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterVpnAttachments operation. The "output" return
// value will be populated with the DescribeTransitRouterVpnAttachmentsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterVpnAttachmentsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterVpnAttachmentsCommon Send returns without error.
//
// See DescribeTransitRouterVpnAttachments for more information on using the DescribeTransitRouterVpnAttachments
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterVpnAttachmentsRequest method.
//    req, resp := client.DescribeTransitRouterVpnAttachmentsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachmentsRequest(input *DescribeTransitRouterVpnAttachmentsInput) (req *request.Request, output *DescribeTransitRouterVpnAttachmentsOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterVpnAttachments,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterVpnAttachmentsInput{}
	}

	output = &DescribeTransitRouterVpnAttachmentsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterVpnAttachments API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterVpnAttachments for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachments(input *DescribeTransitRouterVpnAttachmentsInput) (*DescribeTransitRouterVpnAttachmentsOutput, error) {
	req, out := c.DescribeTransitRouterVpnAttachmentsRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterVpnAttachmentsWithContext is the same as DescribeTransitRouterVpnAttachments with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterVpnAttachments for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterVpnAttachmentsWithContext(ctx volcengine.Context, input *DescribeTransitRouterVpnAttachmentsInput, opts ...request.Option) (*DescribeTransitRouterVpnAttachmentsOutput, error) {
	req, out := c.DescribeTransitRouterVpnAttachmentsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTransitRouterVpnAttachmentsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TagFilters []*TagFilterForDescribeTransitRouterVpnAttachmentsInput `type:"list"`

	TransitRouterAttachmentIds []*string `type:"list"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	VpnConnectionId *string `type:"string"`
}

// String returns the string representation
func (s DescribeTransitRouterVpnAttachmentsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterVpnAttachmentsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterVpnAttachmentsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterVpnAttachmentsInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetPageNumber(v int32) *DescribeTransitRouterVpnAttachmentsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetPageSize(v int32) *DescribeTransitRouterVpnAttachmentsInput {
	s.PageSize = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetTagFilters(v []*TagFilterForDescribeTransitRouterVpnAttachmentsInput) *DescribeTransitRouterVpnAttachmentsInput {
	s.TagFilters = v
	return s
}

// SetTransitRouterAttachmentIds sets the TransitRouterAttachmentIds field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetTransitRouterAttachmentIds(v []*string) *DescribeTransitRouterVpnAttachmentsInput {
	s.TransitRouterAttachmentIds = v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetTransitRouterId(v string) *DescribeTransitRouterVpnAttachmentsInput {
	s.TransitRouterId = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeTransitRouterVpnAttachmentsInput) SetVpnConnectionId(v string) *DescribeTransitRouterVpnAttachmentsInput {
	s.VpnConnectionId = &v
	return s
}

type DescribeTransitRouterVpnAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterAttachments []*TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTransitRouterVpnAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterVpnAttachmentsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterVpnAttachmentsOutput) SetPageNumber(v int32) *DescribeTransitRouterVpnAttachmentsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterVpnAttachmentsOutput) SetPageSize(v int32) *DescribeTransitRouterVpnAttachmentsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterVpnAttachmentsOutput) SetTotalCount(v int32) *DescribeTransitRouterVpnAttachmentsOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterAttachments sets the TransitRouterAttachments field's value.
func (s *DescribeTransitRouterVpnAttachmentsOutput) SetTransitRouterAttachments(v []*TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) *DescribeTransitRouterVpnAttachmentsOutput {
	s.TransitRouterAttachments = v
	return s
}

type TagFilterForDescribeTransitRouterVpnAttachmentsInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeTransitRouterVpnAttachmentsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeTransitRouterVpnAttachmentsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeTransitRouterVpnAttachmentsInput) SetKey(v string) *TagFilterForDescribeTransitRouterVpnAttachmentsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeTransitRouterVpnAttachmentsInput) SetValues(v []*string) *TagFilterForDescribeTransitRouterVpnAttachmentsInput {
	s.Values = v
	return s
}

type TagForDescribeTransitRouterVpnAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeTransitRouterVpnAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeTransitRouterVpnAttachmentsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeTransitRouterVpnAttachmentsOutput) SetKey(v string) *TagForDescribeTransitRouterVpnAttachmentsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeTransitRouterVpnAttachmentsOutput) SetValue(v string) *TagForDescribeTransitRouterVpnAttachmentsOutput {
	s.Value = &v
	return s
}

type TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	AutoPublishRouteEnabled *bool `type:"boolean"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	HealthCheckRevokeRouteEnabled *bool `type:"boolean"`

	Ipv6Enabled *bool `type:"boolean"`

	Status *string `type:"string"`

	Tags []*TagForDescribeTransitRouterVpnAttachmentsOutput `type:"list"`

	TransitRouterAttachmentId *string `type:"string"`

	TransitRouterAttachmentName *string `type:"string"`

	TransitRouterId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpnConnectionId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) GoString() string {
	return s.String()
}

// SetAutoPublishRouteEnabled sets the AutoPublishRouteEnabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetAutoPublishRouteEnabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.AutoPublishRouteEnabled = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetCreationTime(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetDescription(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.Description = &v
	return s
}

// SetHealthCheckRevokeRouteEnabled sets the HealthCheckRevokeRouteEnabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetHealthCheckRevokeRouteEnabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.HealthCheckRevokeRouteEnabled = &v
	return s
}

// SetIpv6Enabled sets the Ipv6Enabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetIpv6Enabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.Ipv6Enabled = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetStatus(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetTags(v []*TagForDescribeTransitRouterVpnAttachmentsOutput) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.Tags = v
	return s
}

// SetTransitRouterAttachmentId sets the TransitRouterAttachmentId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetTransitRouterAttachmentId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.TransitRouterAttachmentId = &v
	return s
}

// SetTransitRouterAttachmentName sets the TransitRouterAttachmentName field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetTransitRouterAttachmentName(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.TransitRouterAttachmentName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetTransitRouterId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.TransitRouterId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetUpdateTime(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetVpnConnectionId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.VpnConnectionId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput) SetZoneId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpnAttachmentsOutput {
	s.ZoneId = &v
	return s
}
