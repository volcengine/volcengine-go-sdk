// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTransitRouterFlowLogsCommon = "DescribeTransitRouterFlowLogs"

// DescribeTransitRouterFlowLogsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterFlowLogsCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterFlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterFlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterFlowLogsCommon Send returns without error.
//
// See DescribeTransitRouterFlowLogsCommon for more information on using the DescribeTransitRouterFlowLogsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterFlowLogsCommonRequest method.
//    req, resp := client.DescribeTransitRouterFlowLogsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterFlowLogsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterFlowLogsCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterFlowLogsCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterFlowLogsCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterFlowLogsCommonWithContext is the same as DescribeTransitRouterFlowLogsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterFlowLogsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterFlowLogsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterFlowLogs = "DescribeTransitRouterFlowLogs"

// DescribeTransitRouterFlowLogsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterFlowLogs operation. The "output" return
// value will be populated with the DescribeTransitRouterFlowLogsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterFlowLogsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterFlowLogsCommon Send returns without error.
//
// See DescribeTransitRouterFlowLogs for more information on using the DescribeTransitRouterFlowLogs
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterFlowLogsRequest method.
//    req, resp := client.DescribeTransitRouterFlowLogsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogsRequest(input *DescribeTransitRouterFlowLogsInput) (req *request.Request, output *DescribeTransitRouterFlowLogsOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterFlowLogs,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterFlowLogsInput{}
	}

	output = &DescribeTransitRouterFlowLogsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterFlowLogs API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterFlowLogs for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogs(input *DescribeTransitRouterFlowLogsInput) (*DescribeTransitRouterFlowLogsOutput, error) {
	req, out := c.DescribeTransitRouterFlowLogsRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterFlowLogsWithContext is the same as DescribeTransitRouterFlowLogs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterFlowLogs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterFlowLogsWithContext(ctx volcengine.Context, input *DescribeTransitRouterFlowLogsInput, opts ...request.Option) (*DescribeTransitRouterFlowLogsOutput, error) {
	req, out := c.DescribeTransitRouterFlowLogsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTransitRouterFlowLogsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *string `type:"string"`

	PageSize *string `type:"string"`

	// ResourceId is a required field
	ResourceId *string `type:"string" required:"true"`

	// ResourceType is a required field
	ResourceType *string `type:"string" required:"true"`

	Status *string `type:"string"`

	TagFilters []*TagFilterForDescribeTransitRouterFlowLogsInput `type:"list"`

	TlsProjectId *string `type:"string"`

	TlsTopicId *string `type:"string"`

	TransitRouterFlowLogIds []*string `type:"list"`

	TransitRouterFlowLogName *string `type:"string"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeTransitRouterFlowLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterFlowLogsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterFlowLogsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterFlowLogsInput"}
	if s.ResourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceId"))
	}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetPageNumber(v string) *DescribeTransitRouterFlowLogsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetPageSize(v string) *DescribeTransitRouterFlowLogsInput {
	s.PageSize = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetResourceId(v string) *DescribeTransitRouterFlowLogsInput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetResourceType(v string) *DescribeTransitRouterFlowLogsInput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetStatus(v string) *DescribeTransitRouterFlowLogsInput {
	s.Status = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTagFilters(v []*TagFilterForDescribeTransitRouterFlowLogsInput) *DescribeTransitRouterFlowLogsInput {
	s.TagFilters = v
	return s
}

// SetTlsProjectId sets the TlsProjectId field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTlsProjectId(v string) *DescribeTransitRouterFlowLogsInput {
	s.TlsProjectId = &v
	return s
}

// SetTlsTopicId sets the TlsTopicId field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTlsTopicId(v string) *DescribeTransitRouterFlowLogsInput {
	s.TlsTopicId = &v
	return s
}

// SetTransitRouterFlowLogIds sets the TransitRouterFlowLogIds field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTransitRouterFlowLogIds(v []*string) *DescribeTransitRouterFlowLogsInput {
	s.TransitRouterFlowLogIds = v
	return s
}

// SetTransitRouterFlowLogName sets the TransitRouterFlowLogName field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTransitRouterFlowLogName(v string) *DescribeTransitRouterFlowLogsInput {
	s.TransitRouterFlowLogName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeTransitRouterFlowLogsInput) SetTransitRouterId(v string) *DescribeTransitRouterFlowLogsInput {
	s.TransitRouterId = &v
	return s
}

type DescribeTransitRouterFlowLogsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterFlowLogs []*TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTransitRouterFlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterFlowLogsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterFlowLogsOutput) SetPageNumber(v int32) *DescribeTransitRouterFlowLogsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterFlowLogsOutput) SetPageSize(v int32) *DescribeTransitRouterFlowLogsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterFlowLogsOutput) SetTotalCount(v int32) *DescribeTransitRouterFlowLogsOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterFlowLogs sets the TransitRouterFlowLogs field's value.
func (s *DescribeTransitRouterFlowLogsOutput) SetTransitRouterFlowLogs(v []*TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) *DescribeTransitRouterFlowLogsOutput {
	s.TransitRouterFlowLogs = v
	return s
}

type TagFilterForDescribeTransitRouterFlowLogsInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeTransitRouterFlowLogsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeTransitRouterFlowLogsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeTransitRouterFlowLogsInput) SetKey(v string) *TagFilterForDescribeTransitRouterFlowLogsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeTransitRouterFlowLogsInput) SetValues(v []*string) *TagFilterForDescribeTransitRouterFlowLogsInput {
	s.Values = v
	return s
}

type TagForDescribeTransitRouterFlowLogsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeTransitRouterFlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeTransitRouterFlowLogsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeTransitRouterFlowLogsOutput) SetKey(v string) *TagForDescribeTransitRouterFlowLogsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeTransitRouterFlowLogsOutput) SetValue(v string) *TagForDescribeTransitRouterFlowLogsOutput {
	s.Value = &v
	return s
}

type TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput struct {
	_ struct{} `type:"structure"`

	AccountID *string `type:"string"`

	AggregationInterval *int32 `type:"int32"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	LogFormatString *string `type:"string"`

	ResourceId *string `type:"string"`

	ResourceType *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeTransitRouterFlowLogsOutput `type:"list"`

	TlsProjectId *string `type:"string"`

	TlsProjectName *string `type:"string"`

	TlsTopicId *string `type:"string"`

	TlsTopicName *string `type:"string"`

	TransitRouterFlowLogId *string `type:"string"`

	TransitRouterFlowLogName *string `type:"string"`

	TransitRouterId *string `type:"string"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetAccountID(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.AccountID = &v
	return s
}

// SetAggregationInterval sets the AggregationInterval field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetAggregationInterval(v int32) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.AggregationInterval = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetCreatedAt(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetDescription(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.Description = &v
	return s
}

// SetLogFormatString sets the LogFormatString field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetLogFormatString(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.LogFormatString = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetResourceId(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetResourceType(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetStatus(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTags(v []*TagForDescribeTransitRouterFlowLogsOutput) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.Tags = v
	return s
}

// SetTlsProjectId sets the TlsProjectId field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTlsProjectId(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TlsProjectId = &v
	return s
}

// SetTlsProjectName sets the TlsProjectName field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTlsProjectName(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TlsProjectName = &v
	return s
}

// SetTlsTopicId sets the TlsTopicId field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTlsTopicId(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TlsTopicId = &v
	return s
}

// SetTlsTopicName sets the TlsTopicName field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTlsTopicName(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TlsTopicName = &v
	return s
}

// SetTransitRouterFlowLogId sets the TransitRouterFlowLogId field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTransitRouterFlowLogId(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TransitRouterFlowLogId = &v
	return s
}

// SetTransitRouterFlowLogName sets the TransitRouterFlowLogName field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTransitRouterFlowLogName(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TransitRouterFlowLogName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetTransitRouterId(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.TransitRouterId = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput) SetUpdatedAt(v string) *TransitRouterFlowLogForDescribeTransitRouterFlowLogsOutput {
	s.UpdatedAt = &v
	return s
}
