// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTransitRouterVpcAttachmentsCommon = "DescribeTransitRouterVpcAttachments"

// DescribeTransitRouterVpcAttachmentsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterVpcAttachmentsCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterVpcAttachmentsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterVpcAttachmentsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterVpcAttachmentsCommon Send returns without error.
//
// See DescribeTransitRouterVpcAttachmentsCommon for more information on using the DescribeTransitRouterVpcAttachmentsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterVpcAttachmentsCommonRequest method.
//    req, resp := client.DescribeTransitRouterVpcAttachmentsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachmentsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterVpcAttachmentsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterVpcAttachmentsCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterVpcAttachmentsCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachmentsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterVpcAttachmentsCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterVpcAttachmentsCommonWithContext is the same as DescribeTransitRouterVpcAttachmentsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterVpcAttachmentsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachmentsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterVpcAttachmentsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterVpcAttachments = "DescribeTransitRouterVpcAttachments"

// DescribeTransitRouterVpcAttachmentsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterVpcAttachments operation. The "output" return
// value will be populated with the DescribeTransitRouterVpcAttachmentsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterVpcAttachmentsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterVpcAttachmentsCommon Send returns without error.
//
// See DescribeTransitRouterVpcAttachments for more information on using the DescribeTransitRouterVpcAttachments
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterVpcAttachmentsRequest method.
//    req, resp := client.DescribeTransitRouterVpcAttachmentsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachmentsRequest(input *DescribeTransitRouterVpcAttachmentsInput) (req *request.Request, output *DescribeTransitRouterVpcAttachmentsOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterVpcAttachments,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterVpcAttachmentsInput{}
	}

	output = &DescribeTransitRouterVpcAttachmentsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterVpcAttachments API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterVpcAttachments for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachments(input *DescribeTransitRouterVpcAttachmentsInput) (*DescribeTransitRouterVpcAttachmentsOutput, error) {
	req, out := c.DescribeTransitRouterVpcAttachmentsRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterVpcAttachmentsWithContext is the same as DescribeTransitRouterVpcAttachments with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterVpcAttachments for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterVpcAttachmentsWithContext(ctx volcengine.Context, input *DescribeTransitRouterVpcAttachmentsInput, opts ...request.Option) (*DescribeTransitRouterVpcAttachmentsOutput, error) {
	req, out := c.DescribeTransitRouterVpcAttachmentsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AttachPointForDescribeTransitRouterVpcAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	NetworkInterfaceId *string `type:"string"`

	SubnetId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s AttachPointForDescribeTransitRouterVpcAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AttachPointForDescribeTransitRouterVpcAttachmentsOutput) GoString() string {
	return s.String()
}

// SetNetworkInterfaceId sets the NetworkInterfaceId field's value.
func (s *AttachPointForDescribeTransitRouterVpcAttachmentsOutput) SetNetworkInterfaceId(v string) *AttachPointForDescribeTransitRouterVpcAttachmentsOutput {
	s.NetworkInterfaceId = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AttachPointForDescribeTransitRouterVpcAttachmentsOutput) SetSubnetId(v string) *AttachPointForDescribeTransitRouterVpcAttachmentsOutput {
	s.SubnetId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *AttachPointForDescribeTransitRouterVpcAttachmentsOutput) SetZoneId(v string) *AttachPointForDescribeTransitRouterVpcAttachmentsOutput {
	s.ZoneId = &v
	return s
}

type DescribeTransitRouterVpcAttachmentsInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TagFilters []*TagFilterForDescribeTransitRouterVpcAttachmentsInput `type:"list"`

	TransitRouterAttachmentIds []*string `type:"list"`

	// TransitRouterId is a required field
	TransitRouterId *string `type:"string" required:"true"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s DescribeTransitRouterVpcAttachmentsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterVpcAttachmentsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterVpcAttachmentsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterVpcAttachmentsInput"}
	if s.TransitRouterId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetPageNumber(v int32) *DescribeTransitRouterVpcAttachmentsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetPageSize(v int32) *DescribeTransitRouterVpcAttachmentsInput {
	s.PageSize = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetTagFilters(v []*TagFilterForDescribeTransitRouterVpcAttachmentsInput) *DescribeTransitRouterVpcAttachmentsInput {
	s.TagFilters = v
	return s
}

// SetTransitRouterAttachmentIds sets the TransitRouterAttachmentIds field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetTransitRouterAttachmentIds(v []*string) *DescribeTransitRouterVpcAttachmentsInput {
	s.TransitRouterAttachmentIds = v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetTransitRouterId(v string) *DescribeTransitRouterVpcAttachmentsInput {
	s.TransitRouterId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeTransitRouterVpcAttachmentsInput) SetVpcId(v string) *DescribeTransitRouterVpcAttachmentsInput {
	s.VpcId = &v
	return s
}

type DescribeTransitRouterVpcAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterAttachments []*TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeTransitRouterVpcAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterVpcAttachmentsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterVpcAttachmentsOutput) SetPageNumber(v int32) *DescribeTransitRouterVpcAttachmentsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterVpcAttachmentsOutput) SetPageSize(v int32) *DescribeTransitRouterVpcAttachmentsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterVpcAttachmentsOutput) SetTotalCount(v int32) *DescribeTransitRouterVpcAttachmentsOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterAttachments sets the TransitRouterAttachments field's value.
func (s *DescribeTransitRouterVpcAttachmentsOutput) SetTransitRouterAttachments(v []*TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) *DescribeTransitRouterVpcAttachmentsOutput {
	s.TransitRouterAttachments = v
	return s
}

type TagFilterForDescribeTransitRouterVpcAttachmentsInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeTransitRouterVpcAttachmentsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeTransitRouterVpcAttachmentsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeTransitRouterVpcAttachmentsInput) SetKey(v string) *TagFilterForDescribeTransitRouterVpcAttachmentsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeTransitRouterVpcAttachmentsInput) SetValues(v []*string) *TagFilterForDescribeTransitRouterVpcAttachmentsInput {
	s.Values = v
	return s
}

type TagForDescribeTransitRouterVpcAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeTransitRouterVpcAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeTransitRouterVpcAttachmentsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeTransitRouterVpcAttachmentsOutput) SetKey(v string) *TagForDescribeTransitRouterVpcAttachmentsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeTransitRouterVpcAttachmentsOutput) SetValue(v string) *TagForDescribeTransitRouterVpcAttachmentsOutput {
	s.Value = &v
	return s
}

type TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput struct {
	_ struct{} `type:"structure"`

	ApplianceModeEnabled *bool `type:"boolean"`

	AttachPoints []*AttachPointForDescribeTransitRouterVpcAttachmentsOutput `type:"list"`

	AutoPublishRouteEnabled *bool `type:"boolean"`

	Bandwidth *int32 `type:"int32"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	Ipv6Enabled *bool `type:"boolean"`

	Status *string `type:"string"`

	Tags []*TagForDescribeTransitRouterVpcAttachmentsOutput `type:"list"`

	TransitRouterAttachmentId *string `type:"string"`

	TransitRouterAttachmentName *string `type:"string"`

	TransitRouterId *string `type:"string"`

	UpdateTime *string `type:"string"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) GoString() string {
	return s.String()
}

// SetApplianceModeEnabled sets the ApplianceModeEnabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetApplianceModeEnabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.ApplianceModeEnabled = &v
	return s
}

// SetAttachPoints sets the AttachPoints field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetAttachPoints(v []*AttachPointForDescribeTransitRouterVpcAttachmentsOutput) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.AttachPoints = v
	return s
}

// SetAutoPublishRouteEnabled sets the AutoPublishRouteEnabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetAutoPublishRouteEnabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.AutoPublishRouteEnabled = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetBandwidth(v int32) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.Bandwidth = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetCreationTime(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetDescription(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.Description = &v
	return s
}

// SetIpv6Enabled sets the Ipv6Enabled field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetIpv6Enabled(v bool) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.Ipv6Enabled = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetStatus(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetTags(v []*TagForDescribeTransitRouterVpcAttachmentsOutput) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.Tags = v
	return s
}

// SetTransitRouterAttachmentId sets the TransitRouterAttachmentId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetTransitRouterAttachmentId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.TransitRouterAttachmentId = &v
	return s
}

// SetTransitRouterAttachmentName sets the TransitRouterAttachmentName field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetTransitRouterAttachmentName(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.TransitRouterAttachmentName = &v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetTransitRouterId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.TransitRouterId = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetUpdateTime(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.UpdateTime = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput) SetVpcId(v string) *TransitRouterAttachmentForDescribeTransitRouterVpcAttachmentsOutput {
	s.VpcId = &v
	return s
}
