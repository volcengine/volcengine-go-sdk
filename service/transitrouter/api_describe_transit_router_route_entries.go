// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package transitrouter

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTransitRouterRouteEntriesCommon = "DescribeTransitRouterRouteEntries"

// DescribeTransitRouterRouteEntriesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterRouteEntriesCommon operation. The "output" return
// value will be populated with the DescribeTransitRouterRouteEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterRouteEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterRouteEntriesCommon Send returns without error.
//
// See DescribeTransitRouterRouteEntriesCommon for more information on using the DescribeTransitRouterRouteEntriesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterRouteEntriesCommonRequest method.
//    req, resp := client.DescribeTransitRouterRouteEntriesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntriesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterRouteEntriesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterRouteEntriesCommon API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterRouteEntriesCommon for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntriesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterRouteEntriesCommonRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterRouteEntriesCommonWithContext is the same as DescribeTransitRouterRouteEntriesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterRouteEntriesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntriesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTransitRouterRouteEntriesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTransitRouterRouteEntries = "DescribeTransitRouterRouteEntries"

// DescribeTransitRouterRouteEntriesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTransitRouterRouteEntries operation. The "output" return
// value will be populated with the DescribeTransitRouterRouteEntriesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTransitRouterRouteEntriesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTransitRouterRouteEntriesCommon Send returns without error.
//
// See DescribeTransitRouterRouteEntries for more information on using the DescribeTransitRouterRouteEntries
// API call, and error handling.
//
//    // Example sending a request using the DescribeTransitRouterRouteEntriesRequest method.
//    req, resp := client.DescribeTransitRouterRouteEntriesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntriesRequest(input *DescribeTransitRouterRouteEntriesInput) (req *request.Request, output *DescribeTransitRouterRouteEntriesOutput) {
	op := &request.Operation{
		Name:       opDescribeTransitRouterRouteEntries,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTransitRouterRouteEntriesInput{}
	}

	output = &DescribeTransitRouterRouteEntriesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeTransitRouterRouteEntries API operation for TRANSITROUTER.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TRANSITROUTER's
// API operation DescribeTransitRouterRouteEntries for usage and error information.
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntries(input *DescribeTransitRouterRouteEntriesInput) (*DescribeTransitRouterRouteEntriesOutput, error) {
	req, out := c.DescribeTransitRouterRouteEntriesRequest(input)
	return out, req.Send()
}

// DescribeTransitRouterRouteEntriesWithContext is the same as DescribeTransitRouterRouteEntries with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTransitRouterRouteEntries for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TRANSITROUTER) DescribeTransitRouterRouteEntriesWithContext(ctx volcengine.Context, input *DescribeTransitRouterRouteEntriesInput, opts ...request.Option) (*DescribeTransitRouterRouteEntriesOutput, error) {
	req, out := c.DescribeTransitRouterRouteEntriesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeTransitRouterRouteEntriesInput struct {
	_ struct{} `type:"structure"`

	DestinationCidrBlock *string `type:"string"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	Status *string `type:"string"`

	TransitRouterRouteEntryIds []*string `type:"list"`

	TransitRouterRouteEntryName *string `type:"string"`

	TransitRouterRouteEntryNextHopResourceType *string `type:"string"`

	TransitRouterRouteEntryNextHopType *string `type:"string"`

	TransitRouterRouteEntryType *string `type:"string"`

	// TransitRouterRouteTableId is a required field
	TransitRouterRouteTableId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeTransitRouterRouteEntriesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterRouteEntriesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTransitRouterRouteEntriesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTransitRouterRouteEntriesInput"}
	if s.TransitRouterRouteTableId == nil {
		invalidParams.Add(request.NewErrParamRequired("TransitRouterRouteTableId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetDestinationCidrBlock(v string) *DescribeTransitRouterRouteEntriesInput {
	s.DestinationCidrBlock = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetPageNumber(v int32) *DescribeTransitRouterRouteEntriesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetPageSize(v int32) *DescribeTransitRouterRouteEntriesInput {
	s.PageSize = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetStatus(v string) *DescribeTransitRouterRouteEntriesInput {
	s.Status = &v
	return s
}

// SetTransitRouterRouteEntryIds sets the TransitRouterRouteEntryIds field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteEntryIds(v []*string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteEntryIds = v
	return s
}

// SetTransitRouterRouteEntryName sets the TransitRouterRouteEntryName field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteEntryName(v string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteEntryName = &v
	return s
}

// SetTransitRouterRouteEntryNextHopResourceType sets the TransitRouterRouteEntryNextHopResourceType field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteEntryNextHopResourceType(v string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteEntryNextHopResourceType = &v
	return s
}

// SetTransitRouterRouteEntryNextHopType sets the TransitRouterRouteEntryNextHopType field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteEntryNextHopType(v string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteEntryNextHopType = &v
	return s
}

// SetTransitRouterRouteEntryType sets the TransitRouterRouteEntryType field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteEntryType(v string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteEntryType = &v
	return s
}

// SetTransitRouterRouteTableId sets the TransitRouterRouteTableId field's value.
func (s *DescribeTransitRouterRouteEntriesInput) SetTransitRouterRouteTableId(v string) *DescribeTransitRouterRouteEntriesInput {
	s.TransitRouterRouteTableId = &v
	return s
}

type DescribeTransitRouterRouteEntriesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	TotalCount *int32 `type:"int32"`

	TransitRouterRouteEntries []*TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput `type:"list"`

	TransitRouterRouteEntryNextHopResourceID *string `type:"string"`

	TransitRouterRouteEntryNextHopResourceType *string `type:"string"`
}

// String returns the string representation
func (s DescribeTransitRouterRouteEntriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTransitRouterRouteEntriesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetPageNumber(v int32) *DescribeTransitRouterRouteEntriesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetPageSize(v int32) *DescribeTransitRouterRouteEntriesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetTotalCount(v int32) *DescribeTransitRouterRouteEntriesOutput {
	s.TotalCount = &v
	return s
}

// SetTransitRouterRouteEntries sets the TransitRouterRouteEntries field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntries(v []*TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) *DescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntries = v
	return s
}

// SetTransitRouterRouteEntryNextHopResourceID sets the TransitRouterRouteEntryNextHopResourceID field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryNextHopResourceID(v string) *DescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryNextHopResourceID = &v
	return s
}

// SetTransitRouterRouteEntryNextHopResourceType sets the TransitRouterRouteEntryNextHopResourceType field's value.
func (s *DescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryNextHopResourceType(v string) *DescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryNextHopResourceType = &v
	return s
}

type TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput struct {
	_ struct{} `type:"structure"`

	AsPath []*string `type:"list"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	DestinationCidrBlock *string `type:"string"`

	Status *string `type:"string"`

	TransitRouterRouteEntryId *string `type:"string"`

	TransitRouterRouteEntryName *string `type:"string"`

	TransitRouterRouteEntryNextHopId *string `type:"string"`

	TransitRouterRouteEntryNextHopType *string `type:"string"`

	TransitRouterRouteEntryType *string `type:"string"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) GoString() string {
	return s.String()
}

// SetAsPath sets the AsPath field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetAsPath(v []*string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.AsPath = v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetCreationTime(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetDescription(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.Description = &v
	return s
}

// SetDestinationCidrBlock sets the DestinationCidrBlock field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetDestinationCidrBlock(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.DestinationCidrBlock = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetStatus(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.Status = &v
	return s
}

// SetTransitRouterRouteEntryId sets the TransitRouterRouteEntryId field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryId(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryId = &v
	return s
}

// SetTransitRouterRouteEntryName sets the TransitRouterRouteEntryName field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryName(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryName = &v
	return s
}

// SetTransitRouterRouteEntryNextHopId sets the TransitRouterRouteEntryNextHopId field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryNextHopId(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryNextHopId = &v
	return s
}

// SetTransitRouterRouteEntryNextHopType sets the TransitRouterRouteEntryNextHopType field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryNextHopType(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryNextHopType = &v
	return s
}

// SetTransitRouterRouteEntryType sets the TransitRouterRouteEntryType field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetTransitRouterRouteEntryType(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.TransitRouterRouteEntryType = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput) SetUpdateTime(v string) *TransitRouterRouteEntryForDescribeTransitRouterRouteEntriesOutput {
	s.UpdateTime = &v
	return s
}
