// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBDisasterRecoveryInstancesCommon = "DescribeDBDisasterRecoveryInstances"

// DescribeDBDisasterRecoveryInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBDisasterRecoveryInstancesCommon operation. The "output" return
// value will be populated with the DescribeDBDisasterRecoveryInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBDisasterRecoveryInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBDisasterRecoveryInstancesCommon Send returns without error.
//
// See DescribeDBDisasterRecoveryInstancesCommon for more information on using the DescribeDBDisasterRecoveryInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBDisasterRecoveryInstancesCommonRequest method.
//    req, resp := client.DescribeDBDisasterRecoveryInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBDisasterRecoveryInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBDisasterRecoveryInstancesCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBDisasterRecoveryInstancesCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBDisasterRecoveryInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeDBDisasterRecoveryInstancesCommonWithContext is the same as DescribeDBDisasterRecoveryInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBDisasterRecoveryInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBDisasterRecoveryInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBDisasterRecoveryInstances = "DescribeDBDisasterRecoveryInstances"

// DescribeDBDisasterRecoveryInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBDisasterRecoveryInstances operation. The "output" return
// value will be populated with the DescribeDBDisasterRecoveryInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBDisasterRecoveryInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBDisasterRecoveryInstancesCommon Send returns without error.
//
// See DescribeDBDisasterRecoveryInstances for more information on using the DescribeDBDisasterRecoveryInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBDisasterRecoveryInstancesRequest method.
//    req, resp := client.DescribeDBDisasterRecoveryInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstancesRequest(input *DescribeDBDisasterRecoveryInstancesInput) (req *request.Request, output *DescribeDBDisasterRecoveryInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeDBDisasterRecoveryInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBDisasterRecoveryInstancesInput{}
	}

	output = &DescribeDBDisasterRecoveryInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBDisasterRecoveryInstances API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBDisasterRecoveryInstances for usage and error information.
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstances(input *DescribeDBDisasterRecoveryInstancesInput) (*DescribeDBDisasterRecoveryInstancesOutput, error) {
	req, out := c.DescribeDBDisasterRecoveryInstancesRequest(input)
	return out, req.Send()
}

// DescribeDBDisasterRecoveryInstancesWithContext is the same as DescribeDBDisasterRecoveryInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBDisasterRecoveryInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBDisasterRecoveryInstancesWithContext(ctx volcengine.Context, input *DescribeDBDisasterRecoveryInstancesInput, opts ...request.Option) (*DescribeDBDisasterRecoveryInstancesOutput, error) {
	req, out := c.DescribeDBDisasterRecoveryInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBDisasterRecoveryInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBDisasterRecoveryInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBDisasterRecoveryInstancesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBDisasterRecoveryInstancesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBDisasterRecoveryInstancesInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBDisasterRecoveryInstancesInput) SetInstanceId(v string) *DescribeDBDisasterRecoveryInstancesInput {
	s.InstanceId = &v
	return s
}

type DescribeDBDisasterRecoveryInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DisasterRecoveryInstances []*DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput `type:"list" json:",omitempty"`

	DrDtsTaskId *string `type:"string" json:",omitempty"`

	DrDtsTaskName *string `type:"string" json:",omitempty"`

	DrDtsTaskStatus *string `type:"string" json:",omitempty"`

	DrSecondsBehindMaster *int32 `type:"int32" json:",omitempty"`

	MasterInstanceId *string `type:"string" json:",omitempty"`

	MasterInstanceName *string `type:"string" json:",omitempty"`

	MasterRegion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBDisasterRecoveryInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBDisasterRecoveryInstancesOutput) GoString() string {
	return s.String()
}

// SetDisasterRecoveryInstances sets the DisasterRecoveryInstances field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetDisasterRecoveryInstances(v []*DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) *DescribeDBDisasterRecoveryInstancesOutput {
	s.DisasterRecoveryInstances = v
	return s
}

// SetDrDtsTaskId sets the DrDtsTaskId field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetDrDtsTaskId(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.DrDtsTaskId = &v
	return s
}

// SetDrDtsTaskName sets the DrDtsTaskName field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetDrDtsTaskName(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.DrDtsTaskName = &v
	return s
}

// SetDrDtsTaskStatus sets the DrDtsTaskStatus field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetDrDtsTaskStatus(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.DrDtsTaskStatus = &v
	return s
}

// SetDrSecondsBehindMaster sets the DrSecondsBehindMaster field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetDrSecondsBehindMaster(v int32) *DescribeDBDisasterRecoveryInstancesOutput {
	s.DrSecondsBehindMaster = &v
	return s
}

// SetMasterInstanceId sets the MasterInstanceId field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetMasterInstanceId(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.MasterInstanceId = &v
	return s
}

// SetMasterInstanceName sets the MasterInstanceName field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetMasterInstanceName(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.MasterInstanceName = &v
	return s
}

// SetMasterRegion sets the MasterRegion field's value.
func (s *DescribeDBDisasterRecoveryInstancesOutput) SetMasterRegion(v string) *DescribeDBDisasterRecoveryInstancesOutput {
	s.MasterRegion = &v
	return s
}

type DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DtsTaskId *string `type:"string" json:",omitempty"`

	DtsTaskName *string `type:"string" json:",omitempty"`

	DtsTaskStatus *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	SecondsBehindMaster *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) GoString() string {
	return s.String()
}

// SetDtsTaskId sets the DtsTaskId field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetDtsTaskId(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.DtsTaskId = &v
	return s
}

// SetDtsTaskName sets the DtsTaskName field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetDtsTaskName(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.DtsTaskName = &v
	return s
}

// SetDtsTaskStatus sets the DtsTaskStatus field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetDtsTaskStatus(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.DtsTaskStatus = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetInstanceId(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetInstanceName(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetRegion(v string) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.Region = &v
	return s
}

// SetSecondsBehindMaster sets the SecondsBehindMaster field's value.
func (s *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput) SetSecondsBehindMaster(v int32) *DisasterRecoveryInstanceForDescribeDBDisasterRecoveryInstancesOutput {
	s.SecondsBehindMaster = &v
	return s
}
