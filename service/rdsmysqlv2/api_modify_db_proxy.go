// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBProxyCommon = "ModifyDBProxy"

// ModifyDBProxyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBProxyCommon operation. The "output" return
// value will be populated with the ModifyDBProxyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBProxyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBProxyCommon Send returns without error.
//
// See ModifyDBProxyCommon for more information on using the ModifyDBProxyCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBProxyCommonRequest method.
//    req, resp := client.ModifyDBProxyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBProxyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBProxyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBProxyCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBProxyCommon for usage and error information.
func (c *RDSMYSQLV2) ModifyDBProxyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBProxyCommonRequest(input)
	return out, req.Send()
}

// ModifyDBProxyCommonWithContext is the same as ModifyDBProxyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBProxyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBProxyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBProxyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBProxy = "ModifyDBProxy"

// ModifyDBProxyRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBProxy operation. The "output" return
// value will be populated with the ModifyDBProxyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBProxyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBProxyCommon Send returns without error.
//
// See ModifyDBProxy for more information on using the ModifyDBProxy
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBProxyRequest method.
//    req, resp := client.ModifyDBProxyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBProxyRequest(input *ModifyDBProxyInput) (req *request.Request, output *ModifyDBProxyOutput) {
	op := &request.Operation{
		Name:       opModifyDBProxy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBProxyInput{}
	}

	output = &ModifyDBProxyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBProxy API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBProxy for usage and error information.
func (c *RDSMYSQLV2) ModifyDBProxy(input *ModifyDBProxyInput) (*ModifyDBProxyOutput, error) {
	req, out := c.ModifyDBProxyRequest(input)
	return out, req.Send()
}

// ModifyDBProxyWithContext is the same as ModifyDBProxy with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBProxy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBProxyWithContext(ctx volcengine.Context, input *ModifyDBProxyInput, opts ...request.Option) (*ModifyDBProxyOutput, error) {
	req, out := c.ModifyDBProxyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBProxyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConvertDefaultEndpoint *bool `type:"boolean" json:",omitempty"`

	EnableDBProxy *bool `type:"boolean" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	ProxyNodeCustom *ProxyNodeCustomForModifyDBProxyInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ModifyDBProxyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBProxyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBProxyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBProxyInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConvertDefaultEndpoint sets the ConvertDefaultEndpoint field's value.
func (s *ModifyDBProxyInput) SetConvertDefaultEndpoint(v bool) *ModifyDBProxyInput {
	s.ConvertDefaultEndpoint = &v
	return s
}

// SetEnableDBProxy sets the EnableDBProxy field's value.
func (s *ModifyDBProxyInput) SetEnableDBProxy(v bool) *ModifyDBProxyInput {
	s.EnableDBProxy = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBProxyInput) SetInstanceId(v string) *ModifyDBProxyInput {
	s.InstanceId = &v
	return s
}

// SetProxyNodeCustom sets the ProxyNodeCustom field's value.
func (s *ModifyDBProxyInput) SetProxyNodeCustom(v *ProxyNodeCustomForModifyDBProxyInput) *ModifyDBProxyInput {
	s.ProxyNodeCustom = v
	return s
}

type ModifyDBProxyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyDBProxyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBProxyOutput) GoString() string {
	return s.String()
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyDBProxyOutput) SetOrderId(v string) *ModifyDBProxyOutput {
	s.OrderId = &v
	return s
}

type ProxyNodeCustomForModifyDBProxyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CpuNum *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ProxyNodeCustomForModifyDBProxyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProxyNodeCustomForModifyDBProxyInput) GoString() string {
	return s.String()
}

// SetCpuNum sets the CpuNum field's value.
func (s *ProxyNodeCustomForModifyDBProxyInput) SetCpuNum(v int32) *ProxyNodeCustomForModifyDBProxyInput {
	s.CpuNum = &v
	return s
}
