// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateDrDBInstanceCommon = "CreateDrDBInstance"

// CreateDrDBInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDrDBInstanceCommon operation. The "output" return
// value will be populated with the CreateDrDBInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDrDBInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDrDBInstanceCommon Send returns without error.
//
// See CreateDrDBInstanceCommon for more information on using the CreateDrDBInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateDrDBInstanceCommonRequest method.
//    req, resp := client.CreateDrDBInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) CreateDrDBInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateDrDBInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDrDBInstanceCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation CreateDrDBInstanceCommon for usage and error information.
func (c *RDSMYSQLV2) CreateDrDBInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateDrDBInstanceCommonRequest(input)
	return out, req.Send()
}

// CreateDrDBInstanceCommonWithContext is the same as CreateDrDBInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDrDBInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) CreateDrDBInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateDrDBInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateDrDBInstance = "CreateDrDBInstance"

// CreateDrDBInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateDrDBInstance operation. The "output" return
// value will be populated with the CreateDrDBInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateDrDBInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateDrDBInstanceCommon Send returns without error.
//
// See CreateDrDBInstance for more information on using the CreateDrDBInstance
// API call, and error handling.
//
//    // Example sending a request using the CreateDrDBInstanceRequest method.
//    req, resp := client.CreateDrDBInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) CreateDrDBInstanceRequest(input *CreateDrDBInstanceInput) (req *request.Request, output *CreateDrDBInstanceOutput) {
	op := &request.Operation{
		Name:       opCreateDrDBInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateDrDBInstanceInput{}
	}

	output = &CreateDrDBInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateDrDBInstance API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation CreateDrDBInstance for usage and error information.
func (c *RDSMYSQLV2) CreateDrDBInstance(input *CreateDrDBInstanceInput) (*CreateDrDBInstanceOutput, error) {
	req, out := c.CreateDrDBInstanceRequest(input)
	return out, req.Send()
}

// CreateDrDBInstanceWithContext is the same as CreateDrDBInstance with the addition of
// the ability to pass a context and additional request options.
//
// See CreateDrDBInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) CreateDrDBInstanceWithContext(ctx volcengine.Context, input *CreateDrDBInstanceInput, opts ...request.Option) (*CreateDrDBInstanceOutput, error) {
	req, out := c.CreateDrDBInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AutoStorageScalingConfigForCreateDrDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableStorageAutoScale *bool `type:"boolean" json:",omitempty"`

	StorageThreshold *int32 `type:"int32" json:",omitempty"`

	StorageUpperBound *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s AutoStorageScalingConfigForCreateDrDBInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AutoStorageScalingConfigForCreateDrDBInstanceInput) GoString() string {
	return s.String()
}

// SetEnableStorageAutoScale sets the EnableStorageAutoScale field's value.
func (s *AutoStorageScalingConfigForCreateDrDBInstanceInput) SetEnableStorageAutoScale(v bool) *AutoStorageScalingConfigForCreateDrDBInstanceInput {
	s.EnableStorageAutoScale = &v
	return s
}

// SetStorageThreshold sets the StorageThreshold field's value.
func (s *AutoStorageScalingConfigForCreateDrDBInstanceInput) SetStorageThreshold(v int32) *AutoStorageScalingConfigForCreateDrDBInstanceInput {
	s.StorageThreshold = &v
	return s
}

// SetStorageUpperBound sets the StorageUpperBound field's value.
func (s *AutoStorageScalingConfigForCreateDrDBInstanceInput) SetStorageUpperBound(v int32) *AutoStorageScalingConfigForCreateDrDBInstanceInput {
	s.StorageUpperBound = &v
	return s
}

type CreateDrDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoStorageScalingConfig *AutoStorageScalingConfigForCreateDrDBInstanceInput `type:"structure" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	// MasterInstanceId is a required field
	MasterInstanceId *string `type:"string" json:",omitempty" required:"true"`

	// MasterRegion is a required field
	MasterRegion *string `type:"string" json:",omitempty" required:"true"`

	NodeInfo []*NodeInfoForCreateDrDBInstanceInput `type:"list" json:",omitempty"`

	// StorageSpace is a required field
	StorageSpace *int32 `type:"int32" json:",omitempty" required:"true"`

	// SubnetId is a required field
	SubnetId *string `type:"string" json:",omitempty" required:"true"`

	// VpcId is a required field
	VpcId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateDrDBInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDrDBInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateDrDBInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateDrDBInstanceInput"}
	if s.MasterInstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("MasterInstanceId"))
	}
	if s.MasterRegion == nil {
		invalidParams.Add(request.NewErrParamRequired("MasterRegion"))
	}
	if s.StorageSpace == nil {
		invalidParams.Add(request.NewErrParamRequired("StorageSpace"))
	}
	if s.SubnetId == nil {
		invalidParams.Add(request.NewErrParamRequired("SubnetId"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoStorageScalingConfig sets the AutoStorageScalingConfig field's value.
func (s *CreateDrDBInstanceInput) SetAutoStorageScalingConfig(v *AutoStorageScalingConfigForCreateDrDBInstanceInput) *CreateDrDBInstanceInput {
	s.AutoStorageScalingConfig = v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *CreateDrDBInstanceInput) SetDeletionProtection(v string) *CreateDrDBInstanceInput {
	s.DeletionProtection = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *CreateDrDBInstanceInput) SetInstanceName(v string) *CreateDrDBInstanceInput {
	s.InstanceName = &v
	return s
}

// SetMasterInstanceId sets the MasterInstanceId field's value.
func (s *CreateDrDBInstanceInput) SetMasterInstanceId(v string) *CreateDrDBInstanceInput {
	s.MasterInstanceId = &v
	return s
}

// SetMasterRegion sets the MasterRegion field's value.
func (s *CreateDrDBInstanceInput) SetMasterRegion(v string) *CreateDrDBInstanceInput {
	s.MasterRegion = &v
	return s
}

// SetNodeInfo sets the NodeInfo field's value.
func (s *CreateDrDBInstanceInput) SetNodeInfo(v []*NodeInfoForCreateDrDBInstanceInput) *CreateDrDBInstanceInput {
	s.NodeInfo = v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *CreateDrDBInstanceInput) SetStorageSpace(v int32) *CreateDrDBInstanceInput {
	s.StorageSpace = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *CreateDrDBInstanceInput) SetSubnetId(v string) *CreateDrDBInstanceInput {
	s.SubnetId = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *CreateDrDBInstanceInput) SetVpcId(v string) *CreateDrDBInstanceInput {
	s.VpcId = &v
	return s
}

type CreateDrDBInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateDrDBInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateDrDBInstanceOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateDrDBInstanceOutput) SetInstanceId(v string) *CreateDrDBInstanceOutput {
	s.InstanceId = &v
	return s
}

type NodeInfoForCreateDrDBInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	NodeId *string `type:"string" json:",omitempty"`

	NodeOperateType *string `type:"string" json:",omitempty"`

	NodeSpec *string `type:"string" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NodeInfoForCreateDrDBInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeInfoForCreateDrDBInstanceInput) GoString() string {
	return s.String()
}

// SetNodeId sets the NodeId field's value.
func (s *NodeInfoForCreateDrDBInstanceInput) SetNodeId(v string) *NodeInfoForCreateDrDBInstanceInput {
	s.NodeId = &v
	return s
}

// SetNodeOperateType sets the NodeOperateType field's value.
func (s *NodeInfoForCreateDrDBInstanceInput) SetNodeOperateType(v string) *NodeInfoForCreateDrDBInstanceInput {
	s.NodeOperateType = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *NodeInfoForCreateDrDBInstanceInput) SetNodeSpec(v string) *NodeInfoForCreateDrDBInstanceInput {
	s.NodeSpec = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeInfoForCreateDrDBInstanceInput) SetNodeType(v string) *NodeInfoForCreateDrDBInstanceInput {
	s.NodeType = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *NodeInfoForCreateDrDBInstanceInput) SetZoneId(v string) *NodeInfoForCreateDrDBInstanceInput {
	s.ZoneId = &v
	return s
}
