// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceChargeDetailCommon = "DescribeDBInstanceChargeDetail"

// DescribeDBInstanceChargeDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceChargeDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceChargeDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceChargeDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceChargeDetailCommon Send returns without error.
//
// See DescribeDBInstanceChargeDetailCommon for more information on using the DescribeDBInstanceChargeDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceChargeDetailCommonRequest method.
//    req, resp := client.DescribeDBInstanceChargeDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceChargeDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceChargeDetailCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceChargeDetailCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceChargeDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceChargeDetailCommonWithContext is the same as DescribeDBInstanceChargeDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceChargeDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceChargeDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceChargeDetail = "DescribeDBInstanceChargeDetail"

// DescribeDBInstanceChargeDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceChargeDetail operation. The "output" return
// value will be populated with the DescribeDBInstanceChargeDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceChargeDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceChargeDetailCommon Send returns without error.
//
// See DescribeDBInstanceChargeDetail for more information on using the DescribeDBInstanceChargeDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceChargeDetailRequest method.
//    req, resp := client.DescribeDBInstanceChargeDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetailRequest(input *DescribeDBInstanceChargeDetailInput) (req *request.Request, output *DescribeDBInstanceChargeDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceChargeDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceChargeDetailInput{}
	}

	output = &DescribeDBInstanceChargeDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceChargeDetail API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceChargeDetail for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetail(input *DescribeDBInstanceChargeDetailInput) (*DescribeDBInstanceChargeDetailOutput, error) {
	req, out := c.DescribeDBInstanceChargeDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceChargeDetailWithContext is the same as DescribeDBInstanceChargeDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceChargeDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceChargeDetailWithContext(ctx volcengine.Context, input *DescribeDBInstanceChargeDetailInput, opts ...request.Option) (*DescribeDBInstanceChargeDetailOutput, error) {
	req, out := c.DescribeDBInstanceChargeDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeDetailForDescribeDBInstanceChargeDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeEndTime *string `type:"string" json:",omitempty"`

	ChargeStartTime *string `type:"string" json:",omitempty"`

	ChargeStatus *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	OverdueReclaimTime *string `type:"string" json:",omitempty"`

	OverdueTime *string `type:"string" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`

	PeriodUnit *string `type:"string" json:",omitempty"`

	TempModifyEndTime *string `type:"string" json:",omitempty"`

	TempModifyStartTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ChargeDetailForDescribeDBInstanceChargeDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeDetailForDescribeDBInstanceChargeDetailOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetAutoRenew(v bool) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeEndTime sets the ChargeEndTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetChargeEndTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.ChargeEndTime = &v
	return s
}

// SetChargeStartTime sets the ChargeStartTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetChargeStartTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.ChargeStartTime = &v
	return s
}

// SetChargeStatus sets the ChargeStatus field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetChargeStatus(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.ChargeStatus = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetChargeType(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.ChargeType = &v
	return s
}

// SetOverdueReclaimTime sets the OverdueReclaimTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetOverdueReclaimTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.OverdueReclaimTime = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetOverdueTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.OverdueTime = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetPeriod(v int32) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.Period = &v
	return s
}

// SetPeriodUnit sets the PeriodUnit field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetPeriodUnit(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.PeriodUnit = &v
	return s
}

// SetTempModifyEndTime sets the TempModifyEndTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetTempModifyEndTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.TempModifyEndTime = &v
	return s
}

// SetTempModifyStartTime sets the TempModifyStartTime field's value.
func (s *ChargeDetailForDescribeDBInstanceChargeDetailOutput) SetTempModifyStartTime(v string) *ChargeDetailForDescribeDBInstanceChargeDetailOutput {
	s.TempModifyStartTime = &v
	return s
}

type DescribeDBInstanceChargeDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceChargeDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceChargeDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceChargeDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceChargeDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceChargeDetailInput) SetInstanceId(v string) *DescribeDBInstanceChargeDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceChargeDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ChargeDetail *ChargeDetailForDescribeDBInstanceChargeDetailOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceChargeDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceChargeDetailOutput) GoString() string {
	return s.String()
}

// SetChargeDetail sets the ChargeDetail field's value.
func (s *DescribeDBInstanceChargeDetailOutput) SetChargeDetail(v *ChargeDetailForDescribeDBInstanceChargeDetailOutput) *DescribeDBInstanceChargeDetailOutput {
	s.ChargeDetail = v
	return s
}
