// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBProxyCommon = "DescribeDBProxy"

// DescribeDBProxyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBProxyCommon operation. The "output" return
// value will be populated with the DescribeDBProxyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBProxyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBProxyCommon Send returns without error.
//
// See DescribeDBProxyCommon for more information on using the DescribeDBProxyCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBProxyCommonRequest method.
//    req, resp := client.DescribeDBProxyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBProxyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBProxyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBProxyCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBProxyCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBProxyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBProxyCommonRequest(input)
	return out, req.Send()
}

// DescribeDBProxyCommonWithContext is the same as DescribeDBProxyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBProxyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBProxyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBProxyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBProxy = "DescribeDBProxy"

// DescribeDBProxyRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBProxy operation. The "output" return
// value will be populated with the DescribeDBProxyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBProxyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBProxyCommon Send returns without error.
//
// See DescribeDBProxy for more information on using the DescribeDBProxy
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBProxyRequest method.
//    req, resp := client.DescribeDBProxyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBProxyRequest(input *DescribeDBProxyInput) (req *request.Request, output *DescribeDBProxyOutput) {
	op := &request.Operation{
		Name:       opDescribeDBProxy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBProxyInput{}
	}

	output = &DescribeDBProxyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBProxy API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBProxy for usage and error information.
func (c *RDSMYSQLV2) DescribeDBProxy(input *DescribeDBProxyInput) (*DescribeDBProxyOutput, error) {
	req, out := c.DescribeDBProxyRequest(input)
	return out, req.Send()
}

// DescribeDBProxyWithContext is the same as DescribeDBProxy with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBProxy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBProxyWithContext(ctx volcengine.Context, input *DescribeDBProxyInput, opts ...request.Option) (*DescribeDBProxyOutput, error) {
	req, out := c.DescribeDBProxyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBProxyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBProxyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBProxyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBProxyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBProxyInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBProxyInput) SetInstanceId(v string) *DescribeDBProxyInput {
	s.InstanceId = &v
	return s
}

type DescribeDBProxyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ProxyDetail *ProxyDetailForDescribeDBProxyOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBProxyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBProxyOutput) GoString() string {
	return s.String()
}

// SetProxyDetail sets the ProxyDetail field's value.
func (s *DescribeDBProxyOutput) SetProxyDetail(v *ProxyDetailForDescribeDBProxyOutput) *DescribeDBProxyOutput {
	s.ProxyDetail = v
	return s
}

type ProxyDetailForDescribeDBProxyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DBProxyStatus *string `type:"string" json:",omitempty"`

	ProxyResourceInfo *ProxyResourceInfoForDescribeDBProxyOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ProxyDetailForDescribeDBProxyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProxyDetailForDescribeDBProxyOutput) GoString() string {
	return s.String()
}

// SetDBProxyStatus sets the DBProxyStatus field's value.
func (s *ProxyDetailForDescribeDBProxyOutput) SetDBProxyStatus(v string) *ProxyDetailForDescribeDBProxyOutput {
	s.DBProxyStatus = &v
	return s
}

// SetProxyResourceInfo sets the ProxyResourceInfo field's value.
func (s *ProxyDetailForDescribeDBProxyOutput) SetProxyResourceInfo(v *ProxyResourceInfoForDescribeDBProxyOutput) *ProxyDetailForDescribeDBProxyOutput {
	s.ProxyResourceInfo = v
	return s
}

type ProxyResourceInfoForDescribeDBProxyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CurrentProxyCpuNum *int32 `type:"int32" json:",omitempty"`

	MaxProxyCpuNum *int32 `type:"int32" json:",omitempty"`

	MinProxyCpuNum *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ProxyResourceInfoForDescribeDBProxyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProxyResourceInfoForDescribeDBProxyOutput) GoString() string {
	return s.String()
}

// SetCurrentProxyCpuNum sets the CurrentProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyOutput) SetCurrentProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyOutput {
	s.CurrentProxyCpuNum = &v
	return s
}

// SetMaxProxyCpuNum sets the MaxProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyOutput) SetMaxProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyOutput {
	s.MaxProxyCpuNum = &v
	return s
}

// SetMinProxyCpuNum sets the MinProxyCpuNum field's value.
func (s *ProxyResourceInfoForDescribeDBProxyOutput) SetMinProxyCpuNum(v int32) *ProxyResourceInfoForDescribeDBProxyOutput {
	s.MinProxyCpuNum = &v
	return s
}
