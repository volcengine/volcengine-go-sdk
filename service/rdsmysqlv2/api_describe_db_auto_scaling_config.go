// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBAutoScalingConfigCommon = "DescribeDBAutoScalingConfig"

// DescribeDBAutoScalingConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBAutoScalingConfigCommon operation. The "output" return
// value will be populated with the DescribeDBAutoScalingConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBAutoScalingConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBAutoScalingConfigCommon Send returns without error.
//
// See DescribeDBAutoScalingConfigCommon for more information on using the DescribeDBAutoScalingConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBAutoScalingConfigCommonRequest method.
//    req, resp := client.DescribeDBAutoScalingConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBAutoScalingConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBAutoScalingConfigCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBAutoScalingConfigCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBAutoScalingConfigCommonRequest(input)
	return out, req.Send()
}

// DescribeDBAutoScalingConfigCommonWithContext is the same as DescribeDBAutoScalingConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBAutoScalingConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBAutoScalingConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBAutoScalingConfig = "DescribeDBAutoScalingConfig"

// DescribeDBAutoScalingConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBAutoScalingConfig operation. The "output" return
// value will be populated with the DescribeDBAutoScalingConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBAutoScalingConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBAutoScalingConfigCommon Send returns without error.
//
// See DescribeDBAutoScalingConfig for more information on using the DescribeDBAutoScalingConfig
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBAutoScalingConfigRequest method.
//    req, resp := client.DescribeDBAutoScalingConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfigRequest(input *DescribeDBAutoScalingConfigInput) (req *request.Request, output *DescribeDBAutoScalingConfigOutput) {
	op := &request.Operation{
		Name:       opDescribeDBAutoScalingConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBAutoScalingConfigInput{}
	}

	output = &DescribeDBAutoScalingConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBAutoScalingConfig API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBAutoScalingConfig for usage and error information.
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfig(input *DescribeDBAutoScalingConfigInput) (*DescribeDBAutoScalingConfigOutput, error) {
	req, out := c.DescribeDBAutoScalingConfigRequest(input)
	return out, req.Send()
}

// DescribeDBAutoScalingConfigWithContext is the same as DescribeDBAutoScalingConfig with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBAutoScalingConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBAutoScalingConfigWithContext(ctx volcengine.Context, input *DescribeDBAutoScalingConfigInput, opts ...request.Option) (*DescribeDBAutoScalingConfigOutput, error) {
	req, out := c.DescribeDBAutoScalingConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDBAutoScalingConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBAutoScalingConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBAutoScalingConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBAutoScalingConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBAutoScalingConfigInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBAutoScalingConfigInput) SetInstanceId(v string) *DescribeDBAutoScalingConfigInput {
	s.InstanceId = &v
	return s
}

type DescribeDBAutoScalingConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	StorageConfig *StorageConfigForDescribeDBAutoScalingConfigOutput `type:"structure" json:",omitempty"`

	StorageMaxCapacity *int32 `type:"int32" json:",omitempty"`

	StorageMaxTriggerThreshold *int32 `type:"int32" json:",omitempty"`

	StorageMinCapacity *int32 `type:"int32" json:",omitempty"`

	StorageMinTriggerThreshold *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBAutoScalingConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBAutoScalingConfigOutput) GoString() string {
	return s.String()
}

// SetStorageConfig sets the StorageConfig field's value.
func (s *DescribeDBAutoScalingConfigOutput) SetStorageConfig(v *StorageConfigForDescribeDBAutoScalingConfigOutput) *DescribeDBAutoScalingConfigOutput {
	s.StorageConfig = v
	return s
}

// SetStorageMaxCapacity sets the StorageMaxCapacity field's value.
func (s *DescribeDBAutoScalingConfigOutput) SetStorageMaxCapacity(v int32) *DescribeDBAutoScalingConfigOutput {
	s.StorageMaxCapacity = &v
	return s
}

// SetStorageMaxTriggerThreshold sets the StorageMaxTriggerThreshold field's value.
func (s *DescribeDBAutoScalingConfigOutput) SetStorageMaxTriggerThreshold(v int32) *DescribeDBAutoScalingConfigOutput {
	s.StorageMaxTriggerThreshold = &v
	return s
}

// SetStorageMinCapacity sets the StorageMinCapacity field's value.
func (s *DescribeDBAutoScalingConfigOutput) SetStorageMinCapacity(v int32) *DescribeDBAutoScalingConfigOutput {
	s.StorageMinCapacity = &v
	return s
}

// SetStorageMinTriggerThreshold sets the StorageMinTriggerThreshold field's value.
func (s *DescribeDBAutoScalingConfigOutput) SetStorageMinTriggerThreshold(v int32) *DescribeDBAutoScalingConfigOutput {
	s.StorageMinTriggerThreshold = &v
	return s
}

type StorageConfigForDescribeDBAutoScalingConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableStorageAutoScale *bool `type:"boolean" json:",omitempty"`

	StorageThreshold *int32 `type:"int32" json:",omitempty"`

	StorageUpperBound *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s StorageConfigForDescribeDBAutoScalingConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageConfigForDescribeDBAutoScalingConfigOutput) GoString() string {
	return s.String()
}

// SetEnableStorageAutoScale sets the EnableStorageAutoScale field's value.
func (s *StorageConfigForDescribeDBAutoScalingConfigOutput) SetEnableStorageAutoScale(v bool) *StorageConfigForDescribeDBAutoScalingConfigOutput {
	s.EnableStorageAutoScale = &v
	return s
}

// SetStorageThreshold sets the StorageThreshold field's value.
func (s *StorageConfigForDescribeDBAutoScalingConfigOutput) SetStorageThreshold(v int32) *StorageConfigForDescribeDBAutoScalingConfigOutput {
	s.StorageThreshold = &v
	return s
}

// SetStorageUpperBound sets the StorageUpperBound field's value.
func (s *StorageConfigForDescribeDBAutoScalingConfigOutput) SetStorageUpperBound(v int32) *StorageConfigForDescribeDBAutoScalingConfigOutput {
	s.StorageUpperBound = &v
	return s
}
