// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceAttributeCommon = "DescribeDBInstanceAttribute"

// DescribeDBInstanceAttributeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceAttributeCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceAttributeCommon Send returns without error.
//
// See DescribeDBInstanceAttributeCommon for more information on using the DescribeDBInstanceAttributeCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceAttributeCommonRequest method.
//    req, resp := client.DescribeDBInstanceAttributeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceAttributeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceAttributeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceAttributeCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceAttributeCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceAttributeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceAttributeCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceAttributeCommonWithContext is the same as DescribeDBInstanceAttributeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceAttributeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceAttributeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceAttributeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceAttribute = "DescribeDBInstanceAttribute"

// DescribeDBInstanceAttributeRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceAttribute operation. The "output" return
// value will be populated with the DescribeDBInstanceAttributeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceAttributeCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceAttributeCommon Send returns without error.
//
// See DescribeDBInstanceAttribute for more information on using the DescribeDBInstanceAttribute
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceAttributeRequest method.
//    req, resp := client.DescribeDBInstanceAttributeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDBInstanceAttributeRequest(input *DescribeDBInstanceAttributeInput) (req *request.Request, output *DescribeDBInstanceAttributeOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceAttribute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceAttributeInput{}
	}

	output = &DescribeDBInstanceAttributeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceAttribute API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDBInstanceAttribute for usage and error information.
func (c *RDSMYSQLV2) DescribeDBInstanceAttribute(input *DescribeDBInstanceAttributeInput) (*DescribeDBInstanceAttributeOutput, error) {
	req, out := c.DescribeDBInstanceAttributeRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceAttributeWithContext is the same as DescribeDBInstanceAttribute with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceAttribute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDBInstanceAttributeWithContext(ctx volcengine.Context, input *DescribeDBInstanceAttributeInput, opts ...request.Option) (*DescribeDBInstanceAttributeOutput, error) {
	req, out := c.DescribeDBInstanceAttributeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DBInstanceAttributeForDescribeDBInstanceAttributeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowListVersion *string `type:"string" json:",omitempty"`

	AutoUpgradeMinorVersion *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	CurrentKernelVersion *string `type:"string" json:",omitempty"`

	DBEngineVersion *string `type:"string" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	HasDisasterRecoveryInstances *bool `type:"boolean" json:",omitempty"`

	HasGreenInstance *bool `type:"boolean" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceStatus *string `type:"string" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	LowerCaseTableNames *string `type:"string" json:",omitempty"`

	MaintenanceWindow *MaintenanceWindowForDescribeDBInstanceAttributeOutput `type:"structure" json:",omitempty"`

	Memory *int32 `type:"int32" json:",omitempty"`

	NodeNumber *string `type:"string" json:",omitempty"`

	NodeSpec *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	StorageSpace *int64 `type:"int64" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeDBInstanceAttributeOutput `type:"list" json:",omitempty"`

	TimeZone *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	VCPU *int32 `type:"int32" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DBInstanceAttributeForDescribeDBInstanceAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DBInstanceAttributeForDescribeDBInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetAllowListVersion sets the AllowListVersion field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetAllowListVersion(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.AllowListVersion = &v
	return s
}

// SetAutoUpgradeMinorVersion sets the AutoUpgradeMinorVersion field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetAutoUpgradeMinorVersion(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.AutoUpgradeMinorVersion = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetCreateTime(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.CreateTime = &v
	return s
}

// SetCurrentKernelVersion sets the CurrentKernelVersion field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetCurrentKernelVersion(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.CurrentKernelVersion = &v
	return s
}

// SetDBEngineVersion sets the DBEngineVersion field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetDBEngineVersion(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.DBEngineVersion = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetDeletionProtection(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.DeletionProtection = &v
	return s
}

// SetHasDisasterRecoveryInstances sets the HasDisasterRecoveryInstances field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetHasDisasterRecoveryInstances(v bool) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.HasDisasterRecoveryInstances = &v
	return s
}

// SetHasGreenInstance sets the HasGreenInstance field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetHasGreenInstance(v bool) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.HasGreenInstance = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetInstanceId(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetInstanceName(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceStatus sets the InstanceStatus field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetInstanceStatus(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.InstanceStatus = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetInstanceType(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.InstanceType = &v
	return s
}

// SetLowerCaseTableNames sets the LowerCaseTableNames field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetLowerCaseTableNames(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.LowerCaseTableNames = &v
	return s
}

// SetMaintenanceWindow sets the MaintenanceWindow field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetMaintenanceWindow(v *MaintenanceWindowForDescribeDBInstanceAttributeOutput) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.MaintenanceWindow = v
	return s
}

// SetMemory sets the Memory field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetMemory(v int32) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.Memory = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetNodeNumber(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.NodeNumber = &v
	return s
}

// SetNodeSpec sets the NodeSpec field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetNodeSpec(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.NodeSpec = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetProjectName(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetRegionId(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.RegionId = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetStorageSpace(v int64) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.StorageSpace = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetStorageType(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.StorageType = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetSubnetId(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetTags(v []*TagForDescribeDBInstanceAttributeOutput) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.Tags = v
	return s
}

// SetTimeZone sets the TimeZone field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetTimeZone(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.TimeZone = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetUpdateTime(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.UpdateTime = &v
	return s
}

// SetVCPU sets the VCPU field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetVCPU(v int32) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.VCPU = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetVpcId(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) SetZoneId(v string) *DBInstanceAttributeForDescribeDBInstanceAttributeOutput {
	s.ZoneId = &v
	return s
}

type DescribeDBInstanceAttributeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceAttributeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceAttributeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceAttributeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceAttributeInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceAttributeInput) SetInstanceId(v string) *DescribeDBInstanceAttributeInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceAttributeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DBInstanceAttribute *DBInstanceAttributeForDescribeDBInstanceAttributeOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetDBInstanceAttribute sets the DBInstanceAttribute field's value.
func (s *DescribeDBInstanceAttributeOutput) SetDBInstanceAttribute(v *DBInstanceAttributeForDescribeDBInstanceAttributeOutput) *DescribeDBInstanceAttributeOutput {
	s.DBInstanceAttribute = v
	return s
}

type MaintenanceWindowForDescribeDBInstanceAttributeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DayKind *string `type:"string" json:",omitempty"`

	DayOfWeek []*string `type:"list" json:",omitempty"`

	MaintenanceTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MaintenanceWindowForDescribeDBInstanceAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MaintenanceWindowForDescribeDBInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetDayKind sets the DayKind field's value.
func (s *MaintenanceWindowForDescribeDBInstanceAttributeOutput) SetDayKind(v string) *MaintenanceWindowForDescribeDBInstanceAttributeOutput {
	s.DayKind = &v
	return s
}

// SetDayOfWeek sets the DayOfWeek field's value.
func (s *MaintenanceWindowForDescribeDBInstanceAttributeOutput) SetDayOfWeek(v []*string) *MaintenanceWindowForDescribeDBInstanceAttributeOutput {
	s.DayOfWeek = v
	return s
}

// SetMaintenanceTime sets the MaintenanceTime field's value.
func (s *MaintenanceWindowForDescribeDBInstanceAttributeOutput) SetMaintenanceTime(v string) *MaintenanceWindowForDescribeDBInstanceAttributeOutput {
	s.MaintenanceTime = &v
	return s
}

type TagForDescribeDBInstanceAttributeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeDBInstanceAttributeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeDBInstanceAttributeOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeDBInstanceAttributeOutput) SetKey(v string) *TagForDescribeDBInstanceAttributeOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeDBInstanceAttributeOutput) SetValue(v string) *TagForDescribeDBInstanceAttributeOutput {
	s.Value = &v
	return s
}
