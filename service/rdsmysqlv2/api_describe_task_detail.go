// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeTaskDetailCommon = "DescribeTaskDetail"

// DescribeTaskDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTaskDetailCommon operation. The "output" return
// value will be populated with the DescribeTaskDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTaskDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTaskDetailCommon Send returns without error.
//
// See DescribeTaskDetailCommon for more information on using the DescribeTaskDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeTaskDetailCommonRequest method.
//    req, resp := client.DescribeTaskDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeTaskDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeTaskDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTaskDetailCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeTaskDetailCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeTaskDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeTaskDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeTaskDetailCommonWithContext is the same as DescribeTaskDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTaskDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeTaskDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeTaskDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeTaskDetail = "DescribeTaskDetail"

// DescribeTaskDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeTaskDetail operation. The "output" return
// value will be populated with the DescribeTaskDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeTaskDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeTaskDetailCommon Send returns without error.
//
// See DescribeTaskDetail for more information on using the DescribeTaskDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeTaskDetailRequest method.
//    req, resp := client.DescribeTaskDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeTaskDetailRequest(input *DescribeTaskDetailInput) (req *request.Request, output *DescribeTaskDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeTaskDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeTaskDetailInput{}
	}

	output = &DescribeTaskDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeTaskDetail API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeTaskDetail for usage and error information.
func (c *RDSMYSQLV2) DescribeTaskDetail(input *DescribeTaskDetailInput) (*DescribeTaskDetailOutput, error) {
	req, out := c.DescribeTaskDetailRequest(input)
	return out, req.Send()
}

// DescribeTaskDetailWithContext is the same as DescribeTaskDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeTaskDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeTaskDetailWithContext(ctx volcengine.Context, input *DescribeTaskDetailInput, opts ...request.Option) (*DescribeTaskDetailOutput, error) {
	req, out := c.DescribeTaskDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CheckDetailForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Impact *string `type:"string" json:",omitempty"`

	Issue *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CheckDetailForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckDetailForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetImpact sets the Impact field's value.
func (s *CheckDetailForDescribeTaskDetailOutput) SetImpact(v string) *CheckDetailForDescribeTaskDetailOutput {
	s.Impact = &v
	return s
}

// SetIssue sets the Issue field's value.
func (s *CheckDetailForDescribeTaskDetailOutput) SetIssue(v string) *CheckDetailForDescribeTaskDetailOutput {
	s.Issue = &v
	return s
}

type CheckItemForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CheckDetail *CheckDetailForDescribeTaskDetailOutput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	ItemName *string `type:"string" json:",omitempty"`

	RiskLevel *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CheckItemForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckItemForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetCheckDetail sets the CheckDetail field's value.
func (s *CheckItemForDescribeTaskDetailOutput) SetCheckDetail(v *CheckDetailForDescribeTaskDetailOutput) *CheckItemForDescribeTaskDetailOutput {
	s.CheckDetail = v
	return s
}

// SetDescription sets the Description field's value.
func (s *CheckItemForDescribeTaskDetailOutput) SetDescription(v string) *CheckItemForDescribeTaskDetailOutput {
	s.Description = &v
	return s
}

// SetItemName sets the ItemName field's value.
func (s *CheckItemForDescribeTaskDetailOutput) SetItemName(v string) *CheckItemForDescribeTaskDetailOutput {
	s.ItemName = &v
	return s
}

// SetRiskLevel sets the RiskLevel field's value.
func (s *CheckItemForDescribeTaskDetailOutput) SetRiskLevel(v string) *CheckItemForDescribeTaskDetailOutput {
	s.RiskLevel = &v
	return s
}

type DescribeTaskDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	// TaskId is a required field
	TaskId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeTaskDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTaskDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeTaskDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeTaskDetailInput"}
	if s.TaskId == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeTaskDetailInput) SetInstanceId(v string) *DescribeTaskDetailInput {
	s.InstanceId = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeTaskDetailInput) SetProjectName(v string) *DescribeTaskDetailInput {
	s.ProjectName = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *DescribeTaskDetailInput) SetTaskId(v string) *DescribeTaskDetailInput {
	s.TaskId = &v
	return s
}

type DescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CheckItemLog *string `type:"string" json:",omitempty"`

	CheckItems []*CheckItemForDescribeTaskDetailOutput `type:"list" json:",omitempty"`

	TaskInfo *TaskInfoForDescribeTaskDetailOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetCheckItemLog sets the CheckItemLog field's value.
func (s *DescribeTaskDetailOutput) SetCheckItemLog(v string) *DescribeTaskDetailOutput {
	s.CheckItemLog = &v
	return s
}

// SetCheckItems sets the CheckItems field's value.
func (s *DescribeTaskDetailOutput) SetCheckItems(v []*CheckItemForDescribeTaskDetailOutput) *DescribeTaskDetailOutput {
	s.CheckItems = v
	return s
}

// SetTaskInfo sets the TaskInfo field's value.
func (s *DescribeTaskDetailOutput) SetTaskInfo(v *TaskInfoForDescribeTaskDetailOutput) *DescribeTaskDetailOutput {
	s.TaskInfo = v
	return s
}

type RelatedInstanceInfosForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RelatedInstanceInfosForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RelatedInstanceInfosForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetInstanceID sets the InstanceID field's value.
func (s *RelatedInstanceInfosForDescribeTaskDetailOutput) SetInstanceID(v string) *RelatedInstanceInfosForDescribeTaskDetailOutput {
	s.InstanceID = &v
	return s
}

type StepExtraInfoForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`

	Value *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s StepExtraInfoForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StepExtraInfoForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetType sets the Type field's value.
func (s *StepExtraInfoForDescribeTaskDetailOutput) SetType(v string) *StepExtraInfoForDescribeTaskDetailOutput {
	s.Type = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StepExtraInfoForDescribeTaskDetailOutput) SetUnit(v string) *StepExtraInfoForDescribeTaskDetailOutput {
	s.Unit = &v
	return s
}

// SetValue sets the Value field's value.
func (s *StepExtraInfoForDescribeTaskDetailOutput) SetValue(v float64) *StepExtraInfoForDescribeTaskDetailOutput {
	s.Value = &v
	return s
}

type TaskInfoForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CostTimeMS *int64 `type:"int64" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	FinishTime *string `type:"string" json:",omitempty"`

	OriginConfig *string `type:"string" json:",omitempty"`

	Progress *int32 `type:"int32" json:",omitempty"`

	RelatedInstanceInfos *RelatedInstanceInfosForDescribeTaskDetailOutput `type:"structure" json:",omitempty"`

	ScheduledExecuteEndTime *string `type:"string" json:",omitempty"`

	ScheduledExecuteStartTime *string `type:"string" json:",omitempty"`

	ScheduledSwitchEndTime *string `type:"string" json:",omitempty"`

	ScheduledSwitchStartTime *string `type:"string" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	TaskAction *string `type:"string" json:",omitempty"`

	TaskCategory *string `type:"string" json:",omitempty"`

	TaskDesc *string `type:"string" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`

	TaskParams *string `type:"string" json:",omitempty"`

	TaskProgress []*TaskProgressForDescribeTaskDetailOutput `type:"list" json:",omitempty"`

	TaskSource *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TaskInfoForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskInfoForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetCostTimeMS sets the CostTimeMS field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetCostTimeMS(v int64) *TaskInfoForDescribeTaskDetailOutput {
	s.CostTimeMS = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetCreateTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.CreateTime = &v
	return s
}

// SetFinishTime sets the FinishTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetFinishTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.FinishTime = &v
	return s
}

// SetOriginConfig sets the OriginConfig field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetOriginConfig(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.OriginConfig = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetProgress(v int32) *TaskInfoForDescribeTaskDetailOutput {
	s.Progress = &v
	return s
}

// SetRelatedInstanceInfos sets the RelatedInstanceInfos field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetRelatedInstanceInfos(v *RelatedInstanceInfosForDescribeTaskDetailOutput) *TaskInfoForDescribeTaskDetailOutput {
	s.RelatedInstanceInfos = v
	return s
}

// SetScheduledExecuteEndTime sets the ScheduledExecuteEndTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetScheduledExecuteEndTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.ScheduledExecuteEndTime = &v
	return s
}

// SetScheduledExecuteStartTime sets the ScheduledExecuteStartTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetScheduledExecuteStartTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.ScheduledExecuteStartTime = &v
	return s
}

// SetScheduledSwitchEndTime sets the ScheduledSwitchEndTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetScheduledSwitchEndTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.ScheduledSwitchEndTime = &v
	return s
}

// SetScheduledSwitchStartTime sets the ScheduledSwitchStartTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetScheduledSwitchStartTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.ScheduledSwitchStartTime = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetStartTime(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.StartTime = &v
	return s
}

// SetTaskAction sets the TaskAction field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskAction(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskAction = &v
	return s
}

// SetTaskCategory sets the TaskCategory field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskCategory(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskCategory = &v
	return s
}

// SetTaskDesc sets the TaskDesc field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskDesc(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskDesc = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskId(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskId = &v
	return s
}

// SetTaskParams sets the TaskParams field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskParams(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskParams = &v
	return s
}

// SetTaskProgress sets the TaskProgress field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskProgress(v []*TaskProgressForDescribeTaskDetailOutput) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskProgress = v
	return s
}

// SetTaskSource sets the TaskSource field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskSource(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskSource = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *TaskInfoForDescribeTaskDetailOutput) SetTaskStatus(v string) *TaskInfoForDescribeTaskDetailOutput {
	s.TaskStatus = &v
	return s
}

type TaskProgressForDescribeTaskDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	StepExtraInfo []*StepExtraInfoForDescribeTaskDetailOutput `type:"list" json:",omitempty"`

	StepStatus *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TaskProgressForDescribeTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskProgressForDescribeTaskDetailOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *TaskProgressForDescribeTaskDetailOutput) SetName(v string) *TaskProgressForDescribeTaskDetailOutput {
	s.Name = &v
	return s
}

// SetStepExtraInfo sets the StepExtraInfo field's value.
func (s *TaskProgressForDescribeTaskDetailOutput) SetStepExtraInfo(v []*StepExtraInfoForDescribeTaskDetailOutput) *TaskProgressForDescribeTaskDetailOutput {
	s.StepExtraInfo = v
	return s
}

// SetStepStatus sets the StepStatus field's value.
func (s *TaskProgressForDescribeTaskDetailOutput) SetStepStatus(v string) *TaskProgressForDescribeTaskDetailOutput {
	s.StepStatus = &v
	return s
}
