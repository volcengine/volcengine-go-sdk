// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDisasterRecoveryRegionsCommon = "DescribeDisasterRecoveryRegions"

// DescribeDisasterRecoveryRegionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDisasterRecoveryRegionsCommon operation. The "output" return
// value will be populated with the DescribeDisasterRecoveryRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDisasterRecoveryRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDisasterRecoveryRegionsCommon Send returns without error.
//
// See DescribeDisasterRecoveryRegionsCommon for more information on using the DescribeDisasterRecoveryRegionsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDisasterRecoveryRegionsCommonRequest method.
//    req, resp := client.DescribeDisasterRecoveryRegionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDisasterRecoveryRegionsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDisasterRecoveryRegionsCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDisasterRecoveryRegionsCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDisasterRecoveryRegionsCommonRequest(input)
	return out, req.Send()
}

// DescribeDisasterRecoveryRegionsCommonWithContext is the same as DescribeDisasterRecoveryRegionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDisasterRecoveryRegionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDisasterRecoveryRegionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDisasterRecoveryRegions = "DescribeDisasterRecoveryRegions"

// DescribeDisasterRecoveryRegionsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDisasterRecoveryRegions operation. The "output" return
// value will be populated with the DescribeDisasterRecoveryRegionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDisasterRecoveryRegionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDisasterRecoveryRegionsCommon Send returns without error.
//
// See DescribeDisasterRecoveryRegions for more information on using the DescribeDisasterRecoveryRegions
// API call, and error handling.
//
//    // Example sending a request using the DescribeDisasterRecoveryRegionsRequest method.
//    req, resp := client.DescribeDisasterRecoveryRegionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegionsRequest(input *DescribeDisasterRecoveryRegionsInput) (req *request.Request, output *DescribeDisasterRecoveryRegionsOutput) {
	op := &request.Operation{
		Name:       opDescribeDisasterRecoveryRegions,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDisasterRecoveryRegionsInput{}
	}

	output = &DescribeDisasterRecoveryRegionsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDisasterRecoveryRegions API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeDisasterRecoveryRegions for usage and error information.
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegions(input *DescribeDisasterRecoveryRegionsInput) (*DescribeDisasterRecoveryRegionsOutput, error) {
	req, out := c.DescribeDisasterRecoveryRegionsRequest(input)
	return out, req.Send()
}

// DescribeDisasterRecoveryRegionsWithContext is the same as DescribeDisasterRecoveryRegions with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDisasterRecoveryRegions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeDisasterRecoveryRegionsWithContext(ctx volcengine.Context, input *DescribeDisasterRecoveryRegionsInput, opts ...request.Option) (*DescribeDisasterRecoveryRegionsOutput, error) {
	req, out := c.DescribeDisasterRecoveryRegionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDisasterRecoveryRegionsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDisasterRecoveryRegionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDisasterRecoveryRegionsInput) GoString() string {
	return s.String()
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDisasterRecoveryRegionsInput) SetProjectName(v string) *DescribeDisasterRecoveryRegionsInput {
	s.ProjectName = &v
	return s
}

type DescribeDisasterRecoveryRegionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Regions []*RegionForDescribeDisasterRecoveryRegionsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDisasterRecoveryRegionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDisasterRecoveryRegionsOutput) GoString() string {
	return s.String()
}

// SetRegions sets the Regions field's value.
func (s *DescribeDisasterRecoveryRegionsOutput) SetRegions(v []*RegionForDescribeDisasterRecoveryRegionsOutput) *DescribeDisasterRecoveryRegionsOutput {
	s.Regions = v
	return s
}

type RegionForDescribeDisasterRecoveryRegionsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	RegionName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RegionForDescribeDisasterRecoveryRegionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RegionForDescribeDisasterRecoveryRegionsOutput) GoString() string {
	return s.String()
}

// SetRegionId sets the RegionId field's value.
func (s *RegionForDescribeDisasterRecoveryRegionsOutput) SetRegionId(v string) *RegionForDescribeDisasterRecoveryRegionsOutput {
	s.RegionId = &v
	return s
}

// SetRegionName sets the RegionName field's value.
func (s *RegionForDescribeDisasterRecoveryRegionsOutput) SetRegionName(v string) *RegionForDescribeDisasterRecoveryRegionsOutput {
	s.RegionName = &v
	return s
}
