// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyDBInstanceTDECommon = "ModifyDBInstanceTDE"

// ModifyDBInstanceTDECommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceTDECommon operation. The "output" return
// value will be populated with the ModifyDBInstanceTDECommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceTDECommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceTDECommon Send returns without error.
//
// See ModifyDBInstanceTDECommon for more information on using the ModifyDBInstanceTDECommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceTDECommonRequest method.
//    req, resp := client.ModifyDBInstanceTDECommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBInstanceTDECommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyDBInstanceTDECommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceTDECommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBInstanceTDECommon for usage and error information.
func (c *RDSMYSQLV2) ModifyDBInstanceTDECommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceTDECommonRequest(input)
	return out, req.Send()
}

// ModifyDBInstanceTDECommonWithContext is the same as ModifyDBInstanceTDECommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceTDECommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBInstanceTDECommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyDBInstanceTDECommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyDBInstanceTDE = "ModifyDBInstanceTDE"

// ModifyDBInstanceTDERequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyDBInstanceTDE operation. The "output" return
// value will be populated with the ModifyDBInstanceTDECommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyDBInstanceTDECommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyDBInstanceTDECommon Send returns without error.
//
// See ModifyDBInstanceTDE for more information on using the ModifyDBInstanceTDE
// API call, and error handling.
//
//    // Example sending a request using the ModifyDBInstanceTDERequest method.
//    req, resp := client.ModifyDBInstanceTDERequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) ModifyDBInstanceTDERequest(input *ModifyDBInstanceTDEInput) (req *request.Request, output *ModifyDBInstanceTDEOutput) {
	op := &request.Operation{
		Name:       opModifyDBInstanceTDE,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyDBInstanceTDEInput{}
	}

	output = &ModifyDBInstanceTDEOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyDBInstanceTDE API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation ModifyDBInstanceTDE for usage and error information.
func (c *RDSMYSQLV2) ModifyDBInstanceTDE(input *ModifyDBInstanceTDEInput) (*ModifyDBInstanceTDEOutput, error) {
	req, out := c.ModifyDBInstanceTDERequest(input)
	return out, req.Send()
}

// ModifyDBInstanceTDEWithContext is the same as ModifyDBInstanceTDE with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyDBInstanceTDE for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) ModifyDBInstanceTDEWithContext(ctx volcengine.Context, input *ModifyDBInstanceTDEInput, opts ...request.Option) (*ModifyDBInstanceTDEOutput, error) {
	req, out := c.ModifyDBInstanceTDERequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyDBInstanceTDEInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	KeyName *string `type:"string" json:",omitempty"`

	KeyringName *string `type:"string" json:",omitempty"`

	SpecifiedSwitchEndTime *string `type:"string" json:",omitempty"`

	SpecifiedSwitchStartTime *string `type:"string" json:",omitempty"`

	SwitchType *string `type:"string" json:",omitempty"`

	// TDEStatus is a required field
	TDEStatus *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyDBInstanceTDEInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceTDEInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyDBInstanceTDEInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyDBInstanceTDEInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.TDEStatus == nil {
		invalidParams.Add(request.NewErrParamRequired("TDEStatus"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyDBInstanceTDEInput) SetInstanceId(v string) *ModifyDBInstanceTDEInput {
	s.InstanceId = &v
	return s
}

// SetKeyName sets the KeyName field's value.
func (s *ModifyDBInstanceTDEInput) SetKeyName(v string) *ModifyDBInstanceTDEInput {
	s.KeyName = &v
	return s
}

// SetKeyringName sets the KeyringName field's value.
func (s *ModifyDBInstanceTDEInput) SetKeyringName(v string) *ModifyDBInstanceTDEInput {
	s.KeyringName = &v
	return s
}

// SetSpecifiedSwitchEndTime sets the SpecifiedSwitchEndTime field's value.
func (s *ModifyDBInstanceTDEInput) SetSpecifiedSwitchEndTime(v string) *ModifyDBInstanceTDEInput {
	s.SpecifiedSwitchEndTime = &v
	return s
}

// SetSpecifiedSwitchStartTime sets the SpecifiedSwitchStartTime field's value.
func (s *ModifyDBInstanceTDEInput) SetSpecifiedSwitchStartTime(v string) *ModifyDBInstanceTDEInput {
	s.SpecifiedSwitchStartTime = &v
	return s
}

// SetSwitchType sets the SwitchType field's value.
func (s *ModifyDBInstanceTDEInput) SetSwitchType(v string) *ModifyDBInstanceTDEInput {
	s.SwitchType = &v
	return s
}

// SetTDEStatus sets the TDEStatus field's value.
func (s *ModifyDBInstanceTDEInput) SetTDEStatus(v string) *ModifyDBInstanceTDEInput {
	s.TDEStatus = &v
	return s
}

type ModifyDBInstanceTDEOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyDBInstanceTDEOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDBInstanceTDEOutput) GoString() string {
	return s.String()
}
