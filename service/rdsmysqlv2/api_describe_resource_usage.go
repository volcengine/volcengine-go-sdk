// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rdsmysqlv2

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeResourceUsageCommon = "DescribeResourceUsage"

// DescribeResourceUsageCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeResourceUsageCommon operation. The "output" return
// value will be populated with the DescribeResourceUsageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeResourceUsageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeResourceUsageCommon Send returns without error.
//
// See DescribeResourceUsageCommon for more information on using the DescribeResourceUsageCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeResourceUsageCommonRequest method.
//    req, resp := client.DescribeResourceUsageCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeResourceUsageCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeResourceUsageCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeResourceUsageCommon API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeResourceUsageCommon for usage and error information.
func (c *RDSMYSQLV2) DescribeResourceUsageCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeResourceUsageCommonRequest(input)
	return out, req.Send()
}

// DescribeResourceUsageCommonWithContext is the same as DescribeResourceUsageCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeResourceUsageCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeResourceUsageCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeResourceUsageCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeResourceUsage = "DescribeResourceUsage"

// DescribeResourceUsageRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeResourceUsage operation. The "output" return
// value will be populated with the DescribeResourceUsageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeResourceUsageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeResourceUsageCommon Send returns without error.
//
// See DescribeResourceUsage for more information on using the DescribeResourceUsage
// API call, and error handling.
//
//    // Example sending a request using the DescribeResourceUsageRequest method.
//    req, resp := client.DescribeResourceUsageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RDSMYSQLV2) DescribeResourceUsageRequest(input *DescribeResourceUsageInput) (req *request.Request, output *DescribeResourceUsageOutput) {
	op := &request.Operation{
		Name:       opDescribeResourceUsage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeResourceUsageInput{}
	}

	output = &DescribeResourceUsageOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeResourceUsage API operation for RDS_MYSQL_V2.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RDS_MYSQL_V2's
// API operation DescribeResourceUsage for usage and error information.
func (c *RDSMYSQLV2) DescribeResourceUsage(input *DescribeResourceUsageInput) (*DescribeResourceUsageOutput, error) {
	req, out := c.DescribeResourceUsageRequest(input)
	return out, req.Send()
}

// DescribeResourceUsageWithContext is the same as DescribeResourceUsage with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeResourceUsage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RDSMYSQLV2) DescribeResourceUsageWithContext(ctx volcengine.Context, input *DescribeResourceUsageInput, opts ...request.Option) (*DescribeResourceUsageOutput, error) {
	req, out := c.DescribeResourceUsageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeResourceUsageInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeResourceUsageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceUsageInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeResourceUsageInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeResourceUsageInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeResourceUsageInput) SetInstanceId(v string) *DescribeResourceUsageInput {
	s.InstanceId = &v
	return s
}

type DescribeResourceUsageOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BackupAuditLogSize *int64 `type:"int64" json:",omitempty"`

	BackupBinLogSize *int64 `type:"int64" json:",omitempty"`

	BackupDataSize *int64 `type:"int64" json:",omitempty"`

	BackupErrorLogSize *int64 `type:"int64" json:",omitempty"`

	BackupFreeQuotaSize *int64 `type:"int64" json:",omitempty"`

	BackupLogSize *int64 `type:"int64" json:",omitempty"`

	BackupSlowLogSize *int64 `type:"int64" json:",omitempty"`

	BackupUse *float64 `type:"double" json:",omitempty"`

	BasicBackupBinlogSize *int64 `type:"int64" json:",omitempty"`

	BasicBackupDataSize *int64 `type:"int64" json:",omitempty"`

	StorageAuditLogSize *int64 `type:"int64" json:",omitempty"`

	StorageBinLogSize *int64 `type:"int64" json:",omitempty"`

	StorageDataSize *int64 `type:"int64" json:",omitempty"`

	StorageErrorLogSize *int64 `type:"int64" json:",omitempty"`

	StorageLogSize *int64 `type:"int64" json:",omitempty"`

	StorageSlowLogSize *int64 `type:"int64" json:",omitempty"`

	StorageSpace *int32 `type:"int32" json:",omitempty"`

	StorageUse *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s DescribeResourceUsageOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceUsageOutput) GoString() string {
	return s.String()
}

// SetBackupAuditLogSize sets the BackupAuditLogSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupAuditLogSize(v int64) *DescribeResourceUsageOutput {
	s.BackupAuditLogSize = &v
	return s
}

// SetBackupBinLogSize sets the BackupBinLogSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupBinLogSize(v int64) *DescribeResourceUsageOutput {
	s.BackupBinLogSize = &v
	return s
}

// SetBackupDataSize sets the BackupDataSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupDataSize(v int64) *DescribeResourceUsageOutput {
	s.BackupDataSize = &v
	return s
}

// SetBackupErrorLogSize sets the BackupErrorLogSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupErrorLogSize(v int64) *DescribeResourceUsageOutput {
	s.BackupErrorLogSize = &v
	return s
}

// SetBackupFreeQuotaSize sets the BackupFreeQuotaSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupFreeQuotaSize(v int64) *DescribeResourceUsageOutput {
	s.BackupFreeQuotaSize = &v
	return s
}

// SetBackupLogSize sets the BackupLogSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupLogSize(v int64) *DescribeResourceUsageOutput {
	s.BackupLogSize = &v
	return s
}

// SetBackupSlowLogSize sets the BackupSlowLogSize field's value.
func (s *DescribeResourceUsageOutput) SetBackupSlowLogSize(v int64) *DescribeResourceUsageOutput {
	s.BackupSlowLogSize = &v
	return s
}

// SetBackupUse sets the BackupUse field's value.
func (s *DescribeResourceUsageOutput) SetBackupUse(v float64) *DescribeResourceUsageOutput {
	s.BackupUse = &v
	return s
}

// SetBasicBackupBinlogSize sets the BasicBackupBinlogSize field's value.
func (s *DescribeResourceUsageOutput) SetBasicBackupBinlogSize(v int64) *DescribeResourceUsageOutput {
	s.BasicBackupBinlogSize = &v
	return s
}

// SetBasicBackupDataSize sets the BasicBackupDataSize field's value.
func (s *DescribeResourceUsageOutput) SetBasicBackupDataSize(v int64) *DescribeResourceUsageOutput {
	s.BasicBackupDataSize = &v
	return s
}

// SetStorageAuditLogSize sets the StorageAuditLogSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageAuditLogSize(v int64) *DescribeResourceUsageOutput {
	s.StorageAuditLogSize = &v
	return s
}

// SetStorageBinLogSize sets the StorageBinLogSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageBinLogSize(v int64) *DescribeResourceUsageOutput {
	s.StorageBinLogSize = &v
	return s
}

// SetStorageDataSize sets the StorageDataSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageDataSize(v int64) *DescribeResourceUsageOutput {
	s.StorageDataSize = &v
	return s
}

// SetStorageErrorLogSize sets the StorageErrorLogSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageErrorLogSize(v int64) *DescribeResourceUsageOutput {
	s.StorageErrorLogSize = &v
	return s
}

// SetStorageLogSize sets the StorageLogSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageLogSize(v int64) *DescribeResourceUsageOutput {
	s.StorageLogSize = &v
	return s
}

// SetStorageSlowLogSize sets the StorageSlowLogSize field's value.
func (s *DescribeResourceUsageOutput) SetStorageSlowLogSize(v int64) *DescribeResourceUsageOutput {
	s.StorageSlowLogSize = &v
	return s
}

// SetStorageSpace sets the StorageSpace field's value.
func (s *DescribeResourceUsageOutput) SetStorageSpace(v int32) *DescribeResourceUsageOutput {
	s.StorageSpace = &v
	return s
}

// SetStorageUse sets the StorageUse field's value.
func (s *DescribeResourceUsageOutput) SetStorageUse(v float64) *DescribeResourceUsageOutput {
	s.StorageUse = &v
	return s
}
