// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteBaselineCheckConfigCommon = "DeleteBaselineCheckConfig"

// DeleteBaselineCheckConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteBaselineCheckConfigCommon operation. The "output" return
// value will be populated with the DeleteBaselineCheckConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteBaselineCheckConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteBaselineCheckConfigCommon Send returns without error.
//
// See DeleteBaselineCheckConfigCommon for more information on using the DeleteBaselineCheckConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteBaselineCheckConfigCommonRequest method.
//    req, resp := client.DeleteBaselineCheckConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DeleteBaselineCheckConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteBaselineCheckConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteBaselineCheckConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DeleteBaselineCheckConfigCommon for usage and error information.
func (c *SECCENTER20240508) DeleteBaselineCheckConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteBaselineCheckConfigCommonRequest(input)
	return out, req.Send()
}

// DeleteBaselineCheckConfigCommonWithContext is the same as DeleteBaselineCheckConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteBaselineCheckConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DeleteBaselineCheckConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteBaselineCheckConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteBaselineCheckConfig = "DeleteBaselineCheckConfig"

// DeleteBaselineCheckConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteBaselineCheckConfig operation. The "output" return
// value will be populated with the DeleteBaselineCheckConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteBaselineCheckConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteBaselineCheckConfigCommon Send returns without error.
//
// See DeleteBaselineCheckConfig for more information on using the DeleteBaselineCheckConfig
// API call, and error handling.
//
//    // Example sending a request using the DeleteBaselineCheckConfigRequest method.
//    req, resp := client.DeleteBaselineCheckConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DeleteBaselineCheckConfigRequest(input *DeleteBaselineCheckConfigInput) (req *request.Request, output *DeleteBaselineCheckConfigOutput) {
	op := &request.Operation{
		Name:       opDeleteBaselineCheckConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteBaselineCheckConfigInput{}
	}

	output = &DeleteBaselineCheckConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteBaselineCheckConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DeleteBaselineCheckConfig for usage and error information.
func (c *SECCENTER20240508) DeleteBaselineCheckConfig(input *DeleteBaselineCheckConfigInput) (*DeleteBaselineCheckConfigOutput, error) {
	req, out := c.DeleteBaselineCheckConfigRequest(input)
	return out, req.Send()
}

// DeleteBaselineCheckConfigWithContext is the same as DeleteBaselineCheckConfig with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteBaselineCheckConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DeleteBaselineCheckConfigWithContext(ctx volcengine.Context, input *DeleteBaselineCheckConfigInput, opts ...request.Option) (*DeleteBaselineCheckConfigOutput, error) {
	req, out := c.DeleteBaselineCheckConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteBaselineCheckConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ConfigID is a required field
	ConfigID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteBaselineCheckConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBaselineCheckConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteBaselineCheckConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteBaselineCheckConfigInput"}
	if s.ConfigID == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigID sets the ConfigID field's value.
func (s *DeleteBaselineCheckConfigInput) SetConfigID(v string) *DeleteBaselineCheckConfigInput {
	s.ConfigID = &v
	return s
}

type DeleteBaselineCheckConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteBaselineCheckConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteBaselineCheckConfigOutput) GoString() string {
	return s.String()
}

// SetStatus sets the Status field's value.
func (s *DeleteBaselineCheckConfigOutput) SetStatus(v string) *DeleteBaselineCheckConfigOutput {
	s.Status = &v
	return s
}
