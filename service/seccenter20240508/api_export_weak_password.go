// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opExportWeakPasswordCommon = "ExportWeakPassword"

// ExportWeakPasswordCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportWeakPasswordCommon operation. The "output" return
// value will be populated with the ExportWeakPasswordCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportWeakPasswordCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportWeakPasswordCommon Send returns without error.
//
// See ExportWeakPasswordCommon for more information on using the ExportWeakPasswordCommon
// API call, and error handling.
//
//    // Example sending a request using the ExportWeakPasswordCommonRequest method.
//    req, resp := client.ExportWeakPasswordCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportWeakPasswordCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opExportWeakPasswordCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportWeakPasswordCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportWeakPasswordCommon for usage and error information.
func (c *SECCENTER20240508) ExportWeakPasswordCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ExportWeakPasswordCommonRequest(input)
	return out, req.Send()
}

// ExportWeakPasswordCommonWithContext is the same as ExportWeakPasswordCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ExportWeakPasswordCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportWeakPasswordCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ExportWeakPasswordCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opExportWeakPassword = "ExportWeakPassword"

// ExportWeakPasswordRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportWeakPassword operation. The "output" return
// value will be populated with the ExportWeakPasswordCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportWeakPasswordCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportWeakPasswordCommon Send returns without error.
//
// See ExportWeakPassword for more information on using the ExportWeakPassword
// API call, and error handling.
//
//    // Example sending a request using the ExportWeakPasswordRequest method.
//    req, resp := client.ExportWeakPasswordRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportWeakPasswordRequest(input *ExportWeakPasswordInput) (req *request.Request, output *ExportWeakPasswordOutput) {
	op := &request.Operation{
		Name:       opExportWeakPassword,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ExportWeakPasswordInput{}
	}

	output = &ExportWeakPasswordOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportWeakPassword API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportWeakPassword for usage and error information.
func (c *SECCENTER20240508) ExportWeakPassword(input *ExportWeakPasswordInput) (*ExportWeakPasswordOutput, error) {
	req, out := c.ExportWeakPasswordRequest(input)
	return out, req.Send()
}

// ExportWeakPasswordWithContext is the same as ExportWeakPassword with the addition of
// the ability to pass a context and additional request options.
//
// See ExportWeakPassword for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportWeakPasswordWithContext(ctx volcengine.Context, input *ExportWeakPasswordInput, opts ...request.Option) (*ExportWeakPasswordOutput, error) {
	req, out := c.ExportWeakPasswordRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ExportWeakPasswordInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	BaselineID *int64 `type:"int64" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	IDList []*string `type:"list" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	Tag []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportWeakPasswordInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportWeakPasswordInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *ExportWeakPasswordInput) SetAgentID(v string) *ExportWeakPasswordInput {
	s.AgentID = &v
	return s
}

// SetBaselineID sets the BaselineID field's value.
func (s *ExportWeakPasswordInput) SetBaselineID(v int64) *ExportWeakPasswordInput {
	s.BaselineID = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ExportWeakPasswordInput) SetCloudProviders(v []*string) *ExportWeakPasswordInput {
	s.CloudProviders = v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *ExportWeakPasswordInput) SetHostname(v string) *ExportWeakPasswordInput {
	s.Hostname = &v
	return s
}

// SetIDList sets the IDList field's value.
func (s *ExportWeakPasswordInput) SetIDList(v []*string) *ExportWeakPasswordInput {
	s.IDList = v
	return s
}

// SetIP sets the IP field's value.
func (s *ExportWeakPasswordInput) SetIP(v string) *ExportWeakPasswordInput {
	s.IP = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *ExportWeakPasswordInput) SetLeafGroupIDs(v []*string) *ExportWeakPasswordInput {
	s.LeafGroupIDs = v
	return s
}

// SetTag sets the Tag field's value.
func (s *ExportWeakPasswordInput) SetTag(v []*string) *ExportWeakPasswordInput {
	s.Tag = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ExportWeakPasswordInput) SetTopGroupID(v string) *ExportWeakPasswordInput {
	s.TopGroupID = &v
	return s
}

type ExportWeakPasswordOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportWeakPasswordOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportWeakPasswordOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *ExportWeakPasswordOutput) SetFileName(v string) *ExportWeakPasswordOutput {
	s.FileName = &v
	return s
}
