// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opStopMLPAssetSyncTaskCommon = "StopMLPAssetSyncTask"

// StopMLPAssetSyncTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the StopMLPAssetSyncTaskCommon operation. The "output" return
// value will be populated with the StopMLPAssetSyncTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StopMLPAssetSyncTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after StopMLPAssetSyncTaskCommon Send returns without error.
//
// See StopMLPAssetSyncTaskCommon for more information on using the StopMLPAssetSyncTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the StopMLPAssetSyncTaskCommonRequest method.
//    req, resp := client.StopMLPAssetSyncTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) StopMLPAssetSyncTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opStopMLPAssetSyncTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StopMLPAssetSyncTaskCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation StopMLPAssetSyncTaskCommon for usage and error information.
func (c *SECCENTER20240508) StopMLPAssetSyncTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.StopMLPAssetSyncTaskCommonRequest(input)
	return out, req.Send()
}

// StopMLPAssetSyncTaskCommonWithContext is the same as StopMLPAssetSyncTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See StopMLPAssetSyncTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) StopMLPAssetSyncTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.StopMLPAssetSyncTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opStopMLPAssetSyncTask = "StopMLPAssetSyncTask"

// StopMLPAssetSyncTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the StopMLPAssetSyncTask operation. The "output" return
// value will be populated with the StopMLPAssetSyncTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned StopMLPAssetSyncTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after StopMLPAssetSyncTaskCommon Send returns without error.
//
// See StopMLPAssetSyncTask for more information on using the StopMLPAssetSyncTask
// API call, and error handling.
//
//    // Example sending a request using the StopMLPAssetSyncTaskRequest method.
//    req, resp := client.StopMLPAssetSyncTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) StopMLPAssetSyncTaskRequest(input *StopMLPAssetSyncTaskInput) (req *request.Request, output *StopMLPAssetSyncTaskOutput) {
	op := &request.Operation{
		Name:       opStopMLPAssetSyncTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &StopMLPAssetSyncTaskInput{}
	}

	output = &StopMLPAssetSyncTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// StopMLPAssetSyncTask API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation StopMLPAssetSyncTask for usage and error information.
func (c *SECCENTER20240508) StopMLPAssetSyncTask(input *StopMLPAssetSyncTaskInput) (*StopMLPAssetSyncTaskOutput, error) {
	req, out := c.StopMLPAssetSyncTaskRequest(input)
	return out, req.Send()
}

// StopMLPAssetSyncTaskWithContext is the same as StopMLPAssetSyncTask with the addition of
// the ability to pass a context and additional request options.
//
// See StopMLPAssetSyncTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) StopMLPAssetSyncTaskWithContext(ctx volcengine.Context, input *StopMLPAssetSyncTaskInput, opts ...request.Option) (*StopMLPAssetSyncTaskOutput, error) {
	req, out := c.StopMLPAssetSyncTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type StopMLPAssetSyncTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// TaskID is a required field
	TaskID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s StopMLPAssetSyncTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StopMLPAssetSyncTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *StopMLPAssetSyncTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "StopMLPAssetSyncTaskInput"}
	if s.TaskID == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTaskID sets the TaskID field's value.
func (s *StopMLPAssetSyncTaskInput) SetTaskID(v string) *StopMLPAssetSyncTaskInput {
	s.TaskID = &v
	return s
}

type StopMLPAssetSyncTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StopMLPAssetSyncTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StopMLPAssetSyncTaskOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *StopMLPAssetSyncTaskOutput) SetData(v string) *StopMLPAssetSyncTaskOutput {
	s.Data = &v
	return s
}
