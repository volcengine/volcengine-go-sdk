// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetVulnCheckStatusCommon = "GetVulnCheckStatus"

// GetVulnCheckStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVulnCheckStatusCommon operation. The "output" return
// value will be populated with the GetVulnCheckStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVulnCheckStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVulnCheckStatusCommon Send returns without error.
//
// See GetVulnCheckStatusCommon for more information on using the GetVulnCheckStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetVulnCheckStatusCommonRequest method.
//    req, resp := client.GetVulnCheckStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVulnCheckStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetVulnCheckStatusCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetVulnCheckStatusCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVulnCheckStatusCommon for usage and error information.
func (c *SECCENTER20240508) GetVulnCheckStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetVulnCheckStatusCommonRequest(input)
	return out, req.Send()
}

// GetVulnCheckStatusCommonWithContext is the same as GetVulnCheckStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetVulnCheckStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVulnCheckStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetVulnCheckStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetVulnCheckStatus = "GetVulnCheckStatus"

// GetVulnCheckStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVulnCheckStatus operation. The "output" return
// value will be populated with the GetVulnCheckStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVulnCheckStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVulnCheckStatusCommon Send returns without error.
//
// See GetVulnCheckStatus for more information on using the GetVulnCheckStatus
// API call, and error handling.
//
//    // Example sending a request using the GetVulnCheckStatusRequest method.
//    req, resp := client.GetVulnCheckStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVulnCheckStatusRequest(input *GetVulnCheckStatusInput) (req *request.Request, output *GetVulnCheckStatusOutput) {
	op := &request.Operation{
		Name:       opGetVulnCheckStatus,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetVulnCheckStatusInput{}
	}

	output = &GetVulnCheckStatusOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetVulnCheckStatus API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVulnCheckStatus for usage and error information.
func (c *SECCENTER20240508) GetVulnCheckStatus(input *GetVulnCheckStatusInput) (*GetVulnCheckStatusOutput, error) {
	req, out := c.GetVulnCheckStatusRequest(input)
	return out, req.Send()
}

// GetVulnCheckStatusWithContext is the same as GetVulnCheckStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetVulnCheckStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVulnCheckStatusWithContext(ctx volcengine.Context, input *GetVulnCheckStatusInput, opts ...request.Option) (*GetVulnCheckStatusOutput, error) {
	req, out := c.GetVulnCheckStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetVulnCheckStatusInput struct {
	_ struct{} `type:"structure"`

	AssetType *string `type:"string" enum:"EnumOfAssetTypeForGetVulnCheckStatusInput"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetVulnCheckStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVulnCheckStatusInput) GoString() string {
	return s.String()
}

// SetAssetType sets the AssetType field's value.
func (s *GetVulnCheckStatusInput) SetAssetType(v string) *GetVulnCheckStatusInput {
	s.AssetType = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetVulnCheckStatusInput) SetTopGroupID(v string) *GetVulnCheckStatusInput {
	s.TopGroupID = &v
	return s
}

type GetVulnCheckStatusOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LastCheckTime *int64 `type:"int64"`

	Progress *int64 `type:"int64"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s GetVulnCheckStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVulnCheckStatusOutput) GoString() string {
	return s.String()
}

// SetLastCheckTime sets the LastCheckTime field's value.
func (s *GetVulnCheckStatusOutput) SetLastCheckTime(v int64) *GetVulnCheckStatusOutput {
	s.LastCheckTime = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *GetVulnCheckStatusOutput) SetProgress(v int64) *GetVulnCheckStatusOutput {
	s.Progress = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetVulnCheckStatusOutput) SetStatus(v string) *GetVulnCheckStatusOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfAssetTypeForGetVulnCheckStatusInputHost is a EnumOfAssetTypeForGetVulnCheckStatusInput enum value
	EnumOfAssetTypeForGetVulnCheckStatusInputHost = "Host"

	// EnumOfAssetTypeForGetVulnCheckStatusInputDev is a EnumOfAssetTypeForGetVulnCheckStatusInput enum value
	EnumOfAssetTypeForGetVulnCheckStatusInputDev = "Dev"
)
