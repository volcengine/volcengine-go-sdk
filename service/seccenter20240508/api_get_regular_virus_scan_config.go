// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRegularVirusScanConfigCommon = "GetRegularVirusScanConfig"

// GetRegularVirusScanConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRegularVirusScanConfigCommon operation. The "output" return
// value will be populated with the GetRegularVirusScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRegularVirusScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRegularVirusScanConfigCommon Send returns without error.
//
// See GetRegularVirusScanConfigCommon for more information on using the GetRegularVirusScanConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRegularVirusScanConfigCommonRequest method.
//    req, resp := client.GetRegularVirusScanConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRegularVirusScanConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRegularVirusScanConfigCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetRegularVirusScanConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRegularVirusScanConfigCommon for usage and error information.
func (c *SECCENTER20240508) GetRegularVirusScanConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRegularVirusScanConfigCommonRequest(input)
	return out, req.Send()
}

// GetRegularVirusScanConfigCommonWithContext is the same as GetRegularVirusScanConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRegularVirusScanConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRegularVirusScanConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRegularVirusScanConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRegularVirusScanConfig = "GetRegularVirusScanConfig"

// GetRegularVirusScanConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRegularVirusScanConfig operation. The "output" return
// value will be populated with the GetRegularVirusScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRegularVirusScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRegularVirusScanConfigCommon Send returns without error.
//
// See GetRegularVirusScanConfig for more information on using the GetRegularVirusScanConfig
// API call, and error handling.
//
//    // Example sending a request using the GetRegularVirusScanConfigRequest method.
//    req, resp := client.GetRegularVirusScanConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRegularVirusScanConfigRequest(input *GetRegularVirusScanConfigInput) (req *request.Request, output *GetRegularVirusScanConfigOutput) {
	op := &request.Operation{
		Name:       opGetRegularVirusScanConfig,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRegularVirusScanConfigInput{}
	}

	output = &GetRegularVirusScanConfigOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetRegularVirusScanConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRegularVirusScanConfig for usage and error information.
func (c *SECCENTER20240508) GetRegularVirusScanConfig(input *GetRegularVirusScanConfigInput) (*GetRegularVirusScanConfigOutput, error) {
	req, out := c.GetRegularVirusScanConfigRequest(input)
	return out, req.Send()
}

// GetRegularVirusScanConfigWithContext is the same as GetRegularVirusScanConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetRegularVirusScanConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRegularVirusScanConfigWithContext(ctx volcengine.Context, input *GetRegularVirusScanConfigInput, opts ...request.Option) (*GetRegularVirusScanConfigOutput, error) {
	req, out := c.GetRegularVirusScanConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetRegularVirusScanConfigInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetRegularVirusScanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRegularVirusScanConfigInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetRegularVirusScanConfigInput) SetTopGroupID(v string) *GetRegularVirusScanConfigInput {
	s.TopGroupID = &v
	return s
}

type GetRegularVirusScanConfigOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountID *string `type:"string"`

	Action *string `type:"string"`

	AgentIDList []*string `type:"list"`

	AllHost *bool `type:"boolean"`

	CloudProviders []*string `type:"list"`

	CpuIDle *string `type:"string"`

	FilePath *string `type:"string"`

	LeafGroupIDs []*string `type:"list"`

	OperateUser *string `type:"string"`

	ScanInterval *int64 `type:"int64"`

	ScanSwitchOn *bool `type:"boolean"`

	TaskEndTime *string `type:"string"`

	TaskStartTime *string `type:"string"`

	Timeout *string `type:"string"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetRegularVirusScanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRegularVirusScanConfigOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *GetRegularVirusScanConfigOutput) SetAccountID(v string) *GetRegularVirusScanConfigOutput {
	s.AccountID = &v
	return s
}

// SetAction sets the Action field's value.
func (s *GetRegularVirusScanConfigOutput) SetAction(v string) *GetRegularVirusScanConfigOutput {
	s.Action = &v
	return s
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *GetRegularVirusScanConfigOutput) SetAgentIDList(v []*string) *GetRegularVirusScanConfigOutput {
	s.AgentIDList = v
	return s
}

// SetAllHost sets the AllHost field's value.
func (s *GetRegularVirusScanConfigOutput) SetAllHost(v bool) *GetRegularVirusScanConfigOutput {
	s.AllHost = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *GetRegularVirusScanConfigOutput) SetCloudProviders(v []*string) *GetRegularVirusScanConfigOutput {
	s.CloudProviders = v
	return s
}

// SetCpuIDle sets the CpuIDle field's value.
func (s *GetRegularVirusScanConfigOutput) SetCpuIDle(v string) *GetRegularVirusScanConfigOutput {
	s.CpuIDle = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *GetRegularVirusScanConfigOutput) SetFilePath(v string) *GetRegularVirusScanConfigOutput {
	s.FilePath = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *GetRegularVirusScanConfigOutput) SetLeafGroupIDs(v []*string) *GetRegularVirusScanConfigOutput {
	s.LeafGroupIDs = v
	return s
}

// SetOperateUser sets the OperateUser field's value.
func (s *GetRegularVirusScanConfigOutput) SetOperateUser(v string) *GetRegularVirusScanConfigOutput {
	s.OperateUser = &v
	return s
}

// SetScanInterval sets the ScanInterval field's value.
func (s *GetRegularVirusScanConfigOutput) SetScanInterval(v int64) *GetRegularVirusScanConfigOutput {
	s.ScanInterval = &v
	return s
}

// SetScanSwitchOn sets the ScanSwitchOn field's value.
func (s *GetRegularVirusScanConfigOutput) SetScanSwitchOn(v bool) *GetRegularVirusScanConfigOutput {
	s.ScanSwitchOn = &v
	return s
}

// SetTaskEndTime sets the TaskEndTime field's value.
func (s *GetRegularVirusScanConfigOutput) SetTaskEndTime(v string) *GetRegularVirusScanConfigOutput {
	s.TaskEndTime = &v
	return s
}

// SetTaskStartTime sets the TaskStartTime field's value.
func (s *GetRegularVirusScanConfigOutput) SetTaskStartTime(v string) *GetRegularVirusScanConfigOutput {
	s.TaskStartTime = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *GetRegularVirusScanConfigOutput) SetTimeout(v string) *GetRegularVirusScanConfigOutput {
	s.Timeout = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetRegularVirusScanConfigOutput) SetTopGroupID(v string) *GetRegularVirusScanConfigOutput {
	s.TopGroupID = &v
	return s
}
