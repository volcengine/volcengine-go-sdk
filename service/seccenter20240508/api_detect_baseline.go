// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDetectBaselineCommon = "DetectBaseline"

// DetectBaselineCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DetectBaselineCommon operation. The "output" return
// value will be populated with the DetectBaselineCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DetectBaselineCommon Request to send the API call to the service.
// the "output" return value is not valid until after DetectBaselineCommon Send returns without error.
//
// See DetectBaselineCommon for more information on using the DetectBaselineCommon
// API call, and error handling.
//
//    // Example sending a request using the DetectBaselineCommonRequest method.
//    req, resp := client.DetectBaselineCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DetectBaselineCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDetectBaselineCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DetectBaselineCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DetectBaselineCommon for usage and error information.
func (c *SECCENTER20240508) DetectBaselineCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DetectBaselineCommonRequest(input)
	return out, req.Send()
}

// DetectBaselineCommonWithContext is the same as DetectBaselineCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DetectBaselineCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DetectBaselineCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DetectBaselineCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDetectBaseline = "DetectBaseline"

// DetectBaselineRequest generates a "volcengine/request.Request" representing the
// client's request for the DetectBaseline operation. The "output" return
// value will be populated with the DetectBaselineCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DetectBaselineCommon Request to send the API call to the service.
// the "output" return value is not valid until after DetectBaselineCommon Send returns without error.
//
// See DetectBaseline for more information on using the DetectBaseline
// API call, and error handling.
//
//    // Example sending a request using the DetectBaselineRequest method.
//    req, resp := client.DetectBaselineRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DetectBaselineRequest(input *DetectBaselineInput) (req *request.Request, output *DetectBaselineOutput) {
	op := &request.Operation{
		Name:       opDetectBaseline,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DetectBaselineInput{}
	}

	output = &DetectBaselineOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DetectBaseline API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DetectBaseline for usage and error information.
func (c *SECCENTER20240508) DetectBaseline(input *DetectBaselineInput) (*DetectBaselineOutput, error) {
	req, out := c.DetectBaselineRequest(input)
	return out, req.Send()
}

// DetectBaselineWithContext is the same as DetectBaseline with the addition of
// the ability to pass a context and additional request options.
//
// See DetectBaseline for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DetectBaselineWithContext(ctx volcengine.Context, input *DetectBaselineInput, opts ...request.Option) (*DetectBaselineOutput, error) {
	req, out := c.DetectBaselineRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForDetectBaselineInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AgentIP *string `type:"string" json:",omitempty"`

	AgentTags *string `type:"string" json:",omitempty"`

	CheckName *string `type:"string" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForDetectBaselineInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForDetectBaselineInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *ConditionsForDetectBaselineInput) SetAgentID(v string) *ConditionsForDetectBaselineInput {
	s.AgentID = &v
	return s
}

// SetAgentIP sets the AgentIP field's value.
func (s *ConditionsForDetectBaselineInput) SetAgentIP(v string) *ConditionsForDetectBaselineInput {
	s.AgentIP = &v
	return s
}

// SetAgentTags sets the AgentTags field's value.
func (s *ConditionsForDetectBaselineInput) SetAgentTags(v string) *ConditionsForDetectBaselineInput {
	s.AgentTags = &v
	return s
}

// SetCheckName sets the CheckName field's value.
func (s *ConditionsForDetectBaselineInput) SetCheckName(v string) *ConditionsForDetectBaselineInput {
	s.CheckName = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ConditionsForDetectBaselineInput) SetCloudProviders(v []*string) *ConditionsForDetectBaselineInput {
	s.CloudProviders = v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *ConditionsForDetectBaselineInput) SetHostname(v string) *ConditionsForDetectBaselineInput {
	s.Hostname = &v
	return s
}

type DetectBaselineInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetIDs []*string `type:"list" json:",omitempty"`

	AssetType *string `type:"string" json:",omitempty" enum:"EnumOfAssetTypeForDetectBaselineInput"`

	BaselineList []*int64 `type:"list" json:",omitempty"`

	CheckList []*int64 `type:"list" json:",omitempty"`

	Conditions *ConditionsForDetectBaselineInput `type:"structure" json:",omitempty"`

	GroupID *int64 `type:"int64" json:",omitempty"`

	HostList []*string `type:"list" json:",omitempty"`

	IfAllHost *bool `type:"boolean" json:",omitempty"`

	IfAllMlp *bool `type:"boolean" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DetectBaselineInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetectBaselineInput) GoString() string {
	return s.String()
}

// SetAssetIDs sets the AssetIDs field's value.
func (s *DetectBaselineInput) SetAssetIDs(v []*string) *DetectBaselineInput {
	s.AssetIDs = v
	return s
}

// SetAssetType sets the AssetType field's value.
func (s *DetectBaselineInput) SetAssetType(v string) *DetectBaselineInput {
	s.AssetType = &v
	return s
}

// SetBaselineList sets the BaselineList field's value.
func (s *DetectBaselineInput) SetBaselineList(v []*int64) *DetectBaselineInput {
	s.BaselineList = v
	return s
}

// SetCheckList sets the CheckList field's value.
func (s *DetectBaselineInput) SetCheckList(v []*int64) *DetectBaselineInput {
	s.CheckList = v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *DetectBaselineInput) SetConditions(v *ConditionsForDetectBaselineInput) *DetectBaselineInput {
	s.Conditions = v
	return s
}

// SetGroupID sets the GroupID field's value.
func (s *DetectBaselineInput) SetGroupID(v int64) *DetectBaselineInput {
	s.GroupID = &v
	return s
}

// SetHostList sets the HostList field's value.
func (s *DetectBaselineInput) SetHostList(v []*string) *DetectBaselineInput {
	s.HostList = v
	return s
}

// SetIfAllHost sets the IfAllHost field's value.
func (s *DetectBaselineInput) SetIfAllHost(v bool) *DetectBaselineInput {
	s.IfAllHost = &v
	return s
}

// SetIfAllMlp sets the IfAllMlp field's value.
func (s *DetectBaselineInput) SetIfAllMlp(v bool) *DetectBaselineInput {
	s.IfAllMlp = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *DetectBaselineInput) SetLeafGroupIDs(v []*string) *DetectBaselineInput {
	s.LeafGroupIDs = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *DetectBaselineInput) SetTopGroupID(v string) *DetectBaselineInput {
	s.TopGroupID = &v
	return s
}

type DetectBaselineOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DetectBaselineOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetectBaselineOutput) GoString() string {
	return s.String()
}

// SetStatus sets the Status field's value.
func (s *DetectBaselineOutput) SetStatus(v string) *DetectBaselineOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfAssetTypeForDetectBaselineInputHost is a EnumOfAssetTypeForDetectBaselineInput enum value
	EnumOfAssetTypeForDetectBaselineInputHost = "Host"

	// EnumOfAssetTypeForDetectBaselineInputDev is a EnumOfAssetTypeForDetectBaselineInput enum value
	EnumOfAssetTypeForDetectBaselineInputDev = "Dev"
)
