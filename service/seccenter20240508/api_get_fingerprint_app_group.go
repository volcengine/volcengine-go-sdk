// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFingerprintAppGroupCommon = "GetFingerprintAppGroup"

// GetFingerprintAppGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintAppGroupCommon operation. The "output" return
// value will be populated with the GetFingerprintAppGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintAppGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintAppGroupCommon Send returns without error.
//
// See GetFingerprintAppGroupCommon for more information on using the GetFingerprintAppGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintAppGroupCommonRequest method.
//    req, resp := client.GetFingerprintAppGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintAppGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFingerprintAppGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintAppGroupCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintAppGroupCommon for usage and error information.
func (c *SECCENTER20240508) GetFingerprintAppGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintAppGroupCommonRequest(input)
	return out, req.Send()
}

// GetFingerprintAppGroupCommonWithContext is the same as GetFingerprintAppGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintAppGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintAppGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintAppGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFingerprintAppGroup = "GetFingerprintAppGroup"

// GetFingerprintAppGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintAppGroup operation. The "output" return
// value will be populated with the GetFingerprintAppGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintAppGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintAppGroupCommon Send returns without error.
//
// See GetFingerprintAppGroup for more information on using the GetFingerprintAppGroup
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintAppGroupRequest method.
//    req, resp := client.GetFingerprintAppGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintAppGroupRequest(input *GetFingerprintAppGroupInput) (req *request.Request, output *GetFingerprintAppGroupOutput) {
	op := &request.Operation{
		Name:       opGetFingerprintAppGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFingerprintAppGroupInput{}
	}

	output = &GetFingerprintAppGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetFingerprintAppGroup API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintAppGroup for usage and error information.
func (c *SECCENTER20240508) GetFingerprintAppGroup(input *GetFingerprintAppGroupInput) (*GetFingerprintAppGroupOutput, error) {
	req, out := c.GetFingerprintAppGroupRequest(input)
	return out, req.Send()
}

// GetFingerprintAppGroupWithContext is the same as GetFingerprintAppGroup with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintAppGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintAppGroupWithContext(ctx volcengine.Context, input *GetFingerprintAppGroupInput, opts ...request.Option) (*GetFingerprintAppGroupOutput, error) {
	req, out := c.GetFingerprintAppGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetFingerprintAppGroupOutput struct {
	_ struct{} `type:"structure"`

	Count *int64 `type:"int64"`

	Name *string `type:"string"`
}

// String returns the string representation
func (s DataForGetFingerprintAppGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetFingerprintAppGroupOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *DataForGetFingerprintAppGroupOutput) SetCount(v int64) *DataForGetFingerprintAppGroupOutput {
	s.Count = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForGetFingerprintAppGroupOutput) SetName(v string) *DataForGetFingerprintAppGroupOutput {
	s.Name = &v
	return s
}

type GetFingerprintAppGroupInput struct {
	_ struct{} `type:"structure"`

	AgentID *string `type:"string"`
}

// String returns the string representation
func (s GetFingerprintAppGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintAppGroupInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *GetFingerprintAppGroupInput) SetAgentID(v string) *GetFingerprintAppGroupInput {
	s.AgentID = &v
	return s
}

type GetFingerprintAppGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetFingerprintAppGroupOutput `type:"list"`
}

// String returns the string representation
func (s GetFingerprintAppGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintAppGroupOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetFingerprintAppGroupOutput) SetData(v []*DataForGetFingerprintAppGroupOutput) *GetFingerprintAppGroupOutput {
	s.Data = v
	return s
}
