// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListVulHostByPodCommon = "ListVulHostByPod"

// ListVulHostByPodCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulHostByPodCommon operation. The "output" return
// value will be populated with the ListVulHostByPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulHostByPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulHostByPodCommon Send returns without error.
//
// See ListVulHostByPodCommon for more information on using the ListVulHostByPodCommon
// API call, and error handling.
//
//    // Example sending a request using the ListVulHostByPodCommonRequest method.
//    req, resp := client.ListVulHostByPodCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListVulHostByPodCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListVulHostByPodCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulHostByPodCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListVulHostByPodCommon for usage and error information.
func (c *SECCENTER20240508) ListVulHostByPodCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListVulHostByPodCommonRequest(input)
	return out, req.Send()
}

// ListVulHostByPodCommonWithContext is the same as ListVulHostByPodCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulHostByPodCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListVulHostByPodCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListVulHostByPodCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListVulHostByPod = "ListVulHostByPod"

// ListVulHostByPodRequest generates a "volcengine/request.Request" representing the
// client's request for the ListVulHostByPod operation. The "output" return
// value will be populated with the ListVulHostByPodCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListVulHostByPodCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListVulHostByPodCommon Send returns without error.
//
// See ListVulHostByPod for more information on using the ListVulHostByPod
// API call, and error handling.
//
//    // Example sending a request using the ListVulHostByPodRequest method.
//    req, resp := client.ListVulHostByPodRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListVulHostByPodRequest(input *ListVulHostByPodInput) (req *request.Request, output *ListVulHostByPodOutput) {
	op := &request.Operation{
		Name:       opListVulHostByPod,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListVulHostByPodInput{}
	}

	output = &ListVulHostByPodOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListVulHostByPod API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListVulHostByPod for usage and error information.
func (c *SECCENTER20240508) ListVulHostByPod(input *ListVulHostByPodInput) (*ListVulHostByPodOutput, error) {
	req, out := c.ListVulHostByPodRequest(input)
	return out, req.Send()
}

// ListVulHostByPodWithContext is the same as ListVulHostByPod with the addition of
// the ability to pass a context and additional request options.
//
// See ListVulHostByPod for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListVulHostByPodWithContext(ctx volcengine.Context, input *ListVulHostByPodInput, opts ...request.Option) (*ListVulHostByPodOutput, error) {
	req, out := c.ListVulHostByPodRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListVulHostByPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AgentTags []*string `type:"list" json:",omitempty"`

	ControlTime *int64 `type:"int64" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	CwppID *string `type:"string" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	HostName *string `type:"string" json:",omitempty"`

	OperateReason *string `type:"string" json:",omitempty"`

	PrimaryIpAddress *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListVulHostByPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListVulHostByPodOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForListVulHostByPodOutput) SetAgentID(v string) *DataForListVulHostByPodOutput {
	s.AgentID = &v
	return s
}

// SetAgentTags sets the AgentTags field's value.
func (s *DataForListVulHostByPodOutput) SetAgentTags(v []*string) *DataForListVulHostByPodOutput {
	s.AgentTags = v
	return s
}

// SetControlTime sets the ControlTime field's value.
func (s *DataForListVulHostByPodOutput) SetControlTime(v int64) *DataForListVulHostByPodOutput {
	s.ControlTime = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataForListVulHostByPodOutput) SetCreateTime(v int64) *DataForListVulHostByPodOutput {
	s.CreateTime = &v
	return s
}

// SetCwppID sets the CwppID field's value.
func (s *DataForListVulHostByPodOutput) SetCwppID(v string) *DataForListVulHostByPodOutput {
	s.CwppID = &v
	return s
}

// SetEipAddress sets the EipAddress field's value.
func (s *DataForListVulHostByPodOutput) SetEipAddress(v string) *DataForListVulHostByPodOutput {
	s.EipAddress = &v
	return s
}

// SetHostName sets the HostName field's value.
func (s *DataForListVulHostByPodOutput) SetHostName(v string) *DataForListVulHostByPodOutput {
	s.HostName = &v
	return s
}

// SetOperateReason sets the OperateReason field's value.
func (s *DataForListVulHostByPodOutput) SetOperateReason(v string) *DataForListVulHostByPodOutput {
	s.OperateReason = &v
	return s
}

// SetPrimaryIpAddress sets the PrimaryIpAddress field's value.
func (s *DataForListVulHostByPodOutput) SetPrimaryIpAddress(v string) *DataForListVulHostByPodOutput {
	s.PrimaryIpAddress = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForListVulHostByPodOutput) SetStatus(v string) *DataForListVulHostByPodOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListVulHostByPodOutput) SetUpdateTime(v int64) *DataForListVulHostByPodOutput {
	s.UpdateTime = &v
	return s
}

type ListVulHostByPodInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	// ClusterID is a required field
	ClusterID *string `type:"string" json:",omitempty" required:"true"`

	CwppID *string `type:"string" json:",omitempty"`

	HostName *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	// WorkloadID is a required field
	WorkloadID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListVulHostByPodInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulHostByPodInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListVulHostByPodInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListVulHostByPodInput"}
	if s.ClusterID == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterID"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}
	if s.WorkloadID == nil {
		invalidParams.Add(request.NewErrParamRequired("WorkloadID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ListVulHostByPodInput) SetCloudProviders(v []*string) *ListVulHostByPodInput {
	s.CloudProviders = v
	return s
}

// SetClusterID sets the ClusterID field's value.
func (s *ListVulHostByPodInput) SetClusterID(v string) *ListVulHostByPodInput {
	s.ClusterID = &v
	return s
}

// SetCwppID sets the CwppID field's value.
func (s *ListVulHostByPodInput) SetCwppID(v string) *ListVulHostByPodInput {
	s.CwppID = &v
	return s
}

// SetHostName sets the HostName field's value.
func (s *ListVulHostByPodInput) SetHostName(v string) *ListVulHostByPodInput {
	s.HostName = &v
	return s
}

// SetIP sets the IP field's value.
func (s *ListVulHostByPodInput) SetIP(v string) *ListVulHostByPodInput {
	s.IP = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *ListVulHostByPodInput) SetLeafGroupIDs(v []*string) *ListVulHostByPodInput {
	s.LeafGroupIDs = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListVulHostByPodInput) SetPageNumber(v int64) *ListVulHostByPodInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListVulHostByPodInput) SetPageSize(v int64) *ListVulHostByPodInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListVulHostByPodInput) SetSortBy(v string) *ListVulHostByPodInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListVulHostByPodInput) SetSortOrder(v string) *ListVulHostByPodInput {
	s.SortOrder = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListVulHostByPodInput) SetStatus(v []*string) *ListVulHostByPodInput {
	s.Status = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListVulHostByPodInput) SetTopGroupID(v string) *ListVulHostByPodInput {
	s.TopGroupID = &v
	return s
}

// SetWorkloadID sets the WorkloadID field's value.
func (s *ListVulHostByPodInput) SetWorkloadID(v string) *ListVulHostByPodInput {
	s.WorkloadID = &v
	return s
}

type ListVulHostByPodOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListVulHostByPodOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListVulHostByPodOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListVulHostByPodOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListVulHostByPodOutput) SetData(v []*DataForListVulHostByPodOutput) *ListVulHostByPodOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListVulHostByPodOutput) SetPageNumber(v int64) *ListVulHostByPodOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListVulHostByPodOutput) SetPageSize(v int64) *ListVulHostByPodOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListVulHostByPodOutput) SetTotalCount(v int64) *ListVulHostByPodOutput {
	s.TotalCount = &v
	return s
}
