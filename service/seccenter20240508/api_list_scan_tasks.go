// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListScanTasksCommon = "ListScanTasks"

// ListScanTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanTasksCommon operation. The "output" return
// value will be populated with the ListScanTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanTasksCommon Send returns without error.
//
// See ListScanTasksCommon for more information on using the ListScanTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListScanTasksCommonRequest method.
//    req, resp := client.ListScanTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListScanTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanTasksCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanTasksCommon for usage and error information.
func (c *SECCENTER20240508) ListScanTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListScanTasksCommonRequest(input)
	return out, req.Send()
}

// ListScanTasksCommonWithContext is the same as ListScanTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListScanTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListScanTasks = "ListScanTasks"

// ListScanTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanTasks operation. The "output" return
// value will be populated with the ListScanTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanTasksCommon Send returns without error.
//
// See ListScanTasks for more information on using the ListScanTasks
// API call, and error handling.
//
//    // Example sending a request using the ListScanTasksRequest method.
//    req, resp := client.ListScanTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanTasksRequest(input *ListScanTasksInput) (req *request.Request, output *ListScanTasksOutput) {
	op := &request.Operation{
		Name:       opListScanTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListScanTasksInput{}
	}

	output = &ListScanTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanTasks API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanTasks for usage and error information.
func (c *SECCENTER20240508) ListScanTasks(input *ListScanTasksInput) (*ListScanTasksOutput, error) {
	req, out := c.ListScanTasksRequest(input)
	return out, req.Send()
}

// ListScanTasksWithContext is the same as ListScanTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanTasksWithContext(ctx volcengine.Context, input *ListScanTasksInput, opts ...request.Option) (*ListScanTasksOutput, error) {
	req, out := c.ListScanTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListScanTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	Action *string `type:"string" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	IDCount *int64 `type:"int64" json:",omitempty"`

	ResultNum *int64 `type:"int64" json:",omitempty"`

	SubTaskCreated *int64 `type:"int64" json:",omitempty"`

	SubTaskFailed *int64 `type:"int64" json:",omitempty"`

	SubTaskRunning *int64 `type:"int64" json:",omitempty"`

	SubTaskStopped *int64 `type:"int64" json:",omitempty"`

	SubTaskSucceed *int64 `type:"int64" json:",omitempty"`

	Tag *string `type:"string" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`

	TaskName *string `type:"string" json:",omitempty"`

	TaskStatus *string `type:"string" json:",omitempty"`

	TaskTimeout *int64 `type:"int64" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	TaskUser *string `type:"string" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	VirusTaskID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListScanTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListScanTasksOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *DataForListScanTasksOutput) SetAccountID(v string) *DataForListScanTasksOutput {
	s.AccountID = &v
	return s
}

// SetAction sets the Action field's value.
func (s *DataForListScanTasksOutput) SetAction(v string) *DataForListScanTasksOutput {
	s.Action = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataForListScanTasksOutput) SetCreateTime(v int64) *DataForListScanTasksOutput {
	s.CreateTime = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *DataForListScanTasksOutput) SetFilePath(v string) *DataForListScanTasksOutput {
	s.FilePath = &v
	return s
}

// SetIDCount sets the IDCount field's value.
func (s *DataForListScanTasksOutput) SetIDCount(v int64) *DataForListScanTasksOutput {
	s.IDCount = &v
	return s
}

// SetResultNum sets the ResultNum field's value.
func (s *DataForListScanTasksOutput) SetResultNum(v int64) *DataForListScanTasksOutput {
	s.ResultNum = &v
	return s
}

// SetSubTaskCreated sets the SubTaskCreated field's value.
func (s *DataForListScanTasksOutput) SetSubTaskCreated(v int64) *DataForListScanTasksOutput {
	s.SubTaskCreated = &v
	return s
}

// SetSubTaskFailed sets the SubTaskFailed field's value.
func (s *DataForListScanTasksOutput) SetSubTaskFailed(v int64) *DataForListScanTasksOutput {
	s.SubTaskFailed = &v
	return s
}

// SetSubTaskRunning sets the SubTaskRunning field's value.
func (s *DataForListScanTasksOutput) SetSubTaskRunning(v int64) *DataForListScanTasksOutput {
	s.SubTaskRunning = &v
	return s
}

// SetSubTaskStopped sets the SubTaskStopped field's value.
func (s *DataForListScanTasksOutput) SetSubTaskStopped(v int64) *DataForListScanTasksOutput {
	s.SubTaskStopped = &v
	return s
}

// SetSubTaskSucceed sets the SubTaskSucceed field's value.
func (s *DataForListScanTasksOutput) SetSubTaskSucceed(v int64) *DataForListScanTasksOutput {
	s.SubTaskSucceed = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *DataForListScanTasksOutput) SetTag(v string) *DataForListScanTasksOutput {
	s.Tag = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *DataForListScanTasksOutput) SetTaskID(v string) *DataForListScanTasksOutput {
	s.TaskID = &v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *DataForListScanTasksOutput) SetTaskName(v string) *DataForListScanTasksOutput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *DataForListScanTasksOutput) SetTaskStatus(v string) *DataForListScanTasksOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskTimeout sets the TaskTimeout field's value.
func (s *DataForListScanTasksOutput) SetTaskTimeout(v int64) *DataForListScanTasksOutput {
	s.TaskTimeout = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *DataForListScanTasksOutput) SetTaskType(v string) *DataForListScanTasksOutput {
	s.TaskType = &v
	return s
}

// SetTaskUser sets the TaskUser field's value.
func (s *DataForListScanTasksOutput) SetTaskUser(v string) *DataForListScanTasksOutput {
	s.TaskUser = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *DataForListScanTasksOutput) SetTopGroupID(v string) *DataForListScanTasksOutput {
	s.TopGroupID = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListScanTasksOutput) SetUpdateTime(v int64) *DataForListScanTasksOutput {
	s.UpdateTime = &v
	return s
}

// SetVirusTaskID sets the VirusTaskID field's value.
func (s *DataForListScanTasksOutput) SetVirusTaskID(v string) *DataForListScanTasksOutput {
	s.VirusTaskID = &v
	return s
}

type ListScanTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Action []*string `type:"list" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	TaskName *string `type:"string" json:",omitempty"`

	TaskStatus []*string `type:"list" json:",omitempty"`

	TaskUser *string `type:"string" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListScanTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListScanTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListScanTasksInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *ListScanTasksInput) SetAction(v []*string) *ListScanTasksInput {
	s.Action = v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *ListScanTasksInput) SetFilePath(v string) *ListScanTasksInput {
	s.FilePath = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanTasksInput) SetPageNumber(v int64) *ListScanTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanTasksInput) SetPageSize(v int64) *ListScanTasksInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListScanTasksInput) SetSortBy(v string) *ListScanTasksInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListScanTasksInput) SetSortOrder(v string) *ListScanTasksInput {
	s.SortOrder = &v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *ListScanTasksInput) SetTaskName(v string) *ListScanTasksInput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *ListScanTasksInput) SetTaskStatus(v []*string) *ListScanTasksInput {
	s.TaskStatus = v
	return s
}

// SetTaskUser sets the TaskUser field's value.
func (s *ListScanTasksInput) SetTaskUser(v string) *ListScanTasksInput {
	s.TaskUser = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListScanTasksInput) SetTopGroupID(v string) *ListScanTasksInput {
	s.TopGroupID = &v
	return s
}

type ListScanTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListScanTasksOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListScanTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanTasksOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListScanTasksOutput) SetData(v []*DataForListScanTasksOutput) *ListScanTasksOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanTasksOutput) SetPageNumber(v int64) *ListScanTasksOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanTasksOutput) SetPageSize(v int64) *ListScanTasksOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListScanTasksOutput) SetTotalCount(v int64) *ListScanTasksOutput {
	s.TotalCount = &v
	return s
}
