// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlarmArchiveRecordsCommon = "ListAlarmArchiveRecords"

// ListAlarmArchiveRecordsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmArchiveRecordsCommon operation. The "output" return
// value will be populated with the ListAlarmArchiveRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmArchiveRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmArchiveRecordsCommon Send returns without error.
//
// See ListAlarmArchiveRecordsCommon for more information on using the ListAlarmArchiveRecordsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmArchiveRecordsCommonRequest method.
//    req, resp := client.ListAlarmArchiveRecordsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmArchiveRecordsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlarmArchiveRecordsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlarmArchiveRecordsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmArchiveRecordsCommon for usage and error information.
func (c *SECCENTER20240508) ListAlarmArchiveRecordsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlarmArchiveRecordsCommonRequest(input)
	return out, req.Send()
}

// ListAlarmArchiveRecordsCommonWithContext is the same as ListAlarmArchiveRecordsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmArchiveRecordsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmArchiveRecordsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlarmArchiveRecordsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlarmArchiveRecords = "ListAlarmArchiveRecords"

// ListAlarmArchiveRecordsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmArchiveRecords operation. The "output" return
// value will be populated with the ListAlarmArchiveRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmArchiveRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmArchiveRecordsCommon Send returns without error.
//
// See ListAlarmArchiveRecords for more information on using the ListAlarmArchiveRecords
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmArchiveRecordsRequest method.
//    req, resp := client.ListAlarmArchiveRecordsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmArchiveRecordsRequest(input *ListAlarmArchiveRecordsInput) (req *request.Request, output *ListAlarmArchiveRecordsOutput) {
	op := &request.Operation{
		Name:       opListAlarmArchiveRecords,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlarmArchiveRecordsInput{}
	}

	output = &ListAlarmArchiveRecordsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlarmArchiveRecords API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmArchiveRecords for usage and error information.
func (c *SECCENTER20240508) ListAlarmArchiveRecords(input *ListAlarmArchiveRecordsInput) (*ListAlarmArchiveRecordsOutput, error) {
	req, out := c.ListAlarmArchiveRecordsRequest(input)
	return out, req.Send()
}

// ListAlarmArchiveRecordsWithContext is the same as ListAlarmArchiveRecords with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmArchiveRecords for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmArchiveRecordsWithContext(ctx volcengine.Context, input *ListAlarmArchiveRecordsInput, opts ...request.Option) (*ListAlarmArchiveRecordsOutput, error) {
	req, out := c.ListAlarmArchiveRecordsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListAlarmArchiveRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	AlarmCount *int64 `type:"int64" json:",omitempty"`

	AlarmType *string `type:"string" json:",omitempty"`

	ArchiveTime *int64 `type:"int64" json:",omitempty"`

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListAlarmArchiveRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListAlarmArchiveRecordsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *DataForListAlarmArchiveRecordsOutput) SetAccountID(v string) *DataForListAlarmArchiveRecordsOutput {
	s.AccountID = &v
	return s
}

// SetAlarmCount sets the AlarmCount field's value.
func (s *DataForListAlarmArchiveRecordsOutput) SetAlarmCount(v int64) *DataForListAlarmArchiveRecordsOutput {
	s.AlarmCount = &v
	return s
}

// SetAlarmType sets the AlarmType field's value.
func (s *DataForListAlarmArchiveRecordsOutput) SetAlarmType(v string) *DataForListAlarmArchiveRecordsOutput {
	s.AlarmType = &v
	return s
}

// SetArchiveTime sets the ArchiveTime field's value.
func (s *DataForListAlarmArchiveRecordsOutput) SetArchiveTime(v int64) *DataForListAlarmArchiveRecordsOutput {
	s.ArchiveTime = &v
	return s
}

// SetFileName sets the FileName field's value.
func (s *DataForListAlarmArchiveRecordsOutput) SetFileName(v string) *DataForListAlarmArchiveRecordsOutput {
	s.FileName = &v
	return s
}

type ListAlarmArchiveRecordsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlarmType *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	TimeEnd *int64 `type:"int64" json:",omitempty"`

	TimeStart *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListAlarmArchiveRecordsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmArchiveRecordsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAlarmArchiveRecordsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAlarmArchiveRecordsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlarmType sets the AlarmType field's value.
func (s *ListAlarmArchiveRecordsInput) SetAlarmType(v string) *ListAlarmArchiveRecordsInput {
	s.AlarmType = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAlarmArchiveRecordsInput) SetPageNumber(v int64) *ListAlarmArchiveRecordsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAlarmArchiveRecordsInput) SetPageSize(v int64) *ListAlarmArchiveRecordsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListAlarmArchiveRecordsInput) SetSortBy(v string) *ListAlarmArchiveRecordsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListAlarmArchiveRecordsInput) SetSortOrder(v string) *ListAlarmArchiveRecordsInput {
	s.SortOrder = &v
	return s
}

// SetTimeEnd sets the TimeEnd field's value.
func (s *ListAlarmArchiveRecordsInput) SetTimeEnd(v int64) *ListAlarmArchiveRecordsInput {
	s.TimeEnd = &v
	return s
}

// SetTimeStart sets the TimeStart field's value.
func (s *ListAlarmArchiveRecordsInput) SetTimeStart(v int64) *ListAlarmArchiveRecordsInput {
	s.TimeStart = &v
	return s
}

type ListAlarmArchiveRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListAlarmArchiveRecordsOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListAlarmArchiveRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmArchiveRecordsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAlarmArchiveRecordsOutput) SetData(v []*DataForListAlarmArchiveRecordsOutput) *ListAlarmArchiveRecordsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAlarmArchiveRecordsOutput) SetPageNumber(v int64) *ListAlarmArchiveRecordsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAlarmArchiveRecordsOutput) SetPageSize(v int64) *ListAlarmArchiveRecordsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAlarmArchiveRecordsOutput) SetTotalCount(v int64) *ListAlarmArchiveRecordsOutput {
	s.TotalCount = &v
	return s
}
