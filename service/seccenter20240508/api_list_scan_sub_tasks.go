// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListScanSubTasksCommon = "ListScanSubTasks"

// ListScanSubTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanSubTasksCommon operation. The "output" return
// value will be populated with the ListScanSubTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanSubTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanSubTasksCommon Send returns without error.
//
// See ListScanSubTasksCommon for more information on using the ListScanSubTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListScanSubTasksCommonRequest method.
//    req, resp := client.ListScanSubTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanSubTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListScanSubTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanSubTasksCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanSubTasksCommon for usage and error information.
func (c *SECCENTER20240508) ListScanSubTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListScanSubTasksCommonRequest(input)
	return out, req.Send()
}

// ListScanSubTasksCommonWithContext is the same as ListScanSubTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanSubTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanSubTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListScanSubTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListScanSubTasks = "ListScanSubTasks"

// ListScanSubTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanSubTasks operation. The "output" return
// value will be populated with the ListScanSubTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanSubTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanSubTasksCommon Send returns without error.
//
// See ListScanSubTasks for more information on using the ListScanSubTasks
// API call, and error handling.
//
//    // Example sending a request using the ListScanSubTasksRequest method.
//    req, resp := client.ListScanSubTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanSubTasksRequest(input *ListScanSubTasksInput) (req *request.Request, output *ListScanSubTasksOutput) {
	op := &request.Operation{
		Name:       opListScanSubTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListScanSubTasksInput{}
	}

	output = &ListScanSubTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanSubTasks API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanSubTasks for usage and error information.
func (c *SECCENTER20240508) ListScanSubTasks(input *ListScanSubTasksInput) (*ListScanSubTasksOutput, error) {
	req, out := c.ListScanSubTasksRequest(input)
	return out, req.Send()
}

// ListScanSubTasksWithContext is the same as ListScanSubTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanSubTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanSubTasksWithContext(ctx volcengine.Context, input *ListScanSubTasksInput, opts ...request.Option) (*ListScanSubTasksOutput, error) {
	req, out := c.ListScanSubTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListScanSubTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	FailReason *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListScanSubTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListScanSubTasksOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForListScanSubTasksOutput) SetAgentID(v string) *DataForListScanSubTasksOutput {
	s.AgentID = &v
	return s
}

// SetFailReason sets the FailReason field's value.
func (s *DataForListScanSubTasksOutput) SetFailReason(v string) *DataForListScanSubTasksOutput {
	s.FailReason = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *DataForListScanSubTasksOutput) SetHostname(v string) *DataForListScanSubTasksOutput {
	s.Hostname = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForListScanSubTasksOutput) SetStatus(v string) *DataForListScanSubTasksOutput {
	s.Status = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *DataForListScanSubTasksOutput) SetTaskID(v string) *DataForListScanSubTasksOutput {
	s.TaskID = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListScanSubTasksOutput) SetUpdateTime(v int64) *DataForListScanSubTasksOutput {
	s.UpdateTime = &v
	return s
}

type ListScanSubTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListScanSubTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanSubTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListScanSubTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListScanSubTasksInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetHostname sets the Hostname field's value.
func (s *ListScanSubTasksInput) SetHostname(v string) *ListScanSubTasksInput {
	s.Hostname = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanSubTasksInput) SetPageNumber(v int64) *ListScanSubTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanSubTasksInput) SetPageSize(v int64) *ListScanSubTasksInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListScanSubTasksInput) SetSortBy(v string) *ListScanSubTasksInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListScanSubTasksInput) SetSortOrder(v string) *ListScanSubTasksInput {
	s.SortOrder = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListScanSubTasksInput) SetStatus(v []*string) *ListScanSubTasksInput {
	s.Status = v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *ListScanSubTasksInput) SetTaskID(v string) *ListScanSubTasksInput {
	s.TaskID = &v
	return s
}

type ListScanSubTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListScanSubTasksOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListScanSubTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanSubTasksOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListScanSubTasksOutput) SetData(v []*DataForListScanSubTasksOutput) *ListScanSubTasksOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanSubTasksOutput) SetPageNumber(v int64) *ListScanSubTasksOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanSubTasksOutput) SetPageSize(v int64) *ListScanSubTasksOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListScanSubTasksOutput) SetTotalCount(v int64) *ListScanSubTasksOutput {
	s.TotalCount = &v
	return s
}
