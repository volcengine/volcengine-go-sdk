// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDownloadBaselineCheckCommon = "DownloadBaselineCheck"

// DownloadBaselineCheckCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadBaselineCheckCommon operation. The "output" return
// value will be populated with the DownloadBaselineCheckCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadBaselineCheckCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadBaselineCheckCommon Send returns without error.
//
// See DownloadBaselineCheckCommon for more information on using the DownloadBaselineCheckCommon
// API call, and error handling.
//
//    // Example sending a request using the DownloadBaselineCheckCommonRequest method.
//    req, resp := client.DownloadBaselineCheckCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DownloadBaselineCheckCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDownloadBaselineCheckCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadBaselineCheckCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DownloadBaselineCheckCommon for usage and error information.
func (c *SECCENTER20240508) DownloadBaselineCheckCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DownloadBaselineCheckCommonRequest(input)
	return out, req.Send()
}

// DownloadBaselineCheckCommonWithContext is the same as DownloadBaselineCheckCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadBaselineCheckCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DownloadBaselineCheckCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DownloadBaselineCheckCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDownloadBaselineCheck = "DownloadBaselineCheck"

// DownloadBaselineCheckRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadBaselineCheck operation. The "output" return
// value will be populated with the DownloadBaselineCheckCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadBaselineCheckCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadBaselineCheckCommon Send returns without error.
//
// See DownloadBaselineCheck for more information on using the DownloadBaselineCheck
// API call, and error handling.
//
//    // Example sending a request using the DownloadBaselineCheckRequest method.
//    req, resp := client.DownloadBaselineCheckRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DownloadBaselineCheckRequest(input *DownloadBaselineCheckInput) (req *request.Request, output *DownloadBaselineCheckOutput) {
	op := &request.Operation{
		Name:       opDownloadBaselineCheck,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DownloadBaselineCheckInput{}
	}

	output = &DownloadBaselineCheckOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadBaselineCheck API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DownloadBaselineCheck for usage and error information.
func (c *SECCENTER20240508) DownloadBaselineCheck(input *DownloadBaselineCheckInput) (*DownloadBaselineCheckOutput, error) {
	req, out := c.DownloadBaselineCheckRequest(input)
	return out, req.Send()
}

// DownloadBaselineCheckWithContext is the same as DownloadBaselineCheck with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadBaselineCheck for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DownloadBaselineCheckWithContext(ctx volcengine.Context, input *DownloadBaselineCheckInput, opts ...request.Option) (*DownloadBaselineCheckOutput, error) {
	req, out := c.DownloadBaselineCheckRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForDownloadBaselineCheckInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CheckName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForDownloadBaselineCheckInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForDownloadBaselineCheckInput) GoString() string {
	return s.String()
}

// SetCheckName sets the CheckName field's value.
func (s *ConditionsForDownloadBaselineCheckInput) SetCheckName(v string) *ConditionsForDownloadBaselineCheckInput {
	s.CheckName = &v
	return s
}

type DownloadBaselineCheckInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BaselineID *int64 `type:"int64" json:",omitempty"`

	Conditions *ConditionsForDownloadBaselineCheckInput `type:"structure" json:",omitempty"`

	IDList []*int64 `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DownloadBaselineCheckInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadBaselineCheckInput) GoString() string {
	return s.String()
}

// SetBaselineID sets the BaselineID field's value.
func (s *DownloadBaselineCheckInput) SetBaselineID(v int64) *DownloadBaselineCheckInput {
	s.BaselineID = &v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *DownloadBaselineCheckInput) SetConditions(v *ConditionsForDownloadBaselineCheckInput) *DownloadBaselineCheckInput {
	s.Conditions = v
	return s
}

// SetIDList sets the IDList field's value.
func (s *DownloadBaselineCheckInput) SetIDList(v []*int64) *DownloadBaselineCheckInput {
	s.IDList = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *DownloadBaselineCheckInput) SetTopGroupID(v string) *DownloadBaselineCheckInput {
	s.TopGroupID = &v
	return s
}

type DownloadBaselineCheckOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DownloadBaselineCheckOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadBaselineCheckOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *DownloadBaselineCheckOutput) SetFileName(v string) *DownloadBaselineCheckOutput {
	s.FileName = &v
	return s
}
