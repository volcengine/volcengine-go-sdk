// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetAlarmRuleListCommon = "GetAlarmRuleList"

// GetAlarmRuleListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAlarmRuleListCommon operation. The "output" return
// value will be populated with the GetAlarmRuleListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAlarmRuleListCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAlarmRuleListCommon Send returns without error.
//
// See GetAlarmRuleListCommon for more information on using the GetAlarmRuleListCommon
// API call, and error handling.
//
//    // Example sending a request using the GetAlarmRuleListCommonRequest method.
//    req, resp := client.GetAlarmRuleListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetAlarmRuleListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetAlarmRuleListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAlarmRuleListCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetAlarmRuleListCommon for usage and error information.
func (c *SECCENTER20240508) GetAlarmRuleListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetAlarmRuleListCommonRequest(input)
	return out, req.Send()
}

// GetAlarmRuleListCommonWithContext is the same as GetAlarmRuleListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetAlarmRuleListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetAlarmRuleListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetAlarmRuleListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAlarmRuleList = "GetAlarmRuleList"

// GetAlarmRuleListRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAlarmRuleList operation. The "output" return
// value will be populated with the GetAlarmRuleListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAlarmRuleListCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAlarmRuleListCommon Send returns without error.
//
// See GetAlarmRuleList for more information on using the GetAlarmRuleList
// API call, and error handling.
//
//    // Example sending a request using the GetAlarmRuleListRequest method.
//    req, resp := client.GetAlarmRuleListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetAlarmRuleListRequest(input *GetAlarmRuleListInput) (req *request.Request, output *GetAlarmRuleListOutput) {
	op := &request.Operation{
		Name:       opGetAlarmRuleList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAlarmRuleListInput{}
	}

	output = &GetAlarmRuleListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAlarmRuleList API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetAlarmRuleList for usage and error information.
func (c *SECCENTER20240508) GetAlarmRuleList(input *GetAlarmRuleListInput) (*GetAlarmRuleListOutput, error) {
	req, out := c.GetAlarmRuleListRequest(input)
	return out, req.Send()
}

// GetAlarmRuleListWithContext is the same as GetAlarmRuleList with the addition of
// the ability to pass a context and additional request options.
//
// See GetAlarmRuleList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetAlarmRuleListWithContext(ctx volcengine.Context, input *GetAlarmRuleListInput, opts ...request.Option) (*GetAlarmRuleListOutput, error) {
	req, out := c.GetAlarmRuleListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetAlarmRuleListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlertDesc *string `type:"string" json:",omitempty"`

	AlertDescUs *string `type:"string" json:",omitempty"`

	AlertType *string `type:"string" json:",omitempty"`

	AlertTypeUs *string `type:"string" json:",omitempty"`

	HarmLevel *string `type:"string" json:",omitempty"`

	RuleCategory *string `type:"string" json:",omitempty"`

	RuleID *string `type:"string" json:",omitempty"`

	RuleName *string `type:"string" json:",omitempty"`

	RuleNameUs *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetAlarmRuleListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetAlarmRuleListOutput) GoString() string {
	return s.String()
}

// SetAlertDesc sets the AlertDesc field's value.
func (s *DataForGetAlarmRuleListOutput) SetAlertDesc(v string) *DataForGetAlarmRuleListOutput {
	s.AlertDesc = &v
	return s
}

// SetAlertDescUs sets the AlertDescUs field's value.
func (s *DataForGetAlarmRuleListOutput) SetAlertDescUs(v string) *DataForGetAlarmRuleListOutput {
	s.AlertDescUs = &v
	return s
}

// SetAlertType sets the AlertType field's value.
func (s *DataForGetAlarmRuleListOutput) SetAlertType(v string) *DataForGetAlarmRuleListOutput {
	s.AlertType = &v
	return s
}

// SetAlertTypeUs sets the AlertTypeUs field's value.
func (s *DataForGetAlarmRuleListOutput) SetAlertTypeUs(v string) *DataForGetAlarmRuleListOutput {
	s.AlertTypeUs = &v
	return s
}

// SetHarmLevel sets the HarmLevel field's value.
func (s *DataForGetAlarmRuleListOutput) SetHarmLevel(v string) *DataForGetAlarmRuleListOutput {
	s.HarmLevel = &v
	return s
}

// SetRuleCategory sets the RuleCategory field's value.
func (s *DataForGetAlarmRuleListOutput) SetRuleCategory(v string) *DataForGetAlarmRuleListOutput {
	s.RuleCategory = &v
	return s
}

// SetRuleID sets the RuleID field's value.
func (s *DataForGetAlarmRuleListOutput) SetRuleID(v string) *DataForGetAlarmRuleListOutput {
	s.RuleID = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *DataForGetAlarmRuleListOutput) SetRuleName(v string) *DataForGetAlarmRuleListOutput {
	s.RuleName = &v
	return s
}

// SetRuleNameUs sets the RuleNameUs field's value.
func (s *DataForGetAlarmRuleListOutput) SetRuleNameUs(v string) *DataForGetAlarmRuleListOutput {
	s.RuleNameUs = &v
	return s
}

type GetAlarmRuleListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlarmRuleIDList []*string `type:"list" json:",omitempty"`

	AlertTypeList []*string `type:"list" json:",omitempty"`

	HarmLevelList []*string `type:"list" json:",omitempty"`

	NoticeType *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	RuleName *string `type:"string" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetAlarmRuleListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAlarmRuleListInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetAlarmRuleListInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetAlarmRuleListInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlarmRuleIDList sets the AlarmRuleIDList field's value.
func (s *GetAlarmRuleListInput) SetAlarmRuleIDList(v []*string) *GetAlarmRuleListInput {
	s.AlarmRuleIDList = v
	return s
}

// SetAlertTypeList sets the AlertTypeList field's value.
func (s *GetAlarmRuleListInput) SetAlertTypeList(v []*string) *GetAlarmRuleListInput {
	s.AlertTypeList = v
	return s
}

// SetHarmLevelList sets the HarmLevelList field's value.
func (s *GetAlarmRuleListInput) SetHarmLevelList(v []*string) *GetAlarmRuleListInput {
	s.HarmLevelList = v
	return s
}

// SetNoticeType sets the NoticeType field's value.
func (s *GetAlarmRuleListInput) SetNoticeType(v string) *GetAlarmRuleListInput {
	s.NoticeType = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetAlarmRuleListInput) SetPageNumber(v int64) *GetAlarmRuleListInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetAlarmRuleListInput) SetPageSize(v int64) *GetAlarmRuleListInput {
	s.PageSize = &v
	return s
}

// SetRuleName sets the RuleName field's value.
func (s *GetAlarmRuleListInput) SetRuleName(v string) *GetAlarmRuleListInput {
	s.RuleName = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetAlarmRuleListInput) SetSortBy(v string) *GetAlarmRuleListInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetAlarmRuleListInput) SetSortOrder(v string) *GetAlarmRuleListInput {
	s.SortOrder = &v
	return s
}

type GetAlarmRuleListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetAlarmRuleListOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetAlarmRuleListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAlarmRuleListOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetAlarmRuleListOutput) SetData(v []*DataForGetAlarmRuleListOutput) *GetAlarmRuleListOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetAlarmRuleListOutput) SetPageNumber(v int64) *GetAlarmRuleListOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetAlarmRuleListOutput) SetPageSize(v int64) *GetAlarmRuleListOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetAlarmRuleListOutput) SetTotalCount(v int64) *GetAlarmRuleListOutput {
	s.TotalCount = &v
	return s
}
