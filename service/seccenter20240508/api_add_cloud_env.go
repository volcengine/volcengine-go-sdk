// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddCloudEnvCommon = "AddCloudEnv"

// AddCloudEnvCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddCloudEnvCommon operation. The "output" return
// value will be populated with the AddCloudEnvCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddCloudEnvCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddCloudEnvCommon Send returns without error.
//
// See AddCloudEnvCommon for more information on using the AddCloudEnvCommon
// API call, and error handling.
//
//    // Example sending a request using the AddCloudEnvCommonRequest method.
//    req, resp := client.AddCloudEnvCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) AddCloudEnvCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddCloudEnvCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddCloudEnvCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation AddCloudEnvCommon for usage and error information.
func (c *SECCENTER20240508) AddCloudEnvCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddCloudEnvCommonRequest(input)
	return out, req.Send()
}

// AddCloudEnvCommonWithContext is the same as AddCloudEnvCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddCloudEnvCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) AddCloudEnvCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddCloudEnvCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddCloudEnv = "AddCloudEnv"

// AddCloudEnvRequest generates a "volcengine/request.Request" representing the
// client's request for the AddCloudEnv operation. The "output" return
// value will be populated with the AddCloudEnvCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddCloudEnvCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddCloudEnvCommon Send returns without error.
//
// See AddCloudEnv for more information on using the AddCloudEnv
// API call, and error handling.
//
//    // Example sending a request using the AddCloudEnvRequest method.
//    req, resp := client.AddCloudEnvRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) AddCloudEnvRequest(input *AddCloudEnvInput) (req *request.Request, output *AddCloudEnvOutput) {
	op := &request.Operation{
		Name:       opAddCloudEnv,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddCloudEnvInput{}
	}

	output = &AddCloudEnvOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddCloudEnv API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation AddCloudEnv for usage and error information.
func (c *SECCENTER20240508) AddCloudEnv(input *AddCloudEnvInput) (*AddCloudEnvOutput, error) {
	req, out := c.AddCloudEnvRequest(input)
	return out, req.Send()
}

// AddCloudEnvWithContext is the same as AddCloudEnv with the addition of
// the ability to pass a context and additional request options.
//
// See AddCloudEnv for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) AddCloudEnvWithContext(ctx volcengine.Context, input *AddCloudEnvInput, opts ...request.Option) (*AddCloudEnvOutput, error) {
	req, out := c.AddCloudEnvRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddCloudEnvInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AccessKey is a required field
	AccessKey *string `type:"string" json:",omitempty" required:"true"`

	// CloudPlatform is a required field
	CloudPlatform *string `type:"string" json:",omitempty" required:"true"`

	Comment *string `type:"string" json:",omitempty"`

	// KeyType is a required field
	KeyType *string `type:"string" json:",omitempty" required:"true"`

	// SecretKey is a required field
	SecretKey *string `type:"string" json:",omitempty" required:"true"`

	// SyncPeriod is a required field
	SyncPeriod *int64 `type:"int64" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s AddCloudEnvInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddCloudEnvInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddCloudEnvInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddCloudEnvInput"}
	if s.AccessKey == nil {
		invalidParams.Add(request.NewErrParamRequired("AccessKey"))
	}
	if s.CloudPlatform == nil {
		invalidParams.Add(request.NewErrParamRequired("CloudPlatform"))
	}
	if s.KeyType == nil {
		invalidParams.Add(request.NewErrParamRequired("KeyType"))
	}
	if s.SecretKey == nil {
		invalidParams.Add(request.NewErrParamRequired("SecretKey"))
	}
	if s.SyncPeriod == nil {
		invalidParams.Add(request.NewErrParamRequired("SyncPeriod"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessKey sets the AccessKey field's value.
func (s *AddCloudEnvInput) SetAccessKey(v string) *AddCloudEnvInput {
	s.AccessKey = &v
	return s
}

// SetCloudPlatform sets the CloudPlatform field's value.
func (s *AddCloudEnvInput) SetCloudPlatform(v string) *AddCloudEnvInput {
	s.CloudPlatform = &v
	return s
}

// SetComment sets the Comment field's value.
func (s *AddCloudEnvInput) SetComment(v string) *AddCloudEnvInput {
	s.Comment = &v
	return s
}

// SetKeyType sets the KeyType field's value.
func (s *AddCloudEnvInput) SetKeyType(v string) *AddCloudEnvInput {
	s.KeyType = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *AddCloudEnvInput) SetSecretKey(v string) *AddCloudEnvInput {
	s.SecretKey = &v
	return s
}

// SetSyncPeriod sets the SyncPeriod field's value.
func (s *AddCloudEnvInput) SetSyncPeriod(v int64) *AddCloudEnvInput {
	s.SyncPeriod = &v
	return s
}

type AddCloudEnvOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AddCloudEnvOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddCloudEnvOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *AddCloudEnvOutput) SetData(v string) *AddCloudEnvOutput {
	s.Data = &v
	return s
}
