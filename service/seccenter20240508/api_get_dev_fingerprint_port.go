// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDevFingerprintPortCommon = "GetDevFingerprintPort"

// GetDevFingerprintPortCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintPortCommon operation. The "output" return
// value will be populated with the GetDevFingerprintPortCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintPortCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintPortCommon Send returns without error.
//
// See GetDevFingerprintPortCommon for more information on using the GetDevFingerprintPortCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintPortCommonRequest method.
//    req, resp := client.GetDevFingerprintPortCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintPortCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDevFingerprintPortCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintPortCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintPortCommon for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintPortCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintPortCommonRequest(input)
	return out, req.Send()
}

// GetDevFingerprintPortCommonWithContext is the same as GetDevFingerprintPortCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintPortCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintPortCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintPortCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDevFingerprintPort = "GetDevFingerprintPort"

// GetDevFingerprintPortRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintPort operation. The "output" return
// value will be populated with the GetDevFingerprintPortCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintPortCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintPortCommon Send returns without error.
//
// See GetDevFingerprintPort for more information on using the GetDevFingerprintPort
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintPortRequest method.
//    req, resp := client.GetDevFingerprintPortRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintPortRequest(input *GetDevFingerprintPortInput) (req *request.Request, output *GetDevFingerprintPortOutput) {
	op := &request.Operation{
		Name:       opGetDevFingerprintPort,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDevFingerprintPortInput{}
	}

	output = &GetDevFingerprintPortOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintPort API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintPort for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintPort(input *GetDevFingerprintPortInput) (*GetDevFingerprintPortOutput, error) {
	req, out := c.GetDevFingerprintPortRequest(input)
	return out, req.Send()
}

// GetDevFingerprintPortWithContext is the same as GetDevFingerprintPort with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintPort for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintPortWithContext(ctx volcengine.Context, input *GetDevFingerprintPortInput, opts ...request.Option) (*GetDevFingerprintPortOutput, error) {
	req, out := c.GetDevFingerprintPortRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetDevFingerprintPortOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	AssetId *string `type:"string" json:",omitempty"`

	AssetName *string `type:"string" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Pid *string `type:"string" json:",omitempty"`

	PrivateIP *string `type:"string" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`

	PublicIP *string `type:"string" json:",omitempty"`

	Sip *string `type:"string" json:",omitempty"`

	Sport *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetDevFingerprintPortOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetDevFingerprintPortOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DataForGetDevFingerprintPortOutput) SetAccountId(v string) *DataForGetDevFingerprintPortOutput {
	s.AccountId = &v
	return s
}

// SetAssetId sets the AssetId field's value.
func (s *DataForGetDevFingerprintPortOutput) SetAssetId(v string) *DataForGetDevFingerprintPortOutput {
	s.AssetId = &v
	return s
}

// SetAssetName sets the AssetName field's value.
func (s *DataForGetDevFingerprintPortOutput) SetAssetName(v string) *DataForGetDevFingerprintPortOutput {
	s.AssetName = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *DataForGetDevFingerprintPortOutput) SetCmdline(v string) *DataForGetDevFingerprintPortOutput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *DataForGetDevFingerprintPortOutput) SetComm(v string) *DataForGetDevFingerprintPortOutput {
	s.Comm = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForGetDevFingerprintPortOutput) SetID(v string) *DataForGetDevFingerprintPortOutput {
	s.ID = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *DataForGetDevFingerprintPortOutput) SetPid(v string) *DataForGetDevFingerprintPortOutput {
	s.Pid = &v
	return s
}

// SetPrivateIP sets the PrivateIP field's value.
func (s *DataForGetDevFingerprintPortOutput) SetPrivateIP(v string) *DataForGetDevFingerprintPortOutput {
	s.PrivateIP = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DataForGetDevFingerprintPortOutput) SetProtocol(v string) *DataForGetDevFingerprintPortOutput {
	s.Protocol = &v
	return s
}

// SetPublicIP sets the PublicIP field's value.
func (s *DataForGetDevFingerprintPortOutput) SetPublicIP(v string) *DataForGetDevFingerprintPortOutput {
	s.PublicIP = &v
	return s
}

// SetSip sets the Sip field's value.
func (s *DataForGetDevFingerprintPortOutput) SetSip(v string) *DataForGetDevFingerprintPortOutput {
	s.Sip = &v
	return s
}

// SetSport sets the Sport field's value.
func (s *DataForGetDevFingerprintPortOutput) SetSport(v string) *DataForGetDevFingerprintPortOutput {
	s.Sport = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForGetDevFingerprintPortOutput) SetStartTime(v int64) *DataForGetDevFingerprintPortOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForGetDevFingerprintPortOutput) SetStatus(v string) *DataForGetDevFingerprintPortOutput {
	s.Status = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForGetDevFingerprintPortOutput) SetUid(v string) *DataForGetDevFingerprintPortOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForGetDevFingerprintPortOutput) SetUpdateTime(v int64) *DataForGetDevFingerprintPortOutput {
	s.UpdateTime = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *DataForGetDevFingerprintPortOutput) SetUsername(v string) *DataForGetDevFingerprintPortOutput {
	s.Username = &v
	return s
}

type GetDevFingerprintPortInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetID *string `type:"string" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	Sip *string `type:"string" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty" enum:"EnumOfSortOrderForGetDevFingerprintPortInput"`

	Sport *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintPortInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintPortInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDevFingerprintPortInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDevFingerprintPortInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetID sets the AssetID field's value.
func (s *GetDevFingerprintPortInput) SetAssetID(v string) *GetDevFingerprintPortInput {
	s.AssetID = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *GetDevFingerprintPortInput) SetCmdline(v string) *GetDevFingerprintPortInput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *GetDevFingerprintPortInput) SetComm(v string) *GetDevFingerprintPortInput {
	s.Comm = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintPortInput) SetPageNumber(v int64) *GetDevFingerprintPortInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintPortInput) SetPageSize(v int64) *GetDevFingerprintPortInput {
	s.PageSize = &v
	return s
}

// SetSip sets the Sip field's value.
func (s *GetDevFingerprintPortInput) SetSip(v string) *GetDevFingerprintPortInput {
	s.Sip = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetDevFingerprintPortInput) SetSortBy(v string) *GetDevFingerprintPortInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetDevFingerprintPortInput) SetSortOrder(v string) *GetDevFingerprintPortInput {
	s.SortOrder = &v
	return s
}

// SetSport sets the Sport field's value.
func (s *GetDevFingerprintPortInput) SetSport(v string) *GetDevFingerprintPortInput {
	s.Sport = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *GetDevFingerprintPortInput) SetUsername(v string) *GetDevFingerprintPortInput {
	s.Username = &v
	return s
}

type GetDevFingerprintPortOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetDevFingerprintPortOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintPortOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintPortOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetDevFingerprintPortOutput) SetData(v []*DataForGetDevFingerprintPortOutput) *GetDevFingerprintPortOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintPortOutput) SetPageNumber(v int64) *GetDevFingerprintPortOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintPortOutput) SetPageSize(v int64) *GetDevFingerprintPortOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetDevFingerprintPortOutput) SetTotalCount(v int64) *GetDevFingerprintPortOutput {
	s.TotalCount = &v
	return s
}

const (
	// EnumOfSortOrderForGetDevFingerprintPortInputAsc is a EnumOfSortOrderForGetDevFingerprintPortInput enum value
	EnumOfSortOrderForGetDevFingerprintPortInputAsc = "Asc"

	// EnumOfSortOrderForGetDevFingerprintPortInputDesc is a EnumOfSortOrderForGetDevFingerprintPortInput enum value
	EnumOfSortOrderForGetDevFingerprintPortInputDesc = " Desc"
)
