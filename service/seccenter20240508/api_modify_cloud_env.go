// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyCloudEnvCommon = "ModifyCloudEnv"

// ModifyCloudEnvCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCloudEnvCommon operation. The "output" return
// value will be populated with the ModifyCloudEnvCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCloudEnvCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCloudEnvCommon Send returns without error.
//
// See ModifyCloudEnvCommon for more information on using the ModifyCloudEnvCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyCloudEnvCommonRequest method.
//    req, resp := client.ModifyCloudEnvCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ModifyCloudEnvCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyCloudEnvCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyCloudEnvCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ModifyCloudEnvCommon for usage and error information.
func (c *SECCENTER20240508) ModifyCloudEnvCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyCloudEnvCommonRequest(input)
	return out, req.Send()
}

// ModifyCloudEnvCommonWithContext is the same as ModifyCloudEnvCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCloudEnvCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ModifyCloudEnvCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyCloudEnvCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyCloudEnv = "ModifyCloudEnv"

// ModifyCloudEnvRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyCloudEnv operation. The "output" return
// value will be populated with the ModifyCloudEnvCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyCloudEnvCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyCloudEnvCommon Send returns without error.
//
// See ModifyCloudEnv for more information on using the ModifyCloudEnv
// API call, and error handling.
//
//    // Example sending a request using the ModifyCloudEnvRequest method.
//    req, resp := client.ModifyCloudEnvRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ModifyCloudEnvRequest(input *ModifyCloudEnvInput) (req *request.Request, output *ModifyCloudEnvOutput) {
	op := &request.Operation{
		Name:       opModifyCloudEnv,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyCloudEnvInput{}
	}

	output = &ModifyCloudEnvOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyCloudEnv API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ModifyCloudEnv for usage and error information.
func (c *SECCENTER20240508) ModifyCloudEnv(input *ModifyCloudEnvInput) (*ModifyCloudEnvOutput, error) {
	req, out := c.ModifyCloudEnvRequest(input)
	return out, req.Send()
}

// ModifyCloudEnvWithContext is the same as ModifyCloudEnv with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyCloudEnv for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ModifyCloudEnvWithContext(ctx volcengine.Context, input *ModifyCloudEnvInput, opts ...request.Option) (*ModifyCloudEnvOutput, error) {
	req, out := c.ModifyCloudEnvRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyCloudEnvInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comment *string `type:"string" json:",omitempty"`

	// ID is a required field
	ID *string `type:"string" json:",omitempty" required:"true"`

	SyncPeriod *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ModifyCloudEnvInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCloudEnvInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyCloudEnvInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyCloudEnvInput"}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetComment sets the Comment field's value.
func (s *ModifyCloudEnvInput) SetComment(v string) *ModifyCloudEnvInput {
	s.Comment = &v
	return s
}

// SetID sets the ID field's value.
func (s *ModifyCloudEnvInput) SetID(v string) *ModifyCloudEnvInput {
	s.ID = &v
	return s
}

// SetSyncPeriod sets the SyncPeriod field's value.
func (s *ModifyCloudEnvInput) SetSyncPeriod(v int64) *ModifyCloudEnvInput {
	s.SyncPeriod = &v
	return s
}

type ModifyCloudEnvOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyCloudEnvOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyCloudEnvOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ModifyCloudEnvOutput) SetData(v string) *ModifyCloudEnvOutput {
	s.Data = &v
	return s
}
