// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetGroupCheckStatusCommon = "GetGroupCheckStatus"

// GetGroupCheckStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGroupCheckStatusCommon operation. The "output" return
// value will be populated with the GetGroupCheckStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGroupCheckStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGroupCheckStatusCommon Send returns without error.
//
// See GetGroupCheckStatusCommon for more information on using the GetGroupCheckStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetGroupCheckStatusCommonRequest method.
//    req, resp := client.GetGroupCheckStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetGroupCheckStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetGroupCheckStatusCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetGroupCheckStatusCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetGroupCheckStatusCommon for usage and error information.
func (c *SECCENTER20240508) GetGroupCheckStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetGroupCheckStatusCommonRequest(input)
	return out, req.Send()
}

// GetGroupCheckStatusCommonWithContext is the same as GetGroupCheckStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetGroupCheckStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetGroupCheckStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetGroupCheckStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetGroupCheckStatus = "GetGroupCheckStatus"

// GetGroupCheckStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGroupCheckStatus operation. The "output" return
// value will be populated with the GetGroupCheckStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGroupCheckStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGroupCheckStatusCommon Send returns without error.
//
// See GetGroupCheckStatus for more information on using the GetGroupCheckStatus
// API call, and error handling.
//
//    // Example sending a request using the GetGroupCheckStatusRequest method.
//    req, resp := client.GetGroupCheckStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetGroupCheckStatusRequest(input *GetGroupCheckStatusInput) (req *request.Request, output *GetGroupCheckStatusOutput) {
	op := &request.Operation{
		Name:       opGetGroupCheckStatus,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetGroupCheckStatusInput{}
	}

	output = &GetGroupCheckStatusOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetGroupCheckStatus API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetGroupCheckStatus for usage and error information.
func (c *SECCENTER20240508) GetGroupCheckStatus(input *GetGroupCheckStatusInput) (*GetGroupCheckStatusOutput, error) {
	req, out := c.GetGroupCheckStatusRequest(input)
	return out, req.Send()
}

// GetGroupCheckStatusWithContext is the same as GetGroupCheckStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetGroupCheckStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetGroupCheckStatusWithContext(ctx volcengine.Context, input *GetGroupCheckStatusInput, opts ...request.Option) (*GetGroupCheckStatusOutput, error) {
	req, out := c.GetGroupCheckStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetGroupCheckStatusInput struct {
	_ struct{} `type:"structure"`

	BaselineID *int64 `type:"int64"`

	GroupID *int64 `type:"int64"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetGroupCheckStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGroupCheckStatusInput) GoString() string {
	return s.String()
}

// SetBaselineID sets the BaselineID field's value.
func (s *GetGroupCheckStatusInput) SetBaselineID(v int64) *GetGroupCheckStatusInput {
	s.BaselineID = &v
	return s
}

// SetGroupID sets the GroupID field's value.
func (s *GetGroupCheckStatusInput) SetGroupID(v int64) *GetGroupCheckStatusInput {
	s.GroupID = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetGroupCheckStatusInput) SetTopGroupID(v string) *GetGroupCheckStatusInput {
	s.TopGroupID = &v
	return s
}

type GetGroupCheckStatusOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LastCheckTime *int64 `type:"int64"`

	Progress *int64 `type:"int64"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s GetGroupCheckStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGroupCheckStatusOutput) GoString() string {
	return s.String()
}

// SetLastCheckTime sets the LastCheckTime field's value.
func (s *GetGroupCheckStatusOutput) SetLastCheckTime(v int64) *GetGroupCheckStatusOutput {
	s.LastCheckTime = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *GetGroupCheckStatusOutput) SetProgress(v int64) *GetGroupCheckStatusOutput {
	s.Progress = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetGroupCheckStatusOutput) SetStatus(v string) *GetGroupCheckStatusOutput {
	s.Status = &v
	return s
}
