// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetMlpUpdateSoftwareTaskDetailCommon = "GetMlpUpdateSoftwareTaskDetail"

// GetMlpUpdateSoftwareTaskDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMlpUpdateSoftwareTaskDetailCommon operation. The "output" return
// value will be populated with the GetMlpUpdateSoftwareTaskDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMlpUpdateSoftwareTaskDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMlpUpdateSoftwareTaskDetailCommon Send returns without error.
//
// See GetMlpUpdateSoftwareTaskDetailCommon for more information on using the GetMlpUpdateSoftwareTaskDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the GetMlpUpdateSoftwareTaskDetailCommonRequest method.
//    req, resp := client.GetMlpUpdateSoftwareTaskDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetMlpUpdateSoftwareTaskDetailCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetMlpUpdateSoftwareTaskDetailCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMlpUpdateSoftwareTaskDetailCommon for usage and error information.
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetMlpUpdateSoftwareTaskDetailCommonRequest(input)
	return out, req.Send()
}

// GetMlpUpdateSoftwareTaskDetailCommonWithContext is the same as GetMlpUpdateSoftwareTaskDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetMlpUpdateSoftwareTaskDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetMlpUpdateSoftwareTaskDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetMlpUpdateSoftwareTaskDetail = "GetMlpUpdateSoftwareTaskDetail"

// GetMlpUpdateSoftwareTaskDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMlpUpdateSoftwareTaskDetail operation. The "output" return
// value will be populated with the GetMlpUpdateSoftwareTaskDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMlpUpdateSoftwareTaskDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMlpUpdateSoftwareTaskDetailCommon Send returns without error.
//
// See GetMlpUpdateSoftwareTaskDetail for more information on using the GetMlpUpdateSoftwareTaskDetail
// API call, and error handling.
//
//    // Example sending a request using the GetMlpUpdateSoftwareTaskDetailRequest method.
//    req, resp := client.GetMlpUpdateSoftwareTaskDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetailRequest(input *GetMlpUpdateSoftwareTaskDetailInput) (req *request.Request, output *GetMlpUpdateSoftwareTaskDetailOutput) {
	op := &request.Operation{
		Name:       opGetMlpUpdateSoftwareTaskDetail,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetMlpUpdateSoftwareTaskDetailInput{}
	}

	output = &GetMlpUpdateSoftwareTaskDetailOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetMlpUpdateSoftwareTaskDetail API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMlpUpdateSoftwareTaskDetail for usage and error information.
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetail(input *GetMlpUpdateSoftwareTaskDetailInput) (*GetMlpUpdateSoftwareTaskDetailOutput, error) {
	req, out := c.GetMlpUpdateSoftwareTaskDetailRequest(input)
	return out, req.Send()
}

// GetMlpUpdateSoftwareTaskDetailWithContext is the same as GetMlpUpdateSoftwareTaskDetail with the addition of
// the ability to pass a context and additional request options.
//
// See GetMlpUpdateSoftwareTaskDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMlpUpdateSoftwareTaskDetailWithContext(ctx volcengine.Context, input *GetMlpUpdateSoftwareTaskDetailInput, opts ...request.Option) (*GetMlpUpdateSoftwareTaskDetailOutput, error) {
	req, out := c.GetMlpUpdateSoftwareTaskDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetMlpUpdateSoftwareTaskDetailInput struct {
	_ struct{} `type:"structure"`

	TaskId *string `type:"string"`
}

// String returns the string representation
func (s GetMlpUpdateSoftwareTaskDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMlpUpdateSoftwareTaskDetailInput) GoString() string {
	return s.String()
}

// SetTaskId sets the TaskId field's value.
func (s *GetMlpUpdateSoftwareTaskDetailInput) SetTaskId(v string) *GetMlpUpdateSoftwareTaskDetailInput {
	s.TaskId = &v
	return s
}

type GetMlpUpdateSoftwareTaskDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	LastCheckTime *int64 `type:"int64"`

	Progress *int64 `type:"int64"`

	TaskId *string `type:"string"`
}

// String returns the string representation
func (s GetMlpUpdateSoftwareTaskDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMlpUpdateSoftwareTaskDetailOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *GetMlpUpdateSoftwareTaskDetailOutput) SetAccountId(v string) *GetMlpUpdateSoftwareTaskDetailOutput {
	s.AccountId = &v
	return s
}

// SetLastCheckTime sets the LastCheckTime field's value.
func (s *GetMlpUpdateSoftwareTaskDetailOutput) SetLastCheckTime(v int64) *GetMlpUpdateSoftwareTaskDetailOutput {
	s.LastCheckTime = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *GetMlpUpdateSoftwareTaskDetailOutput) SetProgress(v int64) *GetMlpUpdateSoftwareTaskDetailOutput {
	s.Progress = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *GetMlpUpdateSoftwareTaskDetailOutput) SetTaskId(v string) *GetMlpUpdateSoftwareTaskDetailOutput {
	s.TaskId = &v
	return s
}
