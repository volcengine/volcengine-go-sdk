// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetMlpAlarmStatisticsCommon = "GetMlpAlarmStatistics"

// GetMlpAlarmStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMlpAlarmStatisticsCommon operation. The "output" return
// value will be populated with the GetMlpAlarmStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMlpAlarmStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMlpAlarmStatisticsCommon Send returns without error.
//
// See GetMlpAlarmStatisticsCommon for more information on using the GetMlpAlarmStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetMlpAlarmStatisticsCommonRequest method.
//    req, resp := client.GetMlpAlarmStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMlpAlarmStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetMlpAlarmStatisticsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetMlpAlarmStatisticsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMlpAlarmStatisticsCommon for usage and error information.
func (c *SECCENTER20240508) GetMlpAlarmStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetMlpAlarmStatisticsCommonRequest(input)
	return out, req.Send()
}

// GetMlpAlarmStatisticsCommonWithContext is the same as GetMlpAlarmStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetMlpAlarmStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMlpAlarmStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetMlpAlarmStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetMlpAlarmStatistics = "GetMlpAlarmStatistics"

// GetMlpAlarmStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMlpAlarmStatistics operation. The "output" return
// value will be populated with the GetMlpAlarmStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMlpAlarmStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMlpAlarmStatisticsCommon Send returns without error.
//
// See GetMlpAlarmStatistics for more information on using the GetMlpAlarmStatistics
// API call, and error handling.
//
//    // Example sending a request using the GetMlpAlarmStatisticsRequest method.
//    req, resp := client.GetMlpAlarmStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMlpAlarmStatisticsRequest(input *GetMlpAlarmStatisticsInput) (req *request.Request, output *GetMlpAlarmStatisticsOutput) {
	op := &request.Operation{
		Name:       opGetMlpAlarmStatistics,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetMlpAlarmStatisticsInput{}
	}

	output = &GetMlpAlarmStatisticsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetMlpAlarmStatistics API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMlpAlarmStatistics for usage and error information.
func (c *SECCENTER20240508) GetMlpAlarmStatistics(input *GetMlpAlarmStatisticsInput) (*GetMlpAlarmStatisticsOutput, error) {
	req, out := c.GetMlpAlarmStatisticsRequest(input)
	return out, req.Send()
}

// GetMlpAlarmStatisticsWithContext is the same as GetMlpAlarmStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See GetMlpAlarmStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMlpAlarmStatisticsWithContext(ctx volcengine.Context, input *GetMlpAlarmStatisticsInput, opts ...request.Option) (*GetMlpAlarmStatisticsOutput, error) {
	req, out := c.GetMlpAlarmStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetMlpAlarmStatisticsInput struct {
	_ struct{} `type:"structure"`

	AgentID *string `type:"string"`

	ClusterID *string `type:"string"`

	EndTime *int64 `type:"int64"`

	MlpInstanceID *string `type:"string"`

	StartTime *int64 `type:"int64"`
}

// String returns the string representation
func (s GetMlpAlarmStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMlpAlarmStatisticsInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *GetMlpAlarmStatisticsInput) SetAgentID(v string) *GetMlpAlarmStatisticsInput {
	s.AgentID = &v
	return s
}

// SetClusterID sets the ClusterID field's value.
func (s *GetMlpAlarmStatisticsInput) SetClusterID(v string) *GetMlpAlarmStatisticsInput {
	s.ClusterID = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *GetMlpAlarmStatisticsInput) SetEndTime(v int64) *GetMlpAlarmStatisticsInput {
	s.EndTime = &v
	return s
}

// SetMlpInstanceID sets the MlpInstanceID field's value.
func (s *GetMlpAlarmStatisticsInput) SetMlpInstanceID(v string) *GetMlpAlarmStatisticsInput {
	s.MlpInstanceID = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *GetMlpAlarmStatisticsInput) SetStartTime(v int64) *GetMlpAlarmStatisticsInput {
	s.StartTime = &v
	return s
}

type GetMlpAlarmStatisticsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AlarmCriticalCount *int64 `type:"int64"`

	AlarmHighCount *int64 `type:"int64"`

	AlarmLowCount *int64 `type:"int64"`

	AlarmMediumCount *int64 `type:"int64"`

	AlarmProcessedCount *int64 `type:"int64"`

	AlarmTotal *int64 `type:"int64"`

	AlarmWhiteCount *int64 `type:"int64"`

	IsolateFileCount *int64 `type:"int64"`

	IsolateTodayCount *int64 `type:"int64"`

	PrecisionDefenseCount *int64 `type:"int64"`

	PrecisionDefenseTodayCount *int64 `type:"int64"`

	UnhandledTodayCount *int64 `type:"int64"`
}

// String returns the string representation
func (s GetMlpAlarmStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMlpAlarmStatisticsOutput) GoString() string {
	return s.String()
}

// SetAlarmCriticalCount sets the AlarmCriticalCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmCriticalCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmCriticalCount = &v
	return s
}

// SetAlarmHighCount sets the AlarmHighCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmHighCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmHighCount = &v
	return s
}

// SetAlarmLowCount sets the AlarmLowCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmLowCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmLowCount = &v
	return s
}

// SetAlarmMediumCount sets the AlarmMediumCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmMediumCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmMediumCount = &v
	return s
}

// SetAlarmProcessedCount sets the AlarmProcessedCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmProcessedCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmProcessedCount = &v
	return s
}

// SetAlarmTotal sets the AlarmTotal field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmTotal(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmTotal = &v
	return s
}

// SetAlarmWhiteCount sets the AlarmWhiteCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetAlarmWhiteCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.AlarmWhiteCount = &v
	return s
}

// SetIsolateFileCount sets the IsolateFileCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetIsolateFileCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.IsolateFileCount = &v
	return s
}

// SetIsolateTodayCount sets the IsolateTodayCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetIsolateTodayCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.IsolateTodayCount = &v
	return s
}

// SetPrecisionDefenseCount sets the PrecisionDefenseCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetPrecisionDefenseCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.PrecisionDefenseCount = &v
	return s
}

// SetPrecisionDefenseTodayCount sets the PrecisionDefenseTodayCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetPrecisionDefenseTodayCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.PrecisionDefenseTodayCount = &v
	return s
}

// SetUnhandledTodayCount sets the UnhandledTodayCount field's value.
func (s *GetMlpAlarmStatisticsOutput) SetUnhandledTodayCount(v int64) *GetMlpAlarmStatisticsOutput {
	s.UnhandledTodayCount = &v
	return s
}
