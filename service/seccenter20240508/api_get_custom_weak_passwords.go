// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetCustomWeakPasswordsCommon = "GetCustomWeakPasswords"

// GetCustomWeakPasswordsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetCustomWeakPasswordsCommon operation. The "output" return
// value will be populated with the GetCustomWeakPasswordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomWeakPasswordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomWeakPasswordsCommon Send returns without error.
//
// See GetCustomWeakPasswordsCommon for more information on using the GetCustomWeakPasswordsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetCustomWeakPasswordsCommonRequest method.
//    req, resp := client.GetCustomWeakPasswordsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetCustomWeakPasswordsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetCustomWeakPasswordsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetCustomWeakPasswordsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetCustomWeakPasswordsCommon for usage and error information.
func (c *SECCENTER20240508) GetCustomWeakPasswordsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetCustomWeakPasswordsCommonRequest(input)
	return out, req.Send()
}

// GetCustomWeakPasswordsCommonWithContext is the same as GetCustomWeakPasswordsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomWeakPasswordsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetCustomWeakPasswordsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetCustomWeakPasswordsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetCustomWeakPasswords = "GetCustomWeakPasswords"

// GetCustomWeakPasswordsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetCustomWeakPasswords operation. The "output" return
// value will be populated with the GetCustomWeakPasswordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetCustomWeakPasswordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetCustomWeakPasswordsCommon Send returns without error.
//
// See GetCustomWeakPasswords for more information on using the GetCustomWeakPasswords
// API call, and error handling.
//
//    // Example sending a request using the GetCustomWeakPasswordsRequest method.
//    req, resp := client.GetCustomWeakPasswordsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetCustomWeakPasswordsRequest(input *GetCustomWeakPasswordsInput) (req *request.Request, output *GetCustomWeakPasswordsOutput) {
	op := &request.Operation{
		Name:       opGetCustomWeakPasswords,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetCustomWeakPasswordsInput{}
	}

	output = &GetCustomWeakPasswordsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetCustomWeakPasswords API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetCustomWeakPasswords for usage and error information.
func (c *SECCENTER20240508) GetCustomWeakPasswords(input *GetCustomWeakPasswordsInput) (*GetCustomWeakPasswordsOutput, error) {
	req, out := c.GetCustomWeakPasswordsRequest(input)
	return out, req.Send()
}

// GetCustomWeakPasswordsWithContext is the same as GetCustomWeakPasswords with the addition of
// the ability to pass a context and additional request options.
//
// See GetCustomWeakPasswords for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetCustomWeakPasswordsWithContext(ctx volcengine.Context, input *GetCustomWeakPasswordsInput, opts ...request.Option) (*GetCustomWeakPasswordsOutput, error) {
	req, out := c.GetCustomWeakPasswordsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetCustomWeakPasswordsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetCustomWeakPasswordsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomWeakPasswordsInput) GoString() string {
	return s.String()
}

type GetCustomWeakPasswordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccountID *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	UpdateUser *string `type:"string" json:",omitempty"`

	WeakPasswordList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GetCustomWeakPasswordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetCustomWeakPasswordsOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *GetCustomWeakPasswordsOutput) SetAccountID(v string) *GetCustomWeakPasswordsOutput {
	s.AccountID = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetCustomWeakPasswordsOutput) SetUpdateTime(v int64) *GetCustomWeakPasswordsOutput {
	s.UpdateTime = &v
	return s
}

// SetUpdateUser sets the UpdateUser field's value.
func (s *GetCustomWeakPasswordsOutput) SetUpdateUser(v string) *GetCustomWeakPasswordsOutput {
	s.UpdateUser = &v
	return s
}

// SetWeakPasswordList sets the WeakPasswordList field's value.
func (s *GetCustomWeakPasswordsOutput) SetWeakPasswordList(v []*string) *GetCustomWeakPasswordsOutput {
	s.WeakPasswordList = v
	return s
}
