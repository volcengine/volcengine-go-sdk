// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUnBanIPItemCommon = "UnBanIPItem"

// UnBanIPItemCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UnBanIPItemCommon operation. The "output" return
// value will be populated with the UnBanIPItemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UnBanIPItemCommon Request to send the API call to the service.
// the "output" return value is not valid until after UnBanIPItemCommon Send returns without error.
//
// See UnBanIPItemCommon for more information on using the UnBanIPItemCommon
// API call, and error handling.
//
//    // Example sending a request using the UnBanIPItemCommonRequest method.
//    req, resp := client.UnBanIPItemCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UnBanIPItemCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUnBanIPItemCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UnBanIPItemCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UnBanIPItemCommon for usage and error information.
func (c *SECCENTER20240508) UnBanIPItemCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UnBanIPItemCommonRequest(input)
	return out, req.Send()
}

// UnBanIPItemCommonWithContext is the same as UnBanIPItemCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UnBanIPItemCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UnBanIPItemCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UnBanIPItemCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUnBanIPItem = "UnBanIPItem"

// UnBanIPItemRequest generates a "volcengine/request.Request" representing the
// client's request for the UnBanIPItem operation. The "output" return
// value will be populated with the UnBanIPItemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UnBanIPItemCommon Request to send the API call to the service.
// the "output" return value is not valid until after UnBanIPItemCommon Send returns without error.
//
// See UnBanIPItem for more information on using the UnBanIPItem
// API call, and error handling.
//
//    // Example sending a request using the UnBanIPItemRequest method.
//    req, resp := client.UnBanIPItemRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UnBanIPItemRequest(input *UnBanIPItemInput) (req *request.Request, output *UnBanIPItemOutput) {
	op := &request.Operation{
		Name:       opUnBanIPItem,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UnBanIPItemInput{}
	}

	output = &UnBanIPItemOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UnBanIPItem API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UnBanIPItem for usage and error information.
func (c *SECCENTER20240508) UnBanIPItem(input *UnBanIPItemInput) (*UnBanIPItemOutput, error) {
	req, out := c.UnBanIPItemRequest(input)
	return out, req.Send()
}

// UnBanIPItemWithContext is the same as UnBanIPItem with the addition of
// the ability to pass a context and additional request options.
//
// See UnBanIPItem for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UnBanIPItemWithContext(ctx volcengine.Context, input *UnBanIPItemInput, opts ...request.Option) (*UnBanIPItemOutput, error) {
	req, out := c.UnBanIPItemRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UnBanIPItemInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UnBanIPItemInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnBanIPItemInput) GoString() string {
	return s.String()
}

// SetID sets the ID field's value.
func (s *UnBanIPItemInput) SetID(v string) *UnBanIPItemInput {
	s.ID = &v
	return s
}

type UnBanIPItemOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Reason *string `type:"string" json:"reason,omitempty"`

	Success *bool `type:"boolean" json:"success,omitempty"`
}

// String returns the string representation
func (s UnBanIPItemOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UnBanIPItemOutput) GoString() string {
	return s.String()
}

// SetReason sets the Reason field's value.
func (s *UnBanIPItemOutput) SetReason(v string) *UnBanIPItemOutput {
	s.Reason = &v
	return s
}

// SetSuccess sets the Success field's value.
func (s *UnBanIPItemOutput) SetSuccess(v bool) *UnBanIPItemOutput {
	s.Success = &v
	return s
}
