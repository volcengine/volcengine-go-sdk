// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListCloudEnvsCommon = "ListCloudEnvs"

// ListCloudEnvsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCloudEnvsCommon operation. The "output" return
// value will be populated with the ListCloudEnvsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCloudEnvsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCloudEnvsCommon Send returns without error.
//
// See ListCloudEnvsCommon for more information on using the ListCloudEnvsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListCloudEnvsCommonRequest method.
//    req, resp := client.ListCloudEnvsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListCloudEnvsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListCloudEnvsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCloudEnvsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListCloudEnvsCommon for usage and error information.
func (c *SECCENTER20240508) ListCloudEnvsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListCloudEnvsCommonRequest(input)
	return out, req.Send()
}

// ListCloudEnvsCommonWithContext is the same as ListCloudEnvsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListCloudEnvsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListCloudEnvsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListCloudEnvsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListCloudEnvs = "ListCloudEnvs"

// ListCloudEnvsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListCloudEnvs operation. The "output" return
// value will be populated with the ListCloudEnvsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListCloudEnvsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListCloudEnvsCommon Send returns without error.
//
// See ListCloudEnvs for more information on using the ListCloudEnvs
// API call, and error handling.
//
//    // Example sending a request using the ListCloudEnvsRequest method.
//    req, resp := client.ListCloudEnvsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListCloudEnvsRequest(input *ListCloudEnvsInput) (req *request.Request, output *ListCloudEnvsOutput) {
	op := &request.Operation{
		Name:       opListCloudEnvs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListCloudEnvsInput{}
	}

	output = &ListCloudEnvsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListCloudEnvs API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListCloudEnvs for usage and error information.
func (c *SECCENTER20240508) ListCloudEnvs(input *ListCloudEnvsInput) (*ListCloudEnvsOutput, error) {
	req, out := c.ListCloudEnvsRequest(input)
	return out, req.Send()
}

// ListCloudEnvsWithContext is the same as ListCloudEnvs with the addition of
// the ability to pass a context and additional request options.
//
// See ListCloudEnvs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListCloudEnvsWithContext(ctx volcengine.Context, input *ListCloudEnvsInput, opts ...request.Option) (*ListCloudEnvsOutput, error) {
	req, out := c.ListCloudEnvsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListCloudEnvsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	CloudPlatform *string `type:"string" json:",omitempty"`

	Comment *string `type:"string" json:",omitempty"`

	ErrorMsg *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	KeyType *string `type:"string" json:",omitempty"`

	Status *int64 `type:"int64" json:",omitempty"`

	SyncPeriod *int64 `type:"int64" json:",omitempty"`

	SyncStatus *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListCloudEnvsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListCloudEnvsOutput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *DataForListCloudEnvsOutput) SetAccessKey(v string) *DataForListCloudEnvsOutput {
	s.AccessKey = &v
	return s
}

// SetCloudPlatform sets the CloudPlatform field's value.
func (s *DataForListCloudEnvsOutput) SetCloudPlatform(v string) *DataForListCloudEnvsOutput {
	s.CloudPlatform = &v
	return s
}

// SetComment sets the Comment field's value.
func (s *DataForListCloudEnvsOutput) SetComment(v string) *DataForListCloudEnvsOutput {
	s.Comment = &v
	return s
}

// SetErrorMsg sets the ErrorMsg field's value.
func (s *DataForListCloudEnvsOutput) SetErrorMsg(v string) *DataForListCloudEnvsOutput {
	s.ErrorMsg = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListCloudEnvsOutput) SetID(v string) *DataForListCloudEnvsOutput {
	s.ID = &v
	return s
}

// SetKeyType sets the KeyType field's value.
func (s *DataForListCloudEnvsOutput) SetKeyType(v string) *DataForListCloudEnvsOutput {
	s.KeyType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForListCloudEnvsOutput) SetStatus(v int64) *DataForListCloudEnvsOutput {
	s.Status = &v
	return s
}

// SetSyncPeriod sets the SyncPeriod field's value.
func (s *DataForListCloudEnvsOutput) SetSyncPeriod(v int64) *DataForListCloudEnvsOutput {
	s.SyncPeriod = &v
	return s
}

// SetSyncStatus sets the SyncStatus field's value.
func (s *DataForListCloudEnvsOutput) SetSyncStatus(v int64) *DataForListCloudEnvsOutput {
	s.SyncStatus = &v
	return s
}

type ListCloudEnvsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	CloudPlatform *string `type:"string" json:",omitempty"`

	Comment *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `min:"1" type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `min:"1" max:"5000" type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Status *int64 `type:"int64" json:",omitempty"`

	SyncStatus *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListCloudEnvsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCloudEnvsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListCloudEnvsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListCloudEnvsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageNumber != nil && *s.PageNumber < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageNumber", 1))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}
	if s.PageSize != nil && *s.PageSize < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageSize", 1))
	}
	if s.PageSize != nil && *s.PageSize > 5000 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 5000))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccessKey sets the AccessKey field's value.
func (s *ListCloudEnvsInput) SetAccessKey(v string) *ListCloudEnvsInput {
	s.AccessKey = &v
	return s
}

// SetCloudPlatform sets the CloudPlatform field's value.
func (s *ListCloudEnvsInput) SetCloudPlatform(v string) *ListCloudEnvsInput {
	s.CloudPlatform = &v
	return s
}

// SetComment sets the Comment field's value.
func (s *ListCloudEnvsInput) SetComment(v string) *ListCloudEnvsInput {
	s.Comment = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListCloudEnvsInput) SetPageNumber(v int64) *ListCloudEnvsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListCloudEnvsInput) SetPageSize(v int64) *ListCloudEnvsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListCloudEnvsInput) SetSortBy(v string) *ListCloudEnvsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListCloudEnvsInput) SetSortOrder(v string) *ListCloudEnvsInput {
	s.SortOrder = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListCloudEnvsInput) SetStatus(v int64) *ListCloudEnvsInput {
	s.Status = &v
	return s
}

// SetSyncStatus sets the SyncStatus field's value.
func (s *ListCloudEnvsInput) SetSyncStatus(v int64) *ListCloudEnvsInput {
	s.SyncStatus = &v
	return s
}

type ListCloudEnvsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListCloudEnvsOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListCloudEnvsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListCloudEnvsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListCloudEnvsOutput) SetData(v []*DataForListCloudEnvsOutput) *ListCloudEnvsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListCloudEnvsOutput) SetPageNumber(v int64) *ListCloudEnvsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListCloudEnvsOutput) SetPageSize(v int64) *ListCloudEnvsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListCloudEnvsOutput) SetTotalCount(v int64) *ListCloudEnvsOutput {
	s.TotalCount = &v
	return s
}
