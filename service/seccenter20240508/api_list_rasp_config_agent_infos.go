// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRaspConfigAgentInfosCommon = "ListRaspConfigAgentInfos"

// ListRaspConfigAgentInfosCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRaspConfigAgentInfosCommon operation. The "output" return
// value will be populated with the ListRaspConfigAgentInfosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRaspConfigAgentInfosCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRaspConfigAgentInfosCommon Send returns without error.
//
// See ListRaspConfigAgentInfosCommon for more information on using the ListRaspConfigAgentInfosCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRaspConfigAgentInfosCommonRequest method.
//    req, resp := client.ListRaspConfigAgentInfosCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRaspConfigAgentInfosCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRaspConfigAgentInfosCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRaspConfigAgentInfosCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRaspConfigAgentInfosCommon for usage and error information.
func (c *SECCENTER20240508) ListRaspConfigAgentInfosCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRaspConfigAgentInfosCommonRequest(input)
	return out, req.Send()
}

// ListRaspConfigAgentInfosCommonWithContext is the same as ListRaspConfigAgentInfosCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRaspConfigAgentInfosCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRaspConfigAgentInfosCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRaspConfigAgentInfosCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRaspConfigAgentInfos = "ListRaspConfigAgentInfos"

// ListRaspConfigAgentInfosRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRaspConfigAgentInfos operation. The "output" return
// value will be populated with the ListRaspConfigAgentInfosCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRaspConfigAgentInfosCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRaspConfigAgentInfosCommon Send returns without error.
//
// See ListRaspConfigAgentInfos for more information on using the ListRaspConfigAgentInfos
// API call, and error handling.
//
//    // Example sending a request using the ListRaspConfigAgentInfosRequest method.
//    req, resp := client.ListRaspConfigAgentInfosRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListRaspConfigAgentInfosRequest(input *ListRaspConfigAgentInfosInput) (req *request.Request, output *ListRaspConfigAgentInfosOutput) {
	op := &request.Operation{
		Name:       opListRaspConfigAgentInfos,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRaspConfigAgentInfosInput{}
	}

	output = &ListRaspConfigAgentInfosOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRaspConfigAgentInfos API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListRaspConfigAgentInfos for usage and error information.
func (c *SECCENTER20240508) ListRaspConfigAgentInfos(input *ListRaspConfigAgentInfosInput) (*ListRaspConfigAgentInfosOutput, error) {
	req, out := c.ListRaspConfigAgentInfosRequest(input)
	return out, req.Send()
}

// ListRaspConfigAgentInfosWithContext is the same as ListRaspConfigAgentInfos with the addition of
// the ability to pass a context and additional request options.
//
// See ListRaspConfigAgentInfos for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListRaspConfigAgentInfosWithContext(ctx volcengine.Context, input *ListRaspConfigAgentInfosInput, opts ...request.Option) (*ListRaspConfigAgentInfosOutput, error) {
	req, out := c.ListRaspConfigAgentInfosRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListRaspConfigAgentInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	CloudProvider *string `type:"string" json:",omitempty"`

	EcsInstance *EcsInstanceForListRaspConfigAgentInfosOutput `type:"structure" json:",omitempty"`

	EnableStatus *string `type:"string" json:",omitempty"`

	GroupID *string `type:"string" json:",omitempty"`

	GroupPath *string `type:"string" json:",omitempty"`

	HitWhiteProcessCount *int64 `type:"int64" json:",omitempty"`

	InsertTime *int64 `type:"int64" json:",omitempty"`

	ManualClose *bool `type:"boolean" json:",omitempty"`

	Platform *string `type:"string" json:",omitempty"`

	ProcessCount *int64 `type:"int64" json:",omitempty"`

	ProtectAbnormalProcessCount *int64 `type:"int64" json:",omitempty"`

	ProtectedProcessCount *int64 `type:"int64" json:",omitempty"`

	RaspConfigs []*string `type:"list" json:",omitempty"`

	Reason *string `type:"string" json:",omitempty"`

	RelateConfigNameList []*string `type:"list" json:",omitempty"`

	Tags []*string `type:"list" json:",omitempty"`

	ToBeProtectedProcessCount *int64 `type:"int64" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListRaspConfigAgentInfosOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListRaspConfigAgentInfosOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetAccountID(v string) *DataForListRaspConfigAgentInfosOutput {
	s.AccountID = &v
	return s
}

// SetAgentID sets the AgentID field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetAgentID(v string) *DataForListRaspConfigAgentInfosOutput {
	s.AgentID = &v
	return s
}

// SetCloudProvider sets the CloudProvider field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetCloudProvider(v string) *DataForListRaspConfigAgentInfosOutput {
	s.CloudProvider = &v
	return s
}

// SetEcsInstance sets the EcsInstance field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetEcsInstance(v *EcsInstanceForListRaspConfigAgentInfosOutput) *DataForListRaspConfigAgentInfosOutput {
	s.EcsInstance = v
	return s
}

// SetEnableStatus sets the EnableStatus field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetEnableStatus(v string) *DataForListRaspConfigAgentInfosOutput {
	s.EnableStatus = &v
	return s
}

// SetGroupID sets the GroupID field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetGroupID(v string) *DataForListRaspConfigAgentInfosOutput {
	s.GroupID = &v
	return s
}

// SetGroupPath sets the GroupPath field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetGroupPath(v string) *DataForListRaspConfigAgentInfosOutput {
	s.GroupPath = &v
	return s
}

// SetHitWhiteProcessCount sets the HitWhiteProcessCount field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetHitWhiteProcessCount(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.HitWhiteProcessCount = &v
	return s
}

// SetInsertTime sets the InsertTime field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetInsertTime(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.InsertTime = &v
	return s
}

// SetManualClose sets the ManualClose field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetManualClose(v bool) *DataForListRaspConfigAgentInfosOutput {
	s.ManualClose = &v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetPlatform(v string) *DataForListRaspConfigAgentInfosOutput {
	s.Platform = &v
	return s
}

// SetProcessCount sets the ProcessCount field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetProcessCount(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.ProcessCount = &v
	return s
}

// SetProtectAbnormalProcessCount sets the ProtectAbnormalProcessCount field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetProtectAbnormalProcessCount(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.ProtectAbnormalProcessCount = &v
	return s
}

// SetProtectedProcessCount sets the ProtectedProcessCount field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetProtectedProcessCount(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.ProtectedProcessCount = &v
	return s
}

// SetRaspConfigs sets the RaspConfigs field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetRaspConfigs(v []*string) *DataForListRaspConfigAgentInfosOutput {
	s.RaspConfigs = v
	return s
}

// SetReason sets the Reason field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetReason(v string) *DataForListRaspConfigAgentInfosOutput {
	s.Reason = &v
	return s
}

// SetRelateConfigNameList sets the RelateConfigNameList field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetRelateConfigNameList(v []*string) *DataForListRaspConfigAgentInfosOutput {
	s.RelateConfigNameList = v
	return s
}

// SetTags sets the Tags field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetTags(v []*string) *DataForListRaspConfigAgentInfosOutput {
	s.Tags = v
	return s
}

// SetToBeProtectedProcessCount sets the ToBeProtectedProcessCount field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetToBeProtectedProcessCount(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.ToBeProtectedProcessCount = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetTopGroupID(v string) *DataForListRaspConfigAgentInfosOutput {
	s.TopGroupID = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListRaspConfigAgentInfosOutput) SetUpdateTime(v int64) *DataForListRaspConfigAgentInfosOutput {
	s.UpdateTime = &v
	return s
}

type EcsInstanceForListRaspConfigAgentInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	Cpu *int64 `type:"int64" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	ECSUpdateAt *string `type:"string" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	HostName *string `type:"string" json:",omitempty"`

	IPList []*string `type:"list" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	Mem *int64 `type:"int64" json:",omitempty"`

	OsName *string `type:"string" json:",omitempty"`

	OsType *string `type:"string" json:",omitempty"`

	Platform *string `type:"string" json:",omitempty"`

	PlatformVersion *string `type:"string" json:",omitempty"`

	PrimaryIpAddress *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	SecurityEnhancementStrategy *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Visibility *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EcsInstanceForListRaspConfigAgentInfosOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EcsInstanceForListRaspConfigAgentInfosOutput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetAccessKey(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.AccessKey = &v
	return s
}

// SetAccountID sets the AccountID field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetAccountID(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.AccountID = &v
	return s
}

// SetCpu sets the Cpu field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetCpu(v int64) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Cpu = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetCreatedAt(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.CreatedAt = &v
	return s
}

// SetECSUpdateAt sets the ECSUpdateAt field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetECSUpdateAt(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.ECSUpdateAt = &v
	return s
}

// SetEipAddress sets the EipAddress field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetEipAddress(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.EipAddress = &v
	return s
}

// SetHostName sets the HostName field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetHostName(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.HostName = &v
	return s
}

// SetIPList sets the IPList field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetIPList(v []*string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.IPList = v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetInstanceName(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.InstanceName = &v
	return s
}

// SetMem sets the Mem field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetMem(v int64) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Mem = &v
	return s
}

// SetOsName sets the OsName field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetOsName(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.OsName = &v
	return s
}

// SetOsType sets the OsType field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetOsType(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.OsType = &v
	return s
}

// SetPlatform sets the Platform field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetPlatform(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Platform = &v
	return s
}

// SetPlatformVersion sets the PlatformVersion field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetPlatformVersion(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.PlatformVersion = &v
	return s
}

// SetPrimaryIpAddress sets the PrimaryIpAddress field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetPrimaryIpAddress(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.PrimaryIpAddress = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetRegion(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Region = &v
	return s
}

// SetSecurityEnhancementStrategy sets the SecurityEnhancementStrategy field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetSecurityEnhancementStrategy(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.SecurityEnhancementStrategy = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetStatus(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Status = &v
	return s
}

// SetVisibility sets the Visibility field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetVisibility(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.Visibility = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetVpcId(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetVpcName(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.VpcName = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *EcsInstanceForListRaspConfigAgentInfosOutput) SetZoneId(v string) *EcsInstanceForListRaspConfigAgentInfosOutput {
	s.ZoneId = &v
	return s
}

type ListRaspConfigAgentInfosInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	RaspEnableStatus []*string `type:"list" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Tags []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListRaspConfigAgentInfosInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRaspConfigAgentInfosInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListRaspConfigAgentInfosInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListRaspConfigAgentInfosInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentID sets the AgentID field's value.
func (s *ListRaspConfigAgentInfosInput) SetAgentID(v string) *ListRaspConfigAgentInfosInput {
	s.AgentID = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ListRaspConfigAgentInfosInput) SetCloudProviders(v []*string) *ListRaspConfigAgentInfosInput {
	s.CloudProviders = v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *ListRaspConfigAgentInfosInput) SetHostname(v string) *ListRaspConfigAgentInfosInput {
	s.Hostname = &v
	return s
}

// SetIP sets the IP field's value.
func (s *ListRaspConfigAgentInfosInput) SetIP(v string) *ListRaspConfigAgentInfosInput {
	s.IP = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *ListRaspConfigAgentInfosInput) SetLeafGroupIDs(v []*string) *ListRaspConfigAgentInfosInput {
	s.LeafGroupIDs = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRaspConfigAgentInfosInput) SetPageNumber(v int64) *ListRaspConfigAgentInfosInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRaspConfigAgentInfosInput) SetPageSize(v int64) *ListRaspConfigAgentInfosInput {
	s.PageSize = &v
	return s
}

// SetRaspEnableStatus sets the RaspEnableStatus field's value.
func (s *ListRaspConfigAgentInfosInput) SetRaspEnableStatus(v []*string) *ListRaspConfigAgentInfosInput {
	s.RaspEnableStatus = v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListRaspConfigAgentInfosInput) SetSortBy(v string) *ListRaspConfigAgentInfosInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListRaspConfigAgentInfosInput) SetSortOrder(v string) *ListRaspConfigAgentInfosInput {
	s.SortOrder = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListRaspConfigAgentInfosInput) SetTags(v []*string) *ListRaspConfigAgentInfosInput {
	s.Tags = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListRaspConfigAgentInfosInput) SetTopGroupID(v string) *ListRaspConfigAgentInfosInput {
	s.TopGroupID = &v
	return s
}

type ListRaspConfigAgentInfosOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListRaspConfigAgentInfosOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListRaspConfigAgentInfosOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRaspConfigAgentInfosOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListRaspConfigAgentInfosOutput) SetData(v []*DataForListRaspConfigAgentInfosOutput) *ListRaspConfigAgentInfosOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRaspConfigAgentInfosOutput) SetPageNumber(v int64) *ListRaspConfigAgentInfosOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRaspConfigAgentInfosOutput) SetPageSize(v int64) *ListRaspConfigAgentInfosOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRaspConfigAgentInfosOutput) SetTotalCount(v int64) *ListRaspConfigAgentInfosOutput {
	s.TotalCount = &v
	return s
}
