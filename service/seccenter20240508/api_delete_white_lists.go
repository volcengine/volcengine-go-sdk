// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteWhiteListsCommon = "DeleteWhiteLists"

// DeleteWhiteListsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteWhiteListsCommon operation. The "output" return
// value will be populated with the DeleteWhiteListsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteWhiteListsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteWhiteListsCommon Send returns without error.
//
// See DeleteWhiteListsCommon for more information on using the DeleteWhiteListsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteWhiteListsCommonRequest method.
//    req, resp := client.DeleteWhiteListsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DeleteWhiteListsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteWhiteListsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteWhiteListsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DeleteWhiteListsCommon for usage and error information.
func (c *SECCENTER20240508) DeleteWhiteListsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteWhiteListsCommonRequest(input)
	return out, req.Send()
}

// DeleteWhiteListsCommonWithContext is the same as DeleteWhiteListsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteWhiteListsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DeleteWhiteListsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteWhiteListsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteWhiteLists = "DeleteWhiteLists"

// DeleteWhiteListsRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteWhiteLists operation. The "output" return
// value will be populated with the DeleteWhiteListsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteWhiteListsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteWhiteListsCommon Send returns without error.
//
// See DeleteWhiteLists for more information on using the DeleteWhiteLists
// API call, and error handling.
//
//    // Example sending a request using the DeleteWhiteListsRequest method.
//    req, resp := client.DeleteWhiteListsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) DeleteWhiteListsRequest(input *DeleteWhiteListsInput) (req *request.Request, output *DeleteWhiteListsOutput) {
	op := &request.Operation{
		Name:       opDeleteWhiteLists,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteWhiteListsInput{}
	}

	output = &DeleteWhiteListsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteWhiteLists API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation DeleteWhiteLists for usage and error information.
func (c *SECCENTER20240508) DeleteWhiteLists(input *DeleteWhiteListsInput) (*DeleteWhiteListsOutput, error) {
	req, out := c.DeleteWhiteListsRequest(input)
	return out, req.Send()
}

// DeleteWhiteListsWithContext is the same as DeleteWhiteLists with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteWhiteLists for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) DeleteWhiteListsWithContext(ctx volcengine.Context, input *DeleteWhiteListsInput, opts ...request.Option) (*DeleteWhiteListsOutput, error) {
	req, out := c.DeleteWhiteListsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForDeleteWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Desc *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	MatchAlarmName *string `type:"string" json:",omitempty"`

	MatchContent *string `type:"string" json:",omitempty"`

	MatchKey *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Range *RangeForDeleteWhiteListsInput `type:"structure" json:",omitempty"`

	RangeIncludeGlobal *RangeIncludeGlobalForDeleteWhiteListsInput `type:"structure" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	UpdateTimeEnd *int64 `type:"int64" json:",omitempty"`

	UpdateTimeStart *int64 `type:"int64" json:",omitempty"`

	User *string `type:"string" json:",omitempty"`

	WhiteListID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForDeleteWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForDeleteWhiteListsInput) GoString() string {
	return s.String()
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetCloudProviders(v []*string) *ConditionsForDeleteWhiteListsInput {
	s.CloudProviders = v
	return s
}

// SetDesc sets the Desc field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetDesc(v string) *ConditionsForDeleteWhiteListsInput {
	s.Desc = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetLeafGroupIDs(v []*string) *ConditionsForDeleteWhiteListsInput {
	s.LeafGroupIDs = v
	return s
}

// SetMatchAlarmName sets the MatchAlarmName field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetMatchAlarmName(v string) *ConditionsForDeleteWhiteListsInput {
	s.MatchAlarmName = &v
	return s
}

// SetMatchContent sets the MatchContent field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetMatchContent(v string) *ConditionsForDeleteWhiteListsInput {
	s.MatchContent = &v
	return s
}

// SetMatchKey sets the MatchKey field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetMatchKey(v string) *ConditionsForDeleteWhiteListsInput {
	s.MatchKey = &v
	return s
}

// SetName sets the Name field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetName(v string) *ConditionsForDeleteWhiteListsInput {
	s.Name = &v
	return s
}

// SetRange sets the Range field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetRange(v *RangeForDeleteWhiteListsInput) *ConditionsForDeleteWhiteListsInput {
	s.Range = v
	return s
}

// SetRangeIncludeGlobal sets the RangeIncludeGlobal field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetRangeIncludeGlobal(v *RangeIncludeGlobalForDeleteWhiteListsInput) *ConditionsForDeleteWhiteListsInput {
	s.RangeIncludeGlobal = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetTopGroupID(v string) *ConditionsForDeleteWhiteListsInput {
	s.TopGroupID = &v
	return s
}

// SetUpdateTimeEnd sets the UpdateTimeEnd field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetUpdateTimeEnd(v int64) *ConditionsForDeleteWhiteListsInput {
	s.UpdateTimeEnd = &v
	return s
}

// SetUpdateTimeStart sets the UpdateTimeStart field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetUpdateTimeStart(v int64) *ConditionsForDeleteWhiteListsInput {
	s.UpdateTimeStart = &v
	return s
}

// SetUser sets the User field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetUser(v string) *ConditionsForDeleteWhiteListsInput {
	s.User = &v
	return s
}

// SetWhiteListID sets the WhiteListID field's value.
func (s *ConditionsForDeleteWhiteListsInput) SetWhiteListID(v string) *ConditionsForDeleteWhiteListsInput {
	s.WhiteListID = &v
	return s
}

type DeleteWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions *ConditionsForDeleteWhiteListsInput `type:"structure" json:",omitempty"`

	IDList []*string `type:"list" json:",omitempty"`

	// Type is a required field
	Type *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteWhiteListsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteWhiteListsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteWhiteListsInput"}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConditions sets the Conditions field's value.
func (s *DeleteWhiteListsInput) SetConditions(v *ConditionsForDeleteWhiteListsInput) *DeleteWhiteListsInput {
	s.Conditions = v
	return s
}

// SetIDList sets the IDList field's value.
func (s *DeleteWhiteListsInput) SetIDList(v []*string) *DeleteWhiteListsInput {
	s.IDList = v
	return s
}

// SetType sets the Type field's value.
func (s *DeleteWhiteListsInput) SetType(v string) *DeleteWhiteListsInput {
	s.Type = &v
	return s
}

type DeleteWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Success *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s DeleteWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteWhiteListsOutput) GoString() string {
	return s.String()
}

// SetSuccess sets the Success field's value.
func (s *DeleteWhiteListsOutput) SetSuccess(v bool) *DeleteWhiteListsOutput {
	s.Success = &v
	return s
}

type RangeForDeleteWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterArea *string `type:"string" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	IsGlobal *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RangeForDeleteWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RangeForDeleteWhiteListsInput) GoString() string {
	return s.String()
}

// SetClusterArea sets the ClusterArea field's value.
func (s *RangeForDeleteWhiteListsInput) SetClusterArea(v string) *RangeForDeleteWhiteListsInput {
	s.ClusterArea = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *RangeForDeleteWhiteListsInput) SetClusterName(v string) *RangeForDeleteWhiteListsInput {
	s.ClusterName = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *RangeForDeleteWhiteListsInput) SetHostname(v string) *RangeForDeleteWhiteListsInput {
	s.Hostname = &v
	return s
}

// SetIP sets the IP field's value.
func (s *RangeForDeleteWhiteListsInput) SetIP(v string) *RangeForDeleteWhiteListsInput {
	s.IP = &v
	return s
}

// SetIsGlobal sets the IsGlobal field's value.
func (s *RangeForDeleteWhiteListsInput) SetIsGlobal(v bool) *RangeForDeleteWhiteListsInput {
	s.IsGlobal = &v
	return s
}

type RangeIncludeGlobalForDeleteWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RangeIncludeGlobalForDeleteWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RangeIncludeGlobalForDeleteWhiteListsInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *RangeIncludeGlobalForDeleteWhiteListsInput) SetAgentID(v string) *RangeIncludeGlobalForDeleteWhiteListsInput {
	s.AgentID = &v
	return s
}
