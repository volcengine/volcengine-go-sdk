// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFingerprintWebCommon = "GetFingerprintWeb"

// GetFingerprintWebCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintWebCommon operation. The "output" return
// value will be populated with the GetFingerprintWebCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintWebCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintWebCommon Send returns without error.
//
// See GetFingerprintWebCommon for more information on using the GetFingerprintWebCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintWebCommonRequest method.
//    req, resp := client.GetFingerprintWebCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintWebCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFingerprintWebCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFingerprintWebCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintWebCommon for usage and error information.
func (c *SECCENTER20240508) GetFingerprintWebCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintWebCommonRequest(input)
	return out, req.Send()
}

// GetFingerprintWebCommonWithContext is the same as GetFingerprintWebCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintWebCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintWebCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintWebCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFingerprintWeb = "GetFingerprintWeb"

// GetFingerprintWebRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintWeb operation. The "output" return
// value will be populated with the GetFingerprintWebCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintWebCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintWebCommon Send returns without error.
//
// See GetFingerprintWeb for more information on using the GetFingerprintWeb
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintWebRequest method.
//    req, resp := client.GetFingerprintWebRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintWebRequest(input *GetFingerprintWebInput) (req *request.Request, output *GetFingerprintWebOutput) {
	op := &request.Operation{
		Name:       opGetFingerprintWeb,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFingerprintWebInput{}
	}

	output = &GetFingerprintWebOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFingerprintWeb API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintWeb for usage and error information.
func (c *SECCENTER20240508) GetFingerprintWeb(input *GetFingerprintWebInput) (*GetFingerprintWebOutput, error) {
	req, out := c.GetFingerprintWebRequest(input)
	return out, req.Send()
}

// GetFingerprintWebWithContext is the same as GetFingerprintWeb with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintWeb for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintWebWithContext(ctx volcengine.Context, input *GetFingerprintWebInput, opts ...request.Option) (*GetFingerprintWebOutput, error) {
	req, out := c.GetFingerprintWebRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetFingerprintWebOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AgentTags []*string `type:"list" json:",omitempty"`

	AppName *string `type:"string" json:",omitempty"`

	AppVersion *string `type:"string" json:",omitempty"`

	ContainerID *string `type:"string" json:",omitempty"`

	ContainerName *string `type:"string" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Path *string `type:"string" json:",omitempty"`

	Pid *string `type:"string" json:",omitempty"`

	PrimaryIpAddress *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetFingerprintWebOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetFingerprintWebOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForGetFingerprintWebOutput) SetAgentID(v string) *DataForGetFingerprintWebOutput {
	s.AgentID = &v
	return s
}

// SetAgentTags sets the AgentTags field's value.
func (s *DataForGetFingerprintWebOutput) SetAgentTags(v []*string) *DataForGetFingerprintWebOutput {
	s.AgentTags = v
	return s
}

// SetAppName sets the AppName field's value.
func (s *DataForGetFingerprintWebOutput) SetAppName(v string) *DataForGetFingerprintWebOutput {
	s.AppName = &v
	return s
}

// SetAppVersion sets the AppVersion field's value.
func (s *DataForGetFingerprintWebOutput) SetAppVersion(v string) *DataForGetFingerprintWebOutput {
	s.AppVersion = &v
	return s
}

// SetContainerID sets the ContainerID field's value.
func (s *DataForGetFingerprintWebOutput) SetContainerID(v string) *DataForGetFingerprintWebOutput {
	s.ContainerID = &v
	return s
}

// SetContainerName sets the ContainerName field's value.
func (s *DataForGetFingerprintWebOutput) SetContainerName(v string) *DataForGetFingerprintWebOutput {
	s.ContainerName = &v
	return s
}

// SetEipAddress sets the EipAddress field's value.
func (s *DataForGetFingerprintWebOutput) SetEipAddress(v string) *DataForGetFingerprintWebOutput {
	s.EipAddress = &v
	return s
}

// SetExe sets the Exe field's value.
func (s *DataForGetFingerprintWebOutput) SetExe(v string) *DataForGetFingerprintWebOutput {
	s.Exe = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *DataForGetFingerprintWebOutput) SetHostname(v string) *DataForGetFingerprintWebOutput {
	s.Hostname = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForGetFingerprintWebOutput) SetID(v string) *DataForGetFingerprintWebOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForGetFingerprintWebOutput) SetName(v string) *DataForGetFingerprintWebOutput {
	s.Name = &v
	return s
}

// SetPath sets the Path field's value.
func (s *DataForGetFingerprintWebOutput) SetPath(v string) *DataForGetFingerprintWebOutput {
	s.Path = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *DataForGetFingerprintWebOutput) SetPid(v string) *DataForGetFingerprintWebOutput {
	s.Pid = &v
	return s
}

// SetPrimaryIpAddress sets the PrimaryIpAddress field's value.
func (s *DataForGetFingerprintWebOutput) SetPrimaryIpAddress(v string) *DataForGetFingerprintWebOutput {
	s.PrimaryIpAddress = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForGetFingerprintWebOutput) SetStartTime(v int64) *DataForGetFingerprintWebOutput {
	s.StartTime = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForGetFingerprintWebOutput) SetUpdateTime(v int64) *DataForGetFingerprintWebOutput {
	s.UpdateTime = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *DataForGetFingerprintWebOutput) SetVersion(v string) *DataForGetFingerprintWebOutput {
	s.Version = &v
	return s
}

type GetFingerprintWebInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentId *string `type:"string" json:",omitempty"`

	AppName *string `type:"string" json:",omitempty"`

	AppVersion *string `type:"string" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	Path *string `type:"string" json:",omitempty"`

	Pid *string `type:"string" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	StartTimeEnd *int64 `type:"int64" json:",omitempty"`

	StartTimeStart *int64 `type:"int64" json:",omitempty"`

	Tags []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetFingerprintWebInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintWebInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetFingerprintWebInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetFingerprintWebInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentId sets the AgentId field's value.
func (s *GetFingerprintWebInput) SetAgentId(v string) *GetFingerprintWebInput {
	s.AgentId = &v
	return s
}

// SetAppName sets the AppName field's value.
func (s *GetFingerprintWebInput) SetAppName(v string) *GetFingerprintWebInput {
	s.AppName = &v
	return s
}

// SetAppVersion sets the AppVersion field's value.
func (s *GetFingerprintWebInput) SetAppVersion(v string) *GetFingerprintWebInput {
	s.AppVersion = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *GetFingerprintWebInput) SetCloudProviders(v []*string) *GetFingerprintWebInput {
	s.CloudProviders = v
	return s
}

// SetExe sets the Exe field's value.
func (s *GetFingerprintWebInput) SetExe(v string) *GetFingerprintWebInput {
	s.Exe = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *GetFingerprintWebInput) SetHostname(v string) *GetFingerprintWebInput {
	s.Hostname = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *GetFingerprintWebInput) SetIp(v string) *GetFingerprintWebInput {
	s.Ip = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *GetFingerprintWebInput) SetLeafGroupIDs(v []*string) *GetFingerprintWebInput {
	s.LeafGroupIDs = v
	return s
}

// SetName sets the Name field's value.
func (s *GetFingerprintWebInput) SetName(v string) *GetFingerprintWebInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetFingerprintWebInput) SetPageNumber(v int64) *GetFingerprintWebInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetFingerprintWebInput) SetPageSize(v int64) *GetFingerprintWebInput {
	s.PageSize = &v
	return s
}

// SetPath sets the Path field's value.
func (s *GetFingerprintWebInput) SetPath(v string) *GetFingerprintWebInput {
	s.Path = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *GetFingerprintWebInput) SetPid(v string) *GetFingerprintWebInput {
	s.Pid = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetFingerprintWebInput) SetSortBy(v string) *GetFingerprintWebInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetFingerprintWebInput) SetSortOrder(v string) *GetFingerprintWebInput {
	s.SortOrder = &v
	return s
}

// SetStartTimeEnd sets the StartTimeEnd field's value.
func (s *GetFingerprintWebInput) SetStartTimeEnd(v int64) *GetFingerprintWebInput {
	s.StartTimeEnd = &v
	return s
}

// SetStartTimeStart sets the StartTimeStart field's value.
func (s *GetFingerprintWebInput) SetStartTimeStart(v int64) *GetFingerprintWebInput {
	s.StartTimeStart = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *GetFingerprintWebInput) SetTags(v []*string) *GetFingerprintWebInput {
	s.Tags = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetFingerprintWebInput) SetTopGroupID(v string) *GetFingerprintWebInput {
	s.TopGroupID = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *GetFingerprintWebInput) SetVersion(v string) *GetFingerprintWebInput {
	s.Version = &v
	return s
}

type GetFingerprintWebOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetFingerprintWebOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetFingerprintWebOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintWebOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetFingerprintWebOutput) SetData(v []*DataForGetFingerprintWebOutput) *GetFingerprintWebOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetFingerprintWebOutput) SetPageNumber(v int64) *GetFingerprintWebOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetFingerprintWebOutput) SetPageSize(v int64) *GetFingerprintWebOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetFingerprintWebOutput) SetTotalCount(v int64) *GetFingerprintWebOutput {
	s.TotalCount = &v
	return s
}
