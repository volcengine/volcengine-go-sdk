// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListFingerprintCollectConfigCommon = "ListFingerprintCollectConfig"

// ListFingerprintCollectConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListFingerprintCollectConfigCommon operation. The "output" return
// value will be populated with the ListFingerprintCollectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListFingerprintCollectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListFingerprintCollectConfigCommon Send returns without error.
//
// See ListFingerprintCollectConfigCommon for more information on using the ListFingerprintCollectConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the ListFingerprintCollectConfigCommonRequest method.
//    req, resp := client.ListFingerprintCollectConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListFingerprintCollectConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListFingerprintCollectConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListFingerprintCollectConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListFingerprintCollectConfigCommon for usage and error information.
func (c *SECCENTER20240508) ListFingerprintCollectConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListFingerprintCollectConfigCommonRequest(input)
	return out, req.Send()
}

// ListFingerprintCollectConfigCommonWithContext is the same as ListFingerprintCollectConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListFingerprintCollectConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListFingerprintCollectConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListFingerprintCollectConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListFingerprintCollectConfig = "ListFingerprintCollectConfig"

// ListFingerprintCollectConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the ListFingerprintCollectConfig operation. The "output" return
// value will be populated with the ListFingerprintCollectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListFingerprintCollectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListFingerprintCollectConfigCommon Send returns without error.
//
// See ListFingerprintCollectConfig for more information on using the ListFingerprintCollectConfig
// API call, and error handling.
//
//    // Example sending a request using the ListFingerprintCollectConfigRequest method.
//    req, resp := client.ListFingerprintCollectConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListFingerprintCollectConfigRequest(input *ListFingerprintCollectConfigInput) (req *request.Request, output *ListFingerprintCollectConfigOutput) {
	op := &request.Operation{
		Name:       opListFingerprintCollectConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListFingerprintCollectConfigInput{}
	}

	output = &ListFingerprintCollectConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListFingerprintCollectConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListFingerprintCollectConfig for usage and error information.
func (c *SECCENTER20240508) ListFingerprintCollectConfig(input *ListFingerprintCollectConfigInput) (*ListFingerprintCollectConfigOutput, error) {
	req, out := c.ListFingerprintCollectConfigRequest(input)
	return out, req.Send()
}

// ListFingerprintCollectConfigWithContext is the same as ListFingerprintCollectConfig with the addition of
// the ability to pass a context and additional request options.
//
// See ListFingerprintCollectConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListFingerprintCollectConfigWithContext(ctx volcengine.Context, input *ListFingerprintCollectConfigInput, opts ...request.Option) (*ListFingerprintCollectConfigOutput, error) {
	req, out := c.ListFingerprintCollectConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListFingerprintCollectConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	EndTime *int64 `type:"int64" json:",omitempty"`

	FingerprintType *string `type:"string" json:",omitempty"`

	Model *string `type:"string" json:",omitempty"`

	Period *string `type:"string" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	UpdateUser *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListFingerprintCollectConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListFingerprintCollectConfigOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetAccountID(v string) *DataForListFingerprintCollectConfigOutput {
	s.AccountID = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetEndTime(v int64) *DataForListFingerprintCollectConfigOutput {
	s.EndTime = &v
	return s
}

// SetFingerprintType sets the FingerprintType field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetFingerprintType(v string) *DataForListFingerprintCollectConfigOutput {
	s.FingerprintType = &v
	return s
}

// SetModel sets the Model field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetModel(v string) *DataForListFingerprintCollectConfigOutput {
	s.Model = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetPeriod(v string) *DataForListFingerprintCollectConfigOutput {
	s.Period = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetRemark(v string) *DataForListFingerprintCollectConfigOutput {
	s.Remark = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetStartTime(v int64) *DataForListFingerprintCollectConfigOutput {
	s.StartTime = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetUpdateTime(v int64) *DataForListFingerprintCollectConfigOutput {
	s.UpdateTime = &v
	return s
}

// SetUpdateUser sets the UpdateUser field's value.
func (s *DataForListFingerprintCollectConfigOutput) SetUpdateUser(v string) *DataForListFingerprintCollectConfigOutput {
	s.UpdateUser = &v
	return s
}

type ListFingerprintCollectConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Model *string `type:"string" json:",omitempty"`

	Period *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListFingerprintCollectConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFingerprintCollectConfigInput) GoString() string {
	return s.String()
}

// SetModel sets the Model field's value.
func (s *ListFingerprintCollectConfigInput) SetModel(v string) *ListFingerprintCollectConfigInput {
	s.Model = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ListFingerprintCollectConfigInput) SetPeriod(v string) *ListFingerprintCollectConfigInput {
	s.Period = &v
	return s
}

type ListFingerprintCollectConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListFingerprintCollectConfigOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListFingerprintCollectConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListFingerprintCollectConfigOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListFingerprintCollectConfigOutput) SetData(v []*DataForListFingerprintCollectConfigOutput) *ListFingerprintCollectConfigOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListFingerprintCollectConfigOutput) SetPageNumber(v int64) *ListFingerprintCollectConfigOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListFingerprintCollectConfigOutput) SetPageSize(v int64) *ListFingerprintCollectConfigOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListFingerprintCollectConfigOutput) SetTotalCount(v int64) *ListFingerprintCollectConfigOutput {
	s.TotalCount = &v
	return s
}
