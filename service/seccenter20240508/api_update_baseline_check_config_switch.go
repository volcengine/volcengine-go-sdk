// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateBaselineCheckConfigSwitchCommon = "UpdateBaselineCheckConfigSwitch"

// UpdateBaselineCheckConfigSwitchCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBaselineCheckConfigSwitchCommon operation. The "output" return
// value will be populated with the UpdateBaselineCheckConfigSwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBaselineCheckConfigSwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBaselineCheckConfigSwitchCommon Send returns without error.
//
// See UpdateBaselineCheckConfigSwitchCommon for more information on using the UpdateBaselineCheckConfigSwitchCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateBaselineCheckConfigSwitchCommonRequest method.
//    req, resp := client.UpdateBaselineCheckConfigSwitchCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitchCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateBaselineCheckConfigSwitchCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBaselineCheckConfigSwitchCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateBaselineCheckConfigSwitchCommon for usage and error information.
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitchCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateBaselineCheckConfigSwitchCommonRequest(input)
	return out, req.Send()
}

// UpdateBaselineCheckConfigSwitchCommonWithContext is the same as UpdateBaselineCheckConfigSwitchCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBaselineCheckConfigSwitchCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitchCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateBaselineCheckConfigSwitchCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateBaselineCheckConfigSwitch = "UpdateBaselineCheckConfigSwitch"

// UpdateBaselineCheckConfigSwitchRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBaselineCheckConfigSwitch operation. The "output" return
// value will be populated with the UpdateBaselineCheckConfigSwitchCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBaselineCheckConfigSwitchCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBaselineCheckConfigSwitchCommon Send returns without error.
//
// See UpdateBaselineCheckConfigSwitch for more information on using the UpdateBaselineCheckConfigSwitch
// API call, and error handling.
//
//    // Example sending a request using the UpdateBaselineCheckConfigSwitchRequest method.
//    req, resp := client.UpdateBaselineCheckConfigSwitchRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitchRequest(input *UpdateBaselineCheckConfigSwitchInput) (req *request.Request, output *UpdateBaselineCheckConfigSwitchOutput) {
	op := &request.Operation{
		Name:       opUpdateBaselineCheckConfigSwitch,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateBaselineCheckConfigSwitchInput{}
	}

	output = &UpdateBaselineCheckConfigSwitchOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBaselineCheckConfigSwitch API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateBaselineCheckConfigSwitch for usage and error information.
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitch(input *UpdateBaselineCheckConfigSwitchInput) (*UpdateBaselineCheckConfigSwitchOutput, error) {
	req, out := c.UpdateBaselineCheckConfigSwitchRequest(input)
	return out, req.Send()
}

// UpdateBaselineCheckConfigSwitchWithContext is the same as UpdateBaselineCheckConfigSwitch with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBaselineCheckConfigSwitch for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateBaselineCheckConfigSwitchWithContext(ctx volcengine.Context, input *UpdateBaselineCheckConfigSwitchInput, opts ...request.Option) (*UpdateBaselineCheckConfigSwitchOutput, error) {
	req, out := c.UpdateBaselineCheckConfigSwitchRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateBaselineCheckConfigSwitchInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ConfigID is a required field
	ConfigID *string `type:"string" json:",omitempty" required:"true"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s UpdateBaselineCheckConfigSwitchInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBaselineCheckConfigSwitchInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBaselineCheckConfigSwitchInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateBaselineCheckConfigSwitchInput"}
	if s.ConfigID == nil {
		invalidParams.Add(request.NewErrParamRequired("ConfigID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfigID sets the ConfigID field's value.
func (s *UpdateBaselineCheckConfigSwitchInput) SetConfigID(v string) *UpdateBaselineCheckConfigSwitchInput {
	s.ConfigID = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateBaselineCheckConfigSwitchInput) SetEnable(v bool) *UpdateBaselineCheckConfigSwitchInput {
	s.Enable = &v
	return s
}

type UpdateBaselineCheckConfigSwitchOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateBaselineCheckConfigSwitchOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBaselineCheckConfigSwitchOutput) GoString() string {
	return s.String()
}

// SetStatus sets the Status field's value.
func (s *UpdateBaselineCheckConfigSwitchOutput) SetStatus(v string) *UpdateBaselineCheckConfigSwitchOutput {
	s.Status = &v
	return s
}
