// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCheckAlarmSupportBanIPCommon = "CheckAlarmSupportBanIP"

// CheckAlarmSupportBanIPCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CheckAlarmSupportBanIPCommon operation. The "output" return
// value will be populated with the CheckAlarmSupportBanIPCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CheckAlarmSupportBanIPCommon Request to send the API call to the service.
// the "output" return value is not valid until after CheckAlarmSupportBanIPCommon Send returns without error.
//
// See CheckAlarmSupportBanIPCommon for more information on using the CheckAlarmSupportBanIPCommon
// API call, and error handling.
//
//    // Example sending a request using the CheckAlarmSupportBanIPCommonRequest method.
//    req, resp := client.CheckAlarmSupportBanIPCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) CheckAlarmSupportBanIPCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCheckAlarmSupportBanIPCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CheckAlarmSupportBanIPCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation CheckAlarmSupportBanIPCommon for usage and error information.
func (c *SECCENTER20240508) CheckAlarmSupportBanIPCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CheckAlarmSupportBanIPCommonRequest(input)
	return out, req.Send()
}

// CheckAlarmSupportBanIPCommonWithContext is the same as CheckAlarmSupportBanIPCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CheckAlarmSupportBanIPCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) CheckAlarmSupportBanIPCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CheckAlarmSupportBanIPCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCheckAlarmSupportBanIP = "CheckAlarmSupportBanIP"

// CheckAlarmSupportBanIPRequest generates a "volcengine/request.Request" representing the
// client's request for the CheckAlarmSupportBanIP operation. The "output" return
// value will be populated with the CheckAlarmSupportBanIPCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CheckAlarmSupportBanIPCommon Request to send the API call to the service.
// the "output" return value is not valid until after CheckAlarmSupportBanIPCommon Send returns without error.
//
// See CheckAlarmSupportBanIP for more information on using the CheckAlarmSupportBanIP
// API call, and error handling.
//
//    // Example sending a request using the CheckAlarmSupportBanIPRequest method.
//    req, resp := client.CheckAlarmSupportBanIPRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) CheckAlarmSupportBanIPRequest(input *CheckAlarmSupportBanIPInput) (req *request.Request, output *CheckAlarmSupportBanIPOutput) {
	op := &request.Operation{
		Name:       opCheckAlarmSupportBanIP,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CheckAlarmSupportBanIPInput{}
	}

	output = &CheckAlarmSupportBanIPOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CheckAlarmSupportBanIP API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation CheckAlarmSupportBanIP for usage and error information.
func (c *SECCENTER20240508) CheckAlarmSupportBanIP(input *CheckAlarmSupportBanIPInput) (*CheckAlarmSupportBanIPOutput, error) {
	req, out := c.CheckAlarmSupportBanIPRequest(input)
	return out, req.Send()
}

// CheckAlarmSupportBanIPWithContext is the same as CheckAlarmSupportBanIP with the addition of
// the ability to pass a context and additional request options.
//
// See CheckAlarmSupportBanIP for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) CheckAlarmSupportBanIPWithContext(ctx volcengine.Context, input *CheckAlarmSupportBanIPInput, opts ...request.Option) (*CheckAlarmSupportBanIPOutput, error) {
	req, out := c.CheckAlarmSupportBanIPRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CheckAlarmSupportBanIPInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlarmID *string `type:"string" json:",omitempty"`

	AlarmType *string `type:"string" json:",omitempty"`

	BanTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CheckAlarmSupportBanIPInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckAlarmSupportBanIPInput) GoString() string {
	return s.String()
}

// SetAlarmID sets the AlarmID field's value.
func (s *CheckAlarmSupportBanIPInput) SetAlarmID(v string) *CheckAlarmSupportBanIPInput {
	s.AlarmID = &v
	return s
}

// SetAlarmType sets the AlarmType field's value.
func (s *CheckAlarmSupportBanIPInput) SetAlarmType(v string) *CheckAlarmSupportBanIPInput {
	s.AlarmType = &v
	return s
}

// SetBanTime sets the BanTime field's value.
func (s *CheckAlarmSupportBanIPInput) SetBanTime(v int64) *CheckAlarmSupportBanIPInput {
	s.BanTime = &v
	return s
}

type CheckAlarmSupportBanIPOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BanIP *string `type:"string" json:",omitempty"`

	BanPortRange *string `type:"string" json:",omitempty"`

	Direction *string `type:"string" json:",omitempty"`

	SecurityGroupName *string `type:"string" json:",omitempty"`

	Support *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s CheckAlarmSupportBanIPOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CheckAlarmSupportBanIPOutput) GoString() string {
	return s.String()
}

// SetBanIP sets the BanIP field's value.
func (s *CheckAlarmSupportBanIPOutput) SetBanIP(v string) *CheckAlarmSupportBanIPOutput {
	s.BanIP = &v
	return s
}

// SetBanPortRange sets the BanPortRange field's value.
func (s *CheckAlarmSupportBanIPOutput) SetBanPortRange(v string) *CheckAlarmSupportBanIPOutput {
	s.BanPortRange = &v
	return s
}

// SetDirection sets the Direction field's value.
func (s *CheckAlarmSupportBanIPOutput) SetDirection(v string) *CheckAlarmSupportBanIPOutput {
	s.Direction = &v
	return s
}

// SetSecurityGroupName sets the SecurityGroupName field's value.
func (s *CheckAlarmSupportBanIPOutput) SetSecurityGroupName(v string) *CheckAlarmSupportBanIPOutput {
	s.SecurityGroupName = &v
	return s
}

// SetSupport sets the Support field's value.
func (s *CheckAlarmSupportBanIPOutput) SetSupport(v bool) *CheckAlarmSupportBanIPOutput {
	s.Support = &v
	return s
}
