// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddLoginConfigCommon = "AddLoginConfig"

// AddLoginConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddLoginConfigCommon operation. The "output" return
// value will be populated with the AddLoginConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddLoginConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddLoginConfigCommon Send returns without error.
//
// See AddLoginConfigCommon for more information on using the AddLoginConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the AddLoginConfigCommonRequest method.
//    req, resp := client.AddLoginConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) AddLoginConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddLoginConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddLoginConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation AddLoginConfigCommon for usage and error information.
func (c *SECCENTER20240508) AddLoginConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddLoginConfigCommonRequest(input)
	return out, req.Send()
}

// AddLoginConfigCommonWithContext is the same as AddLoginConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddLoginConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) AddLoginConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddLoginConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddLoginConfig = "AddLoginConfig"

// AddLoginConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the AddLoginConfig operation. The "output" return
// value will be populated with the AddLoginConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddLoginConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddLoginConfigCommon Send returns without error.
//
// See AddLoginConfig for more information on using the AddLoginConfig
// API call, and error handling.
//
//    // Example sending a request using the AddLoginConfigRequest method.
//    req, resp := client.AddLoginConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) AddLoginConfigRequest(input *AddLoginConfigInput) (req *request.Request, output *AddLoginConfigOutput) {
	op := &request.Operation{
		Name:       opAddLoginConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddLoginConfigInput{}
	}

	output = &AddLoginConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddLoginConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation AddLoginConfig for usage and error information.
func (c *SECCENTER20240508) AddLoginConfig(input *AddLoginConfigInput) (*AddLoginConfigOutput, error) {
	req, out := c.AddLoginConfigRequest(input)
	return out, req.Send()
}

// AddLoginConfigWithContext is the same as AddLoginConfig with the addition of
// the ability to pass a context and additional request options.
//
// See AddLoginConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) AddLoginConfigWithContext(ctx volcengine.Context, input *AddLoginConfigInput, opts ...request.Option) (*AddLoginConfigOutput, error) {
	req, out := c.AddLoginConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddLoginConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentIDList []*string `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	IPList []*string `type:"list" json:",omitempty"`

	IfAllHost *bool `type:"boolean" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	LegalUser []*string `type:"list" json:",omitempty"`

	LoginConfigRules []*string `type:"list" json:",omitempty"`

	LoginLocations []*LoginLocationForAddLoginConfigInput `type:"list" json:",omitempty"`

	TimeIntervals []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AddLoginConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddLoginConfigInput) GoString() string {
	return s.String()
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *AddLoginConfigInput) SetAgentIDList(v []*string) *AddLoginConfigInput {
	s.AgentIDList = v
	return s
}

// SetDescription sets the Description field's value.
func (s *AddLoginConfigInput) SetDescription(v string) *AddLoginConfigInput {
	s.Description = &v
	return s
}

// SetIPList sets the IPList field's value.
func (s *AddLoginConfigInput) SetIPList(v []*string) *AddLoginConfigInput {
	s.IPList = v
	return s
}

// SetIfAllHost sets the IfAllHost field's value.
func (s *AddLoginConfigInput) SetIfAllHost(v bool) *AddLoginConfigInput {
	s.IfAllHost = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *AddLoginConfigInput) SetLeafGroupIDs(v []*string) *AddLoginConfigInput {
	s.LeafGroupIDs = v
	return s
}

// SetLegalUser sets the LegalUser field's value.
func (s *AddLoginConfigInput) SetLegalUser(v []*string) *AddLoginConfigInput {
	s.LegalUser = v
	return s
}

// SetLoginConfigRules sets the LoginConfigRules field's value.
func (s *AddLoginConfigInput) SetLoginConfigRules(v []*string) *AddLoginConfigInput {
	s.LoginConfigRules = v
	return s
}

// SetLoginLocations sets the LoginLocations field's value.
func (s *AddLoginConfigInput) SetLoginLocations(v []*LoginLocationForAddLoginConfigInput) *AddLoginConfigInput {
	s.LoginLocations = v
	return s
}

// SetTimeIntervals sets the TimeIntervals field's value.
func (s *AddLoginConfigInput) SetTimeIntervals(v []*string) *AddLoginConfigInput {
	s.TimeIntervals = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *AddLoginConfigInput) SetTopGroupID(v string) *AddLoginConfigInput {
	s.TopGroupID = &v
	return s
}

type AddLoginConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AddLoginConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddLoginConfigOutput) GoString() string {
	return s.String()
}

type LoginLocationForAddLoginConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CityName *string `type:"string" json:",omitempty"`

	CountryName *string `type:"string" json:",omitempty"`

	DistrictName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LoginLocationForAddLoginConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoginLocationForAddLoginConfigInput) GoString() string {
	return s.String()
}

// SetCityName sets the CityName field's value.
func (s *LoginLocationForAddLoginConfigInput) SetCityName(v string) *LoginLocationForAddLoginConfigInput {
	s.CityName = &v
	return s
}

// SetCountryName sets the CountryName field's value.
func (s *LoginLocationForAddLoginConfigInput) SetCountryName(v string) *LoginLocationForAddLoginConfigInput {
	s.CountryName = &v
	return s
}

// SetDistrictName sets the DistrictName field's value.
func (s *LoginLocationForAddLoginConfigInput) SetDistrictName(v string) *LoginLocationForAddLoginConfigInput {
	s.DistrictName = &v
	return s
}
