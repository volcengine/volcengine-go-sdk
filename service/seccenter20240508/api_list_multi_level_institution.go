// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListMultiLevelInstitutionCommon = "ListMultiLevelInstitution"

// ListMultiLevelInstitutionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListMultiLevelInstitutionCommon operation. The "output" return
// value will be populated with the ListMultiLevelInstitutionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListMultiLevelInstitutionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListMultiLevelInstitutionCommon Send returns without error.
//
// See ListMultiLevelInstitutionCommon for more information on using the ListMultiLevelInstitutionCommon
// API call, and error handling.
//
//    // Example sending a request using the ListMultiLevelInstitutionCommonRequest method.
//    req, resp := client.ListMultiLevelInstitutionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListMultiLevelInstitutionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListMultiLevelInstitutionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListMultiLevelInstitutionCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListMultiLevelInstitutionCommon for usage and error information.
func (c *SECCENTER20240508) ListMultiLevelInstitutionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListMultiLevelInstitutionCommonRequest(input)
	return out, req.Send()
}

// ListMultiLevelInstitutionCommonWithContext is the same as ListMultiLevelInstitutionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListMultiLevelInstitutionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListMultiLevelInstitutionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListMultiLevelInstitutionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListMultiLevelInstitution = "ListMultiLevelInstitution"

// ListMultiLevelInstitutionRequest generates a "volcengine/request.Request" representing the
// client's request for the ListMultiLevelInstitution operation. The "output" return
// value will be populated with the ListMultiLevelInstitutionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListMultiLevelInstitutionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListMultiLevelInstitutionCommon Send returns without error.
//
// See ListMultiLevelInstitution for more information on using the ListMultiLevelInstitution
// API call, and error handling.
//
//    // Example sending a request using the ListMultiLevelInstitutionRequest method.
//    req, resp := client.ListMultiLevelInstitutionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListMultiLevelInstitutionRequest(input *ListMultiLevelInstitutionInput) (req *request.Request, output *ListMultiLevelInstitutionOutput) {
	op := &request.Operation{
		Name:       opListMultiLevelInstitution,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListMultiLevelInstitutionInput{}
	}

	output = &ListMultiLevelInstitutionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListMultiLevelInstitution API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListMultiLevelInstitution for usage and error information.
func (c *SECCENTER20240508) ListMultiLevelInstitution(input *ListMultiLevelInstitutionInput) (*ListMultiLevelInstitutionOutput, error) {
	req, out := c.ListMultiLevelInstitutionRequest(input)
	return out, req.Send()
}

// ListMultiLevelInstitutionWithContext is the same as ListMultiLevelInstitution with the addition of
// the ability to pass a context and additional request options.
//
// See ListMultiLevelInstitution for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListMultiLevelInstitutionWithContext(ctx volcengine.Context, input *ListMultiLevelInstitutionInput, opts ...request.Option) (*ListMultiLevelInstitutionOutput, error) {
	req, out := c.ListMultiLevelInstitutionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListMultiLevelInstitutionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	AppSecOpen *bool `type:"boolean" json:",omitempty"`

	ClusterSecOpen *bool `type:"boolean" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	HostTotalCount *int64 `type:"int64" json:",omitempty"`

	HostUsedCount *int64 `type:"int64" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	InstitutionID *string `type:"string" json:",omitempty"`

	InstitutionName *string `type:"string" json:",omitempty"`

	InstitutionStatus *string `type:"string" json:",omitempty"`

	LastActiveTime *int64 `type:"int64" json:",omitempty"`

	Remark *string `type:"string" json:",omitempty"`

	ReportSwitchOpen *bool `type:"boolean" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListMultiLevelInstitutionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListMultiLevelInstitutionOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetAccountID(v string) *DataForListMultiLevelInstitutionOutput {
	s.AccountID = &v
	return s
}

// SetAppSecOpen sets the AppSecOpen field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetAppSecOpen(v bool) *DataForListMultiLevelInstitutionOutput {
	s.AppSecOpen = &v
	return s
}

// SetClusterSecOpen sets the ClusterSecOpen field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetClusterSecOpen(v bool) *DataForListMultiLevelInstitutionOutput {
	s.ClusterSecOpen = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetCreateTime(v int64) *DataForListMultiLevelInstitutionOutput {
	s.CreateTime = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetExpireTime(v int64) *DataForListMultiLevelInstitutionOutput {
	s.ExpireTime = &v
	return s
}

// SetHostTotalCount sets the HostTotalCount field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetHostTotalCount(v int64) *DataForListMultiLevelInstitutionOutput {
	s.HostTotalCount = &v
	return s
}

// SetHostUsedCount sets the HostUsedCount field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetHostUsedCount(v int64) *DataForListMultiLevelInstitutionOutput {
	s.HostUsedCount = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetID(v string) *DataForListMultiLevelInstitutionOutput {
	s.ID = &v
	return s
}

// SetInstitutionID sets the InstitutionID field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetInstitutionID(v string) *DataForListMultiLevelInstitutionOutput {
	s.InstitutionID = &v
	return s
}

// SetInstitutionName sets the InstitutionName field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetInstitutionName(v string) *DataForListMultiLevelInstitutionOutput {
	s.InstitutionName = &v
	return s
}

// SetInstitutionStatus sets the InstitutionStatus field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetInstitutionStatus(v string) *DataForListMultiLevelInstitutionOutput {
	s.InstitutionStatus = &v
	return s
}

// SetLastActiveTime sets the LastActiveTime field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetLastActiveTime(v int64) *DataForListMultiLevelInstitutionOutput {
	s.LastActiveTime = &v
	return s
}

// SetRemark sets the Remark field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetRemark(v string) *DataForListMultiLevelInstitutionOutput {
	s.Remark = &v
	return s
}

// SetReportSwitchOpen sets the ReportSwitchOpen field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetReportSwitchOpen(v bool) *DataForListMultiLevelInstitutionOutput {
	s.ReportSwitchOpen = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListMultiLevelInstitutionOutput) SetUpdateTime(v int64) *DataForListMultiLevelInstitutionOutput {
	s.UpdateTime = &v
	return s
}

type ListMultiLevelInstitutionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	InstitutionName *string `type:"string" json:",omitempty"`

	InstitutionStatus *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListMultiLevelInstitutionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMultiLevelInstitutionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListMultiLevelInstitutionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListMultiLevelInstitutionInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountID sets the AccountID field's value.
func (s *ListMultiLevelInstitutionInput) SetAccountID(v string) *ListMultiLevelInstitutionInput {
	s.AccountID = &v
	return s
}

// SetInstitutionName sets the InstitutionName field's value.
func (s *ListMultiLevelInstitutionInput) SetInstitutionName(v string) *ListMultiLevelInstitutionInput {
	s.InstitutionName = &v
	return s
}

// SetInstitutionStatus sets the InstitutionStatus field's value.
func (s *ListMultiLevelInstitutionInput) SetInstitutionStatus(v string) *ListMultiLevelInstitutionInput {
	s.InstitutionStatus = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListMultiLevelInstitutionInput) SetPageNumber(v int64) *ListMultiLevelInstitutionInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListMultiLevelInstitutionInput) SetPageSize(v int64) *ListMultiLevelInstitutionInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListMultiLevelInstitutionInput) SetSortBy(v string) *ListMultiLevelInstitutionInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListMultiLevelInstitutionInput) SetSortOrder(v string) *ListMultiLevelInstitutionInput {
	s.SortOrder = &v
	return s
}

type ListMultiLevelInstitutionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListMultiLevelInstitutionOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListMultiLevelInstitutionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListMultiLevelInstitutionOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListMultiLevelInstitutionOutput) SetData(v []*DataForListMultiLevelInstitutionOutput) *ListMultiLevelInstitutionOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListMultiLevelInstitutionOutput) SetPageNumber(v int64) *ListMultiLevelInstitutionOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListMultiLevelInstitutionOutput) SetPageSize(v int64) *ListMultiLevelInstitutionOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListMultiLevelInstitutionOutput) SetTotalCount(v int64) *ListMultiLevelInstitutionOutput {
	s.TotalCount = &v
	return s
}
