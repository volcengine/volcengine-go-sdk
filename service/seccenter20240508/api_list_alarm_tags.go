// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlarmTagsCommon = "ListAlarmTags"

// ListAlarmTagsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmTagsCommon operation. The "output" return
// value will be populated with the ListAlarmTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmTagsCommon Send returns without error.
//
// See ListAlarmTagsCommon for more information on using the ListAlarmTagsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmTagsCommonRequest method.
//    req, resp := client.ListAlarmTagsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmTagsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlarmTagsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmTagsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmTagsCommon for usage and error information.
func (c *SECCENTER20240508) ListAlarmTagsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlarmTagsCommonRequest(input)
	return out, req.Send()
}

// ListAlarmTagsCommonWithContext is the same as ListAlarmTagsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmTagsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmTagsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlarmTagsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlarmTags = "ListAlarmTags"

// ListAlarmTagsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlarmTags operation. The "output" return
// value will be populated with the ListAlarmTagsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlarmTagsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlarmTagsCommon Send returns without error.
//
// See ListAlarmTags for more information on using the ListAlarmTags
// API call, and error handling.
//
//    // Example sending a request using the ListAlarmTagsRequest method.
//    req, resp := client.ListAlarmTagsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListAlarmTagsRequest(input *ListAlarmTagsInput) (req *request.Request, output *ListAlarmTagsOutput) {
	op := &request.Operation{
		Name:       opListAlarmTags,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlarmTagsInput{}
	}

	output = &ListAlarmTagsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAlarmTags API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListAlarmTags for usage and error information.
func (c *SECCENTER20240508) ListAlarmTags(input *ListAlarmTagsInput) (*ListAlarmTagsOutput, error) {
	req, out := c.ListAlarmTagsRequest(input)
	return out, req.Send()
}

// ListAlarmTagsWithContext is the same as ListAlarmTags with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlarmTags for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListAlarmTagsWithContext(ctx volcengine.Context, input *ListAlarmTagsInput, opts ...request.Option) (*ListAlarmTagsOutput, error) {
	req, out := c.ListAlarmTagsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAlarmTagsInput struct {
	_ struct{} `type:"structure"`

	AlarmIDList []*string `type:"list"`

	AlarmType *string `type:"string"`

	AlertTags []*string `type:"list"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s ListAlarmTagsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmTagsInput) GoString() string {
	return s.String()
}

// SetAlarmIDList sets the AlarmIDList field's value.
func (s *ListAlarmTagsInput) SetAlarmIDList(v []*string) *ListAlarmTagsInput {
	s.AlarmIDList = v
	return s
}

// SetAlarmType sets the AlarmType field's value.
func (s *ListAlarmTagsInput) SetAlarmType(v string) *ListAlarmTagsInput {
	s.AlarmType = &v
	return s
}

// SetAlertTags sets the AlertTags field's value.
func (s *ListAlarmTagsInput) SetAlertTags(v []*string) *ListAlarmTagsInput {
	s.AlertTags = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListAlarmTagsInput) SetTopGroupID(v string) *ListAlarmTagsInput {
	s.TopGroupID = &v
	return s
}

type ListAlarmTagsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list"`
}

// String returns the string representation
func (s ListAlarmTagsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlarmTagsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAlarmTagsOutput) SetData(v []*string) *ListAlarmTagsOutput {
	s.Data = v
	return s
}
