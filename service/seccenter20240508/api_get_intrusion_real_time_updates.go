// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetIntrusionRealTimeUpdatesCommon = "GetIntrusionRealTimeUpdates"

// GetIntrusionRealTimeUpdatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetIntrusionRealTimeUpdatesCommon operation. The "output" return
// value will be populated with the GetIntrusionRealTimeUpdatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetIntrusionRealTimeUpdatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetIntrusionRealTimeUpdatesCommon Send returns without error.
//
// See GetIntrusionRealTimeUpdatesCommon for more information on using the GetIntrusionRealTimeUpdatesCommon
// API call, and error handling.
//
//    // Example sending a request using the GetIntrusionRealTimeUpdatesCommonRequest method.
//    req, resp := client.GetIntrusionRealTimeUpdatesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetIntrusionRealTimeUpdatesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetIntrusionRealTimeUpdatesCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetIntrusionRealTimeUpdatesCommon for usage and error information.
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetIntrusionRealTimeUpdatesCommonRequest(input)
	return out, req.Send()
}

// GetIntrusionRealTimeUpdatesCommonWithContext is the same as GetIntrusionRealTimeUpdatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetIntrusionRealTimeUpdatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetIntrusionRealTimeUpdatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetIntrusionRealTimeUpdates = "GetIntrusionRealTimeUpdates"

// GetIntrusionRealTimeUpdatesRequest generates a "volcengine/request.Request" representing the
// client's request for the GetIntrusionRealTimeUpdates operation. The "output" return
// value will be populated with the GetIntrusionRealTimeUpdatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetIntrusionRealTimeUpdatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetIntrusionRealTimeUpdatesCommon Send returns without error.
//
// See GetIntrusionRealTimeUpdates for more information on using the GetIntrusionRealTimeUpdates
// API call, and error handling.
//
//    // Example sending a request using the GetIntrusionRealTimeUpdatesRequest method.
//    req, resp := client.GetIntrusionRealTimeUpdatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdatesRequest(input *GetIntrusionRealTimeUpdatesInput) (req *request.Request, output *GetIntrusionRealTimeUpdatesOutput) {
	op := &request.Operation{
		Name:       opGetIntrusionRealTimeUpdates,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetIntrusionRealTimeUpdatesInput{}
	}

	output = &GetIntrusionRealTimeUpdatesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetIntrusionRealTimeUpdates API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetIntrusionRealTimeUpdates for usage and error information.
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdates(input *GetIntrusionRealTimeUpdatesInput) (*GetIntrusionRealTimeUpdatesOutput, error) {
	req, out := c.GetIntrusionRealTimeUpdatesRequest(input)
	return out, req.Send()
}

// GetIntrusionRealTimeUpdatesWithContext is the same as GetIntrusionRealTimeUpdates with the addition of
// the ability to pass a context and additional request options.
//
// See GetIntrusionRealTimeUpdates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetIntrusionRealTimeUpdatesWithContext(ctx volcengine.Context, input *GetIntrusionRealTimeUpdatesInput, opts ...request.Option) (*GetIntrusionRealTimeUpdatesOutput, error) {
	req, out := c.GetIntrusionRealTimeUpdatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetIntrusionRealTimeUpdatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AlarmID *string `type:"string" json:",omitempty"`

	AlarmTime *int64 `type:"int64" json:",omitempty"`

	AlarmType *string `type:"string" json:",omitempty"`

	AlertDetail *string `type:"string" json:",omitempty"`

	ClusterID *string `type:"string" json:",omitempty"`

	DataType *string `type:"string" json:",omitempty"`

	HarmLevel *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Status *int64 `type:"int64" json:",omitempty"`

	TraceID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetIntrusionRealTimeUpdatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetIntrusionRealTimeUpdatesOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetAgentID(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.AgentID = &v
	return s
}

// SetAlarmID sets the AlarmID field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetAlarmID(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.AlarmID = &v
	return s
}

// SetAlarmTime sets the AlarmTime field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetAlarmTime(v int64) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.AlarmTime = &v
	return s
}

// SetAlarmType sets the AlarmType field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetAlarmType(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.AlarmType = &v
	return s
}

// SetAlertDetail sets the AlertDetail field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetAlertDetail(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.AlertDetail = &v
	return s
}

// SetClusterID sets the ClusterID field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetClusterID(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.ClusterID = &v
	return s
}

// SetDataType sets the DataType field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetDataType(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.DataType = &v
	return s
}

// SetHarmLevel sets the HarmLevel field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetHarmLevel(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.HarmLevel = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetName(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetStatus(v int64) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.Status = &v
	return s
}

// SetTraceID sets the TraceID field's value.
func (s *DataForGetIntrusionRealTimeUpdatesOutput) SetTraceID(v string) *DataForGetIntrusionRealTimeUpdatesOutput {
	s.TraceID = &v
	return s
}

type GetIntrusionRealTimeUpdatesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetIntrusionRealTimeUpdatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetIntrusionRealTimeUpdatesInput) GoString() string {
	return s.String()
}

type GetIntrusionRealTimeUpdatesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetIntrusionRealTimeUpdatesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GetIntrusionRealTimeUpdatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetIntrusionRealTimeUpdatesOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetIntrusionRealTimeUpdatesOutput) SetData(v []*DataForGetIntrusionRealTimeUpdatesOutput) *GetIntrusionRealTimeUpdatesOutput {
	s.Data = v
	return s
}
