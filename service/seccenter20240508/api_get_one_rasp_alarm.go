// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetOneRaspAlarmCommon = "GetOneRaspAlarm"

// GetOneRaspAlarmCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOneRaspAlarmCommon operation. The "output" return
// value will be populated with the GetOneRaspAlarmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOneRaspAlarmCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOneRaspAlarmCommon Send returns without error.
//
// See GetOneRaspAlarmCommon for more information on using the GetOneRaspAlarmCommon
// API call, and error handling.
//
//    // Example sending a request using the GetOneRaspAlarmCommonRequest method.
//    req, resp := client.GetOneRaspAlarmCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetOneRaspAlarmCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetOneRaspAlarmCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetOneRaspAlarmCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetOneRaspAlarmCommon for usage and error information.
func (c *SECCENTER20240508) GetOneRaspAlarmCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetOneRaspAlarmCommonRequest(input)
	return out, req.Send()
}

// GetOneRaspAlarmCommonWithContext is the same as GetOneRaspAlarmCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetOneRaspAlarmCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetOneRaspAlarmCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetOneRaspAlarmCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetOneRaspAlarm = "GetOneRaspAlarm"

// GetOneRaspAlarmRequest generates a "volcengine/request.Request" representing the
// client's request for the GetOneRaspAlarm operation. The "output" return
// value will be populated with the GetOneRaspAlarmCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetOneRaspAlarmCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetOneRaspAlarmCommon Send returns without error.
//
// See GetOneRaspAlarm for more information on using the GetOneRaspAlarm
// API call, and error handling.
//
//    // Example sending a request using the GetOneRaspAlarmRequest method.
//    req, resp := client.GetOneRaspAlarmRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetOneRaspAlarmRequest(input *GetOneRaspAlarmInput) (req *request.Request, output *GetOneRaspAlarmOutput) {
	op := &request.Operation{
		Name:       opGetOneRaspAlarm,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetOneRaspAlarmInput{}
	}

	output = &GetOneRaspAlarmOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetOneRaspAlarm API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetOneRaspAlarm for usage and error information.
func (c *SECCENTER20240508) GetOneRaspAlarm(input *GetOneRaspAlarmInput) (*GetOneRaspAlarmOutput, error) {
	req, out := c.GetOneRaspAlarmRequest(input)
	return out, req.Send()
}

// GetOneRaspAlarmWithContext is the same as GetOneRaspAlarm with the addition of
// the ability to pass a context and additional request options.
//
// See GetOneRaspAlarm for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetOneRaspAlarmWithContext(ctx volcengine.Context, input *GetOneRaspAlarmInput, opts ...request.Option) (*GetOneRaspAlarmOutput, error) {
	req, out := c.GetOneRaspAlarmRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BaseAlarmInfoForGetOneRaspAlarmOutput struct {
	_ struct{} `type:"structure"`

	AlarmType *string `type:"string"`

	AttackIDList []*string `type:"list"`

	CreateTime *int64 `type:"int64"`

	Desc *string `type:"string"`

	Docker *string `type:"string"`

	HandleTime *int64 `type:"int64"`

	HandleUser *string `type:"string"`

	Level *string `type:"string"`

	Name *string `type:"string"`

	Status *int64 `type:"int64"`

	Suggest *string `type:"string"`

	TraceID *string `type:"string"`

	UpdateTime *int64 `type:"int64"`
}

// String returns the string representation
func (s BaseAlarmInfoForGetOneRaspAlarmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BaseAlarmInfoForGetOneRaspAlarmOutput) GoString() string {
	return s.String()
}

// SetAlarmType sets the AlarmType field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetAlarmType(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.AlarmType = &v
	return s
}

// SetAttackIDList sets the AttackIDList field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetAttackIDList(v []*string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.AttackIDList = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetCreateTime(v int64) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.CreateTime = &v
	return s
}

// SetDesc sets the Desc field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetDesc(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Desc = &v
	return s
}

// SetDocker sets the Docker field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetDocker(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Docker = &v
	return s
}

// SetHandleTime sets the HandleTime field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetHandleTime(v int64) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.HandleTime = &v
	return s
}

// SetHandleUser sets the HandleUser field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetHandleUser(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.HandleUser = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetLevel(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Level = &v
	return s
}

// SetName sets the Name field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetName(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetStatus(v int64) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Status = &v
	return s
}

// SetSuggest sets the Suggest field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetSuggest(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.Suggest = &v
	return s
}

// SetTraceID sets the TraceID field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetTraceID(v string) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.TraceID = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *BaseAlarmInfoForGetOneRaspAlarmOutput) SetUpdateTime(v int64) *BaseAlarmInfoForGetOneRaspAlarmOutput {
	s.UpdateTime = &v
	return s
}

type BaseInfoForGetOneRaspAlarmOutput struct {
	_ struct{} `type:"structure"`

	AgentID *string `type:"string"`

	Hostname *string `type:"string"`

	InIPList []*string `type:"list"`

	Os *string `type:"string"`

	OsPlatform *string `type:"string"`

	OutIPList []*string `type:"list"`
}

// String returns the string representation
func (s BaseInfoForGetOneRaspAlarmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BaseInfoForGetOneRaspAlarmOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetAgentID(v string) *BaseInfoForGetOneRaspAlarmOutput {
	s.AgentID = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetHostname(v string) *BaseInfoForGetOneRaspAlarmOutput {
	s.Hostname = &v
	return s
}

// SetInIPList sets the InIPList field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetInIPList(v []*string) *BaseInfoForGetOneRaspAlarmOutput {
	s.InIPList = v
	return s
}

// SetOs sets the Os field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetOs(v string) *BaseInfoForGetOneRaspAlarmOutput {
	s.Os = &v
	return s
}

// SetOsPlatform sets the OsPlatform field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetOsPlatform(v string) *BaseInfoForGetOneRaspAlarmOutput {
	s.OsPlatform = &v
	return s
}

// SetOutIPList sets the OutIPList field's value.
func (s *BaseInfoForGetOneRaspAlarmOutput) SetOutIPList(v []*string) *BaseInfoForGetOneRaspAlarmOutput {
	s.OutIPList = v
	return s
}

type ContainerInfoForGetOneRaspAlarmOutput struct {
	_ struct{} `type:"structure"`

	ContainerImage *string `type:"string"`

	ContainerName *string `type:"string"`
}

// String returns the string representation
func (s ContainerInfoForGetOneRaspAlarmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContainerInfoForGetOneRaspAlarmOutput) GoString() string {
	return s.String()
}

// SetContainerImage sets the ContainerImage field's value.
func (s *ContainerInfoForGetOneRaspAlarmOutput) SetContainerImage(v string) *ContainerInfoForGetOneRaspAlarmOutput {
	s.ContainerImage = &v
	return s
}

// SetContainerName sets the ContainerName field's value.
func (s *ContainerInfoForGetOneRaspAlarmOutput) SetContainerName(v string) *ContainerInfoForGetOneRaspAlarmOutput {
	s.ContainerName = &v
	return s
}

type GetOneRaspAlarmInput struct {
	_ struct{} `type:"structure"`

	AlarmID *string `type:"string"`
}

// String returns the string representation
func (s GetOneRaspAlarmInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOneRaspAlarmInput) GoString() string {
	return s.String()
}

// SetAlarmID sets the AlarmID field's value.
func (s *GetOneRaspAlarmInput) SetAlarmID(v string) *GetOneRaspAlarmInput {
	s.AlarmID = &v
	return s
}

type GetOneRaspAlarmOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	BaseAlarmInfo *BaseAlarmInfoForGetOneRaspAlarmOutput `type:"structure"`

	BaseInfo *BaseInfoForGetOneRaspAlarmOutput `type:"structure"`

	ContainerInfo *ContainerInfoForGetOneRaspAlarmOutput `type:"structure"`

	DataType *string `type:"string"`

	PlusAlarmInfo2439 *PlusAlarmInfo2439ForGetOneRaspAlarmOutput `type:"structure"`
}

// String returns the string representation
func (s GetOneRaspAlarmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetOneRaspAlarmOutput) GoString() string {
	return s.String()
}

// SetBaseAlarmInfo sets the BaseAlarmInfo field's value.
func (s *GetOneRaspAlarmOutput) SetBaseAlarmInfo(v *BaseAlarmInfoForGetOneRaspAlarmOutput) *GetOneRaspAlarmOutput {
	s.BaseAlarmInfo = v
	return s
}

// SetBaseInfo sets the BaseInfo field's value.
func (s *GetOneRaspAlarmOutput) SetBaseInfo(v *BaseInfoForGetOneRaspAlarmOutput) *GetOneRaspAlarmOutput {
	s.BaseInfo = v
	return s
}

// SetContainerInfo sets the ContainerInfo field's value.
func (s *GetOneRaspAlarmOutput) SetContainerInfo(v *ContainerInfoForGetOneRaspAlarmOutput) *GetOneRaspAlarmOutput {
	s.ContainerInfo = v
	return s
}

// SetDataType sets the DataType field's value.
func (s *GetOneRaspAlarmOutput) SetDataType(v string) *GetOneRaspAlarmOutput {
	s.DataType = &v
	return s
}

// SetPlusAlarmInfo2439 sets the PlusAlarmInfo2439 field's value.
func (s *GetOneRaspAlarmOutput) SetPlusAlarmInfo2439(v *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) *GetOneRaspAlarmOutput {
	s.PlusAlarmInfo2439 = v
	return s
}

type PlusAlarmInfo2439ForGetOneRaspAlarmOutput struct {
	_ struct{} `type:"structure"`

	Args []*string `type:"list"`

	Nspid *string `type:"string"`

	Pid *string `type:"string"`

	ProbeHook *string `type:"string"`

	StackTrace *string `type:"string"`

	StackTraceHash *string `type:"string"`
}

// String returns the string representation
func (s PlusAlarmInfo2439ForGetOneRaspAlarmOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PlusAlarmInfo2439ForGetOneRaspAlarmOutput) GoString() string {
	return s.String()
}

// SetArgs sets the Args field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetArgs(v []*string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.Args = v
	return s
}

// SetNspid sets the Nspid field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetNspid(v string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.Nspid = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetPid(v string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.Pid = &v
	return s
}

// SetProbeHook sets the ProbeHook field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetProbeHook(v string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.ProbeHook = &v
	return s
}

// SetStackTrace sets the StackTrace field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetStackTrace(v string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.StackTrace = &v
	return s
}

// SetStackTraceHash sets the StackTraceHash field's value.
func (s *PlusAlarmInfo2439ForGetOneRaspAlarmOutput) SetStackTraceHash(v string) *PlusAlarmInfo2439ForGetOneRaspAlarmOutput {
	s.StackTraceHash = &v
	return s
}
