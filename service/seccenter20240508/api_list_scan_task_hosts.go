// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListScanTaskHostsCommon = "ListScanTaskHosts"

// ListScanTaskHostsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanTaskHostsCommon operation. The "output" return
// value will be populated with the ListScanTaskHostsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanTaskHostsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanTaskHostsCommon Send returns without error.
//
// See ListScanTaskHostsCommon for more information on using the ListScanTaskHostsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListScanTaskHostsCommonRequest method.
//    req, resp := client.ListScanTaskHostsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanTaskHostsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListScanTaskHostsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanTaskHostsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanTaskHostsCommon for usage and error information.
func (c *SECCENTER20240508) ListScanTaskHostsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListScanTaskHostsCommonRequest(input)
	return out, req.Send()
}

// ListScanTaskHostsCommonWithContext is the same as ListScanTaskHostsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanTaskHostsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanTaskHostsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListScanTaskHostsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListScanTaskHosts = "ListScanTaskHosts"

// ListScanTaskHostsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListScanTaskHosts operation. The "output" return
// value will be populated with the ListScanTaskHostsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListScanTaskHostsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListScanTaskHostsCommon Send returns without error.
//
// See ListScanTaskHosts for more information on using the ListScanTaskHosts
// API call, and error handling.
//
//    // Example sending a request using the ListScanTaskHostsRequest method.
//    req, resp := client.ListScanTaskHostsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListScanTaskHostsRequest(input *ListScanTaskHostsInput) (req *request.Request, output *ListScanTaskHostsOutput) {
	op := &request.Operation{
		Name:       opListScanTaskHosts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListScanTaskHostsInput{}
	}

	output = &ListScanTaskHostsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListScanTaskHosts API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListScanTaskHosts for usage and error information.
func (c *SECCENTER20240508) ListScanTaskHosts(input *ListScanTaskHostsInput) (*ListScanTaskHostsOutput, error) {
	req, out := c.ListScanTaskHostsRequest(input)
	return out, req.Send()
}

// ListScanTaskHostsWithContext is the same as ListScanTaskHosts with the addition of
// the ability to pass a context and additional request options.
//
// See ListScanTaskHosts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListScanTaskHostsWithContext(ctx volcengine.Context, input *ListScanTaskHostsInput, opts ...request.Option) (*ListScanTaskHostsOutput, error) {
	req, out := c.ListScanTaskHostsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListScanTaskHostsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	InnerIPList []*string `type:"list" json:",omitempty"`

	OuterIPList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DataForListScanTaskHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListScanTaskHostsOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForListScanTaskHostsOutput) SetAgentID(v string) *DataForListScanTaskHostsOutput {
	s.AgentID = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *DataForListScanTaskHostsOutput) SetHostname(v string) *DataForListScanTaskHostsOutput {
	s.Hostname = &v
	return s
}

// SetInnerIPList sets the InnerIPList field's value.
func (s *DataForListScanTaskHostsOutput) SetInnerIPList(v []*string) *DataForListScanTaskHostsOutput {
	s.InnerIPList = v
	return s
}

// SetOuterIPList sets the OuterIPList field's value.
func (s *DataForListScanTaskHostsOutput) SetOuterIPList(v []*string) *DataForListScanTaskHostsOutput {
	s.OuterIPList = v
	return s
}

type ListScanTaskHostsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Action []*string `type:"list" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	TaskName *string `type:"string" json:",omitempty"`

	TaskStatus []*string `type:"list" json:",omitempty"`

	TaskUser *string `type:"string" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListScanTaskHostsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanTaskHostsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListScanTaskHostsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListScanTaskHostsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *ListScanTaskHostsInput) SetAction(v []*string) *ListScanTaskHostsInput {
	s.Action = v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *ListScanTaskHostsInput) SetFilePath(v string) *ListScanTaskHostsInput {
	s.FilePath = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanTaskHostsInput) SetPageNumber(v int64) *ListScanTaskHostsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanTaskHostsInput) SetPageSize(v int64) *ListScanTaskHostsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListScanTaskHostsInput) SetSortBy(v string) *ListScanTaskHostsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListScanTaskHostsInput) SetSortOrder(v string) *ListScanTaskHostsInput {
	s.SortOrder = &v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *ListScanTaskHostsInput) SetTaskName(v string) *ListScanTaskHostsInput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *ListScanTaskHostsInput) SetTaskStatus(v []*string) *ListScanTaskHostsInput {
	s.TaskStatus = v
	return s
}

// SetTaskUser sets the TaskUser field's value.
func (s *ListScanTaskHostsInput) SetTaskUser(v string) *ListScanTaskHostsInput {
	s.TaskUser = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListScanTaskHostsInput) SetTopGroupID(v string) *ListScanTaskHostsInput {
	s.TopGroupID = &v
	return s
}

type ListScanTaskHostsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListScanTaskHostsOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListScanTaskHostsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListScanTaskHostsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListScanTaskHostsOutput) SetData(v []*DataForListScanTaskHostsOutput) *ListScanTaskHostsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListScanTaskHostsOutput) SetPageNumber(v int64) *ListScanTaskHostsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListScanTaskHostsOutput) SetPageSize(v int64) *ListScanTaskHostsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListScanTaskHostsOutput) SetTotalCount(v int64) *ListScanTaskHostsOutput {
	s.TotalCount = &v
	return s
}
