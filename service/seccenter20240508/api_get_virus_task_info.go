// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetVirusTaskInfoCommon = "GetVirusTaskInfo"

// GetVirusTaskInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVirusTaskInfoCommon operation. The "output" return
// value will be populated with the GetVirusTaskInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVirusTaskInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVirusTaskInfoCommon Send returns without error.
//
// See GetVirusTaskInfoCommon for more information on using the GetVirusTaskInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the GetVirusTaskInfoCommonRequest method.
//    req, resp := client.GetVirusTaskInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVirusTaskInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetVirusTaskInfoCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetVirusTaskInfoCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVirusTaskInfoCommon for usage and error information.
func (c *SECCENTER20240508) GetVirusTaskInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetVirusTaskInfoCommonRequest(input)
	return out, req.Send()
}

// GetVirusTaskInfoCommonWithContext is the same as GetVirusTaskInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetVirusTaskInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVirusTaskInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetVirusTaskInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetVirusTaskInfo = "GetVirusTaskInfo"

// GetVirusTaskInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the GetVirusTaskInfo operation. The "output" return
// value will be populated with the GetVirusTaskInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetVirusTaskInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetVirusTaskInfoCommon Send returns without error.
//
// See GetVirusTaskInfo for more information on using the GetVirusTaskInfo
// API call, and error handling.
//
//    // Example sending a request using the GetVirusTaskInfoRequest method.
//    req, resp := client.GetVirusTaskInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetVirusTaskInfoRequest(input *GetVirusTaskInfoInput) (req *request.Request, output *GetVirusTaskInfoOutput) {
	op := &request.Operation{
		Name:       opGetVirusTaskInfo,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetVirusTaskInfoInput{}
	}

	output = &GetVirusTaskInfoOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetVirusTaskInfo API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetVirusTaskInfo for usage and error information.
func (c *SECCENTER20240508) GetVirusTaskInfo(input *GetVirusTaskInfoInput) (*GetVirusTaskInfoOutput, error) {
	req, out := c.GetVirusTaskInfoRequest(input)
	return out, req.Send()
}

// GetVirusTaskInfoWithContext is the same as GetVirusTaskInfo with the addition of
// the ability to pass a context and additional request options.
//
// See GetVirusTaskInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetVirusTaskInfoWithContext(ctx volcengine.Context, input *GetVirusTaskInfoInput, opts ...request.Option) (*GetVirusTaskInfoOutput, error) {
	req, out := c.GetVirusTaskInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConfigForGetVirusTaskInfoOutput struct {
	_ struct{} `type:"structure"`

	CpuIDle *string `type:"string"`

	FilePath *string `type:"string"`

	Timeout *string `type:"string"`
}

// String returns the string representation
func (s ConfigForGetVirusTaskInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigForGetVirusTaskInfoOutput) GoString() string {
	return s.String()
}

// SetCpuIDle sets the CpuIDle field's value.
func (s *ConfigForGetVirusTaskInfoOutput) SetCpuIDle(v string) *ConfigForGetVirusTaskInfoOutput {
	s.CpuIDle = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *ConfigForGetVirusTaskInfoOutput) SetFilePath(v string) *ConfigForGetVirusTaskInfoOutput {
	s.FilePath = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *ConfigForGetVirusTaskInfoOutput) SetTimeout(v string) *ConfigForGetVirusTaskInfoOutput {
	s.Timeout = &v
	return s
}

type GetVirusTaskInfoInput struct {
	_ struct{} `type:"structure"`

	TaskID *string `type:"string"`
}

// String returns the string representation
func (s GetVirusTaskInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVirusTaskInfoInput) GoString() string {
	return s.String()
}

// SetTaskID sets the TaskID field's value.
func (s *GetVirusTaskInfoInput) SetTaskID(v string) *GetVirusTaskInfoInput {
	s.TaskID = &v
	return s
}

type GetVirusTaskInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Action *string `type:"string"`

	Config *ConfigForGetVirusTaskInfoOutput `type:"structure"`

	CreateTime *int64 `type:"int64"`

	DistributedCount *int64 `type:"int64"`

	IDCount *float64 `type:"double"`

	IDList []*string `type:"list"`

	SubTaskCreated *int64 `type:"int64"`

	SubTaskFailed *int64 `type:"int64"`

	SubTaskRunning *int64 `type:"int64"`

	SubTaskSucceed *int64 `type:"int64"`

	Tag *string `type:"string"`

	TaskID *string `type:"string"`

	TaskName *string `type:"string"`

	TaskStatus *string `type:"string"`

	TaskType *string `type:"string"`

	TaskUser *string `type:"string"`

	UpdateTime *int64 `type:"int64"`
}

// String returns the string representation
func (s GetVirusTaskInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetVirusTaskInfoOutput) GoString() string {
	return s.String()
}

// SetAction sets the Action field's value.
func (s *GetVirusTaskInfoOutput) SetAction(v string) *GetVirusTaskInfoOutput {
	s.Action = &v
	return s
}

// SetConfig sets the Config field's value.
func (s *GetVirusTaskInfoOutput) SetConfig(v *ConfigForGetVirusTaskInfoOutput) *GetVirusTaskInfoOutput {
	s.Config = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetVirusTaskInfoOutput) SetCreateTime(v int64) *GetVirusTaskInfoOutput {
	s.CreateTime = &v
	return s
}

// SetDistributedCount sets the DistributedCount field's value.
func (s *GetVirusTaskInfoOutput) SetDistributedCount(v int64) *GetVirusTaskInfoOutput {
	s.DistributedCount = &v
	return s
}

// SetIDCount sets the IDCount field's value.
func (s *GetVirusTaskInfoOutput) SetIDCount(v float64) *GetVirusTaskInfoOutput {
	s.IDCount = &v
	return s
}

// SetIDList sets the IDList field's value.
func (s *GetVirusTaskInfoOutput) SetIDList(v []*string) *GetVirusTaskInfoOutput {
	s.IDList = v
	return s
}

// SetSubTaskCreated sets the SubTaskCreated field's value.
func (s *GetVirusTaskInfoOutput) SetSubTaskCreated(v int64) *GetVirusTaskInfoOutput {
	s.SubTaskCreated = &v
	return s
}

// SetSubTaskFailed sets the SubTaskFailed field's value.
func (s *GetVirusTaskInfoOutput) SetSubTaskFailed(v int64) *GetVirusTaskInfoOutput {
	s.SubTaskFailed = &v
	return s
}

// SetSubTaskRunning sets the SubTaskRunning field's value.
func (s *GetVirusTaskInfoOutput) SetSubTaskRunning(v int64) *GetVirusTaskInfoOutput {
	s.SubTaskRunning = &v
	return s
}

// SetSubTaskSucceed sets the SubTaskSucceed field's value.
func (s *GetVirusTaskInfoOutput) SetSubTaskSucceed(v int64) *GetVirusTaskInfoOutput {
	s.SubTaskSucceed = &v
	return s
}

// SetTag sets the Tag field's value.
func (s *GetVirusTaskInfoOutput) SetTag(v string) *GetVirusTaskInfoOutput {
	s.Tag = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *GetVirusTaskInfoOutput) SetTaskID(v string) *GetVirusTaskInfoOutput {
	s.TaskID = &v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *GetVirusTaskInfoOutput) SetTaskName(v string) *GetVirusTaskInfoOutput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *GetVirusTaskInfoOutput) SetTaskStatus(v string) *GetVirusTaskInfoOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *GetVirusTaskInfoOutput) SetTaskType(v string) *GetVirusTaskInfoOutput {
	s.TaskType = &v
	return s
}

// SetTaskUser sets the TaskUser field's value.
func (s *GetVirusTaskInfoOutput) SetTaskUser(v string) *GetVirusTaskInfoOutput {
	s.TaskUser = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetVirusTaskInfoOutput) SetUpdateTime(v int64) *GetVirusTaskInfoOutput {
	s.UpdateTime = &v
	return s
}
