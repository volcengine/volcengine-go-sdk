// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opExportDevFingerprintDataCommon = "ExportDevFingerprintData"

// ExportDevFingerprintDataCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportDevFingerprintDataCommon operation. The "output" return
// value will be populated with the ExportDevFingerprintDataCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportDevFingerprintDataCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportDevFingerprintDataCommon Send returns without error.
//
// See ExportDevFingerprintDataCommon for more information on using the ExportDevFingerprintDataCommon
// API call, and error handling.
//
//    // Example sending a request using the ExportDevFingerprintDataCommonRequest method.
//    req, resp := client.ExportDevFingerprintDataCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportDevFingerprintDataCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opExportDevFingerprintDataCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportDevFingerprintDataCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportDevFingerprintDataCommon for usage and error information.
func (c *SECCENTER20240508) ExportDevFingerprintDataCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ExportDevFingerprintDataCommonRequest(input)
	return out, req.Send()
}

// ExportDevFingerprintDataCommonWithContext is the same as ExportDevFingerprintDataCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ExportDevFingerprintDataCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportDevFingerprintDataCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ExportDevFingerprintDataCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opExportDevFingerprintData = "ExportDevFingerprintData"

// ExportDevFingerprintDataRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportDevFingerprintData operation. The "output" return
// value will be populated with the ExportDevFingerprintDataCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportDevFingerprintDataCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportDevFingerprintDataCommon Send returns without error.
//
// See ExportDevFingerprintData for more information on using the ExportDevFingerprintData
// API call, and error handling.
//
//    // Example sending a request using the ExportDevFingerprintDataRequest method.
//    req, resp := client.ExportDevFingerprintDataRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportDevFingerprintDataRequest(input *ExportDevFingerprintDataInput) (req *request.Request, output *ExportDevFingerprintDataOutput) {
	op := &request.Operation{
		Name:       opExportDevFingerprintData,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ExportDevFingerprintDataInput{}
	}

	output = &ExportDevFingerprintDataOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportDevFingerprintData API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportDevFingerprintData for usage and error information.
func (c *SECCENTER20240508) ExportDevFingerprintData(input *ExportDevFingerprintDataInput) (*ExportDevFingerprintDataOutput, error) {
	req, out := c.ExportDevFingerprintDataRequest(input)
	return out, req.Send()
}

// ExportDevFingerprintDataWithContext is the same as ExportDevFingerprintData with the addition of
// the ability to pass a context and additional request options.
//
// See ExportDevFingerprintData for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportDevFingerprintDataWithContext(ctx volcengine.Context, input *ExportDevFingerprintDataInput, opts ...request.Option) (*ExportDevFingerprintDataOutput, error) {
	req, out := c.ExportDevFingerprintDataRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForExportDevFingerprintDataInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForExportDevFingerprintDataInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForExportDevFingerprintDataInput) GoString() string {
	return s.String()
}

type ExportDevFingerprintDataInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions *ConditionsForExportDevFingerprintDataInput `type:"structure" json:",omitempty"`

	FingerprintType *string `type:"string" json:",omitempty" enum:"EnumOfFingerprintTypeForExportDevFingerprintDataInput"`

	IDList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ExportDevFingerprintDataInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportDevFingerprintDataInput) GoString() string {
	return s.String()
}

// SetConditions sets the Conditions field's value.
func (s *ExportDevFingerprintDataInput) SetConditions(v *ConditionsForExportDevFingerprintDataInput) *ExportDevFingerprintDataInput {
	s.Conditions = v
	return s
}

// SetFingerprintType sets the FingerprintType field's value.
func (s *ExportDevFingerprintDataInput) SetFingerprintType(v string) *ExportDevFingerprintDataInput {
	s.FingerprintType = &v
	return s
}

// SetIDList sets the IDList field's value.
func (s *ExportDevFingerprintDataInput) SetIDList(v []*string) *ExportDevFingerprintDataInput {
	s.IDList = v
	return s
}

type ExportDevFingerprintDataOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportDevFingerprintDataOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportDevFingerprintDataOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *ExportDevFingerprintDataOutput) SetFileName(v string) *ExportDevFingerprintDataOutput {
	s.FileName = &v
	return s
}

const (
	// EnumOfFingerprintTypeForExportDevFingerprintDataInputProcess is a EnumOfFingerprintTypeForExportDevFingerprintDataInput enum value
	EnumOfFingerprintTypeForExportDevFingerprintDataInputProcess = "process"

	// EnumOfFingerprintTypeForExportDevFingerprintDataInputPort is a EnumOfFingerprintTypeForExportDevFingerprintDataInput enum value
	EnumOfFingerprintTypeForExportDevFingerprintDataInputPort = "port"

	// EnumOfFingerprintTypeForExportDevFingerprintDataInputSoftware is a EnumOfFingerprintTypeForExportDevFingerprintDataInput enum value
	EnumOfFingerprintTypeForExportDevFingerprintDataInputSoftware = "software"
)
