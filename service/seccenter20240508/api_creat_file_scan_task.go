// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreatFileScanTaskCommon = "CreatFileScanTask"

// CreatFileScanTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatFileScanTaskCommon operation. The "output" return
// value will be populated with the CreatFileScanTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatFileScanTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatFileScanTaskCommon Send returns without error.
//
// See CreatFileScanTaskCommon for more information on using the CreatFileScanTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the CreatFileScanTaskCommonRequest method.
//    req, resp := client.CreatFileScanTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) CreatFileScanTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreatFileScanTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatFileScanTaskCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation CreatFileScanTaskCommon for usage and error information.
func (c *SECCENTER20240508) CreatFileScanTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreatFileScanTaskCommonRequest(input)
	return out, req.Send()
}

// CreatFileScanTaskCommonWithContext is the same as CreatFileScanTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreatFileScanTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) CreatFileScanTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreatFileScanTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreatFileScanTask = "CreatFileScanTask"

// CreatFileScanTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatFileScanTask operation. The "output" return
// value will be populated with the CreatFileScanTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatFileScanTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatFileScanTaskCommon Send returns without error.
//
// See CreatFileScanTask for more information on using the CreatFileScanTask
// API call, and error handling.
//
//    // Example sending a request using the CreatFileScanTaskRequest method.
//    req, resp := client.CreatFileScanTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) CreatFileScanTaskRequest(input *CreatFileScanTaskInput) (req *request.Request, output *CreatFileScanTaskOutput) {
	op := &request.Operation{
		Name:       opCreatFileScanTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreatFileScanTaskInput{}
	}

	output = &CreatFileScanTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatFileScanTask API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation CreatFileScanTask for usage and error information.
func (c *SECCENTER20240508) CreatFileScanTask(input *CreatFileScanTaskInput) (*CreatFileScanTaskOutput, error) {
	req, out := c.CreatFileScanTaskRequest(input)
	return out, req.Send()
}

// CreatFileScanTaskWithContext is the same as CreatFileScanTask with the addition of
// the ability to pass a context and additional request options.
//
// See CreatFileScanTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) CreatFileScanTaskWithContext(ctx volcengine.Context, input *CreatFileScanTaskInput, opts ...request.Option) (*CreatFileScanTaskOutput, error) {
	req, out := c.CreatFileScanTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatFileScanTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Action is a required field
	Action *string `type:"string" json:",omitempty" required:"true"`

	AgentIDList []*string `type:"list" json:",omitempty"`

	AllHost *bool `type:"boolean" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	CpuIDle *string `type:"string" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	TaskName *string `type:"string" json:",omitempty"`

	Timeout *string `type:"string" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreatFileScanTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatFileScanTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreatFileScanTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreatFileScanTaskInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAction sets the Action field's value.
func (s *CreatFileScanTaskInput) SetAction(v string) *CreatFileScanTaskInput {
	s.Action = &v
	return s
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *CreatFileScanTaskInput) SetAgentIDList(v []*string) *CreatFileScanTaskInput {
	s.AgentIDList = v
	return s
}

// SetAllHost sets the AllHost field's value.
func (s *CreatFileScanTaskInput) SetAllHost(v bool) *CreatFileScanTaskInput {
	s.AllHost = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *CreatFileScanTaskInput) SetCloudProviders(v []*string) *CreatFileScanTaskInput {
	s.CloudProviders = v
	return s
}

// SetCpuIDle sets the CpuIDle field's value.
func (s *CreatFileScanTaskInput) SetCpuIDle(v string) *CreatFileScanTaskInput {
	s.CpuIDle = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *CreatFileScanTaskInput) SetFilePath(v string) *CreatFileScanTaskInput {
	s.FilePath = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *CreatFileScanTaskInput) SetLeafGroupIDs(v []*string) *CreatFileScanTaskInput {
	s.LeafGroupIDs = v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *CreatFileScanTaskInput) SetTaskName(v string) *CreatFileScanTaskInput {
	s.TaskName = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *CreatFileScanTaskInput) SetTimeout(v string) *CreatFileScanTaskInput {
	s.Timeout = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *CreatFileScanTaskInput) SetTopGroupID(v string) *CreatFileScanTaskInput {
	s.TopGroupID = &v
	return s
}

type CreatFileScanTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Count *int64 `type:"int64" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreatFileScanTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatFileScanTaskOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *CreatFileScanTaskOutput) SetCount(v int64) *CreatFileScanTaskOutput {
	s.Count = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *CreatFileScanTaskOutput) SetTaskID(v string) *CreatFileScanTaskOutput {
	s.TaskID = &v
	return s
}
