// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBaselineForGroupPolicyCommon = "ListBaselineForGroupPolicy"

// ListBaselineForGroupPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineForGroupPolicyCommon operation. The "output" return
// value will be populated with the ListBaselineForGroupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineForGroupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineForGroupPolicyCommon Send returns without error.
//
// See ListBaselineForGroupPolicyCommon for more information on using the ListBaselineForGroupPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineForGroupPolicyCommonRequest method.
//    req, resp := client.ListBaselineForGroupPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineForGroupPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBaselineForGroupPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBaselineForGroupPolicyCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineForGroupPolicyCommon for usage and error information.
func (c *SECCENTER20240508) ListBaselineForGroupPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBaselineForGroupPolicyCommonRequest(input)
	return out, req.Send()
}

// ListBaselineForGroupPolicyCommonWithContext is the same as ListBaselineForGroupPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineForGroupPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineForGroupPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBaselineForGroupPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBaselineForGroupPolicy = "ListBaselineForGroupPolicy"

// ListBaselineForGroupPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineForGroupPolicy operation. The "output" return
// value will be populated with the ListBaselineForGroupPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineForGroupPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineForGroupPolicyCommon Send returns without error.
//
// See ListBaselineForGroupPolicy for more information on using the ListBaselineForGroupPolicy
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineForGroupPolicyRequest method.
//    req, resp := client.ListBaselineForGroupPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineForGroupPolicyRequest(input *ListBaselineForGroupPolicyInput) (req *request.Request, output *ListBaselineForGroupPolicyOutput) {
	op := &request.Operation{
		Name:       opListBaselineForGroupPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBaselineForGroupPolicyInput{}
	}

	output = &ListBaselineForGroupPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBaselineForGroupPolicy API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineForGroupPolicy for usage and error information.
func (c *SECCENTER20240508) ListBaselineForGroupPolicy(input *ListBaselineForGroupPolicyInput) (*ListBaselineForGroupPolicyOutput, error) {
	req, out := c.ListBaselineForGroupPolicyRequest(input)
	return out, req.Send()
}

// ListBaselineForGroupPolicyWithContext is the same as ListBaselineForGroupPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineForGroupPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineForGroupPolicyWithContext(ctx volcengine.Context, input *ListBaselineForGroupPolicyInput, opts ...request.Option) (*ListBaselineForGroupPolicyOutput, error) {
	req, out := c.ListBaselineForGroupPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListBaselineForGroupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BaselineID *int64 `type:"int64" json:",omitempty"`

	BaselineName *string `type:"string" json:",omitempty"`

	BaselineNameEn *string `type:"string" json:",omitempty"`

	CheckNum *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s DataForListBaselineForGroupPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListBaselineForGroupPolicyOutput) GoString() string {
	return s.String()
}

// SetBaselineID sets the BaselineID field's value.
func (s *DataForListBaselineForGroupPolicyOutput) SetBaselineID(v int64) *DataForListBaselineForGroupPolicyOutput {
	s.BaselineID = &v
	return s
}

// SetBaselineName sets the BaselineName field's value.
func (s *DataForListBaselineForGroupPolicyOutput) SetBaselineName(v string) *DataForListBaselineForGroupPolicyOutput {
	s.BaselineName = &v
	return s
}

// SetBaselineNameEn sets the BaselineNameEn field's value.
func (s *DataForListBaselineForGroupPolicyOutput) SetBaselineNameEn(v string) *DataForListBaselineForGroupPolicyOutput {
	s.BaselineNameEn = &v
	return s
}

// SetCheckNum sets the CheckNum field's value.
func (s *DataForListBaselineForGroupPolicyOutput) SetCheckNum(v int64) *DataForListBaselineForGroupPolicyOutput {
	s.CheckNum = &v
	return s
}

type ListBaselineForGroupPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// GroupID is a required field
	GroupID *int64 `type:"int64" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListBaselineForGroupPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineForGroupPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBaselineForGroupPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBaselineForGroupPolicyInput"}
	if s.GroupID == nil {
		invalidParams.Add(request.NewErrParamRequired("GroupID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGroupID sets the GroupID field's value.
func (s *ListBaselineForGroupPolicyInput) SetGroupID(v int64) *ListBaselineForGroupPolicyInput {
	s.GroupID = &v
	return s
}

type ListBaselineForGroupPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListBaselineForGroupPolicyOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBaselineForGroupPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineForGroupPolicyOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListBaselineForGroupPolicyOutput) SetData(v []*DataForListBaselineForGroupPolicyOutput) *ListBaselineForGroupPolicyOutput {
	s.Data = v
	return s
}
