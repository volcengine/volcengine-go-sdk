// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSetRegularVirusScanConfigCommon = "SetRegularVirusScanConfig"

// SetRegularVirusScanConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SetRegularVirusScanConfigCommon operation. The "output" return
// value will be populated with the SetRegularVirusScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetRegularVirusScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetRegularVirusScanConfigCommon Send returns without error.
//
// See SetRegularVirusScanConfigCommon for more information on using the SetRegularVirusScanConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the SetRegularVirusScanConfigCommonRequest method.
//    req, resp := client.SetRegularVirusScanConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) SetRegularVirusScanConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSetRegularVirusScanConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetRegularVirusScanConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation SetRegularVirusScanConfigCommon for usage and error information.
func (c *SECCENTER20240508) SetRegularVirusScanConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SetRegularVirusScanConfigCommonRequest(input)
	return out, req.Send()
}

// SetRegularVirusScanConfigCommonWithContext is the same as SetRegularVirusScanConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SetRegularVirusScanConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) SetRegularVirusScanConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SetRegularVirusScanConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetRegularVirusScanConfig = "SetRegularVirusScanConfig"

// SetRegularVirusScanConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the SetRegularVirusScanConfig operation. The "output" return
// value will be populated with the SetRegularVirusScanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetRegularVirusScanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetRegularVirusScanConfigCommon Send returns without error.
//
// See SetRegularVirusScanConfig for more information on using the SetRegularVirusScanConfig
// API call, and error handling.
//
//    // Example sending a request using the SetRegularVirusScanConfigRequest method.
//    req, resp := client.SetRegularVirusScanConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) SetRegularVirusScanConfigRequest(input *SetRegularVirusScanConfigInput) (req *request.Request, output *SetRegularVirusScanConfigOutput) {
	op := &request.Operation{
		Name:       opSetRegularVirusScanConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetRegularVirusScanConfigInput{}
	}

	output = &SetRegularVirusScanConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetRegularVirusScanConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation SetRegularVirusScanConfig for usage and error information.
func (c *SECCENTER20240508) SetRegularVirusScanConfig(input *SetRegularVirusScanConfigInput) (*SetRegularVirusScanConfigOutput, error) {
	req, out := c.SetRegularVirusScanConfigRequest(input)
	return out, req.Send()
}

// SetRegularVirusScanConfigWithContext is the same as SetRegularVirusScanConfig with the addition of
// the ability to pass a context and additional request options.
//
// See SetRegularVirusScanConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) SetRegularVirusScanConfigWithContext(ctx volcengine.Context, input *SetRegularVirusScanConfigInput, opts ...request.Option) (*SetRegularVirusScanConfigOutput, error) {
	req, out := c.SetRegularVirusScanConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SetRegularVirusScanConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	// Action is a required field
	Action *string `type:"string" json:",omitempty" required:"true"`

	AgentIDList []*string `type:"list" json:",omitempty"`

	AllHost *bool `type:"boolean" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	CpuIDle *string `type:"string" json:",omitempty"`

	FilePath *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	OperateUser *string `type:"string" json:",omitempty"`

	ScanInterval *int64 `type:"int64" json:",omitempty"`

	ScanSwitchOn *bool `type:"boolean" json:",omitempty"`

	TaskEndTime *string `type:"string" json:",omitempty"`

	TaskStartTime *string `type:"string" json:",omitempty"`

	Timeout *string `type:"string" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SetRegularVirusScanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetRegularVirusScanConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SetRegularVirusScanConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SetRegularVirusScanConfigInput"}
	if s.Action == nil {
		invalidParams.Add(request.NewErrParamRequired("Action"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccountID sets the AccountID field's value.
func (s *SetRegularVirusScanConfigInput) SetAccountID(v string) *SetRegularVirusScanConfigInput {
	s.AccountID = &v
	return s
}

// SetAction sets the Action field's value.
func (s *SetRegularVirusScanConfigInput) SetAction(v string) *SetRegularVirusScanConfigInput {
	s.Action = &v
	return s
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *SetRegularVirusScanConfigInput) SetAgentIDList(v []*string) *SetRegularVirusScanConfigInput {
	s.AgentIDList = v
	return s
}

// SetAllHost sets the AllHost field's value.
func (s *SetRegularVirusScanConfigInput) SetAllHost(v bool) *SetRegularVirusScanConfigInput {
	s.AllHost = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *SetRegularVirusScanConfigInput) SetCloudProviders(v []*string) *SetRegularVirusScanConfigInput {
	s.CloudProviders = v
	return s
}

// SetCpuIDle sets the CpuIDle field's value.
func (s *SetRegularVirusScanConfigInput) SetCpuIDle(v string) *SetRegularVirusScanConfigInput {
	s.CpuIDle = &v
	return s
}

// SetFilePath sets the FilePath field's value.
func (s *SetRegularVirusScanConfigInput) SetFilePath(v string) *SetRegularVirusScanConfigInput {
	s.FilePath = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *SetRegularVirusScanConfigInput) SetLeafGroupIDs(v []*string) *SetRegularVirusScanConfigInput {
	s.LeafGroupIDs = v
	return s
}

// SetOperateUser sets the OperateUser field's value.
func (s *SetRegularVirusScanConfigInput) SetOperateUser(v string) *SetRegularVirusScanConfigInput {
	s.OperateUser = &v
	return s
}

// SetScanInterval sets the ScanInterval field's value.
func (s *SetRegularVirusScanConfigInput) SetScanInterval(v int64) *SetRegularVirusScanConfigInput {
	s.ScanInterval = &v
	return s
}

// SetScanSwitchOn sets the ScanSwitchOn field's value.
func (s *SetRegularVirusScanConfigInput) SetScanSwitchOn(v bool) *SetRegularVirusScanConfigInput {
	s.ScanSwitchOn = &v
	return s
}

// SetTaskEndTime sets the TaskEndTime field's value.
func (s *SetRegularVirusScanConfigInput) SetTaskEndTime(v string) *SetRegularVirusScanConfigInput {
	s.TaskEndTime = &v
	return s
}

// SetTaskStartTime sets the TaskStartTime field's value.
func (s *SetRegularVirusScanConfigInput) SetTaskStartTime(v string) *SetRegularVirusScanConfigInput {
	s.TaskStartTime = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *SetRegularVirusScanConfigInput) SetTimeout(v string) *SetRegularVirusScanConfigInput {
	s.Timeout = &v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *SetRegularVirusScanConfigInput) SetTopGroupID(v string) *SetRegularVirusScanConfigInput {
	s.TopGroupID = &v
	return s
}

type SetRegularVirusScanConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SetRegularVirusScanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetRegularVirusScanConfigOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *SetRegularVirusScanConfigOutput) SetData(v string) *SetRegularVirusScanConfigOutput {
	s.Data = &v
	return s
}
