// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateLoginConfigCommon = "UpdateLoginConfig"

// UpdateLoginConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateLoginConfigCommon operation. The "output" return
// value will be populated with the UpdateLoginConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateLoginConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateLoginConfigCommon Send returns without error.
//
// See UpdateLoginConfigCommon for more information on using the UpdateLoginConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateLoginConfigCommonRequest method.
//    req, resp := client.UpdateLoginConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateLoginConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateLoginConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateLoginConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateLoginConfigCommon for usage and error information.
func (c *SECCENTER20240508) UpdateLoginConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateLoginConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateLoginConfigCommonWithContext is the same as UpdateLoginConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateLoginConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateLoginConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateLoginConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateLoginConfig = "UpdateLoginConfig"

// UpdateLoginConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateLoginConfig operation. The "output" return
// value will be populated with the UpdateLoginConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateLoginConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateLoginConfigCommon Send returns without error.
//
// See UpdateLoginConfig for more information on using the UpdateLoginConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateLoginConfigRequest method.
//    req, resp := client.UpdateLoginConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateLoginConfigRequest(input *UpdateLoginConfigInput) (req *request.Request, output *UpdateLoginConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateLoginConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateLoginConfigInput{}
	}

	output = &UpdateLoginConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateLoginConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateLoginConfig for usage and error information.
func (c *SECCENTER20240508) UpdateLoginConfig(input *UpdateLoginConfigInput) (*UpdateLoginConfigOutput, error) {
	req, out := c.UpdateLoginConfigRequest(input)
	return out, req.Send()
}

// UpdateLoginConfigWithContext is the same as UpdateLoginConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateLoginConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateLoginConfigWithContext(ctx volcengine.Context, input *UpdateLoginConfigInput, opts ...request.Option) (*UpdateLoginConfigOutput, error) {
	req, out := c.UpdateLoginConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type LoginLocationForUpdateLoginConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CityName *string `type:"string" json:",omitempty"`

	CountryName *string `type:"string" json:",omitempty"`

	DistrictName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LoginLocationForUpdateLoginConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoginLocationForUpdateLoginConfigInput) GoString() string {
	return s.String()
}

// SetCityName sets the CityName field's value.
func (s *LoginLocationForUpdateLoginConfigInput) SetCityName(v string) *LoginLocationForUpdateLoginConfigInput {
	s.CityName = &v
	return s
}

// SetCountryName sets the CountryName field's value.
func (s *LoginLocationForUpdateLoginConfigInput) SetCountryName(v string) *LoginLocationForUpdateLoginConfigInput {
	s.CountryName = &v
	return s
}

// SetDistrictName sets the DistrictName field's value.
func (s *LoginLocationForUpdateLoginConfigInput) SetDistrictName(v string) *LoginLocationForUpdateLoginConfigInput {
	s.DistrictName = &v
	return s
}

type UpdateLoginConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentIDList []*string `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// ID is a required field
	ID *string `type:"string" json:",omitempty" required:"true"`

	IPList []*string `type:"list" json:",omitempty"`

	IfAllHost *bool `type:"boolean" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	LegalUser []*string `type:"list" json:",omitempty"`

	LoginConfigRules []*string `type:"list" json:",omitempty"`

	LoginLocations []*LoginLocationForUpdateLoginConfigInput `type:"list" json:",omitempty"`

	TimeIntervals []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateLoginConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoginConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateLoginConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateLoginConfigInput"}
	if s.ID == nil {
		invalidParams.Add(request.NewErrParamRequired("ID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *UpdateLoginConfigInput) SetAgentIDList(v []*string) *UpdateLoginConfigInput {
	s.AgentIDList = v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateLoginConfigInput) SetDescription(v string) *UpdateLoginConfigInput {
	s.Description = &v
	return s
}

// SetID sets the ID field's value.
func (s *UpdateLoginConfigInput) SetID(v string) *UpdateLoginConfigInput {
	s.ID = &v
	return s
}

// SetIPList sets the IPList field's value.
func (s *UpdateLoginConfigInput) SetIPList(v []*string) *UpdateLoginConfigInput {
	s.IPList = v
	return s
}

// SetIfAllHost sets the IfAllHost field's value.
func (s *UpdateLoginConfigInput) SetIfAllHost(v bool) *UpdateLoginConfigInput {
	s.IfAllHost = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *UpdateLoginConfigInput) SetLeafGroupIDs(v []*string) *UpdateLoginConfigInput {
	s.LeafGroupIDs = v
	return s
}

// SetLegalUser sets the LegalUser field's value.
func (s *UpdateLoginConfigInput) SetLegalUser(v []*string) *UpdateLoginConfigInput {
	s.LegalUser = v
	return s
}

// SetLoginConfigRules sets the LoginConfigRules field's value.
func (s *UpdateLoginConfigInput) SetLoginConfigRules(v []*string) *UpdateLoginConfigInput {
	s.LoginConfigRules = v
	return s
}

// SetLoginLocations sets the LoginLocations field's value.
func (s *UpdateLoginConfigInput) SetLoginLocations(v []*LoginLocationForUpdateLoginConfigInput) *UpdateLoginConfigInput {
	s.LoginLocations = v
	return s
}

// SetTimeIntervals sets the TimeIntervals field's value.
func (s *UpdateLoginConfigInput) SetTimeIntervals(v []*string) *UpdateLoginConfigInput {
	s.TimeIntervals = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *UpdateLoginConfigInput) SetTopGroupID(v string) *UpdateLoginConfigInput {
	s.TopGroupID = &v
	return s
}

type UpdateLoginConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateLoginConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateLoginConfigOutput) GoString() string {
	return s.String()
}
