// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateAutoProtectConfigCommon = "UpdateAutoProtectConfig"

// UpdateAutoProtectConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAutoProtectConfigCommon operation. The "output" return
// value will be populated with the UpdateAutoProtectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAutoProtectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAutoProtectConfigCommon Send returns without error.
//
// See UpdateAutoProtectConfigCommon for more information on using the UpdateAutoProtectConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAutoProtectConfigCommonRequest method.
//    req, resp := client.UpdateAutoProtectConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateAutoProtectConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAutoProtectConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAutoProtectConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateAutoProtectConfigCommon for usage and error information.
func (c *SECCENTER20240508) UpdateAutoProtectConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAutoProtectConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateAutoProtectConfigCommonWithContext is the same as UpdateAutoProtectConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAutoProtectConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateAutoProtectConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAutoProtectConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAutoProtectConfig = "UpdateAutoProtectConfig"

// UpdateAutoProtectConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAutoProtectConfig operation. The "output" return
// value will be populated with the UpdateAutoProtectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAutoProtectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAutoProtectConfigCommon Send returns without error.
//
// See UpdateAutoProtectConfig for more information on using the UpdateAutoProtectConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateAutoProtectConfigRequest method.
//    req, resp := client.UpdateAutoProtectConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) UpdateAutoProtectConfigRequest(input *UpdateAutoProtectConfigInput) (req *request.Request, output *UpdateAutoProtectConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateAutoProtectConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAutoProtectConfigInput{}
	}

	output = &UpdateAutoProtectConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAutoProtectConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation UpdateAutoProtectConfig for usage and error information.
func (c *SECCENTER20240508) UpdateAutoProtectConfig(input *UpdateAutoProtectConfigInput) (*UpdateAutoProtectConfigOutput, error) {
	req, out := c.UpdateAutoProtectConfigRequest(input)
	return out, req.Send()
}

// UpdateAutoProtectConfigWithContext is the same as UpdateAutoProtectConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAutoProtectConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) UpdateAutoProtectConfigWithContext(ctx volcengine.Context, input *UpdateAutoProtectConfigInput, opts ...request.Option) (*UpdateAutoProtectConfigOutput, error) {
	req, out := c.UpdateAutoProtectConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateAutoProtectConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Enable is a required field
	Enable *bool `type:"boolean" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateAutoProtectConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutoProtectConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAutoProtectConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAutoProtectConfigInput"}
	if s.Enable == nil {
		invalidParams.Add(request.NewErrParamRequired("Enable"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEnable sets the Enable field's value.
func (s *UpdateAutoProtectConfigInput) SetEnable(v bool) *UpdateAutoProtectConfigInput {
	s.Enable = &v
	return s
}

type UpdateAutoProtectConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Enable *bool `type:"boolean" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAutoProtectConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAutoProtectConfigOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *UpdateAutoProtectConfigOutput) SetEnable(v bool) *UpdateAutoProtectConfigOutput {
	s.Enable = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *UpdateAutoProtectConfigOutput) SetUpdateTime(v int64) *UpdateAutoProtectConfigOutput {
	s.UpdateTime = &v
	return s
}
