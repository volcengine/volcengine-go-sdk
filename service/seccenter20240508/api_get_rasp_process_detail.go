// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRaspProcessDetailCommon = "GetRaspProcessDetail"

// GetRaspProcessDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRaspProcessDetailCommon operation. The "output" return
// value will be populated with the GetRaspProcessDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRaspProcessDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRaspProcessDetailCommon Send returns without error.
//
// See GetRaspProcessDetailCommon for more information on using the GetRaspProcessDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRaspProcessDetailCommonRequest method.
//    req, resp := client.GetRaspProcessDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRaspProcessDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRaspProcessDetailCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetRaspProcessDetailCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRaspProcessDetailCommon for usage and error information.
func (c *SECCENTER20240508) GetRaspProcessDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRaspProcessDetailCommonRequest(input)
	return out, req.Send()
}

// GetRaspProcessDetailCommonWithContext is the same as GetRaspProcessDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRaspProcessDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRaspProcessDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRaspProcessDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRaspProcessDetail = "GetRaspProcessDetail"

// GetRaspProcessDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRaspProcessDetail operation. The "output" return
// value will be populated with the GetRaspProcessDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRaspProcessDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRaspProcessDetailCommon Send returns without error.
//
// See GetRaspProcessDetail for more information on using the GetRaspProcessDetail
// API call, and error handling.
//
//    // Example sending a request using the GetRaspProcessDetailRequest method.
//    req, resp := client.GetRaspProcessDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRaspProcessDetailRequest(input *GetRaspProcessDetailInput) (req *request.Request, output *GetRaspProcessDetailOutput) {
	op := &request.Operation{
		Name:       opGetRaspProcessDetail,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRaspProcessDetailInput{}
	}

	output = &GetRaspProcessDetailOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetRaspProcessDetail API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRaspProcessDetail for usage and error information.
func (c *SECCENTER20240508) GetRaspProcessDetail(input *GetRaspProcessDetailInput) (*GetRaspProcessDetailOutput, error) {
	req, out := c.GetRaspProcessDetailRequest(input)
	return out, req.Send()
}

// GetRaspProcessDetailWithContext is the same as GetRaspProcessDetail with the addition of
// the ability to pass a context and additional request options.
//
// See GetRaspProcessDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRaspProcessDetailWithContext(ctx volcengine.Context, input *GetRaspProcessDetailInput, opts ...request.Option) (*GetRaspProcessDetailOutput, error) {
	req, out := c.GetRaspProcessDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EnvironListForGetRaspProcessDetailOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s EnvironListForGetRaspProcessDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnvironListForGetRaspProcessDetailOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *EnvironListForGetRaspProcessDetailOutput) SetKey(v string) *EnvironListForGetRaspProcessDetailOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *EnvironListForGetRaspProcessDetailOutput) SetValue(v string) *EnvironListForGetRaspProcessDetailOutput {
	s.Value = &v
	return s
}

type GetRaspProcessDetailInput struct {
	_ struct{} `type:"structure"`

	ID *string `type:"string"`
}

// String returns the string representation
func (s GetRaspProcessDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRaspProcessDetailInput) GoString() string {
	return s.String()
}

// SetID sets the ID field's value.
func (s *GetRaspProcessDetailInput) SetID(v string) *GetRaspProcessDetailInput {
	s.ID = &v
	return s
}

type GetRaspProcessDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AgentID *string `type:"string"`

	Cmdline *string `type:"string"`

	EnvironList []*EnvironListForGetRaspProcessDetailOutput `type:"list"`

	ExeName *string `type:"string"`

	ExePath *string `type:"string"`

	InspectPort *int64 `type:"int64"`

	Pid *string `type:"string"`

	ProcessState *string `type:"string"`

	ProtectTime *int64 `type:"int64"`

	Reason *string `type:"string"`

	RelateRaspConfigName *string `type:"string"`

	RelatedConfigID *string `type:"string"`

	Runtime *string `type:"string"`

	RuntimeVersion *string `type:"string"`

	StartTimeUnix *int64 `type:"int64"`

	Status *string `type:"string"`

	UpdateTime *int64 `type:"int64"`
}

// String returns the string representation
func (s GetRaspProcessDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRaspProcessDetailOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *GetRaspProcessDetailOutput) SetAgentID(v string) *GetRaspProcessDetailOutput {
	s.AgentID = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *GetRaspProcessDetailOutput) SetCmdline(v string) *GetRaspProcessDetailOutput {
	s.Cmdline = &v
	return s
}

// SetEnvironList sets the EnvironList field's value.
func (s *GetRaspProcessDetailOutput) SetEnvironList(v []*EnvironListForGetRaspProcessDetailOutput) *GetRaspProcessDetailOutput {
	s.EnvironList = v
	return s
}

// SetExeName sets the ExeName field's value.
func (s *GetRaspProcessDetailOutput) SetExeName(v string) *GetRaspProcessDetailOutput {
	s.ExeName = &v
	return s
}

// SetExePath sets the ExePath field's value.
func (s *GetRaspProcessDetailOutput) SetExePath(v string) *GetRaspProcessDetailOutput {
	s.ExePath = &v
	return s
}

// SetInspectPort sets the InspectPort field's value.
func (s *GetRaspProcessDetailOutput) SetInspectPort(v int64) *GetRaspProcessDetailOutput {
	s.InspectPort = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *GetRaspProcessDetailOutput) SetPid(v string) *GetRaspProcessDetailOutput {
	s.Pid = &v
	return s
}

// SetProcessState sets the ProcessState field's value.
func (s *GetRaspProcessDetailOutput) SetProcessState(v string) *GetRaspProcessDetailOutput {
	s.ProcessState = &v
	return s
}

// SetProtectTime sets the ProtectTime field's value.
func (s *GetRaspProcessDetailOutput) SetProtectTime(v int64) *GetRaspProcessDetailOutput {
	s.ProtectTime = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *GetRaspProcessDetailOutput) SetReason(v string) *GetRaspProcessDetailOutput {
	s.Reason = &v
	return s
}

// SetRelateRaspConfigName sets the RelateRaspConfigName field's value.
func (s *GetRaspProcessDetailOutput) SetRelateRaspConfigName(v string) *GetRaspProcessDetailOutput {
	s.RelateRaspConfigName = &v
	return s
}

// SetRelatedConfigID sets the RelatedConfigID field's value.
func (s *GetRaspProcessDetailOutput) SetRelatedConfigID(v string) *GetRaspProcessDetailOutput {
	s.RelatedConfigID = &v
	return s
}

// SetRuntime sets the Runtime field's value.
func (s *GetRaspProcessDetailOutput) SetRuntime(v string) *GetRaspProcessDetailOutput {
	s.Runtime = &v
	return s
}

// SetRuntimeVersion sets the RuntimeVersion field's value.
func (s *GetRaspProcessDetailOutput) SetRuntimeVersion(v string) *GetRaspProcessDetailOutput {
	s.RuntimeVersion = &v
	return s
}

// SetStartTimeUnix sets the StartTimeUnix field's value.
func (s *GetRaspProcessDetailOutput) SetStartTimeUnix(v int64) *GetRaspProcessDetailOutput {
	s.StartTimeUnix = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetRaspProcessDetailOutput) SetStatus(v string) *GetRaspProcessDetailOutput {
	s.Status = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetRaspProcessDetailOutput) SetUpdateTime(v int64) *GetRaspProcessDetailOutput {
	s.UpdateTime = &v
	return s
}
