// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDevFingerprintProcessCommon = "GetDevFingerprintProcess"

// GetDevFingerprintProcessCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintProcessCommon operation. The "output" return
// value will be populated with the GetDevFingerprintProcessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintProcessCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintProcessCommon Send returns without error.
//
// See GetDevFingerprintProcessCommon for more information on using the GetDevFingerprintProcessCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintProcessCommonRequest method.
//    req, resp := client.GetDevFingerprintProcessCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintProcessCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDevFingerprintProcessCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintProcessCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintProcessCommon for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintProcessCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintProcessCommonRequest(input)
	return out, req.Send()
}

// GetDevFingerprintProcessCommonWithContext is the same as GetDevFingerprintProcessCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintProcessCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintProcessCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintProcessCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDevFingerprintProcess = "GetDevFingerprintProcess"

// GetDevFingerprintProcessRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintProcess operation. The "output" return
// value will be populated with the GetDevFingerprintProcessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintProcessCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintProcessCommon Send returns without error.
//
// See GetDevFingerprintProcess for more information on using the GetDevFingerprintProcess
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintProcessRequest method.
//    req, resp := client.GetDevFingerprintProcessRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintProcessRequest(input *GetDevFingerprintProcessInput) (req *request.Request, output *GetDevFingerprintProcessOutput) {
	op := &request.Operation{
		Name:       opGetDevFingerprintProcess,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDevFingerprintProcessInput{}
	}

	output = &GetDevFingerprintProcessOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintProcess API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintProcess for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintProcess(input *GetDevFingerprintProcessInput) (*GetDevFingerprintProcessOutput, error) {
	req, out := c.GetDevFingerprintProcessRequest(input)
	return out, req.Send()
}

// GetDevFingerprintProcessWithContext is the same as GetDevFingerprintProcess with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintProcess for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintProcessWithContext(ctx volcengine.Context, input *GetDevFingerprintProcessInput, opts ...request.Option) (*GetDevFingerprintProcessOutput, error) {
	req, out := c.GetDevFingerprintProcessRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetDevFingerprintProcessOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	AssetId *string `type:"string" json:",omitempty"`

	AssetName *string `type:"string" json:",omitempty"`

	Checksum *string `type:"string" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Pid *string `type:"string" json:",omitempty"`

	Ppid *string `type:"string" json:",omitempty"`

	PrivateIP *string `type:"string" json:",omitempty"`

	PublicIP *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetDevFingerprintProcessOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetDevFingerprintProcessOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetAccountId(v string) *DataForGetDevFingerprintProcessOutput {
	s.AccountId = &v
	return s
}

// SetAssetId sets the AssetId field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetAssetId(v string) *DataForGetDevFingerprintProcessOutput {
	s.AssetId = &v
	return s
}

// SetAssetName sets the AssetName field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetAssetName(v string) *DataForGetDevFingerprintProcessOutput {
	s.AssetName = &v
	return s
}

// SetChecksum sets the Checksum field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetChecksum(v string) *DataForGetDevFingerprintProcessOutput {
	s.Checksum = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetCmdline(v string) *DataForGetDevFingerprintProcessOutput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetComm(v string) *DataForGetDevFingerprintProcessOutput {
	s.Comm = &v
	return s
}

// SetExe sets the Exe field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetExe(v string) *DataForGetDevFingerprintProcessOutput {
	s.Exe = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetID(v string) *DataForGetDevFingerprintProcessOutput {
	s.ID = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetPid(v string) *DataForGetDevFingerprintProcessOutput {
	s.Pid = &v
	return s
}

// SetPpid sets the Ppid field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetPpid(v string) *DataForGetDevFingerprintProcessOutput {
	s.Ppid = &v
	return s
}

// SetPrivateIP sets the PrivateIP field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetPrivateIP(v string) *DataForGetDevFingerprintProcessOutput {
	s.PrivateIP = &v
	return s
}

// SetPublicIP sets the PublicIP field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetPublicIP(v string) *DataForGetDevFingerprintProcessOutput {
	s.PublicIP = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetStartTime(v int64) *DataForGetDevFingerprintProcessOutput {
	s.StartTime = &v
	return s
}

// SetState sets the State field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetState(v string) *DataForGetDevFingerprintProcessOutput {
	s.State = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetStatus(v string) *DataForGetDevFingerprintProcessOutput {
	s.Status = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetUid(v string) *DataForGetDevFingerprintProcessOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetUpdateTime(v int64) *DataForGetDevFingerprintProcessOutput {
	s.UpdateTime = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *DataForGetDevFingerprintProcessOutput) SetUsername(v string) *DataForGetDevFingerprintProcessOutput {
	s.Username = &v
	return s
}

type GetDevFingerprintProcessInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetID *string `type:"string" json:",omitempty"`

	AssetIP *string `type:"string" json:",omitempty"`

	AssetName *string `type:"string" json:",omitempty"`

	Checksum *string `type:"string" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	Common *bool `type:"boolean" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	Integrity *bool `type:"boolean" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty" enum:"EnumOfSortOrderForGetDevFingerprintProcessInput"`

	StartTimeEnd *int64 `type:"int64" json:",omitempty"`

	StartTimeStart *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintProcessInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintProcessInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDevFingerprintProcessInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDevFingerprintProcessInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetID sets the AssetID field's value.
func (s *GetDevFingerprintProcessInput) SetAssetID(v string) *GetDevFingerprintProcessInput {
	s.AssetID = &v
	return s
}

// SetAssetIP sets the AssetIP field's value.
func (s *GetDevFingerprintProcessInput) SetAssetIP(v string) *GetDevFingerprintProcessInput {
	s.AssetIP = &v
	return s
}

// SetAssetName sets the AssetName field's value.
func (s *GetDevFingerprintProcessInput) SetAssetName(v string) *GetDevFingerprintProcessInput {
	s.AssetName = &v
	return s
}

// SetChecksum sets the Checksum field's value.
func (s *GetDevFingerprintProcessInput) SetChecksum(v string) *GetDevFingerprintProcessInput {
	s.Checksum = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *GetDevFingerprintProcessInput) SetCmdline(v string) *GetDevFingerprintProcessInput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *GetDevFingerprintProcessInput) SetComm(v string) *GetDevFingerprintProcessInput {
	s.Comm = &v
	return s
}

// SetCommon sets the Common field's value.
func (s *GetDevFingerprintProcessInput) SetCommon(v bool) *GetDevFingerprintProcessInput {
	s.Common = &v
	return s
}

// SetExe sets the Exe field's value.
func (s *GetDevFingerprintProcessInput) SetExe(v string) *GetDevFingerprintProcessInput {
	s.Exe = &v
	return s
}

// SetIntegrity sets the Integrity field's value.
func (s *GetDevFingerprintProcessInput) SetIntegrity(v bool) *GetDevFingerprintProcessInput {
	s.Integrity = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintProcessInput) SetPageNumber(v int64) *GetDevFingerprintProcessInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintProcessInput) SetPageSize(v int64) *GetDevFingerprintProcessInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetDevFingerprintProcessInput) SetSortBy(v string) *GetDevFingerprintProcessInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetDevFingerprintProcessInput) SetSortOrder(v string) *GetDevFingerprintProcessInput {
	s.SortOrder = &v
	return s
}

// SetStartTimeEnd sets the StartTimeEnd field's value.
func (s *GetDevFingerprintProcessInput) SetStartTimeEnd(v int64) *GetDevFingerprintProcessInput {
	s.StartTimeEnd = &v
	return s
}

// SetStartTimeStart sets the StartTimeStart field's value.
func (s *GetDevFingerprintProcessInput) SetStartTimeStart(v int64) *GetDevFingerprintProcessInput {
	s.StartTimeStart = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *GetDevFingerprintProcessInput) SetUsername(v string) *GetDevFingerprintProcessInput {
	s.Username = &v
	return s
}

type GetDevFingerprintProcessOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetDevFingerprintProcessOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintProcessOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintProcessOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetDevFingerprintProcessOutput) SetData(v []*DataForGetDevFingerprintProcessOutput) *GetDevFingerprintProcessOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintProcessOutput) SetPageNumber(v int64) *GetDevFingerprintProcessOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintProcessOutput) SetPageSize(v int64) *GetDevFingerprintProcessOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetDevFingerprintProcessOutput) SetTotalCount(v int64) *GetDevFingerprintProcessOutput {
	s.TotalCount = &v
	return s
}

const (
	// EnumOfSortOrderForGetDevFingerprintProcessInputAsc is a EnumOfSortOrderForGetDevFingerprintProcessInput enum value
	EnumOfSortOrderForGetDevFingerprintProcessInputAsc = "Asc"

	// EnumOfSortOrderForGetDevFingerprintProcessInputDesc is a EnumOfSortOrderForGetDevFingerprintProcessInput enum value
	EnumOfSortOrderForGetDevFingerprintProcessInputDesc = " Desc"
)
