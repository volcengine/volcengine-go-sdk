// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListWhiteListsCommon = "ListWhiteLists"

// ListWhiteListsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWhiteListsCommon operation. The "output" return
// value will be populated with the ListWhiteListsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWhiteListsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWhiteListsCommon Send returns without error.
//
// See ListWhiteListsCommon for more information on using the ListWhiteListsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListWhiteListsCommonRequest method.
//    req, resp := client.ListWhiteListsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListWhiteListsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListWhiteListsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWhiteListsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListWhiteListsCommon for usage and error information.
func (c *SECCENTER20240508) ListWhiteListsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListWhiteListsCommonRequest(input)
	return out, req.Send()
}

// ListWhiteListsCommonWithContext is the same as ListWhiteListsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListWhiteListsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListWhiteListsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListWhiteListsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListWhiteLists = "ListWhiteLists"

// ListWhiteListsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWhiteLists operation. The "output" return
// value will be populated with the ListWhiteListsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWhiteListsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWhiteListsCommon Send returns without error.
//
// See ListWhiteLists for more information on using the ListWhiteLists
// API call, and error handling.
//
//    // Example sending a request using the ListWhiteListsRequest method.
//    req, resp := client.ListWhiteListsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListWhiteListsRequest(input *ListWhiteListsInput) (req *request.Request, output *ListWhiteListsOutput) {
	op := &request.Operation{
		Name:       opListWhiteLists,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListWhiteListsInput{}
	}

	output = &ListWhiteListsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWhiteLists API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListWhiteLists for usage and error information.
func (c *SECCENTER20240508) ListWhiteLists(input *ListWhiteListsInput) (*ListWhiteListsOutput, error) {
	req, out := c.ListWhiteListsRequest(input)
	return out, req.Send()
}

// ListWhiteListsWithContext is the same as ListWhiteLists with the addition of
// the ability to pass a context and additional request options.
//
// See ListWhiteLists for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListWhiteListsWithContext(ctx volcengine.Context, input *ListWhiteListsInput, opts ...request.Option) (*ListWhiteListsOutput, error) {
	req, out := c.ListWhiteListsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ClusterListForListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *string `type:"string" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	ClusterRegion *string `type:"string" json:",omitempty"`

	ClusterTags []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ClusterListForListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ClusterListForListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *ClusterListForListWhiteListsOutput) SetClusterID(v string) *ClusterListForListWhiteListsOutput {
	s.ClusterID = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *ClusterListForListWhiteListsOutput) SetClusterName(v string) *ClusterListForListWhiteListsOutput {
	s.ClusterName = &v
	return s
}

// SetClusterRegion sets the ClusterRegion field's value.
func (s *ClusterListForListWhiteListsOutput) SetClusterRegion(v string) *ClusterListForListWhiteListsOutput {
	s.ClusterRegion = &v
	return s
}

// SetClusterTags sets the ClusterTags field's value.
func (s *ClusterListForListWhiteListsOutput) SetClusterTags(v []*string) *ClusterListForListWhiteListsOutput {
	s.ClusterTags = v
	return s
}

type ConditionsForListWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Desc *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	MatchAlarmName *string `type:"string" json:",omitempty"`

	MatchContent *string `type:"string" json:",omitempty"`

	MatchKey *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Range *RangeForListWhiteListsInput `type:"structure" json:",omitempty"`

	RangeIncludeGlobal *RangeIncludeGlobalForListWhiteListsInput `type:"structure" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	UpdateTimeEnd *int64 `type:"int64" json:",omitempty"`

	UpdateTimeStart *int64 `type:"int64" json:",omitempty"`

	User *string `type:"string" json:",omitempty"`

	WhiteListID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForListWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForListWhiteListsInput) GoString() string {
	return s.String()
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *ConditionsForListWhiteListsInput) SetCloudProviders(v []*string) *ConditionsForListWhiteListsInput {
	s.CloudProviders = v
	return s
}

// SetDesc sets the Desc field's value.
func (s *ConditionsForListWhiteListsInput) SetDesc(v string) *ConditionsForListWhiteListsInput {
	s.Desc = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *ConditionsForListWhiteListsInput) SetLeafGroupIDs(v []*string) *ConditionsForListWhiteListsInput {
	s.LeafGroupIDs = v
	return s
}

// SetMatchAlarmName sets the MatchAlarmName field's value.
func (s *ConditionsForListWhiteListsInput) SetMatchAlarmName(v string) *ConditionsForListWhiteListsInput {
	s.MatchAlarmName = &v
	return s
}

// SetMatchContent sets the MatchContent field's value.
func (s *ConditionsForListWhiteListsInput) SetMatchContent(v string) *ConditionsForListWhiteListsInput {
	s.MatchContent = &v
	return s
}

// SetMatchKey sets the MatchKey field's value.
func (s *ConditionsForListWhiteListsInput) SetMatchKey(v string) *ConditionsForListWhiteListsInput {
	s.MatchKey = &v
	return s
}

// SetName sets the Name field's value.
func (s *ConditionsForListWhiteListsInput) SetName(v string) *ConditionsForListWhiteListsInput {
	s.Name = &v
	return s
}

// SetRange sets the Range field's value.
func (s *ConditionsForListWhiteListsInput) SetRange(v *RangeForListWhiteListsInput) *ConditionsForListWhiteListsInput {
	s.Range = v
	return s
}

// SetRangeIncludeGlobal sets the RangeIncludeGlobal field's value.
func (s *ConditionsForListWhiteListsInput) SetRangeIncludeGlobal(v *RangeIncludeGlobalForListWhiteListsInput) *ConditionsForListWhiteListsInput {
	s.RangeIncludeGlobal = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ConditionsForListWhiteListsInput) SetTopGroupID(v string) *ConditionsForListWhiteListsInput {
	s.TopGroupID = &v
	return s
}

// SetUpdateTimeEnd sets the UpdateTimeEnd field's value.
func (s *ConditionsForListWhiteListsInput) SetUpdateTimeEnd(v int64) *ConditionsForListWhiteListsInput {
	s.UpdateTimeEnd = &v
	return s
}

// SetUpdateTimeStart sets the UpdateTimeStart field's value.
func (s *ConditionsForListWhiteListsInput) SetUpdateTimeStart(v int64) *ConditionsForListWhiteListsInput {
	s.UpdateTimeStart = &v
	return s
}

// SetUser sets the User field's value.
func (s *ConditionsForListWhiteListsInput) SetUser(v string) *ConditionsForListWhiteListsInput {
	s.User = &v
	return s
}

// SetWhiteListID sets the WhiteListID field's value.
func (s *ConditionsForListWhiteListsInput) SetWhiteListID(v string) *ConditionsForListWhiteListsInput {
	s.WhiteListID = &v
	return s
}

type DataForListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Desc *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	MatchAlarmName *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Range *RangeForListWhiteListsOutput `type:"structure" json:",omitempty"`

	RuleList []*RuleListForListWhiteListsOutput `type:"list" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	User *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetDesc sets the Desc field's value.
func (s *DataForListWhiteListsOutput) SetDesc(v string) *DataForListWhiteListsOutput {
	s.Desc = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForListWhiteListsOutput) SetID(v string) *DataForListWhiteListsOutput {
	s.ID = &v
	return s
}

// SetMatchAlarmName sets the MatchAlarmName field's value.
func (s *DataForListWhiteListsOutput) SetMatchAlarmName(v string) *DataForListWhiteListsOutput {
	s.MatchAlarmName = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListWhiteListsOutput) SetName(v string) *DataForListWhiteListsOutput {
	s.Name = &v
	return s
}

// SetRange sets the Range field's value.
func (s *DataForListWhiteListsOutput) SetRange(v *RangeForListWhiteListsOutput) *DataForListWhiteListsOutput {
	s.Range = v
	return s
}

// SetRuleList sets the RuleList field's value.
func (s *DataForListWhiteListsOutput) SetRuleList(v []*RuleListForListWhiteListsOutput) *DataForListWhiteListsOutput {
	s.RuleList = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListWhiteListsOutput) SetUpdateTime(v int64) *DataForListWhiteListsOutput {
	s.UpdateTime = &v
	return s
}

// SetUser sets the User field's value.
func (s *DataForListWhiteListsOutput) SetUser(v string) *DataForListWhiteListsOutput {
	s.User = &v
	return s
}

type HostListForListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	CloudProvider *string `type:"string" json:",omitempty"`

	HostTags []*string `type:"list" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	InnerIPList []*string `type:"list" json:",omitempty"`

	OuterIPList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s HostListForListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HostListForListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *HostListForListWhiteListsOutput) SetAgentID(v string) *HostListForListWhiteListsOutput {
	s.AgentID = &v
	return s
}

// SetCloudProvider sets the CloudProvider field's value.
func (s *HostListForListWhiteListsOutput) SetCloudProvider(v string) *HostListForListWhiteListsOutput {
	s.CloudProvider = &v
	return s
}

// SetHostTags sets the HostTags field's value.
func (s *HostListForListWhiteListsOutput) SetHostTags(v []*string) *HostListForListWhiteListsOutput {
	s.HostTags = v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *HostListForListWhiteListsOutput) SetHostname(v string) *HostListForListWhiteListsOutput {
	s.Hostname = &v
	return s
}

// SetInnerIPList sets the InnerIPList field's value.
func (s *HostListForListWhiteListsOutput) SetInnerIPList(v []*string) *HostListForListWhiteListsOutput {
	s.InnerIPList = v
	return s
}

// SetOuterIPList sets the OuterIPList field's value.
func (s *HostListForListWhiteListsOutput) SetOuterIPList(v []*string) *HostListForListWhiteListsOutput {
	s.OuterIPList = v
	return s
}

type ListWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions *ConditionsForListWhiteListsInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWhiteListsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListWhiteListsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListWhiteListsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConditions sets the Conditions field's value.
func (s *ListWhiteListsInput) SetConditions(v *ConditionsForListWhiteListsInput) *ListWhiteListsInput {
	s.Conditions = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWhiteListsInput) SetPageNumber(v int64) *ListWhiteListsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWhiteListsInput) SetPageSize(v int64) *ListWhiteListsInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListWhiteListsInput) SetSortBy(v string) *ListWhiteListsInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListWhiteListsInput) SetSortOrder(v string) *ListWhiteListsInput {
	s.SortOrder = &v
	return s
}

// SetType sets the Type field's value.
func (s *ListWhiteListsInput) SetType(v string) *ListWhiteListsInput {
	s.Type = &v
	return s
}

type ListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListWhiteListsOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListWhiteListsOutput) SetData(v []*DataForListWhiteListsOutput) *ListWhiteListsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWhiteListsOutput) SetPageNumber(v int64) *ListWhiteListsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWhiteListsOutput) SetPageSize(v int64) *ListWhiteListsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListWhiteListsOutput) SetTotalCount(v int64) *ListWhiteListsOutput {
	s.TotalCount = &v
	return s
}

type RangeForListWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterArea *string `type:"string" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	IsGlobal *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RangeForListWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RangeForListWhiteListsInput) GoString() string {
	return s.String()
}

// SetClusterArea sets the ClusterArea field's value.
func (s *RangeForListWhiteListsInput) SetClusterArea(v string) *RangeForListWhiteListsInput {
	s.ClusterArea = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *RangeForListWhiteListsInput) SetClusterName(v string) *RangeForListWhiteListsInput {
	s.ClusterName = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *RangeForListWhiteListsInput) SetHostname(v string) *RangeForListWhiteListsInput {
	s.Hostname = &v
	return s
}

// SetIP sets the IP field's value.
func (s *RangeForListWhiteListsInput) SetIP(v string) *RangeForListWhiteListsInput {
	s.IP = &v
	return s
}

// SetIsGlobal sets the IsGlobal field's value.
func (s *RangeForListWhiteListsInput) SetIsGlobal(v bool) *RangeForListWhiteListsInput {
	s.IsGlobal = &v
	return s
}

type RangeForListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterList []*ClusterListForListWhiteListsOutput `type:"list" json:",omitempty"`

	HostList []*HostListForListWhiteListsOutput `type:"list" json:",omitempty"`

	LeafGroupIDList []*string `type:"list" json:",omitempty"`

	SingleGroupPath *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RangeForListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RangeForListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetClusterList sets the ClusterList field's value.
func (s *RangeForListWhiteListsOutput) SetClusterList(v []*ClusterListForListWhiteListsOutput) *RangeForListWhiteListsOutput {
	s.ClusterList = v
	return s
}

// SetHostList sets the HostList field's value.
func (s *RangeForListWhiteListsOutput) SetHostList(v []*HostListForListWhiteListsOutput) *RangeForListWhiteListsOutput {
	s.HostList = v
	return s
}

// SetLeafGroupIDList sets the LeafGroupIDList field's value.
func (s *RangeForListWhiteListsOutput) SetLeafGroupIDList(v []*string) *RangeForListWhiteListsOutput {
	s.LeafGroupIDList = v
	return s
}

// SetSingleGroupPath sets the SingleGroupPath field's value.
func (s *RangeForListWhiteListsOutput) SetSingleGroupPath(v string) *RangeForListWhiteListsOutput {
	s.SingleGroupPath = &v
	return s
}

type RangeIncludeGlobalForListWhiteListsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RangeIncludeGlobalForListWhiteListsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RangeIncludeGlobalForListWhiteListsInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *RangeIncludeGlobalForListWhiteListsInput) SetAgentID(v string) *RangeIncludeGlobalForListWhiteListsInput {
	s.AgentID = &v
	return s
}

type RuleListForListWhiteListsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MatchContent *string `type:"string" json:",omitempty"`

	MatchKey *string `type:"string" json:",omitempty"`

	MatchType *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s RuleListForListWhiteListsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleListForListWhiteListsOutput) GoString() string {
	return s.String()
}

// SetMatchContent sets the MatchContent field's value.
func (s *RuleListForListWhiteListsOutput) SetMatchContent(v string) *RuleListForListWhiteListsOutput {
	s.MatchContent = &v
	return s
}

// SetMatchKey sets the MatchKey field's value.
func (s *RuleListForListWhiteListsOutput) SetMatchKey(v string) *RuleListForListWhiteListsOutput {
	s.MatchKey = &v
	return s
}

// SetMatchType sets the MatchType field's value.
func (s *RuleListForListWhiteListsOutput) SetMatchType(v int64) *RuleListForListWhiteListsOutput {
	s.MatchType = &v
	return s
}
