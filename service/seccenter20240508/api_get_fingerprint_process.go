// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFingerprintProcessCommon = "GetFingerprintProcess"

// GetFingerprintProcessCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintProcessCommon operation. The "output" return
// value will be populated with the GetFingerprintProcessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintProcessCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintProcessCommon Send returns without error.
//
// See GetFingerprintProcessCommon for more information on using the GetFingerprintProcessCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintProcessCommonRequest method.
//    req, resp := client.GetFingerprintProcessCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintProcessCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFingerprintProcessCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFingerprintProcessCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintProcessCommon for usage and error information.
func (c *SECCENTER20240508) GetFingerprintProcessCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintProcessCommonRequest(input)
	return out, req.Send()
}

// GetFingerprintProcessCommonWithContext is the same as GetFingerprintProcessCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintProcessCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintProcessCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFingerprintProcessCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFingerprintProcess = "GetFingerprintProcess"

// GetFingerprintProcessRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFingerprintProcess operation. The "output" return
// value will be populated with the GetFingerprintProcessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFingerprintProcessCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFingerprintProcessCommon Send returns without error.
//
// See GetFingerprintProcess for more information on using the GetFingerprintProcess
// API call, and error handling.
//
//    // Example sending a request using the GetFingerprintProcessRequest method.
//    req, resp := client.GetFingerprintProcessRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetFingerprintProcessRequest(input *GetFingerprintProcessInput) (req *request.Request, output *GetFingerprintProcessOutput) {
	op := &request.Operation{
		Name:       opGetFingerprintProcess,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFingerprintProcessInput{}
	}

	output = &GetFingerprintProcessOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFingerprintProcess API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetFingerprintProcess for usage and error information.
func (c *SECCENTER20240508) GetFingerprintProcess(input *GetFingerprintProcessInput) (*GetFingerprintProcessOutput, error) {
	req, out := c.GetFingerprintProcessRequest(input)
	return out, req.Send()
}

// GetFingerprintProcessWithContext is the same as GetFingerprintProcess with the addition of
// the ability to pass a context and additional request options.
//
// See GetFingerprintProcess for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetFingerprintProcessWithContext(ctx volcengine.Context, input *GetFingerprintProcessInput, opts ...request.Option) (*GetFingerprintProcessOutput, error) {
	req, out := c.GetFingerprintProcessRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetFingerprintProcessOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AgentTags []*string `type:"list" json:",omitempty"`

	Checksum *string `type:"string" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	Common *bool `type:"boolean" json:",omitempty"`

	ContainerID *string `type:"string" json:",omitempty"`

	ContainerName *string `type:"string" json:",omitempty"`

	EipAddress *string `type:"string" json:",omitempty"`

	Euid *string `type:"string" json:",omitempty"`

	Eusername *string `type:"string" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Integrity *bool `type:"boolean" json:",omitempty"`

	Pexe *string `type:"string" json:",omitempty"`

	Pid *string `type:"string" json:",omitempty"`

	Ppid *string `type:"string" json:",omitempty"`

	PrimaryIpAddress *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetFingerprintProcessOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetFingerprintProcessOutput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *DataForGetFingerprintProcessOutput) SetAgentID(v string) *DataForGetFingerprintProcessOutput {
	s.AgentID = &v
	return s
}

// SetAgentTags sets the AgentTags field's value.
func (s *DataForGetFingerprintProcessOutput) SetAgentTags(v []*string) *DataForGetFingerprintProcessOutput {
	s.AgentTags = v
	return s
}

// SetChecksum sets the Checksum field's value.
func (s *DataForGetFingerprintProcessOutput) SetChecksum(v string) *DataForGetFingerprintProcessOutput {
	s.Checksum = &v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *DataForGetFingerprintProcessOutput) SetCmdline(v string) *DataForGetFingerprintProcessOutput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *DataForGetFingerprintProcessOutput) SetComm(v string) *DataForGetFingerprintProcessOutput {
	s.Comm = &v
	return s
}

// SetCommon sets the Common field's value.
func (s *DataForGetFingerprintProcessOutput) SetCommon(v bool) *DataForGetFingerprintProcessOutput {
	s.Common = &v
	return s
}

// SetContainerID sets the ContainerID field's value.
func (s *DataForGetFingerprintProcessOutput) SetContainerID(v string) *DataForGetFingerprintProcessOutput {
	s.ContainerID = &v
	return s
}

// SetContainerName sets the ContainerName field's value.
func (s *DataForGetFingerprintProcessOutput) SetContainerName(v string) *DataForGetFingerprintProcessOutput {
	s.ContainerName = &v
	return s
}

// SetEipAddress sets the EipAddress field's value.
func (s *DataForGetFingerprintProcessOutput) SetEipAddress(v string) *DataForGetFingerprintProcessOutput {
	s.EipAddress = &v
	return s
}

// SetEuid sets the Euid field's value.
func (s *DataForGetFingerprintProcessOutput) SetEuid(v string) *DataForGetFingerprintProcessOutput {
	s.Euid = &v
	return s
}

// SetEusername sets the Eusername field's value.
func (s *DataForGetFingerprintProcessOutput) SetEusername(v string) *DataForGetFingerprintProcessOutput {
	s.Eusername = &v
	return s
}

// SetExe sets the Exe field's value.
func (s *DataForGetFingerprintProcessOutput) SetExe(v string) *DataForGetFingerprintProcessOutput {
	s.Exe = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *DataForGetFingerprintProcessOutput) SetHostname(v string) *DataForGetFingerprintProcessOutput {
	s.Hostname = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForGetFingerprintProcessOutput) SetID(v string) *DataForGetFingerprintProcessOutput {
	s.ID = &v
	return s
}

// SetIntegrity sets the Integrity field's value.
func (s *DataForGetFingerprintProcessOutput) SetIntegrity(v bool) *DataForGetFingerprintProcessOutput {
	s.Integrity = &v
	return s
}

// SetPexe sets the Pexe field's value.
func (s *DataForGetFingerprintProcessOutput) SetPexe(v string) *DataForGetFingerprintProcessOutput {
	s.Pexe = &v
	return s
}

// SetPid sets the Pid field's value.
func (s *DataForGetFingerprintProcessOutput) SetPid(v string) *DataForGetFingerprintProcessOutput {
	s.Pid = &v
	return s
}

// SetPpid sets the Ppid field's value.
func (s *DataForGetFingerprintProcessOutput) SetPpid(v string) *DataForGetFingerprintProcessOutput {
	s.Ppid = &v
	return s
}

// SetPrimaryIpAddress sets the PrimaryIpAddress field's value.
func (s *DataForGetFingerprintProcessOutput) SetPrimaryIpAddress(v string) *DataForGetFingerprintProcessOutput {
	s.PrimaryIpAddress = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForGetFingerprintProcessOutput) SetStartTime(v int64) *DataForGetFingerprintProcessOutput {
	s.StartTime = &v
	return s
}

// SetState sets the State field's value.
func (s *DataForGetFingerprintProcessOutput) SetState(v string) *DataForGetFingerprintProcessOutput {
	s.State = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForGetFingerprintProcessOutput) SetUid(v string) *DataForGetFingerprintProcessOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForGetFingerprintProcessOutput) SetUpdateTime(v int64) *DataForGetFingerprintProcessOutput {
	s.UpdateTime = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *DataForGetFingerprintProcessOutput) SetUsername(v string) *DataForGetFingerprintProcessOutput {
	s.Username = &v
	return s
}

type GetFingerprintProcessInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentId *string `type:"string" json:",omitempty"`

	Checksum *string `type:"string" json:",omitempty"`

	CloudProviders []*string `type:"list" json:",omitempty"`

	Cmdline *string `type:"string" json:",omitempty"`

	Comm *string `type:"string" json:",omitempty"`

	Common *bool `type:"boolean" json:",omitempty"`

	Container *bool `type:"boolean" json:",omitempty"`

	ContainerId *string `type:"string" json:",omitempty"`

	Exe *string `type:"string" json:",omitempty"`

	Hostname *string `type:"string" json:",omitempty"`

	Integrity *bool `type:"boolean" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	LeafGroupIDs []*string `type:"list" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`

	StartTimeEnd *int64 `type:"int64" json:",omitempty"`

	StartTimeStart *int64 `type:"int64" json:",omitempty"`

	Tags []*string `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetFingerprintProcessInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintProcessInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetFingerprintProcessInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetFingerprintProcessInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentId sets the AgentId field's value.
func (s *GetFingerprintProcessInput) SetAgentId(v string) *GetFingerprintProcessInput {
	s.AgentId = &v
	return s
}

// SetChecksum sets the Checksum field's value.
func (s *GetFingerprintProcessInput) SetChecksum(v string) *GetFingerprintProcessInput {
	s.Checksum = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *GetFingerprintProcessInput) SetCloudProviders(v []*string) *GetFingerprintProcessInput {
	s.CloudProviders = v
	return s
}

// SetCmdline sets the Cmdline field's value.
func (s *GetFingerprintProcessInput) SetCmdline(v string) *GetFingerprintProcessInput {
	s.Cmdline = &v
	return s
}

// SetComm sets the Comm field's value.
func (s *GetFingerprintProcessInput) SetComm(v string) *GetFingerprintProcessInput {
	s.Comm = &v
	return s
}

// SetCommon sets the Common field's value.
func (s *GetFingerprintProcessInput) SetCommon(v bool) *GetFingerprintProcessInput {
	s.Common = &v
	return s
}

// SetContainer sets the Container field's value.
func (s *GetFingerprintProcessInput) SetContainer(v bool) *GetFingerprintProcessInput {
	s.Container = &v
	return s
}

// SetContainerId sets the ContainerId field's value.
func (s *GetFingerprintProcessInput) SetContainerId(v string) *GetFingerprintProcessInput {
	s.ContainerId = &v
	return s
}

// SetExe sets the Exe field's value.
func (s *GetFingerprintProcessInput) SetExe(v string) *GetFingerprintProcessInput {
	s.Exe = &v
	return s
}

// SetHostname sets the Hostname field's value.
func (s *GetFingerprintProcessInput) SetHostname(v string) *GetFingerprintProcessInput {
	s.Hostname = &v
	return s
}

// SetIntegrity sets the Integrity field's value.
func (s *GetFingerprintProcessInput) SetIntegrity(v bool) *GetFingerprintProcessInput {
	s.Integrity = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *GetFingerprintProcessInput) SetIp(v string) *GetFingerprintProcessInput {
	s.Ip = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *GetFingerprintProcessInput) SetLeafGroupIDs(v []*string) *GetFingerprintProcessInput {
	s.LeafGroupIDs = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetFingerprintProcessInput) SetPageNumber(v int64) *GetFingerprintProcessInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetFingerprintProcessInput) SetPageSize(v int64) *GetFingerprintProcessInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetFingerprintProcessInput) SetSortBy(v string) *GetFingerprintProcessInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetFingerprintProcessInput) SetSortOrder(v string) *GetFingerprintProcessInput {
	s.SortOrder = &v
	return s
}

// SetStartTimeEnd sets the StartTimeEnd field's value.
func (s *GetFingerprintProcessInput) SetStartTimeEnd(v int64) *GetFingerprintProcessInput {
	s.StartTimeEnd = &v
	return s
}

// SetStartTimeStart sets the StartTimeStart field's value.
func (s *GetFingerprintProcessInput) SetStartTimeStart(v int64) *GetFingerprintProcessInput {
	s.StartTimeStart = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *GetFingerprintProcessInput) SetTags(v []*string) *GetFingerprintProcessInput {
	s.Tags = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetFingerprintProcessInput) SetTopGroupID(v string) *GetFingerprintProcessInput {
	s.TopGroupID = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *GetFingerprintProcessInput) SetUsername(v string) *GetFingerprintProcessInput {
	s.Username = &v
	return s
}

type GetFingerprintProcessOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetFingerprintProcessOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetFingerprintProcessOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFingerprintProcessOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetFingerprintProcessOutput) SetData(v []*DataForGetFingerprintProcessOutput) *GetFingerprintProcessOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetFingerprintProcessOutput) SetPageNumber(v int64) *GetFingerprintProcessOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetFingerprintProcessOutput) SetPageSize(v int64) *GetFingerprintProcessOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetFingerprintProcessOutput) SetTotalCount(v int64) *GetFingerprintProcessOutput {
	s.TotalCount = &v
	return s
}
