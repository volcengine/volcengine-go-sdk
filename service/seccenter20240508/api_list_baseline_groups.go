// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBaselineGroupsCommon = "ListBaselineGroups"

// ListBaselineGroupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineGroupsCommon operation. The "output" return
// value will be populated with the ListBaselineGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineGroupsCommon Send returns without error.
//
// See ListBaselineGroupsCommon for more information on using the ListBaselineGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineGroupsCommonRequest method.
//    req, resp := client.ListBaselineGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBaselineGroupsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListBaselineGroupsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineGroupsCommon for usage and error information.
func (c *SECCENTER20240508) ListBaselineGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBaselineGroupsCommonRequest(input)
	return out, req.Send()
}

// ListBaselineGroupsCommonWithContext is the same as ListBaselineGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineGroupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBaselineGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBaselineGroups = "ListBaselineGroups"

// ListBaselineGroupsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineGroups operation. The "output" return
// value will be populated with the ListBaselineGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineGroupsCommon Send returns without error.
//
// See ListBaselineGroups for more information on using the ListBaselineGroups
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineGroupsRequest method.
//    req, resp := client.ListBaselineGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineGroupsRequest(input *ListBaselineGroupsInput) (req *request.Request, output *ListBaselineGroupsOutput) {
	op := &request.Operation{
		Name:       opListBaselineGroups,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBaselineGroupsInput{}
	}

	output = &ListBaselineGroupsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListBaselineGroups API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineGroups for usage and error information.
func (c *SECCENTER20240508) ListBaselineGroups(input *ListBaselineGroupsInput) (*ListBaselineGroupsOutput, error) {
	req, out := c.ListBaselineGroupsRequest(input)
	return out, req.Send()
}

// ListBaselineGroupsWithContext is the same as ListBaselineGroups with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineGroupsWithContext(ctx volcengine.Context, input *ListBaselineGroupsInput, opts ...request.Option) (*ListBaselineGroupsOutput, error) {
	req, out := c.ListBaselineGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListBaselineGroupsOutput struct {
	_ struct{} `type:"structure"`

	GroupID *int64 `type:"int64"`

	GroupName *string `type:"string"`

	GroupNameEn *string `type:"string"`
}

// String returns the string representation
func (s DataForListBaselineGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListBaselineGroupsOutput) GoString() string {
	return s.String()
}

// SetGroupID sets the GroupID field's value.
func (s *DataForListBaselineGroupsOutput) SetGroupID(v int64) *DataForListBaselineGroupsOutput {
	s.GroupID = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *DataForListBaselineGroupsOutput) SetGroupName(v string) *DataForListBaselineGroupsOutput {
	s.GroupName = &v
	return s
}

// SetGroupNameEn sets the GroupNameEn field's value.
func (s *DataForListBaselineGroupsOutput) SetGroupNameEn(v string) *DataForListBaselineGroupsOutput {
	s.GroupNameEn = &v
	return s
}

type ListBaselineGroupsInput struct {
	_ struct{} `type:"structure"`

	AssetType *string `type:"string" enum:"EnumOfAssetTypeForListBaselineGroupsInput"`

	IfContainer *bool `type:"boolean"`
}

// String returns the string representation
func (s ListBaselineGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineGroupsInput) GoString() string {
	return s.String()
}

// SetAssetType sets the AssetType field's value.
func (s *ListBaselineGroupsInput) SetAssetType(v string) *ListBaselineGroupsInput {
	s.AssetType = &v
	return s
}

// SetIfContainer sets the IfContainer field's value.
func (s *ListBaselineGroupsInput) SetIfContainer(v bool) *ListBaselineGroupsInput {
	s.IfContainer = &v
	return s
}

type ListBaselineGroupsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForListBaselineGroupsOutput `type:"list"`
}

// String returns the string representation
func (s ListBaselineGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineGroupsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListBaselineGroupsOutput) SetData(v []*DataForListBaselineGroupsOutput) *ListBaselineGroupsOutput {
	s.Data = v
	return s
}

const (
	// EnumOfAssetTypeForListBaselineGroupsInputHost is a EnumOfAssetTypeForListBaselineGroupsInput enum value
	EnumOfAssetTypeForListBaselineGroupsInputHost = "Host"

	// EnumOfAssetTypeForListBaselineGroupsInputDev is a EnumOfAssetTypeForListBaselineGroupsInput enum value
	EnumOfAssetTypeForListBaselineGroupsInputDev = "Dev"
)
