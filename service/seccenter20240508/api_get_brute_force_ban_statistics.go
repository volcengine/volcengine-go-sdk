// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetBruteForceBanStatisticsCommon = "GetBruteForceBanStatistics"

// GetBruteForceBanStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanStatisticsCommon operation. The "output" return
// value will be populated with the GetBruteForceBanStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanStatisticsCommon Send returns without error.
//
// See GetBruteForceBanStatisticsCommon for more information on using the GetBruteForceBanStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanStatisticsCommonRequest method.
//    req, resp := client.GetBruteForceBanStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetBruteForceBanStatisticsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetBruteForceBanStatisticsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanStatisticsCommon for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanStatisticsCommonRequest(input)
	return out, req.Send()
}

// GetBruteForceBanStatisticsCommonWithContext is the same as GetBruteForceBanStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetBruteForceBanStatistics = "GetBruteForceBanStatistics"

// GetBruteForceBanStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanStatistics operation. The "output" return
// value will be populated with the GetBruteForceBanStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanStatisticsCommon Send returns without error.
//
// See GetBruteForceBanStatistics for more information on using the GetBruteForceBanStatistics
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanStatisticsRequest method.
//    req, resp := client.GetBruteForceBanStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanStatisticsRequest(input *GetBruteForceBanStatisticsInput) (req *request.Request, output *GetBruteForceBanStatisticsOutput) {
	op := &request.Operation{
		Name:       opGetBruteForceBanStatistics,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetBruteForceBanStatisticsInput{}
	}

	output = &GetBruteForceBanStatisticsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetBruteForceBanStatistics API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanStatistics for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanStatistics(input *GetBruteForceBanStatisticsInput) (*GetBruteForceBanStatisticsOutput, error) {
	req, out := c.GetBruteForceBanStatisticsRequest(input)
	return out, req.Send()
}

// GetBruteForceBanStatisticsWithContext is the same as GetBruteForceBanStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanStatisticsWithContext(ctx volcengine.Context, input *GetBruteForceBanStatisticsInput, opts ...request.Option) (*GetBruteForceBanStatisticsOutput, error) {
	req, out := c.GetBruteForceBanStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetBruteForceBanStatisticsInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetBruteForceBanStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanStatisticsInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetBruteForceBanStatisticsInput) SetTopGroupID(v string) *GetBruteForceBanStatisticsInput {
	s.TopGroupID = &v
	return s
}

type GetBruteForceBanStatisticsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AutoBanCount *int64 `type:"int64"`

	TodayAutoBanCount *int64 `type:"int64"`
}

// String returns the string representation
func (s GetBruteForceBanStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanStatisticsOutput) GoString() string {
	return s.String()
}

// SetAutoBanCount sets the AutoBanCount field's value.
func (s *GetBruteForceBanStatisticsOutput) SetAutoBanCount(v int64) *GetBruteForceBanStatisticsOutput {
	s.AutoBanCount = &v
	return s
}

// SetTodayAutoBanCount sets the TodayAutoBanCount field's value.
func (s *GetBruteForceBanStatisticsOutput) SetTodayAutoBanCount(v int64) *GetBruteForceBanStatisticsOutput {
	s.TodayAutoBanCount = &v
	return s
}
