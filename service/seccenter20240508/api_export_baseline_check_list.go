// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opExportBaselineCheckListCommon = "ExportBaselineCheckList"

// ExportBaselineCheckListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportBaselineCheckListCommon operation. The "output" return
// value will be populated with the ExportBaselineCheckListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportBaselineCheckListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportBaselineCheckListCommon Send returns without error.
//
// See ExportBaselineCheckListCommon for more information on using the ExportBaselineCheckListCommon
// API call, and error handling.
//
//    // Example sending a request using the ExportBaselineCheckListCommonRequest method.
//    req, resp := client.ExportBaselineCheckListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportBaselineCheckListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opExportBaselineCheckListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportBaselineCheckListCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportBaselineCheckListCommon for usage and error information.
func (c *SECCENTER20240508) ExportBaselineCheckListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ExportBaselineCheckListCommonRequest(input)
	return out, req.Send()
}

// ExportBaselineCheckListCommonWithContext is the same as ExportBaselineCheckListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ExportBaselineCheckListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportBaselineCheckListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ExportBaselineCheckListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opExportBaselineCheckList = "ExportBaselineCheckList"

// ExportBaselineCheckListRequest generates a "volcengine/request.Request" representing the
// client's request for the ExportBaselineCheckList operation. The "output" return
// value will be populated with the ExportBaselineCheckListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ExportBaselineCheckListCommon Request to send the API call to the service.
// the "output" return value is not valid until after ExportBaselineCheckListCommon Send returns without error.
//
// See ExportBaselineCheckList for more information on using the ExportBaselineCheckList
// API call, and error handling.
//
//    // Example sending a request using the ExportBaselineCheckListRequest method.
//    req, resp := client.ExportBaselineCheckListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ExportBaselineCheckListRequest(input *ExportBaselineCheckListInput) (req *request.Request, output *ExportBaselineCheckListOutput) {
	op := &request.Operation{
		Name:       opExportBaselineCheckList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ExportBaselineCheckListInput{}
	}

	output = &ExportBaselineCheckListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ExportBaselineCheckList API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ExportBaselineCheckList for usage and error information.
func (c *SECCENTER20240508) ExportBaselineCheckList(input *ExportBaselineCheckListInput) (*ExportBaselineCheckListOutput, error) {
	req, out := c.ExportBaselineCheckListRequest(input)
	return out, req.Send()
}

// ExportBaselineCheckListWithContext is the same as ExportBaselineCheckList with the addition of
// the ability to pass a context and additional request options.
//
// See ExportBaselineCheckList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ExportBaselineCheckListWithContext(ctx volcengine.Context, input *ExportBaselineCheckListInput, opts ...request.Option) (*ExportBaselineCheckListOutput, error) {
	req, out := c.ExportBaselineCheckListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConditionsForExportBaselineCheckListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChecklistName *string `type:"string" json:",omitempty"`

	IfWhite *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ConditionsForExportBaselineCheckListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionsForExportBaselineCheckListInput) GoString() string {
	return s.String()
}

// SetChecklistName sets the ChecklistName field's value.
func (s *ConditionsForExportBaselineCheckListInput) SetChecklistName(v string) *ConditionsForExportBaselineCheckListInput {
	s.ChecklistName = &v
	return s
}

// SetIfWhite sets the IfWhite field's value.
func (s *ConditionsForExportBaselineCheckListInput) SetIfWhite(v bool) *ConditionsForExportBaselineCheckListInput {
	s.IfWhite = &v
	return s
}

type ExportBaselineCheckListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	AssetID *string `type:"string" json:",omitempty"`

	AssetType *string `type:"string" json:",omitempty" enum:"EnumOfAssetTypeForExportBaselineCheckListInput"`

	BaselineID *int64 `type:"int64" json:",omitempty"`

	Conditions *ConditionsForExportBaselineCheckListInput `type:"structure" json:",omitempty"`

	IDList []*int64 `type:"list" json:",omitempty"`

	TopGroupID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportBaselineCheckListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportBaselineCheckListInput) GoString() string {
	return s.String()
}

// SetAgentID sets the AgentID field's value.
func (s *ExportBaselineCheckListInput) SetAgentID(v string) *ExportBaselineCheckListInput {
	s.AgentID = &v
	return s
}

// SetAssetID sets the AssetID field's value.
func (s *ExportBaselineCheckListInput) SetAssetID(v string) *ExportBaselineCheckListInput {
	s.AssetID = &v
	return s
}

// SetAssetType sets the AssetType field's value.
func (s *ExportBaselineCheckListInput) SetAssetType(v string) *ExportBaselineCheckListInput {
	s.AssetType = &v
	return s
}

// SetBaselineID sets the BaselineID field's value.
func (s *ExportBaselineCheckListInput) SetBaselineID(v int64) *ExportBaselineCheckListInput {
	s.BaselineID = &v
	return s
}

// SetConditions sets the Conditions field's value.
func (s *ExportBaselineCheckListInput) SetConditions(v *ConditionsForExportBaselineCheckListInput) *ExportBaselineCheckListInput {
	s.Conditions = v
	return s
}

// SetIDList sets the IDList field's value.
func (s *ExportBaselineCheckListInput) SetIDList(v []*int64) *ExportBaselineCheckListInput {
	s.IDList = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ExportBaselineCheckListInput) SetTopGroupID(v string) *ExportBaselineCheckListInput {
	s.TopGroupID = &v
	return s
}

type ExportBaselineCheckListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	FileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExportBaselineCheckListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExportBaselineCheckListOutput) GoString() string {
	return s.String()
}

// SetFileName sets the FileName field's value.
func (s *ExportBaselineCheckListOutput) SetFileName(v string) *ExportBaselineCheckListOutput {
	s.FileName = &v
	return s
}

const (
	// EnumOfAssetTypeForExportBaselineCheckListInputHost is a EnumOfAssetTypeForExportBaselineCheckListInput enum value
	EnumOfAssetTypeForExportBaselineCheckListInputHost = "Host"

	// EnumOfAssetTypeForExportBaselineCheckListInputDev is a EnumOfAssetTypeForExportBaselineCheckListInput enum value
	EnumOfAssetTypeForExportBaselineCheckListInputDev = "Dev"
)
