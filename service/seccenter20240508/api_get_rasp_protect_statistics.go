// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetRaspProtectStatisticsCommon = "GetRaspProtectStatistics"

// GetRaspProtectStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRaspProtectStatisticsCommon operation. The "output" return
// value will be populated with the GetRaspProtectStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRaspProtectStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRaspProtectStatisticsCommon Send returns without error.
//
// See GetRaspProtectStatisticsCommon for more information on using the GetRaspProtectStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetRaspProtectStatisticsCommonRequest method.
//    req, resp := client.GetRaspProtectStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRaspProtectStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetRaspProtectStatisticsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetRaspProtectStatisticsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRaspProtectStatisticsCommon for usage and error information.
func (c *SECCENTER20240508) GetRaspProtectStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetRaspProtectStatisticsCommonRequest(input)
	return out, req.Send()
}

// GetRaspProtectStatisticsCommonWithContext is the same as GetRaspProtectStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetRaspProtectStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRaspProtectStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetRaspProtectStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetRaspProtectStatistics = "GetRaspProtectStatistics"

// GetRaspProtectStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetRaspProtectStatistics operation. The "output" return
// value will be populated with the GetRaspProtectStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetRaspProtectStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetRaspProtectStatisticsCommon Send returns without error.
//
// See GetRaspProtectStatistics for more information on using the GetRaspProtectStatistics
// API call, and error handling.
//
//    // Example sending a request using the GetRaspProtectStatisticsRequest method.
//    req, resp := client.GetRaspProtectStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetRaspProtectStatisticsRequest(input *GetRaspProtectStatisticsInput) (req *request.Request, output *GetRaspProtectStatisticsOutput) {
	op := &request.Operation{
		Name:       opGetRaspProtectStatistics,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetRaspProtectStatisticsInput{}
	}

	output = &GetRaspProtectStatisticsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetRaspProtectStatistics API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetRaspProtectStatistics for usage and error information.
func (c *SECCENTER20240508) GetRaspProtectStatistics(input *GetRaspProtectStatisticsInput) (*GetRaspProtectStatisticsOutput, error) {
	req, out := c.GetRaspProtectStatisticsRequest(input)
	return out, req.Send()
}

// GetRaspProtectStatisticsWithContext is the same as GetRaspProtectStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See GetRaspProtectStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetRaspProtectStatisticsWithContext(ctx volcengine.Context, input *GetRaspProtectStatisticsInput, opts ...request.Option) (*GetRaspProtectStatisticsOutput, error) {
	req, out := c.GetRaspProtectStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetRaspProtectStatisticsInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetRaspProtectStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRaspProtectStatisticsInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetRaspProtectStatisticsInput) SetTopGroupID(v string) *GetRaspProtectStatisticsInput {
	s.TopGroupID = &v
	return s
}

type GetRaspProtectStatisticsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	HitWhiteProcessCount *int64 `type:"int64"`

	ProcessCount *int64 `type:"int64"`

	ProtectAbnormalProcessCount *int64 `type:"int64"`

	ProtectedProcessCount *int64 `type:"int64"`

	RaspCloseCount *int64 `type:"int64"`

	RaspOpenCount *int64 `type:"int64"`

	RaspOpenFailCount *int64 `type:"int64"`

	ToBeProtectedProcessCount *int64 `type:"int64"`
}

// String returns the string representation
func (s GetRaspProtectStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetRaspProtectStatisticsOutput) GoString() string {
	return s.String()
}

// SetHitWhiteProcessCount sets the HitWhiteProcessCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetHitWhiteProcessCount(v int64) *GetRaspProtectStatisticsOutput {
	s.HitWhiteProcessCount = &v
	return s
}

// SetProcessCount sets the ProcessCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetProcessCount(v int64) *GetRaspProtectStatisticsOutput {
	s.ProcessCount = &v
	return s
}

// SetProtectAbnormalProcessCount sets the ProtectAbnormalProcessCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetProtectAbnormalProcessCount(v int64) *GetRaspProtectStatisticsOutput {
	s.ProtectAbnormalProcessCount = &v
	return s
}

// SetProtectedProcessCount sets the ProtectedProcessCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetProtectedProcessCount(v int64) *GetRaspProtectStatisticsOutput {
	s.ProtectedProcessCount = &v
	return s
}

// SetRaspCloseCount sets the RaspCloseCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetRaspCloseCount(v int64) *GetRaspProtectStatisticsOutput {
	s.RaspCloseCount = &v
	return s
}

// SetRaspOpenCount sets the RaspOpenCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetRaspOpenCount(v int64) *GetRaspProtectStatisticsOutput {
	s.RaspOpenCount = &v
	return s
}

// SetRaspOpenFailCount sets the RaspOpenFailCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetRaspOpenFailCount(v int64) *GetRaspProtectStatisticsOutput {
	s.RaspOpenFailCount = &v
	return s
}

// SetToBeProtectedProcessCount sets the ToBeProtectedProcessCount field's value.
func (s *GetRaspProtectStatisticsOutput) SetToBeProtectedProcessCount(v int64) *GetRaspProtectStatisticsOutput {
	s.ToBeProtectedProcessCount = &v
	return s
}
