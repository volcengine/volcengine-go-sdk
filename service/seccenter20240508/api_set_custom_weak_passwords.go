// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSetCustomWeakPasswordsCommon = "SetCustomWeakPasswords"

// SetCustomWeakPasswordsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SetCustomWeakPasswordsCommon operation. The "output" return
// value will be populated with the SetCustomWeakPasswordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetCustomWeakPasswordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetCustomWeakPasswordsCommon Send returns without error.
//
// See SetCustomWeakPasswordsCommon for more information on using the SetCustomWeakPasswordsCommon
// API call, and error handling.
//
//    // Example sending a request using the SetCustomWeakPasswordsCommonRequest method.
//    req, resp := client.SetCustomWeakPasswordsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) SetCustomWeakPasswordsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSetCustomWeakPasswordsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetCustomWeakPasswordsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation SetCustomWeakPasswordsCommon for usage and error information.
func (c *SECCENTER20240508) SetCustomWeakPasswordsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SetCustomWeakPasswordsCommonRequest(input)
	return out, req.Send()
}

// SetCustomWeakPasswordsCommonWithContext is the same as SetCustomWeakPasswordsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SetCustomWeakPasswordsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) SetCustomWeakPasswordsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SetCustomWeakPasswordsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSetCustomWeakPasswords = "SetCustomWeakPasswords"

// SetCustomWeakPasswordsRequest generates a "volcengine/request.Request" representing the
// client's request for the SetCustomWeakPasswords operation. The "output" return
// value will be populated with the SetCustomWeakPasswordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SetCustomWeakPasswordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after SetCustomWeakPasswordsCommon Send returns without error.
//
// See SetCustomWeakPasswords for more information on using the SetCustomWeakPasswords
// API call, and error handling.
//
//    // Example sending a request using the SetCustomWeakPasswordsRequest method.
//    req, resp := client.SetCustomWeakPasswordsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) SetCustomWeakPasswordsRequest(input *SetCustomWeakPasswordsInput) (req *request.Request, output *SetCustomWeakPasswordsOutput) {
	op := &request.Operation{
		Name:       opSetCustomWeakPasswords,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SetCustomWeakPasswordsInput{}
	}

	output = &SetCustomWeakPasswordsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SetCustomWeakPasswords API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation SetCustomWeakPasswords for usage and error information.
func (c *SECCENTER20240508) SetCustomWeakPasswords(input *SetCustomWeakPasswordsInput) (*SetCustomWeakPasswordsOutput, error) {
	req, out := c.SetCustomWeakPasswordsRequest(input)
	return out, req.Send()
}

// SetCustomWeakPasswordsWithContext is the same as SetCustomWeakPasswords with the addition of
// the ability to pass a context and additional request options.
//
// See SetCustomWeakPasswords for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) SetCustomWeakPasswordsWithContext(ctx volcengine.Context, input *SetCustomWeakPasswordsInput, opts ...request.Option) (*SetCustomWeakPasswordsOutput, error) {
	req, out := c.SetCustomWeakPasswordsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SetCustomWeakPasswordsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	WeakPasswordList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SetCustomWeakPasswordsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetCustomWeakPasswordsInput) GoString() string {
	return s.String()
}

// SetWeakPasswordList sets the WeakPasswordList field's value.
func (s *SetCustomWeakPasswordsInput) SetWeakPasswordList(v []*string) *SetCustomWeakPasswordsInput {
	s.WeakPasswordList = v
	return s
}

type SetCustomWeakPasswordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SetCustomWeakPasswordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SetCustomWeakPasswordsOutput) GoString() string {
	return s.String()
}

// SetStatus sets the Status field's value.
func (s *SetCustomWeakPasswordsOutput) SetStatus(v string) *SetCustomWeakPasswordsOutput {
	s.Status = &v
	return s
}
