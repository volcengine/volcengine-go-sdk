// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetAutoProtectConfigCommon = "GetAutoProtectConfig"

// GetAutoProtectConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAutoProtectConfigCommon operation. The "output" return
// value will be populated with the GetAutoProtectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAutoProtectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAutoProtectConfigCommon Send returns without error.
//
// See GetAutoProtectConfigCommon for more information on using the GetAutoProtectConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetAutoProtectConfigCommonRequest method.
//    req, resp := client.GetAutoProtectConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetAutoProtectConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetAutoProtectConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAutoProtectConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetAutoProtectConfigCommon for usage and error information.
func (c *SECCENTER20240508) GetAutoProtectConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetAutoProtectConfigCommonRequest(input)
	return out, req.Send()
}

// GetAutoProtectConfigCommonWithContext is the same as GetAutoProtectConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetAutoProtectConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetAutoProtectConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetAutoProtectConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetAutoProtectConfig = "GetAutoProtectConfig"

// GetAutoProtectConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetAutoProtectConfig operation. The "output" return
// value will be populated with the GetAutoProtectConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetAutoProtectConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetAutoProtectConfigCommon Send returns without error.
//
// See GetAutoProtectConfig for more information on using the GetAutoProtectConfig
// API call, and error handling.
//
//    // Example sending a request using the GetAutoProtectConfigRequest method.
//    req, resp := client.GetAutoProtectConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetAutoProtectConfigRequest(input *GetAutoProtectConfigInput) (req *request.Request, output *GetAutoProtectConfigOutput) {
	op := &request.Operation{
		Name:       opGetAutoProtectConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetAutoProtectConfigInput{}
	}

	output = &GetAutoProtectConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetAutoProtectConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetAutoProtectConfig for usage and error information.
func (c *SECCENTER20240508) GetAutoProtectConfig(input *GetAutoProtectConfigInput) (*GetAutoProtectConfigOutput, error) {
	req, out := c.GetAutoProtectConfigRequest(input)
	return out, req.Send()
}

// GetAutoProtectConfigWithContext is the same as GetAutoProtectConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetAutoProtectConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetAutoProtectConfigWithContext(ctx volcengine.Context, input *GetAutoProtectConfigInput, opts ...request.Option) (*GetAutoProtectConfigOutput, error) {
	req, out := c.GetAutoProtectConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetAutoProtectConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetAutoProtectConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutoProtectConfigInput) GoString() string {
	return s.String()
}

type GetAutoProtectConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Enable *bool `type:"boolean" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetAutoProtectConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetAutoProtectConfigOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *GetAutoProtectConfigOutput) SetEnable(v bool) *GetAutoProtectConfigOutput {
	s.Enable = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetAutoProtectConfigOutput) SetUpdateTime(v int64) *GetAutoProtectConfigOutput {
	s.UpdateTime = &v
	return s
}
