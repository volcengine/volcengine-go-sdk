// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetMLPAssetSyncTaskStatusCommon = "GetMLPAssetSyncTaskStatus"

// GetMLPAssetSyncTaskStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMLPAssetSyncTaskStatusCommon operation. The "output" return
// value will be populated with the GetMLPAssetSyncTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMLPAssetSyncTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMLPAssetSyncTaskStatusCommon Send returns without error.
//
// See GetMLPAssetSyncTaskStatusCommon for more information on using the GetMLPAssetSyncTaskStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetMLPAssetSyncTaskStatusCommonRequest method.
//    req, resp := client.GetMLPAssetSyncTaskStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetMLPAssetSyncTaskStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetMLPAssetSyncTaskStatusCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMLPAssetSyncTaskStatusCommon for usage and error information.
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetMLPAssetSyncTaskStatusCommonRequest(input)
	return out, req.Send()
}

// GetMLPAssetSyncTaskStatusCommonWithContext is the same as GetMLPAssetSyncTaskStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetMLPAssetSyncTaskStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetMLPAssetSyncTaskStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetMLPAssetSyncTaskStatus = "GetMLPAssetSyncTaskStatus"

// GetMLPAssetSyncTaskStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMLPAssetSyncTaskStatus operation. The "output" return
// value will be populated with the GetMLPAssetSyncTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMLPAssetSyncTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMLPAssetSyncTaskStatusCommon Send returns without error.
//
// See GetMLPAssetSyncTaskStatus for more information on using the GetMLPAssetSyncTaskStatus
// API call, and error handling.
//
//    // Example sending a request using the GetMLPAssetSyncTaskStatusRequest method.
//    req, resp := client.GetMLPAssetSyncTaskStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatusRequest(input *GetMLPAssetSyncTaskStatusInput) (req *request.Request, output *GetMLPAssetSyncTaskStatusOutput) {
	op := &request.Operation{
		Name:       opGetMLPAssetSyncTaskStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetMLPAssetSyncTaskStatusInput{}
	}

	output = &GetMLPAssetSyncTaskStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetMLPAssetSyncTaskStatus API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMLPAssetSyncTaskStatus for usage and error information.
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatus(input *GetMLPAssetSyncTaskStatusInput) (*GetMLPAssetSyncTaskStatusOutput, error) {
	req, out := c.GetMLPAssetSyncTaskStatusRequest(input)
	return out, req.Send()
}

// GetMLPAssetSyncTaskStatusWithContext is the same as GetMLPAssetSyncTaskStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetMLPAssetSyncTaskStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMLPAssetSyncTaskStatusWithContext(ctx volcengine.Context, input *GetMLPAssetSyncTaskStatusInput, opts ...request.Option) (*GetMLPAssetSyncTaskStatusOutput, error) {
	req, out := c.GetMLPAssetSyncTaskStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetMLPAssetSyncTaskStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AssetType is a required field
	AssetType *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetMLPAssetSyncTaskStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMLPAssetSyncTaskStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetMLPAssetSyncTaskStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetMLPAssetSyncTaskStatusInput"}
	if s.AssetType == nil {
		invalidParams.Add(request.NewErrParamRequired("AssetType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetType sets the AssetType field's value.
func (s *GetMLPAssetSyncTaskStatusInput) SetAssetType(v string) *GetMLPAssetSyncTaskStatusInput {
	s.AssetType = &v
	return s
}

type GetMLPAssetSyncTaskStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	LastCheckTime *int64 `type:"int64" json:",omitempty"`

	Progress *int64 `type:"int64" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TaskID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetMLPAssetSyncTaskStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMLPAssetSyncTaskStatusOutput) GoString() string {
	return s.String()
}

// SetLastCheckTime sets the LastCheckTime field's value.
func (s *GetMLPAssetSyncTaskStatusOutput) SetLastCheckTime(v int64) *GetMLPAssetSyncTaskStatusOutput {
	s.LastCheckTime = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *GetMLPAssetSyncTaskStatusOutput) SetProgress(v int64) *GetMLPAssetSyncTaskStatusOutput {
	s.Progress = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetMLPAssetSyncTaskStatusOutput) SetStatus(v string) *GetMLPAssetSyncTaskStatusOutput {
	s.Status = &v
	return s
}

// SetTaskID sets the TaskID field's value.
func (s *GetMLPAssetSyncTaskStatusOutput) SetTaskID(v string) *GetMLPAssetSyncTaskStatusOutput {
	s.TaskID = &v
	return s
}
