// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDevFingerprintSoftwareCommon = "GetDevFingerprintSoftware"

// GetDevFingerprintSoftwareCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintSoftwareCommon operation. The "output" return
// value will be populated with the GetDevFingerprintSoftwareCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintSoftwareCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintSoftwareCommon Send returns without error.
//
// See GetDevFingerprintSoftwareCommon for more information on using the GetDevFingerprintSoftwareCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintSoftwareCommonRequest method.
//    req, resp := client.GetDevFingerprintSoftwareCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintSoftwareCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDevFingerprintSoftwareCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintSoftwareCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintSoftwareCommon for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintSoftwareCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintSoftwareCommonRequest(input)
	return out, req.Send()
}

// GetDevFingerprintSoftwareCommonWithContext is the same as GetDevFingerprintSoftwareCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintSoftwareCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintSoftwareCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDevFingerprintSoftwareCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDevFingerprintSoftware = "GetDevFingerprintSoftware"

// GetDevFingerprintSoftwareRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDevFingerprintSoftware operation. The "output" return
// value will be populated with the GetDevFingerprintSoftwareCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDevFingerprintSoftwareCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDevFingerprintSoftwareCommon Send returns without error.
//
// See GetDevFingerprintSoftware for more information on using the GetDevFingerprintSoftware
// API call, and error handling.
//
//    // Example sending a request using the GetDevFingerprintSoftwareRequest method.
//    req, resp := client.GetDevFingerprintSoftwareRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetDevFingerprintSoftwareRequest(input *GetDevFingerprintSoftwareInput) (req *request.Request, output *GetDevFingerprintSoftwareOutput) {
	op := &request.Operation{
		Name:       opGetDevFingerprintSoftware,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDevFingerprintSoftwareInput{}
	}

	output = &GetDevFingerprintSoftwareOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDevFingerprintSoftware API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetDevFingerprintSoftware for usage and error information.
func (c *SECCENTER20240508) GetDevFingerprintSoftware(input *GetDevFingerprintSoftwareInput) (*GetDevFingerprintSoftwareOutput, error) {
	req, out := c.GetDevFingerprintSoftwareRequest(input)
	return out, req.Send()
}

// GetDevFingerprintSoftwareWithContext is the same as GetDevFingerprintSoftware with the addition of
// the ability to pass a context and additional request options.
//
// See GetDevFingerprintSoftware for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetDevFingerprintSoftwareWithContext(ctx volcengine.Context, input *GetDevFingerprintSoftwareInput, opts ...request.Option) (*GetDevFingerprintSoftwareOutput, error) {
	req, out := c.GetDevFingerprintSoftwareRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetDevFingerprintSoftwareOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	AssetId *string `type:"string" json:",omitempty"`

	AssetName *string `type:"string" json:",omitempty"`

	ID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PrivateIP *string `type:"string" json:",omitempty"`

	PublicIP *string `type:"string" json:",omitempty"`

	StartTime *int64 `type:"int64" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	UpdateTime *int64 `type:"int64" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetDevFingerprintSoftwareOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetDevFingerprintSoftwareOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetAccountId(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.AccountId = &v
	return s
}

// SetAssetId sets the AssetId field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetAssetId(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.AssetId = &v
	return s
}

// SetAssetName sets the AssetName field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetAssetName(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.AssetName = &v
	return s
}

// SetID sets the ID field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetID(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetName(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.Name = &v
	return s
}

// SetPrivateIP sets the PrivateIP field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetPrivateIP(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.PrivateIP = &v
	return s
}

// SetPublicIP sets the PublicIP field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetPublicIP(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.PublicIP = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetStartTime(v int64) *DataForGetDevFingerprintSoftwareOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetStatus(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetType(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.Type = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetUpdateTime(v int64) *DataForGetDevFingerprintSoftwareOutput {
	s.UpdateTime = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *DataForGetDevFingerprintSoftwareOutput) SetVersion(v string) *DataForGetDevFingerprintSoftwareOutput {
	s.Version = &v
	return s
}

type GetDevFingerprintSoftwareInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AssetID *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty" enum:"EnumOfSortOrderForGetDevFingerprintSoftwareInput"`

	Type []*string `type:"list" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintSoftwareInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintSoftwareInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDevFingerprintSoftwareInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDevFingerprintSoftwareInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssetID sets the AssetID field's value.
func (s *GetDevFingerprintSoftwareInput) SetAssetID(v string) *GetDevFingerprintSoftwareInput {
	s.AssetID = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetDevFingerprintSoftwareInput) SetName(v string) *GetDevFingerprintSoftwareInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintSoftwareInput) SetPageNumber(v int64) *GetDevFingerprintSoftwareInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintSoftwareInput) SetPageSize(v int64) *GetDevFingerprintSoftwareInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetDevFingerprintSoftwareInput) SetSortBy(v string) *GetDevFingerprintSoftwareInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetDevFingerprintSoftwareInput) SetSortOrder(v string) *GetDevFingerprintSoftwareInput {
	s.SortOrder = &v
	return s
}

// SetType sets the Type field's value.
func (s *GetDevFingerprintSoftwareInput) SetType(v []*string) *GetDevFingerprintSoftwareInput {
	s.Type = v
	return s
}

// SetVersion sets the Version field's value.
func (s *GetDevFingerprintSoftwareInput) SetVersion(v string) *GetDevFingerprintSoftwareInput {
	s.Version = &v
	return s
}

type GetDevFingerprintSoftwareOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetDevFingerprintSoftwareOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetDevFingerprintSoftwareOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDevFingerprintSoftwareOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetDevFingerprintSoftwareOutput) SetData(v []*DataForGetDevFingerprintSoftwareOutput) *GetDevFingerprintSoftwareOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetDevFingerprintSoftwareOutput) SetPageNumber(v int64) *GetDevFingerprintSoftwareOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetDevFingerprintSoftwareOutput) SetPageSize(v int64) *GetDevFingerprintSoftwareOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetDevFingerprintSoftwareOutput) SetTotalCount(v int64) *GetDevFingerprintSoftwareOutput {
	s.TotalCount = &v
	return s
}

const (
	// EnumOfSortOrderForGetDevFingerprintSoftwareInputAsc is a EnumOfSortOrderForGetDevFingerprintSoftwareInput enum value
	EnumOfSortOrderForGetDevFingerprintSoftwareInputAsc = "Asc"

	// EnumOfSortOrderForGetDevFingerprintSoftwareInputDesc is a EnumOfSortOrderForGetDevFingerprintSoftwareInput enum value
	EnumOfSortOrderForGetDevFingerprintSoftwareInputDesc = " Desc"
)

const (
	// EnumOfTypeListForGetDevFingerprintSoftwareInputDpkg is a EnumOfTypeListForGetDevFingerprintSoftwareInput enum value
	EnumOfTypeListForGetDevFingerprintSoftwareInputDpkg = "dpkg"

	// EnumOfTypeListForGetDevFingerprintSoftwareInputRpm is a EnumOfTypeListForGetDevFingerprintSoftwareInput enum value
	EnumOfTypeListForGetDevFingerprintSoftwareInputRpm = " rpm"

	// EnumOfTypeListForGetDevFingerprintSoftwareInputPypi is a EnumOfTypeListForGetDevFingerprintSoftwareInput enum value
	EnumOfTypeListForGetDevFingerprintSoftwareInputPypi = " pypi"
)
