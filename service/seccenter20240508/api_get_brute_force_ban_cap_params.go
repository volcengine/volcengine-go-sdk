// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetBruteForceBanCapParamsCommon = "GetBruteForceBanCapParams"

// GetBruteForceBanCapParamsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanCapParamsCommon operation. The "output" return
// value will be populated with the GetBruteForceBanCapParamsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanCapParamsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanCapParamsCommon Send returns without error.
//
// See GetBruteForceBanCapParamsCommon for more information on using the GetBruteForceBanCapParamsCommon
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanCapParamsCommonRequest method.
//    req, resp := client.GetBruteForceBanCapParamsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanCapParamsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetBruteForceBanCapParamsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetBruteForceBanCapParamsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanCapParamsCommon for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanCapParamsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanCapParamsCommonRequest(input)
	return out, req.Send()
}

// GetBruteForceBanCapParamsCommonWithContext is the same as GetBruteForceBanCapParamsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanCapParamsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanCapParamsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanCapParamsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetBruteForceBanCapParams = "GetBruteForceBanCapParams"

// GetBruteForceBanCapParamsRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanCapParams operation. The "output" return
// value will be populated with the GetBruteForceBanCapParamsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanCapParamsCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanCapParamsCommon Send returns without error.
//
// See GetBruteForceBanCapParams for more information on using the GetBruteForceBanCapParams
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanCapParamsRequest method.
//    req, resp := client.GetBruteForceBanCapParamsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanCapParamsRequest(input *GetBruteForceBanCapParamsInput) (req *request.Request, output *GetBruteForceBanCapParamsOutput) {
	op := &request.Operation{
		Name:       opGetBruteForceBanCapParams,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetBruteForceBanCapParamsInput{}
	}

	output = &GetBruteForceBanCapParamsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetBruteForceBanCapParams API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanCapParams for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanCapParams(input *GetBruteForceBanCapParamsInput) (*GetBruteForceBanCapParamsOutput, error) {
	req, out := c.GetBruteForceBanCapParamsRequest(input)
	return out, req.Send()
}

// GetBruteForceBanCapParamsWithContext is the same as GetBruteForceBanCapParams with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanCapParams for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanCapParamsWithContext(ctx volcengine.Context, input *GetBruteForceBanCapParamsInput, opts ...request.Option) (*GetBruteForceBanCapParamsOutput, error) {
	req, out := c.GetBruteForceBanCapParamsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetBruteForceBanCapParamsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetBruteForceBanCapParamsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanCapParamsInput) GoString() string {
	return s.String()
}

type GetBruteForceBanCapParamsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ClientBruteForceBanPermission *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetBruteForceBanCapParamsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanCapParamsOutput) GoString() string {
	return s.String()
}

// SetClientBruteForceBanPermission sets the ClientBruteForceBanPermission field's value.
func (s *GetBruteForceBanCapParamsOutput) SetClientBruteForceBanPermission(v int64) *GetBruteForceBanCapParamsOutput {
	s.ClientBruteForceBanPermission = &v
	return s
}
