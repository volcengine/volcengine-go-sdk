// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opMultiCloudAccessStatisticsCommon = "MultiCloudAccessStatistics"

// MultiCloudAccessStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the MultiCloudAccessStatisticsCommon operation. The "output" return
// value will be populated with the MultiCloudAccessStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MultiCloudAccessStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after MultiCloudAccessStatisticsCommon Send returns without error.
//
// See MultiCloudAccessStatisticsCommon for more information on using the MultiCloudAccessStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the MultiCloudAccessStatisticsCommonRequest method.
//    req, resp := client.MultiCloudAccessStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) MultiCloudAccessStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opMultiCloudAccessStatisticsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MultiCloudAccessStatisticsCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation MultiCloudAccessStatisticsCommon for usage and error information.
func (c *SECCENTER20240508) MultiCloudAccessStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.MultiCloudAccessStatisticsCommonRequest(input)
	return out, req.Send()
}

// MultiCloudAccessStatisticsCommonWithContext is the same as MultiCloudAccessStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See MultiCloudAccessStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) MultiCloudAccessStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.MultiCloudAccessStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opMultiCloudAccessStatistics = "MultiCloudAccessStatistics"

// MultiCloudAccessStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the MultiCloudAccessStatistics operation. The "output" return
// value will be populated with the MultiCloudAccessStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned MultiCloudAccessStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after MultiCloudAccessStatisticsCommon Send returns without error.
//
// See MultiCloudAccessStatistics for more information on using the MultiCloudAccessStatistics
// API call, and error handling.
//
//    // Example sending a request using the MultiCloudAccessStatisticsRequest method.
//    req, resp := client.MultiCloudAccessStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) MultiCloudAccessStatisticsRequest(input *MultiCloudAccessStatisticsInput) (req *request.Request, output *MultiCloudAccessStatisticsOutput) {
	op := &request.Operation{
		Name:       opMultiCloudAccessStatistics,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &MultiCloudAccessStatisticsInput{}
	}

	output = &MultiCloudAccessStatisticsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// MultiCloudAccessStatistics API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation MultiCloudAccessStatistics for usage and error information.
func (c *SECCENTER20240508) MultiCloudAccessStatistics(input *MultiCloudAccessStatisticsInput) (*MultiCloudAccessStatisticsOutput, error) {
	req, out := c.MultiCloudAccessStatisticsRequest(input)
	return out, req.Send()
}

// MultiCloudAccessStatisticsWithContext is the same as MultiCloudAccessStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See MultiCloudAccessStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) MultiCloudAccessStatisticsWithContext(ctx volcengine.Context, input *MultiCloudAccessStatisticsInput, opts ...request.Option) (*MultiCloudAccessStatisticsOutput, error) {
	req, out := c.MultiCloudAccessStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForMultiCloudAccessStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CanInstallAgent *bool `type:"boolean" json:",omitempty"`

	CanSync *bool `type:"boolean" json:",omitempty"`

	CloudPlatform *string `type:"string" json:",omitempty"`

	Count *int64 `type:"int64" json:",omitempty"`

	IsActive *bool `type:"boolean" json:",omitempty"`

	LastSyncTime *int64 `type:"int64" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForMultiCloudAccessStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForMultiCloudAccessStatisticsOutput) GoString() string {
	return s.String()
}

// SetCanInstallAgent sets the CanInstallAgent field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetCanInstallAgent(v bool) *DataForMultiCloudAccessStatisticsOutput {
	s.CanInstallAgent = &v
	return s
}

// SetCanSync sets the CanSync field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetCanSync(v bool) *DataForMultiCloudAccessStatisticsOutput {
	s.CanSync = &v
	return s
}

// SetCloudPlatform sets the CloudPlatform field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetCloudPlatform(v string) *DataForMultiCloudAccessStatisticsOutput {
	s.CloudPlatform = &v
	return s
}

// SetCount sets the Count field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetCount(v int64) *DataForMultiCloudAccessStatisticsOutput {
	s.Count = &v
	return s
}

// SetIsActive sets the IsActive field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetIsActive(v bool) *DataForMultiCloudAccessStatisticsOutput {
	s.IsActive = &v
	return s
}

// SetLastSyncTime sets the LastSyncTime field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetLastSyncTime(v int64) *DataForMultiCloudAccessStatisticsOutput {
	s.LastSyncTime = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForMultiCloudAccessStatisticsOutput) SetName(v string) *DataForMultiCloudAccessStatisticsOutput {
	s.Name = &v
	return s
}

type MultiCloudAccessStatisticsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s MultiCloudAccessStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MultiCloudAccessStatisticsInput) GoString() string {
	return s.String()
}

type MultiCloudAccessStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForMultiCloudAccessStatisticsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s MultiCloudAccessStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MultiCloudAccessStatisticsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *MultiCloudAccessStatisticsOutput) SetData(v []*DataForMultiCloudAccessStatisticsOutput) *MultiCloudAccessStatisticsOutput {
	s.Data = v
	return s
}
