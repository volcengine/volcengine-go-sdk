// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetMultiLevelAuthDetailCommon = "GetMultiLevelAuthDetail"

// GetMultiLevelAuthDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMultiLevelAuthDetailCommon operation. The "output" return
// value will be populated with the GetMultiLevelAuthDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMultiLevelAuthDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMultiLevelAuthDetailCommon Send returns without error.
//
// See GetMultiLevelAuthDetailCommon for more information on using the GetMultiLevelAuthDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the GetMultiLevelAuthDetailCommonRequest method.
//    req, resp := client.GetMultiLevelAuthDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMultiLevelAuthDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetMultiLevelAuthDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetMultiLevelAuthDetailCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMultiLevelAuthDetailCommon for usage and error information.
func (c *SECCENTER20240508) GetMultiLevelAuthDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetMultiLevelAuthDetailCommonRequest(input)
	return out, req.Send()
}

// GetMultiLevelAuthDetailCommonWithContext is the same as GetMultiLevelAuthDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetMultiLevelAuthDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMultiLevelAuthDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetMultiLevelAuthDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetMultiLevelAuthDetail = "GetMultiLevelAuthDetail"

// GetMultiLevelAuthDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the GetMultiLevelAuthDetail operation. The "output" return
// value will be populated with the GetMultiLevelAuthDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetMultiLevelAuthDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetMultiLevelAuthDetailCommon Send returns without error.
//
// See GetMultiLevelAuthDetail for more information on using the GetMultiLevelAuthDetail
// API call, and error handling.
//
//    // Example sending a request using the GetMultiLevelAuthDetailRequest method.
//    req, resp := client.GetMultiLevelAuthDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetMultiLevelAuthDetailRequest(input *GetMultiLevelAuthDetailInput) (req *request.Request, output *GetMultiLevelAuthDetailOutput) {
	op := &request.Operation{
		Name:       opGetMultiLevelAuthDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetMultiLevelAuthDetailInput{}
	}

	output = &GetMultiLevelAuthDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetMultiLevelAuthDetail API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetMultiLevelAuthDetail for usage and error information.
func (c *SECCENTER20240508) GetMultiLevelAuthDetail(input *GetMultiLevelAuthDetailInput) (*GetMultiLevelAuthDetailOutput, error) {
	req, out := c.GetMultiLevelAuthDetailRequest(input)
	return out, req.Send()
}

// GetMultiLevelAuthDetailWithContext is the same as GetMultiLevelAuthDetail with the addition of
// the ability to pass a context and additional request options.
//
// See GetMultiLevelAuthDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetMultiLevelAuthDetailWithContext(ctx volcengine.Context, input *GetMultiLevelAuthDetailInput, opts ...request.Option) (*GetMultiLevelAuthDetailOutput, error) {
	req, out := c.GetMultiLevelAuthDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AppSecForGetMultiLevelAuthDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`

	UsedCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s AppSecForGetMultiLevelAuthDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AppSecForGetMultiLevelAuthDetailOutput) GoString() string {
	return s.String()
}

// SetExpireTime sets the ExpireTime field's value.
func (s *AppSecForGetMultiLevelAuthDetailOutput) SetExpireTime(v int64) *AppSecForGetMultiLevelAuthDetailOutput {
	s.ExpireTime = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *AppSecForGetMultiLevelAuthDetailOutput) SetTotalCount(v int64) *AppSecForGetMultiLevelAuthDetailOutput {
	s.TotalCount = &v
	return s
}

// SetUsedCount sets the UsedCount field's value.
func (s *AppSecForGetMultiLevelAuthDetailOutput) SetUsedCount(v int64) *AppSecForGetMultiLevelAuthDetailOutput {
	s.UsedCount = &v
	return s
}

type ClusterSecForGetMultiLevelAuthDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`

	UsedCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ClusterSecForGetMultiLevelAuthDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ClusterSecForGetMultiLevelAuthDetailOutput) GoString() string {
	return s.String()
}

// SetExpireTime sets the ExpireTime field's value.
func (s *ClusterSecForGetMultiLevelAuthDetailOutput) SetExpireTime(v int64) *ClusterSecForGetMultiLevelAuthDetailOutput {
	s.ExpireTime = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ClusterSecForGetMultiLevelAuthDetailOutput) SetTotalCount(v int64) *ClusterSecForGetMultiLevelAuthDetailOutput {
	s.TotalCount = &v
	return s
}

// SetUsedCount sets the UsedCount field's value.
func (s *ClusterSecForGetMultiLevelAuthDetailOutput) SetUsedCount(v int64) *ClusterSecForGetMultiLevelAuthDetailOutput {
	s.UsedCount = &v
	return s
}

type GetMultiLevelAuthDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetMultiLevelAuthDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMultiLevelAuthDetailInput) GoString() string {
	return s.String()
}

type GetMultiLevelAuthDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccountID *string `type:"string" json:",omitempty"`

	AppSec *AppSecForGetMultiLevelAuthDetailOutput `type:"structure" json:",omitempty"`

	ClusterSec *ClusterSecForGetMultiLevelAuthDetailOutput `type:"structure" json:",omitempty"`

	ProtectHost *ProtectHostForGetMultiLevelAuthDetailOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetMultiLevelAuthDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetMultiLevelAuthDetailOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *GetMultiLevelAuthDetailOutput) SetAccountID(v string) *GetMultiLevelAuthDetailOutput {
	s.AccountID = &v
	return s
}

// SetAppSec sets the AppSec field's value.
func (s *GetMultiLevelAuthDetailOutput) SetAppSec(v *AppSecForGetMultiLevelAuthDetailOutput) *GetMultiLevelAuthDetailOutput {
	s.AppSec = v
	return s
}

// SetClusterSec sets the ClusterSec field's value.
func (s *GetMultiLevelAuthDetailOutput) SetClusterSec(v *ClusterSecForGetMultiLevelAuthDetailOutput) *GetMultiLevelAuthDetailOutput {
	s.ClusterSec = v
	return s
}

// SetProtectHost sets the ProtectHost field's value.
func (s *GetMultiLevelAuthDetailOutput) SetProtectHost(v *ProtectHostForGetMultiLevelAuthDetailOutput) *GetMultiLevelAuthDetailOutput {
	s.ProtectHost = v
	return s
}

type ProtectHostForGetMultiLevelAuthDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`

	UsedCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ProtectHostForGetMultiLevelAuthDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProtectHostForGetMultiLevelAuthDetailOutput) GoString() string {
	return s.String()
}

// SetExpireTime sets the ExpireTime field's value.
func (s *ProtectHostForGetMultiLevelAuthDetailOutput) SetExpireTime(v int64) *ProtectHostForGetMultiLevelAuthDetailOutput {
	s.ExpireTime = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ProtectHostForGetMultiLevelAuthDetailOutput) SetTotalCount(v int64) *ProtectHostForGetMultiLevelAuthDetailOutput {
	s.TotalCount = &v
	return s
}

// SetUsedCount sets the UsedCount field's value.
func (s *ProtectHostForGetMultiLevelAuthDetailOutput) SetUsedCount(v int64) *ProtectHostForGetMultiLevelAuthDetailOutput {
	s.UsedCount = &v
	return s
}
