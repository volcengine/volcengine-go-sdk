// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTagsDetailCommon = "ListTagsDetail"

// ListTagsDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsDetailCommon operation. The "output" return
// value will be populated with the ListTagsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsDetailCommon Send returns without error.
//
// See ListTagsDetailCommon for more information on using the ListTagsDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTagsDetailCommonRequest method.
//    req, resp := client.ListTagsDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListTagsDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTagsDetailCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListTagsDetailCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListTagsDetailCommon for usage and error information.
func (c *SECCENTER20240508) ListTagsDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTagsDetailCommonRequest(input)
	return out, req.Send()
}

// ListTagsDetailCommonWithContext is the same as ListTagsDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListTagsDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTagsDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTagsDetail = "ListTagsDetail"

// ListTagsDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsDetail operation. The "output" return
// value will be populated with the ListTagsDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsDetailCommon Send returns without error.
//
// See ListTagsDetail for more information on using the ListTagsDetail
// API call, and error handling.
//
//    // Example sending a request using the ListTagsDetailRequest method.
//    req, resp := client.ListTagsDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListTagsDetailRequest(input *ListTagsDetailInput) (req *request.Request, output *ListTagsDetailOutput) {
	op := &request.Operation{
		Name:       opListTagsDetail,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsDetailInput{}
	}

	output = &ListTagsDetailOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListTagsDetail API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListTagsDetail for usage and error information.
func (c *SECCENTER20240508) ListTagsDetail(input *ListTagsDetailInput) (*ListTagsDetailOutput, error) {
	req, out := c.ListTagsDetailRequest(input)
	return out, req.Send()
}

// ListTagsDetailWithContext is the same as ListTagsDetail with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListTagsDetailWithContext(ctx volcengine.Context, input *ListTagsDetailInput, opts ...request.Option) (*ListTagsDetailOutput, error) {
	req, out := c.ListTagsDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListTagsDetailOutput struct {
	_ struct{} `type:"structure"`

	TagHostNum *int64 `type:"int64"`

	TagName *string `type:"string"`
}

// String returns the string representation
func (s DataForListTagsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListTagsDetailOutput) GoString() string {
	return s.String()
}

// SetTagHostNum sets the TagHostNum field's value.
func (s *DataForListTagsDetailOutput) SetTagHostNum(v int64) *DataForListTagsDetailOutput {
	s.TagHostNum = &v
	return s
}

// SetTagName sets the TagName field's value.
func (s *DataForListTagsDetailOutput) SetTagName(v string) *DataForListTagsDetailOutput {
	s.TagName = &v
	return s
}

type ListTagsDetailInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s ListTagsDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsDetailInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *ListTagsDetailInput) SetTopGroupID(v string) *ListTagsDetailInput {
	s.TopGroupID = &v
	return s
}

type ListTagsDetailOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForListTagsDetailOutput `type:"list"`
}

// String returns the string representation
func (s ListTagsDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsDetailOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListTagsDetailOutput) SetData(v []*DataForListTagsDetailOutput) *ListTagsDetailOutput {
	s.Data = v
	return s
}
