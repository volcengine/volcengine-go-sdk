// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetBruteForceBanConfigCommon = "GetBruteForceBanConfig"

// GetBruteForceBanConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanConfigCommon operation. The "output" return
// value will be populated with the GetBruteForceBanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanConfigCommon Send returns without error.
//
// See GetBruteForceBanConfigCommon for more information on using the GetBruteForceBanConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanConfigCommonRequest method.
//    req, resp := client.GetBruteForceBanConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetBruteForceBanConfigCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetBruteForceBanConfigCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanConfigCommon for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanConfigCommonRequest(input)
	return out, req.Send()
}

// GetBruteForceBanConfigCommonWithContext is the same as GetBruteForceBanConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetBruteForceBanConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetBruteForceBanConfig = "GetBruteForceBanConfig"

// GetBruteForceBanConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetBruteForceBanConfig operation. The "output" return
// value will be populated with the GetBruteForceBanConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetBruteForceBanConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetBruteForceBanConfigCommon Send returns without error.
//
// See GetBruteForceBanConfig for more information on using the GetBruteForceBanConfig
// API call, and error handling.
//
//    // Example sending a request using the GetBruteForceBanConfigRequest method.
//    req, resp := client.GetBruteForceBanConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetBruteForceBanConfigRequest(input *GetBruteForceBanConfigInput) (req *request.Request, output *GetBruteForceBanConfigOutput) {
	op := &request.Operation{
		Name:       opGetBruteForceBanConfig,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetBruteForceBanConfigInput{}
	}

	output = &GetBruteForceBanConfigOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetBruteForceBanConfig API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetBruteForceBanConfig for usage and error information.
func (c *SECCENTER20240508) GetBruteForceBanConfig(input *GetBruteForceBanConfigInput) (*GetBruteForceBanConfigOutput, error) {
	req, out := c.GetBruteForceBanConfigRequest(input)
	return out, req.Send()
}

// GetBruteForceBanConfigWithContext is the same as GetBruteForceBanConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetBruteForceBanConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetBruteForceBanConfigWithContext(ctx volcengine.Context, input *GetBruteForceBanConfigInput, opts ...request.Option) (*GetBruteForceBanConfigOutput, error) {
	req, out := c.GetBruteForceBanConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetBruteForceBanConfigInput struct {
	_ struct{} `type:"structure"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetBruteForceBanConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanConfigInput) GoString() string {
	return s.String()
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetBruteForceBanConfigInput) SetTopGroupID(v string) *GetBruteForceBanConfigInput {
	s.TopGroupID = &v
	return s
}

type GetBruteForceBanConfigOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountID *string `type:"string"`

	AgentIDList []*string `type:"list"`

	AllHost *bool `type:"boolean"`

	BanScenes []*string `type:"list"`

	BanType *string `type:"string"`

	CloudProviders []*string `type:"list"`

	Enable *bool `type:"boolean"`

	LeafGroupIDs []*string `type:"list"`

	Operator *string `type:"string"`

	RuleList []*RuleListForGetBruteForceBanConfigOutput `type:"list"`

	TopGroupID *string `type:"string"`
}

// String returns the string representation
func (s GetBruteForceBanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetBruteForceBanConfigOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *GetBruteForceBanConfigOutput) SetAccountID(v string) *GetBruteForceBanConfigOutput {
	s.AccountID = &v
	return s
}

// SetAgentIDList sets the AgentIDList field's value.
func (s *GetBruteForceBanConfigOutput) SetAgentIDList(v []*string) *GetBruteForceBanConfigOutput {
	s.AgentIDList = v
	return s
}

// SetAllHost sets the AllHost field's value.
func (s *GetBruteForceBanConfigOutput) SetAllHost(v bool) *GetBruteForceBanConfigOutput {
	s.AllHost = &v
	return s
}

// SetBanScenes sets the BanScenes field's value.
func (s *GetBruteForceBanConfigOutput) SetBanScenes(v []*string) *GetBruteForceBanConfigOutput {
	s.BanScenes = v
	return s
}

// SetBanType sets the BanType field's value.
func (s *GetBruteForceBanConfigOutput) SetBanType(v string) *GetBruteForceBanConfigOutput {
	s.BanType = &v
	return s
}

// SetCloudProviders sets the CloudProviders field's value.
func (s *GetBruteForceBanConfigOutput) SetCloudProviders(v []*string) *GetBruteForceBanConfigOutput {
	s.CloudProviders = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *GetBruteForceBanConfigOutput) SetEnable(v bool) *GetBruteForceBanConfigOutput {
	s.Enable = &v
	return s
}

// SetLeafGroupIDs sets the LeafGroupIDs field's value.
func (s *GetBruteForceBanConfigOutput) SetLeafGroupIDs(v []*string) *GetBruteForceBanConfigOutput {
	s.LeafGroupIDs = v
	return s
}

// SetOperator sets the Operator field's value.
func (s *GetBruteForceBanConfigOutput) SetOperator(v string) *GetBruteForceBanConfigOutput {
	s.Operator = &v
	return s
}

// SetRuleList sets the RuleList field's value.
func (s *GetBruteForceBanConfigOutput) SetRuleList(v []*RuleListForGetBruteForceBanConfigOutput) *GetBruteForceBanConfigOutput {
	s.RuleList = v
	return s
}

// SetTopGroupID sets the TopGroupID field's value.
func (s *GetBruteForceBanConfigOutput) SetTopGroupID(v string) *GetBruteForceBanConfigOutput {
	s.TopGroupID = &v
	return s
}

type RuleListForGetBruteForceBanConfigOutput struct {
	_ struct{} `type:"structure"`

	BanSeconds *int64 `type:"int64"`

	Enable *bool `type:"boolean"`

	LoginFailCountThreshold *int64 `type:"int64"`

	LoginFailTimeThreshold *int64 `type:"int64"`

	RuleType *string `type:"string"`
}

// String returns the string representation
func (s RuleListForGetBruteForceBanConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleListForGetBruteForceBanConfigOutput) GoString() string {
	return s.String()
}

// SetBanSeconds sets the BanSeconds field's value.
func (s *RuleListForGetBruteForceBanConfigOutput) SetBanSeconds(v int64) *RuleListForGetBruteForceBanConfigOutput {
	s.BanSeconds = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *RuleListForGetBruteForceBanConfigOutput) SetEnable(v bool) *RuleListForGetBruteForceBanConfigOutput {
	s.Enable = &v
	return s
}

// SetLoginFailCountThreshold sets the LoginFailCountThreshold field's value.
func (s *RuleListForGetBruteForceBanConfigOutput) SetLoginFailCountThreshold(v int64) *RuleListForGetBruteForceBanConfigOutput {
	s.LoginFailCountThreshold = &v
	return s
}

// SetLoginFailTimeThreshold sets the LoginFailTimeThreshold field's value.
func (s *RuleListForGetBruteForceBanConfigOutput) SetLoginFailTimeThreshold(v int64) *RuleListForGetBruteForceBanConfigOutput {
	s.LoginFailTimeThreshold = &v
	return s
}

// SetRuleType sets the RuleType field's value.
func (s *RuleListForGetBruteForceBanConfigOutput) SetRuleType(v string) *RuleListForGetBruteForceBanConfigOutput {
	s.RuleType = &v
	return s
}
