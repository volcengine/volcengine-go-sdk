// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBaselineBasicInfoCommon = "ListBaselineBasicInfo"

// ListBaselineBasicInfoCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineBasicInfoCommon operation. The "output" return
// value will be populated with the ListBaselineBasicInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineBasicInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineBasicInfoCommon Send returns without error.
//
// See ListBaselineBasicInfoCommon for more information on using the ListBaselineBasicInfoCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineBasicInfoCommonRequest method.
//    req, resp := client.ListBaselineBasicInfoCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineBasicInfoCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBaselineBasicInfoCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListBaselineBasicInfoCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineBasicInfoCommon for usage and error information.
func (c *SECCENTER20240508) ListBaselineBasicInfoCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBaselineBasicInfoCommonRequest(input)
	return out, req.Send()
}

// ListBaselineBasicInfoCommonWithContext is the same as ListBaselineBasicInfoCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineBasicInfoCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineBasicInfoCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBaselineBasicInfoCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBaselineBasicInfo = "ListBaselineBasicInfo"

// ListBaselineBasicInfoRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBaselineBasicInfo operation. The "output" return
// value will be populated with the ListBaselineBasicInfoCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBaselineBasicInfoCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBaselineBasicInfoCommon Send returns without error.
//
// See ListBaselineBasicInfo for more information on using the ListBaselineBasicInfo
// API call, and error handling.
//
//    // Example sending a request using the ListBaselineBasicInfoRequest method.
//    req, resp := client.ListBaselineBasicInfoRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) ListBaselineBasicInfoRequest(input *ListBaselineBasicInfoInput) (req *request.Request, output *ListBaselineBasicInfoOutput) {
	op := &request.Operation{
		Name:       opListBaselineBasicInfo,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBaselineBasicInfoInput{}
	}

	output = &ListBaselineBasicInfoOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListBaselineBasicInfo API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation ListBaselineBasicInfo for usage and error information.
func (c *SECCENTER20240508) ListBaselineBasicInfo(input *ListBaselineBasicInfoInput) (*ListBaselineBasicInfoOutput, error) {
	req, out := c.ListBaselineBasicInfoRequest(input)
	return out, req.Send()
}

// ListBaselineBasicInfoWithContext is the same as ListBaselineBasicInfo with the addition of
// the ability to pass a context and additional request options.
//
// See ListBaselineBasicInfo for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) ListBaselineBasicInfoWithContext(ctx volcengine.Context, input *ListBaselineBasicInfoInput, opts ...request.Option) (*ListBaselineBasicInfoOutput, error) {
	req, out := c.ListBaselineBasicInfoRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BaselineListForListBaselineBasicInfoOutput struct {
	_ struct{} `type:"structure"`

	BaselineID *int64 `type:"int64"`

	BaselineName *string `type:"string"`

	BaselineNameEn *string `type:"string"`

	CheckNum *int64 `type:"int64"`
}

// String returns the string representation
func (s BaselineListForListBaselineBasicInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BaselineListForListBaselineBasicInfoOutput) GoString() string {
	return s.String()
}

// SetBaselineID sets the BaselineID field's value.
func (s *BaselineListForListBaselineBasicInfoOutput) SetBaselineID(v int64) *BaselineListForListBaselineBasicInfoOutput {
	s.BaselineID = &v
	return s
}

// SetBaselineName sets the BaselineName field's value.
func (s *BaselineListForListBaselineBasicInfoOutput) SetBaselineName(v string) *BaselineListForListBaselineBasicInfoOutput {
	s.BaselineName = &v
	return s
}

// SetBaselineNameEn sets the BaselineNameEn field's value.
func (s *BaselineListForListBaselineBasicInfoOutput) SetBaselineNameEn(v string) *BaselineListForListBaselineBasicInfoOutput {
	s.BaselineNameEn = &v
	return s
}

// SetCheckNum sets the CheckNum field's value.
func (s *BaselineListForListBaselineBasicInfoOutput) SetCheckNum(v int64) *BaselineListForListBaselineBasicInfoOutput {
	s.CheckNum = &v
	return s
}

type DataForListBaselineBasicInfoOutput struct {
	_ struct{} `type:"structure"`

	BaselineList []*BaselineListForListBaselineBasicInfoOutput `type:"list"`

	GroupID *int64 `type:"int64"`

	GroupName *string `type:"string"`

	GroupNameEn *string `type:"string"`
}

// String returns the string representation
func (s DataForListBaselineBasicInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListBaselineBasicInfoOutput) GoString() string {
	return s.String()
}

// SetBaselineList sets the BaselineList field's value.
func (s *DataForListBaselineBasicInfoOutput) SetBaselineList(v []*BaselineListForListBaselineBasicInfoOutput) *DataForListBaselineBasicInfoOutput {
	s.BaselineList = v
	return s
}

// SetGroupID sets the GroupID field's value.
func (s *DataForListBaselineBasicInfoOutput) SetGroupID(v int64) *DataForListBaselineBasicInfoOutput {
	s.GroupID = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *DataForListBaselineBasicInfoOutput) SetGroupName(v string) *DataForListBaselineBasicInfoOutput {
	s.GroupName = &v
	return s
}

// SetGroupNameEn sets the GroupNameEn field's value.
func (s *DataForListBaselineBasicInfoOutput) SetGroupNameEn(v string) *DataForListBaselineBasicInfoOutput {
	s.GroupNameEn = &v
	return s
}

type ListBaselineBasicInfoInput struct {
	_ struct{} `type:"structure"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" required:"true"`

	SortBy *string `type:"string"`

	SortOrder *string `type:"string"`
}

// String returns the string representation
func (s ListBaselineBasicInfoInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineBasicInfoInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBaselineBasicInfoInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBaselineBasicInfoInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListBaselineBasicInfoInput) SetPageNumber(v int64) *ListBaselineBasicInfoInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBaselineBasicInfoInput) SetPageSize(v int64) *ListBaselineBasicInfoInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListBaselineBasicInfoInput) SetSortBy(v string) *ListBaselineBasicInfoInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListBaselineBasicInfoInput) SetSortOrder(v string) *ListBaselineBasicInfoInput {
	s.SortOrder = &v
	return s
}

type ListBaselineBasicInfoOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Data []*DataForListBaselineBasicInfoOutput `type:"list"`

	PageNumber *int64 `type:"int64"`

	PageSize *int64 `type:"int64"`

	TotalCount *int64 `type:"int64"`
}

// String returns the string representation
func (s ListBaselineBasicInfoOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBaselineBasicInfoOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListBaselineBasicInfoOutput) SetData(v []*DataForListBaselineBasicInfoOutput) *ListBaselineBasicInfoOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListBaselineBasicInfoOutput) SetPageNumber(v int64) *ListBaselineBasicInfoOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBaselineBasicInfoOutput) SetPageSize(v int64) *ListBaselineBasicInfoOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListBaselineBasicInfoOutput) SetTotalCount(v int64) *ListBaselineBasicInfoOutput {
	s.TotalCount = &v
	return s
}
