// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package seccenter20240508

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetHostVolumeCommon = "GetHostVolume"

// GetHostVolumeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetHostVolumeCommon operation. The "output" return
// value will be populated with the GetHostVolumeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetHostVolumeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetHostVolumeCommon Send returns without error.
//
// See GetHostVolumeCommon for more information on using the GetHostVolumeCommon
// API call, and error handling.
//
//    // Example sending a request using the GetHostVolumeCommonRequest method.
//    req, resp := client.GetHostVolumeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetHostVolumeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetHostVolumeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetHostVolumeCommon API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetHostVolumeCommon for usage and error information.
func (c *SECCENTER20240508) GetHostVolumeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetHostVolumeCommonRequest(input)
	return out, req.Send()
}

// GetHostVolumeCommonWithContext is the same as GetHostVolumeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetHostVolumeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetHostVolumeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetHostVolumeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetHostVolume = "GetHostVolume"

// GetHostVolumeRequest generates a "volcengine/request.Request" representing the
// client's request for the GetHostVolume operation. The "output" return
// value will be populated with the GetHostVolumeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetHostVolumeCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetHostVolumeCommon Send returns without error.
//
// See GetHostVolume for more information on using the GetHostVolume
// API call, and error handling.
//
//    // Example sending a request using the GetHostVolumeRequest method.
//    req, resp := client.GetHostVolumeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SECCENTER20240508) GetHostVolumeRequest(input *GetHostVolumeInput) (req *request.Request, output *GetHostVolumeOutput) {
	op := &request.Operation{
		Name:       opGetHostVolume,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetHostVolumeInput{}
	}

	output = &GetHostVolumeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetHostVolume API operation for SECCENTER20240508.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SECCENTER20240508's
// API operation GetHostVolume for usage and error information.
func (c *SECCENTER20240508) GetHostVolume(input *GetHostVolumeInput) (*GetHostVolumeOutput, error) {
	req, out := c.GetHostVolumeRequest(input)
	return out, req.Send()
}

// GetHostVolumeWithContext is the same as GetHostVolume with the addition of
// the ability to pass a context and additional request options.
//
// See GetHostVolume for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SECCENTER20240508) GetHostVolumeWithContext(ctx volcengine.Context, input *GetHostVolumeInput, opts ...request.Option) (*GetHostVolumeOutput, error) {
	req, out := c.GetHostVolumeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGetHostVolumeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Free *string `type:"string" json:",omitempty"`

	Fstype *string `type:"string" json:",omitempty"`

	MountPoint *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Total *string `type:"string" json:",omitempty"`

	Usage *string `type:"string" json:",omitempty"`

	Used *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGetHostVolumeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGetHostVolumeOutput) GoString() string {
	return s.String()
}

// SetFree sets the Free field's value.
func (s *DataForGetHostVolumeOutput) SetFree(v string) *DataForGetHostVolumeOutput {
	s.Free = &v
	return s
}

// SetFstype sets the Fstype field's value.
func (s *DataForGetHostVolumeOutput) SetFstype(v string) *DataForGetHostVolumeOutput {
	s.Fstype = &v
	return s
}

// SetMountPoint sets the MountPoint field's value.
func (s *DataForGetHostVolumeOutput) SetMountPoint(v string) *DataForGetHostVolumeOutput {
	s.MountPoint = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForGetHostVolumeOutput) SetName(v string) *DataForGetHostVolumeOutput {
	s.Name = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *DataForGetHostVolumeOutput) SetTotal(v string) *DataForGetHostVolumeOutput {
	s.Total = &v
	return s
}

// SetUsage sets the Usage field's value.
func (s *DataForGetHostVolumeOutput) SetUsage(v string) *DataForGetHostVolumeOutput {
	s.Usage = &v
	return s
}

// SetUsed sets the Used field's value.
func (s *DataForGetHostVolumeOutput) SetUsed(v string) *DataForGetHostVolumeOutput {
	s.Used = &v
	return s
}

type GetHostVolumeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentID *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int64 `type:"int64" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	SortOrder *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetHostVolumeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetHostVolumeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetHostVolumeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetHostVolumeInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentID sets the AgentID field's value.
func (s *GetHostVolumeInput) SetAgentID(v string) *GetHostVolumeInput {
	s.AgentID = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetHostVolumeInput) SetPageNumber(v int64) *GetHostVolumeInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetHostVolumeInput) SetPageSize(v int64) *GetHostVolumeInput {
	s.PageSize = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *GetHostVolumeInput) SetSortBy(v string) *GetHostVolumeInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *GetHostVolumeInput) SetSortOrder(v string) *GetHostVolumeInput {
	s.SortOrder = &v
	return s
}

type GetHostVolumeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForGetHostVolumeOutput `type:"list" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s GetHostVolumeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetHostVolumeOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GetHostVolumeOutput) SetData(v []*DataForGetHostVolumeOutput) *GetHostVolumeOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *GetHostVolumeOutput) SetPageNumber(v int64) *GetHostVolumeOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *GetHostVolumeOutput) SetPageSize(v int64) *GetHostVolumeOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *GetHostVolumeOutput) SetTotalCount(v int64) *GetHostVolumeOutput {
	s.TotalCount = &v
	return s
}
