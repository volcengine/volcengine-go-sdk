// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph20250815

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyGraphSchemaCommon = "ModifyGraphSchema"

// ModifyGraphSchemaCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyGraphSchemaCommon operation. The "output" return
// value will be populated with the ModifyGraphSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyGraphSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyGraphSchemaCommon Send returns without error.
//
// See ModifyGraphSchemaCommon for more information on using the ModifyGraphSchemaCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyGraphSchemaCommonRequest method.
//    req, resp := client.ModifyGraphSchemaCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) ModifyGraphSchemaCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyGraphSchemaCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyGraphSchemaCommon API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation ModifyGraphSchemaCommon for usage and error information.
func (c *GRAPH20250815) ModifyGraphSchemaCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyGraphSchemaCommonRequest(input)
	return out, req.Send()
}

// ModifyGraphSchemaCommonWithContext is the same as ModifyGraphSchemaCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyGraphSchemaCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) ModifyGraphSchemaCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyGraphSchemaCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyGraphSchema = "ModifyGraphSchema"

// ModifyGraphSchemaRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyGraphSchema operation. The "output" return
// value will be populated with the ModifyGraphSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyGraphSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyGraphSchemaCommon Send returns without error.
//
// See ModifyGraphSchema for more information on using the ModifyGraphSchema
// API call, and error handling.
//
//    // Example sending a request using the ModifyGraphSchemaRequest method.
//    req, resp := client.ModifyGraphSchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) ModifyGraphSchemaRequest(input *ModifyGraphSchemaInput) (req *request.Request, output *ModifyGraphSchemaOutput) {
	op := &request.Operation{
		Name:       opModifyGraphSchema,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyGraphSchemaInput{}
	}

	output = &ModifyGraphSchemaOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyGraphSchema API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation ModifyGraphSchema for usage and error information.
func (c *GRAPH20250815) ModifyGraphSchema(input *ModifyGraphSchemaInput) (*ModifyGraphSchemaOutput, error) {
	req, out := c.ModifyGraphSchemaRequest(input)
	return out, req.Send()
}

// ModifyGraphSchemaWithContext is the same as ModifyGraphSchema with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyGraphSchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) ModifyGraphSchemaWithContext(ctx volcengine.Context, input *ModifyGraphSchemaInput, opts ...request.Option) (*ModifyGraphSchemaOutput, error) {
	req, out := c.ModifyGraphSchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ColumnForModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnName *string `type:"string" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	EnableDefaultValue *bool `type:"boolean" json:",omitempty"`

	SchemaColumnType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ColumnForModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ColumnForModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// SetColumnName sets the ColumnName field's value.
func (s *ColumnForModifyGraphSchemaInput) SetColumnName(v string) *ColumnForModifyGraphSchemaInput {
	s.ColumnName = &v
	return s
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *ColumnForModifyGraphSchemaInput) SetDefaultValue(v string) *ColumnForModifyGraphSchemaInput {
	s.DefaultValue = &v
	return s
}

// SetEnableDefaultValue sets the EnableDefaultValue field's value.
func (s *ColumnForModifyGraphSchemaInput) SetEnableDefaultValue(v bool) *ColumnForModifyGraphSchemaInput {
	s.EnableDefaultValue = &v
	return s
}

// SetSchemaColumnType sets the SchemaColumnType field's value.
func (s *ColumnForModifyGraphSchemaInput) SetSchemaColumnType(v string) *ColumnForModifyGraphSchemaInput {
	s.SchemaColumnType = &v
	return s
}

type EdgeForModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForModifyGraphSchemaInput `type:"list" json:",omitempty"`

	EdgeVertexConstraint *EdgeVertexConstraintForModifyGraphSchemaInput `type:"structure" json:",omitempty"`

	EnableReverseIndex *bool `type:"boolean" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForModifyGraphSchemaInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s EdgeForModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeForModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *EdgeForModifyGraphSchemaInput) SetColumns(v []*ColumnForModifyGraphSchemaInput) *EdgeForModifyGraphSchemaInput {
	s.Columns = v
	return s
}

// SetEdgeVertexConstraint sets the EdgeVertexConstraint field's value.
func (s *EdgeForModifyGraphSchemaInput) SetEdgeVertexConstraint(v *EdgeVertexConstraintForModifyGraphSchemaInput) *EdgeForModifyGraphSchemaInput {
	s.EdgeVertexConstraint = v
	return s
}

// SetEnableReverseIndex sets the EnableReverseIndex field's value.
func (s *EdgeForModifyGraphSchemaInput) SetEnableReverseIndex(v bool) *EdgeForModifyGraphSchemaInput {
	s.EnableReverseIndex = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *EdgeForModifyGraphSchemaInput) SetLabel(v string) *EdgeForModifyGraphSchemaInput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *EdgeForModifyGraphSchemaInput) SetPrimaryKey(v []*string) *EdgeForModifyGraphSchemaInput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeForModifyGraphSchemaInput) SetSchemaLabelType(v string) *EdgeForModifyGraphSchemaInput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *EdgeForModifyGraphSchemaInput) SetSecondaryIndices(v []*SecondaryIndexForModifyGraphSchemaInput) *EdgeForModifyGraphSchemaInput {
	s.SecondaryIndices = v
	return s
}

type EdgeVertexConstraintForModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PrimaryKeyColumns []*ColumnForModifyGraphSchemaInput `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EdgeVertexConstraintForModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeVertexConstraintForModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// SetPrimaryKeyColumns sets the PrimaryKeyColumns field's value.
func (s *EdgeVertexConstraintForModifyGraphSchemaInput) SetPrimaryKeyColumns(v []*ColumnForModifyGraphSchemaInput) *EdgeVertexConstraintForModifyGraphSchemaInput {
	s.PrimaryKeyColumns = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeVertexConstraintForModifyGraphSchemaInput) SetSchemaLabelType(v string) *EdgeVertexConstraintForModifyGraphSchemaInput {
	s.SchemaLabelType = &v
	return s
}

type ModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	Edges []*EdgeForModifyGraphSchemaInput `type:"list" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// TableName is a required field
	TableName *string `type:"string" json:",omitempty" required:"true"`

	Vertexes []*VertexForModifyGraphSchemaInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyGraphSchemaInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyGraphSchemaInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.TableName == nil {
		invalidParams.Add(request.NewErrParamRequired("TableName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyGraphSchemaInput) SetClientToken(v string) *ModifyGraphSchemaInput {
	s.ClientToken = &v
	return s
}

// SetEdges sets the Edges field's value.
func (s *ModifyGraphSchemaInput) SetEdges(v []*EdgeForModifyGraphSchemaInput) *ModifyGraphSchemaInput {
	s.Edges = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyGraphSchemaInput) SetInstanceId(v string) *ModifyGraphSchemaInput {
	s.InstanceId = &v
	return s
}

// SetTableName sets the TableName field's value.
func (s *ModifyGraphSchemaInput) SetTableName(v string) *ModifyGraphSchemaInput {
	s.TableName = &v
	return s
}

// SetVertexes sets the Vertexes field's value.
func (s *ModifyGraphSchemaInput) SetVertexes(v []*VertexForModifyGraphSchemaInput) *ModifyGraphSchemaInput {
	s.Vertexes = v
	return s
}

type ModifyGraphSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyGraphSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyGraphSchemaOutput) GoString() string {
	return s.String()
}

type SecondaryIndexForModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnNames []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SecondaryIndexForModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SecondaryIndexForModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// SetColumnNames sets the ColumnNames field's value.
func (s *SecondaryIndexForModifyGraphSchemaInput) SetColumnNames(v []*string) *SecondaryIndexForModifyGraphSchemaInput {
	s.ColumnNames = v
	return s
}

type VertexForModifyGraphSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForModifyGraphSchemaInput `type:"list" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForModifyGraphSchemaInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s VertexForModifyGraphSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VertexForModifyGraphSchemaInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *VertexForModifyGraphSchemaInput) SetColumns(v []*ColumnForModifyGraphSchemaInput) *VertexForModifyGraphSchemaInput {
	s.Columns = v
	return s
}

// SetLabel sets the Label field's value.
func (s *VertexForModifyGraphSchemaInput) SetLabel(v string) *VertexForModifyGraphSchemaInput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *VertexForModifyGraphSchemaInput) SetPrimaryKey(v []*string) *VertexForModifyGraphSchemaInput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *VertexForModifyGraphSchemaInput) SetSchemaLabelType(v string) *VertexForModifyGraphSchemaInput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *VertexForModifyGraphSchemaInput) SetSecondaryIndices(v []*SecondaryIndexForModifyGraphSchemaInput) *VertexForModifyGraphSchemaInput {
	s.SecondaryIndices = v
	return s
}
