// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph20250815

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddGraphTablesCommon = "AddGraphTables"

// AddGraphTablesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddGraphTablesCommon operation. The "output" return
// value will be populated with the AddGraphTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddGraphTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddGraphTablesCommon Send returns without error.
//
// See AddGraphTablesCommon for more information on using the AddGraphTablesCommon
// API call, and error handling.
//
//    // Example sending a request using the AddGraphTablesCommonRequest method.
//    req, resp := client.AddGraphTablesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) AddGraphTablesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddGraphTablesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddGraphTablesCommon API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation AddGraphTablesCommon for usage and error information.
func (c *GRAPH20250815) AddGraphTablesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddGraphTablesCommonRequest(input)
	return out, req.Send()
}

// AddGraphTablesCommonWithContext is the same as AddGraphTablesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddGraphTablesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) AddGraphTablesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddGraphTablesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddGraphTables = "AddGraphTables"

// AddGraphTablesRequest generates a "volcengine/request.Request" representing the
// client's request for the AddGraphTables operation. The "output" return
// value will be populated with the AddGraphTablesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddGraphTablesCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddGraphTablesCommon Send returns without error.
//
// See AddGraphTables for more information on using the AddGraphTables
// API call, and error handling.
//
//    // Example sending a request using the AddGraphTablesRequest method.
//    req, resp := client.AddGraphTablesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) AddGraphTablesRequest(input *AddGraphTablesInput) (req *request.Request, output *AddGraphTablesOutput) {
	op := &request.Operation{
		Name:       opAddGraphTables,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddGraphTablesInput{}
	}

	output = &AddGraphTablesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddGraphTables API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation AddGraphTables for usage and error information.
func (c *GRAPH20250815) AddGraphTables(input *AddGraphTablesInput) (*AddGraphTablesOutput, error) {
	req, out := c.AddGraphTablesRequest(input)
	return out, req.Send()
}

// AddGraphTablesWithContext is the same as AddGraphTables with the addition of
// the ability to pass a context and additional request options.
//
// See AddGraphTables for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) AddGraphTablesWithContext(ctx volcengine.Context, input *AddGraphTablesInput, opts ...request.Option) (*AddGraphTablesOutput, error) {
	req, out := c.AddGraphTablesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	Tables []*TableForAddGraphTablesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s AddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddGraphTablesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddGraphTablesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddGraphTablesInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *AddGraphTablesInput) SetClientToken(v string) *AddGraphTablesInput {
	s.ClientToken = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *AddGraphTablesInput) SetInstanceId(v string) *AddGraphTablesInput {
	s.InstanceId = &v
	return s
}

// SetTables sets the Tables field's value.
func (s *AddGraphTablesInput) SetTables(v []*TableForAddGraphTablesInput) *AddGraphTablesInput {
	s.Tables = v
	return s
}

type AddGraphTablesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AddGraphTablesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddGraphTablesOutput) GoString() string {
	return s.String()
}

type ColumnForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnName *string `type:"string" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	EnableDefaultValue *bool `type:"boolean" json:",omitempty"`

	SchemaColumnType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ColumnForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ColumnForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetColumnName sets the ColumnName field's value.
func (s *ColumnForAddGraphTablesInput) SetColumnName(v string) *ColumnForAddGraphTablesInput {
	s.ColumnName = &v
	return s
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *ColumnForAddGraphTablesInput) SetDefaultValue(v string) *ColumnForAddGraphTablesInput {
	s.DefaultValue = &v
	return s
}

// SetEnableDefaultValue sets the EnableDefaultValue field's value.
func (s *ColumnForAddGraphTablesInput) SetEnableDefaultValue(v bool) *ColumnForAddGraphTablesInput {
	s.EnableDefaultValue = &v
	return s
}

// SetSchemaColumnType sets the SchemaColumnType field's value.
func (s *ColumnForAddGraphTablesInput) SetSchemaColumnType(v string) *ColumnForAddGraphTablesInput {
	s.SchemaColumnType = &v
	return s
}

type EdgeForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForAddGraphTablesInput `type:"list" json:",omitempty"`

	EdgeVertexConstraint *EdgeVertexConstraintForAddGraphTablesInput `type:"structure" json:",omitempty"`

	EnableReverseIndex *bool `type:"boolean" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForAddGraphTablesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s EdgeForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *EdgeForAddGraphTablesInput) SetColumns(v []*ColumnForAddGraphTablesInput) *EdgeForAddGraphTablesInput {
	s.Columns = v
	return s
}

// SetEdgeVertexConstraint sets the EdgeVertexConstraint field's value.
func (s *EdgeForAddGraphTablesInput) SetEdgeVertexConstraint(v *EdgeVertexConstraintForAddGraphTablesInput) *EdgeForAddGraphTablesInput {
	s.EdgeVertexConstraint = v
	return s
}

// SetEnableReverseIndex sets the EnableReverseIndex field's value.
func (s *EdgeForAddGraphTablesInput) SetEnableReverseIndex(v bool) *EdgeForAddGraphTablesInput {
	s.EnableReverseIndex = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *EdgeForAddGraphTablesInput) SetLabel(v string) *EdgeForAddGraphTablesInput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *EdgeForAddGraphTablesInput) SetPrimaryKey(v []*string) *EdgeForAddGraphTablesInput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeForAddGraphTablesInput) SetSchemaLabelType(v string) *EdgeForAddGraphTablesInput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *EdgeForAddGraphTablesInput) SetSecondaryIndices(v []*SecondaryIndexForAddGraphTablesInput) *EdgeForAddGraphTablesInput {
	s.SecondaryIndices = v
	return s
}

type EdgeVertexConstraintForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PrimaryKeyColumns []*ColumnForAddGraphTablesInput `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EdgeVertexConstraintForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeVertexConstraintForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetPrimaryKeyColumns sets the PrimaryKeyColumns field's value.
func (s *EdgeVertexConstraintForAddGraphTablesInput) SetPrimaryKeyColumns(v []*ColumnForAddGraphTablesInput) *EdgeVertexConstraintForAddGraphTablesInput {
	s.PrimaryKeyColumns = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeVertexConstraintForAddGraphTablesInput) SetSchemaLabelType(v string) *EdgeVertexConstraintForAddGraphTablesInput {
	s.SchemaLabelType = &v
	return s
}

type SecondaryIndexForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnNames []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SecondaryIndexForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SecondaryIndexForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetColumnNames sets the ColumnNames field's value.
func (s *SecondaryIndexForAddGraphTablesInput) SetColumnNames(v []*string) *SecondaryIndexForAddGraphTablesInput {
	s.ColumnNames = v
	return s
}

type TableForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Edges []*EdgeForAddGraphTablesInput `type:"list" json:",omitempty"`

	EnableRotate *bool `type:"boolean" json:",omitempty"`

	RotateSize *int64 `type:"int64" json:",omitempty"`

	TableName *string `type:"string" json:",omitempty"`

	Version *int64 `type:"int64" json:",omitempty"`

	Vertexes []*VertexForAddGraphTablesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TableForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetEdges sets the Edges field's value.
func (s *TableForAddGraphTablesInput) SetEdges(v []*EdgeForAddGraphTablesInput) *TableForAddGraphTablesInput {
	s.Edges = v
	return s
}

// SetEnableRotate sets the EnableRotate field's value.
func (s *TableForAddGraphTablesInput) SetEnableRotate(v bool) *TableForAddGraphTablesInput {
	s.EnableRotate = &v
	return s
}

// SetRotateSize sets the RotateSize field's value.
func (s *TableForAddGraphTablesInput) SetRotateSize(v int64) *TableForAddGraphTablesInput {
	s.RotateSize = &v
	return s
}

// SetTableName sets the TableName field's value.
func (s *TableForAddGraphTablesInput) SetTableName(v string) *TableForAddGraphTablesInput {
	s.TableName = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *TableForAddGraphTablesInput) SetVersion(v int64) *TableForAddGraphTablesInput {
	s.Version = &v
	return s
}

// SetVertexes sets the Vertexes field's value.
func (s *TableForAddGraphTablesInput) SetVertexes(v []*VertexForAddGraphTablesInput) *TableForAddGraphTablesInput {
	s.Vertexes = v
	return s
}

type VertexForAddGraphTablesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForAddGraphTablesInput `type:"list" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForAddGraphTablesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s VertexForAddGraphTablesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VertexForAddGraphTablesInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *VertexForAddGraphTablesInput) SetColumns(v []*ColumnForAddGraphTablesInput) *VertexForAddGraphTablesInput {
	s.Columns = v
	return s
}

// SetLabel sets the Label field's value.
func (s *VertexForAddGraphTablesInput) SetLabel(v string) *VertexForAddGraphTablesInput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *VertexForAddGraphTablesInput) SetPrimaryKey(v []*string) *VertexForAddGraphTablesInput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *VertexForAddGraphTablesInput) SetSchemaLabelType(v string) *VertexForAddGraphTablesInput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *VertexForAddGraphTablesInput) SetSecondaryIndices(v []*SecondaryIndexForAddGraphTablesInput) *VertexForAddGraphTablesInput {
	s.SecondaryIndices = v
	return s
}
