// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package graph20250815

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetGraphTableSchemaCommon = "GetGraphTableSchema"

// GetGraphTableSchemaCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGraphTableSchemaCommon operation. The "output" return
// value will be populated with the GetGraphTableSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGraphTableSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGraphTableSchemaCommon Send returns without error.
//
// See GetGraphTableSchemaCommon for more information on using the GetGraphTableSchemaCommon
// API call, and error handling.
//
//    // Example sending a request using the GetGraphTableSchemaCommonRequest method.
//    req, resp := client.GetGraphTableSchemaCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) GetGraphTableSchemaCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetGraphTableSchemaCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetGraphTableSchemaCommon API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation GetGraphTableSchemaCommon for usage and error information.
func (c *GRAPH20250815) GetGraphTableSchemaCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetGraphTableSchemaCommonRequest(input)
	return out, req.Send()
}

// GetGraphTableSchemaCommonWithContext is the same as GetGraphTableSchemaCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetGraphTableSchemaCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) GetGraphTableSchemaCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetGraphTableSchemaCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetGraphTableSchema = "GetGraphTableSchema"

// GetGraphTableSchemaRequest generates a "volcengine/request.Request" representing the
// client's request for the GetGraphTableSchema operation. The "output" return
// value will be populated with the GetGraphTableSchemaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetGraphTableSchemaCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetGraphTableSchemaCommon Send returns without error.
//
// See GetGraphTableSchema for more information on using the GetGraphTableSchema
// API call, and error handling.
//
//    // Example sending a request using the GetGraphTableSchemaRequest method.
//    req, resp := client.GetGraphTableSchemaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GRAPH20250815) GetGraphTableSchemaRequest(input *GetGraphTableSchemaInput) (req *request.Request, output *GetGraphTableSchemaOutput) {
	op := &request.Operation{
		Name:       opGetGraphTableSchema,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetGraphTableSchemaInput{}
	}

	output = &GetGraphTableSchemaOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetGraphTableSchema API operation for GRAPH20250815.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GRAPH20250815's
// API operation GetGraphTableSchema for usage and error information.
func (c *GRAPH20250815) GetGraphTableSchema(input *GetGraphTableSchemaInput) (*GetGraphTableSchemaOutput, error) {
	req, out := c.GetGraphTableSchemaRequest(input)
	return out, req.Send()
}

// GetGraphTableSchemaWithContext is the same as GetGraphTableSchema with the addition of
// the ability to pass a context and additional request options.
//
// See GetGraphTableSchema for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GRAPH20250815) GetGraphTableSchemaWithContext(ctx volcengine.Context, input *GetGraphTableSchemaInput, opts ...request.Option) (*GetGraphTableSchemaOutput, error) {
	req, out := c.GetGraphTableSchemaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ColumnForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnName *string `type:"string" json:",omitempty"`

	DefaultValue *string `type:"string" json:",omitempty"`

	EnableDefaultValue *bool `type:"boolean" json:",omitempty"`

	SchemaColumnType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ColumnForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ColumnForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumnName sets the ColumnName field's value.
func (s *ColumnForGetGraphTableSchemaOutput) SetColumnName(v string) *ColumnForGetGraphTableSchemaOutput {
	s.ColumnName = &v
	return s
}

// SetDefaultValue sets the DefaultValue field's value.
func (s *ColumnForGetGraphTableSchemaOutput) SetDefaultValue(v string) *ColumnForGetGraphTableSchemaOutput {
	s.DefaultValue = &v
	return s
}

// SetEnableDefaultValue sets the EnableDefaultValue field's value.
func (s *ColumnForGetGraphTableSchemaOutput) SetEnableDefaultValue(v bool) *ColumnForGetGraphTableSchemaOutput {
	s.EnableDefaultValue = &v
	return s
}

// SetSchemaColumnType sets the SchemaColumnType field's value.
func (s *ColumnForGetGraphTableSchemaOutput) SetSchemaColumnType(v string) *ColumnForGetGraphTableSchemaOutput {
	s.SchemaColumnType = &v
	return s
}

type EdgeForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`

	EdgeVertexConstraint *EdgeVertexConstraintForGetGraphTableSchemaOutput `type:"structure" json:",omitempty"`

	EnableReverseIndex *bool `type:"boolean" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s EdgeForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetColumns(v []*ColumnForGetGraphTableSchemaOutput) *EdgeForGetGraphTableSchemaOutput {
	s.Columns = v
	return s
}

// SetEdgeVertexConstraint sets the EdgeVertexConstraint field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetEdgeVertexConstraint(v *EdgeVertexConstraintForGetGraphTableSchemaOutput) *EdgeForGetGraphTableSchemaOutput {
	s.EdgeVertexConstraint = v
	return s
}

// SetEnableReverseIndex sets the EnableReverseIndex field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetEnableReverseIndex(v bool) *EdgeForGetGraphTableSchemaOutput {
	s.EnableReverseIndex = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetLabel(v string) *EdgeForGetGraphTableSchemaOutput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetPrimaryKey(v []*string) *EdgeForGetGraphTableSchemaOutput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetSchemaLabelType(v string) *EdgeForGetGraphTableSchemaOutput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *EdgeForGetGraphTableSchemaOutput) SetSecondaryIndices(v []*SecondaryIndexForGetGraphTableSchemaOutput) *EdgeForGetGraphTableSchemaOutput {
	s.SecondaryIndices = v
	return s
}

type EdgeVertexConstraintForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PrimaryKeyColumns []*ColumnForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EdgeVertexConstraintForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeVertexConstraintForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetPrimaryKeyColumns sets the PrimaryKeyColumns field's value.
func (s *EdgeVertexConstraintForGetGraphTableSchemaOutput) SetPrimaryKeyColumns(v []*ColumnForGetGraphTableSchemaOutput) *EdgeVertexConstraintForGetGraphTableSchemaOutput {
	s.PrimaryKeyColumns = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *EdgeVertexConstraintForGetGraphTableSchemaOutput) SetSchemaLabelType(v string) *EdgeVertexConstraintForGetGraphTableSchemaOutput {
	s.SchemaLabelType = &v
	return s
}

type GetGraphTableSchemaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// TableName is a required field
	TableName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetGraphTableSchemaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGraphTableSchemaInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetGraphTableSchemaInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetGraphTableSchemaInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.TableName == nil {
		invalidParams.Add(request.NewErrParamRequired("TableName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetGraphTableSchemaInput) SetInstanceId(v string) *GetGraphTableSchemaInput {
	s.InstanceId = &v
	return s
}

// SetTableName sets the TableName field's value.
func (s *GetGraphTableSchemaInput) SetTableName(v string) *GetGraphTableSchemaInput {
	s.TableName = &v
	return s
}

type GetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	TableSchema *TableSchemaForGetGraphTableSchemaOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetTableSchema sets the TableSchema field's value.
func (s *GetGraphTableSchemaOutput) SetTableSchema(v *TableSchemaForGetGraphTableSchemaOutput) *GetGraphTableSchemaOutput {
	s.TableSchema = v
	return s
}

type SecondaryIndexForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ColumnNames []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SecondaryIndexForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SecondaryIndexForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumnNames sets the ColumnNames field's value.
func (s *SecondaryIndexForGetGraphTableSchemaOutput) SetColumnNames(v []*string) *SecondaryIndexForGetGraphTableSchemaOutput {
	s.ColumnNames = v
	return s
}

type TableSchemaForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Edges []*EdgeForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`

	EnableRotate *bool `type:"boolean" json:",omitempty"`

	RotateSize *int64 `type:"int64" json:",omitempty"`

	TableName *string `type:"string" json:",omitempty"`

	Version *int64 `type:"int64" json:",omitempty"`

	Vertexes []*VertexForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TableSchemaForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TableSchemaForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetEdges sets the Edges field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetEdges(v []*EdgeForGetGraphTableSchemaOutput) *TableSchemaForGetGraphTableSchemaOutput {
	s.Edges = v
	return s
}

// SetEnableRotate sets the EnableRotate field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetEnableRotate(v bool) *TableSchemaForGetGraphTableSchemaOutput {
	s.EnableRotate = &v
	return s
}

// SetRotateSize sets the RotateSize field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetRotateSize(v int64) *TableSchemaForGetGraphTableSchemaOutput {
	s.RotateSize = &v
	return s
}

// SetTableName sets the TableName field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetTableName(v string) *TableSchemaForGetGraphTableSchemaOutput {
	s.TableName = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetVersion(v int64) *TableSchemaForGetGraphTableSchemaOutput {
	s.Version = &v
	return s
}

// SetVertexes sets the Vertexes field's value.
func (s *TableSchemaForGetGraphTableSchemaOutput) SetVertexes(v []*VertexForGetGraphTableSchemaOutput) *TableSchemaForGetGraphTableSchemaOutput {
	s.Vertexes = v
	return s
}

type VertexForGetGraphTableSchemaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*ColumnForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`

	Label *string `type:"string" json:",omitempty"`

	PrimaryKey []*string `type:"list" json:",omitempty"`

	SchemaLabelType *string `type:"string" json:",omitempty"`

	SecondaryIndices []*SecondaryIndexForGetGraphTableSchemaOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s VertexForGetGraphTableSchemaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VertexForGetGraphTableSchemaOutput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *VertexForGetGraphTableSchemaOutput) SetColumns(v []*ColumnForGetGraphTableSchemaOutput) *VertexForGetGraphTableSchemaOutput {
	s.Columns = v
	return s
}

// SetLabel sets the Label field's value.
func (s *VertexForGetGraphTableSchemaOutput) SetLabel(v string) *VertexForGetGraphTableSchemaOutput {
	s.Label = &v
	return s
}

// SetPrimaryKey sets the PrimaryKey field's value.
func (s *VertexForGetGraphTableSchemaOutput) SetPrimaryKey(v []*string) *VertexForGetGraphTableSchemaOutput {
	s.PrimaryKey = v
	return s
}

// SetSchemaLabelType sets the SchemaLabelType field's value.
func (s *VertexForGetGraphTableSchemaOutput) SetSchemaLabelType(v string) *VertexForGetGraphTableSchemaOutput {
	s.SchemaLabelType = &v
	return s
}

// SetSecondaryIndices sets the SecondaryIndices field's value.
func (s *VertexForGetGraphTableSchemaOutput) SetSecondaryIndices(v []*SecondaryIndexForGetGraphTableSchemaOutput) *VertexForGetGraphTableSchemaOutput {
	s.SecondaryIndices = v
	return s
}
