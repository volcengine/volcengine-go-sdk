// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo20231001

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDownloadLocalMediaCommon = "DownloadLocalMedia"

// DownloadLocalMediaCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadLocalMediaCommon operation. The "output" return
// value will be populated with the DownloadLocalMediaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadLocalMediaCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadLocalMediaCommon Send returns without error.
//
// See DownloadLocalMediaCommon for more information on using the DownloadLocalMediaCommon
// API call, and error handling.
//
//    // Example sending a request using the DownloadLocalMediaCommonRequest method.
//    req, resp := client.DownloadLocalMediaCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) DownloadLocalMediaCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDownloadLocalMediaCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadLocalMediaCommon API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation DownloadLocalMediaCommon for usage and error information.
func (c *AIOTVIDEO20231001) DownloadLocalMediaCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DownloadLocalMediaCommonRequest(input)
	return out, req.Send()
}

// DownloadLocalMediaCommonWithContext is the same as DownloadLocalMediaCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadLocalMediaCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) DownloadLocalMediaCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DownloadLocalMediaCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDownloadLocalMedia = "DownloadLocalMedia"

// DownloadLocalMediaRequest generates a "volcengine/request.Request" representing the
// client's request for the DownloadLocalMedia operation. The "output" return
// value will be populated with the DownloadLocalMediaCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DownloadLocalMediaCommon Request to send the API call to the service.
// the "output" return value is not valid until after DownloadLocalMediaCommon Send returns without error.
//
// See DownloadLocalMedia for more information on using the DownloadLocalMedia
// API call, and error handling.
//
//    // Example sending a request using the DownloadLocalMediaRequest method.
//    req, resp := client.DownloadLocalMediaRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) DownloadLocalMediaRequest(input *DownloadLocalMediaInput) (req *request.Request, output *DownloadLocalMediaOutput) {
	op := &request.Operation{
		Name:       opDownloadLocalMedia,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DownloadLocalMediaInput{}
	}

	output = &DownloadLocalMediaOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DownloadLocalMedia API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation DownloadLocalMedia for usage and error information.
func (c *AIOTVIDEO20231001) DownloadLocalMedia(input *DownloadLocalMediaInput) (*DownloadLocalMediaOutput, error) {
	req, out := c.DownloadLocalMediaRequest(input)
	return out, req.Send()
}

// DownloadLocalMediaWithContext is the same as DownloadLocalMedia with the addition of
// the ability to pass a context and additional request options.
//
// See DownloadLocalMedia for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) DownloadLocalMediaWithContext(ctx volcengine.Context, input *DownloadLocalMediaInput, opts ...request.Option) (*DownloadLocalMediaOutput, error) {
	req, out := c.DownloadLocalMediaRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EndTime is a required field
	EndTime *int32 `type:"int32" json:",omitempty" required:"true"`

	Mps *MpsForDownloadLocalMediaInput `type:"structure" json:",omitempty"`

	SpaceID *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// StreamID is a required field
	StreamID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadLocalMediaInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DownloadLocalMediaInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DownloadLocalMediaInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}
	if s.StreamID == nil {
		invalidParams.Add(request.NewErrParamRequired("StreamID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndTime sets the EndTime field's value.
func (s *DownloadLocalMediaInput) SetEndTime(v int32) *DownloadLocalMediaInput {
	s.EndTime = &v
	return s
}

// SetMps sets the Mps field's value.
func (s *DownloadLocalMediaInput) SetMps(v *MpsForDownloadLocalMediaInput) *DownloadLocalMediaInput {
	s.Mps = v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *DownloadLocalMediaInput) SetSpaceID(v string) *DownloadLocalMediaInput {
	s.SpaceID = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DownloadLocalMediaInput) SetStartTime(v int32) *DownloadLocalMediaInput {
	s.StartTime = &v
	return s
}

// SetStreamID sets the StreamID field's value.
func (s *DownloadLocalMediaInput) SetStreamID(v string) *DownloadLocalMediaInput {
	s.StreamID = &v
	return s
}

type DownloadLocalMediaOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DownloadID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DownloadLocalMediaOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DownloadLocalMediaOutput) GoString() string {
	return s.String()
}

// SetDownloadID sets the DownloadID field's value.
func (s *DownloadLocalMediaOutput) SetDownloadID(v string) *DownloadLocalMediaOutput {
	s.DownloadID = &v
	return s
}

type FontForDownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alignment *string `type:"string" json:",omitempty"`

	FontSize *int32 `type:"int32" json:",omitempty"`

	PrimaryColor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FontForDownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FontForDownloadLocalMediaInput) GoString() string {
	return s.String()
}

// SetAlignment sets the Alignment field's value.
func (s *FontForDownloadLocalMediaInput) SetAlignment(v string) *FontForDownloadLocalMediaInput {
	s.Alignment = &v
	return s
}

// SetFontSize sets the FontSize field's value.
func (s *FontForDownloadLocalMediaInput) SetFontSize(v int32) *FontForDownloadLocalMediaInput {
	s.FontSize = &v
	return s
}

// SetPrimaryColor sets the PrimaryColor field's value.
func (s *FontForDownloadLocalMediaInput) SetPrimaryColor(v string) *FontForDownloadLocalMediaInput {
	s.PrimaryColor = &v
	return s
}

type M3U8OptionForDownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ToMp4 *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s M3U8OptionForDownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s M3U8OptionForDownloadLocalMediaInput) GoString() string {
	return s.String()
}

// SetToMp4 sets the ToMp4 field's value.
func (s *M3U8OptionForDownloadLocalMediaInput) SetToMp4(v bool) *M3U8OptionForDownloadLocalMediaInput {
	s.ToMp4 = &v
	return s
}

type MpsForDownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	M3U8Option *M3U8OptionForDownloadLocalMediaInput `type:"structure" json:",omitempty"`

	Subtitle *SubtitleForDownloadLocalMediaInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s MpsForDownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MpsForDownloadLocalMediaInput) GoString() string {
	return s.String()
}

// SetM3U8Option sets the M3U8Option field's value.
func (s *MpsForDownloadLocalMediaInput) SetM3U8Option(v *M3U8OptionForDownloadLocalMediaInput) *MpsForDownloadLocalMediaInput {
	s.M3U8Option = v
	return s
}

// SetSubtitle sets the Subtitle field's value.
func (s *MpsForDownloadLocalMediaInput) SetSubtitle(v *SubtitleForDownloadLocalMediaInput) *MpsForDownloadLocalMediaInput {
	s.Subtitle = v
	return s
}

type SubtitleForDownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Font *FontForDownloadLocalMediaInput `type:"structure" json:",omitempty"`

	SubtitleList []*SubtitleListForDownloadLocalMediaInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SubtitleForDownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubtitleForDownloadLocalMediaInput) GoString() string {
	return s.String()
}

// SetFont sets the Font field's value.
func (s *SubtitleForDownloadLocalMediaInput) SetFont(v *FontForDownloadLocalMediaInput) *SubtitleForDownloadLocalMediaInput {
	s.Font = v
	return s
}

// SetSubtitleList sets the SubtitleList field's value.
func (s *SubtitleForDownloadLocalMediaInput) SetSubtitleList(v []*SubtitleListForDownloadLocalMediaInput) *SubtitleForDownloadLocalMediaInput {
	s.SubtitleList = v
	return s
}

type SubtitleListForDownloadLocalMediaInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Content *string `type:"string" json:",omitempty"`

	End *int32 `type:"int32" json:",omitempty"`

	Font *FontForDownloadLocalMediaInput `type:"structure" json:",omitempty"`

	Start *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s SubtitleListForDownloadLocalMediaInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubtitleListForDownloadLocalMediaInput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *SubtitleListForDownloadLocalMediaInput) SetContent(v string) *SubtitleListForDownloadLocalMediaInput {
	s.Content = &v
	return s
}

// SetEnd sets the End field's value.
func (s *SubtitleListForDownloadLocalMediaInput) SetEnd(v int32) *SubtitleListForDownloadLocalMediaInput {
	s.End = &v
	return s
}

// SetFont sets the Font field's value.
func (s *SubtitleListForDownloadLocalMediaInput) SetFont(v *FontForDownloadLocalMediaInput) *SubtitleListForDownloadLocalMediaInput {
	s.Font = v
	return s
}

// SetStart sets the Start field's value.
func (s *SubtitleListForDownloadLocalMediaInput) SetStart(v int32) *SubtitleListForDownloadLocalMediaInput {
	s.Start = &v
	return s
}
