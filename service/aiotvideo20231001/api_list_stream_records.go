// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo20231001

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListStreamRecordsCommon = "ListStreamRecords"

// ListStreamRecordsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListStreamRecordsCommon operation. The "output" return
// value will be populated with the ListStreamRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListStreamRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListStreamRecordsCommon Send returns without error.
//
// See ListStreamRecordsCommon for more information on using the ListStreamRecordsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListStreamRecordsCommonRequest method.
//    req, resp := client.ListStreamRecordsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) ListStreamRecordsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListStreamRecordsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListStreamRecordsCommon API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation ListStreamRecordsCommon for usage and error information.
func (c *AIOTVIDEO20231001) ListStreamRecordsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListStreamRecordsCommonRequest(input)
	return out, req.Send()
}

// ListStreamRecordsCommonWithContext is the same as ListStreamRecordsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListStreamRecordsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) ListStreamRecordsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListStreamRecordsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListStreamRecords = "ListStreamRecords"

// ListStreamRecordsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListStreamRecords operation. The "output" return
// value will be populated with the ListStreamRecordsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListStreamRecordsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListStreamRecordsCommon Send returns without error.
//
// See ListStreamRecords for more information on using the ListStreamRecords
// API call, and error handling.
//
//    // Example sending a request using the ListStreamRecordsRequest method.
//    req, resp := client.ListStreamRecordsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) ListStreamRecordsRequest(input *ListStreamRecordsInput) (req *request.Request, output *ListStreamRecordsOutput) {
	op := &request.Operation{
		Name:       opListStreamRecords,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListStreamRecordsInput{}
	}

	output = &ListStreamRecordsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListStreamRecords API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation ListStreamRecords for usage and error information.
func (c *AIOTVIDEO20231001) ListStreamRecords(input *ListStreamRecordsInput) (*ListStreamRecordsOutput, error) {
	req, out := c.ListStreamRecordsRequest(input)
	return out, req.Send()
}

// ListStreamRecordsWithContext is the same as ListStreamRecords with the addition of
// the ability to pass a context and additional request options.
//
// See ListStreamRecords for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) ListStreamRecordsWithContext(ctx volcengine.Context, input *ListStreamRecordsInput, opts ...request.Option) (*ListStreamRecordsOutput, error) {
	req, out := c.ListStreamRecordsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListStreamRecordsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EndTime is a required field
	EndTime *int32 `type:"int32" json:",omitempty" required:"true"`

	PageNumber *string `type:"string" json:",omitempty"`

	PageSize *string `type:"string" json:",omitempty"`

	ReqType *string `type:"string" json:",omitempty"`

	Resolution *string `type:"string" json:",omitempty"`

	SpaceID *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *int32 `type:"int32" json:",omitempty" required:"true"`

	// StreamID is a required field
	StreamID *string `type:"string" json:",omitempty" required:"true"`

	StreamingIndex *int32 `type:"int32" json:",omitempty"`

	WithSub *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ListStreamRecordsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListStreamRecordsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListStreamRecordsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListStreamRecordsInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}
	if s.StreamID == nil {
		invalidParams.Add(request.NewErrParamRequired("StreamID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndTime sets the EndTime field's value.
func (s *ListStreamRecordsInput) SetEndTime(v int32) *ListStreamRecordsInput {
	s.EndTime = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListStreamRecordsInput) SetPageNumber(v string) *ListStreamRecordsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListStreamRecordsInput) SetPageSize(v string) *ListStreamRecordsInput {
	s.PageSize = &v
	return s
}

// SetReqType sets the ReqType field's value.
func (s *ListStreamRecordsInput) SetReqType(v string) *ListStreamRecordsInput {
	s.ReqType = &v
	return s
}

// SetResolution sets the Resolution field's value.
func (s *ListStreamRecordsInput) SetResolution(v string) *ListStreamRecordsInput {
	s.Resolution = &v
	return s
}

// SetSpaceID sets the SpaceID field's value.
func (s *ListStreamRecordsInput) SetSpaceID(v string) *ListStreamRecordsInput {
	s.SpaceID = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ListStreamRecordsInput) SetStartTime(v int32) *ListStreamRecordsInput {
	s.StartTime = &v
	return s
}

// SetStreamID sets the StreamID field's value.
func (s *ListStreamRecordsInput) SetStreamID(v string) *ListStreamRecordsInput {
	s.StreamID = &v
	return s
}

// SetStreamingIndex sets the StreamingIndex field's value.
func (s *ListStreamRecordsInput) SetStreamingIndex(v int32) *ListStreamRecordsInput {
	s.StreamingIndex = &v
	return s
}

// SetWithSub sets the WithSub field's value.
func (s *ListStreamRecordsInput) SetWithSub(v bool) *ListStreamRecordsInput {
	s.WithSub = &v
	return s
}

type ListStreamRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Path *string `type:"string" json:",omitempty"`

	Record *RecordForListStreamRecordsOutput `type:"structure" json:",omitempty"`

	RecordMeta *RecordMetaForListStreamRecordsOutput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListStreamRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListStreamRecordsOutput) GoString() string {
	return s.String()
}

// SetPath sets the Path field's value.
func (s *ListStreamRecordsOutput) SetPath(v string) *ListStreamRecordsOutput {
	s.Path = &v
	return s
}

// SetRecord sets the Record field's value.
func (s *ListStreamRecordsOutput) SetRecord(v *RecordForListStreamRecordsOutput) *ListStreamRecordsOutput {
	s.Record = v
	return s
}

// SetRecordMeta sets the RecordMeta field's value.
func (s *ListStreamRecordsOutput) SetRecordMeta(v *RecordMetaForListStreamRecordsOutput) *ListStreamRecordsOutput {
	s.RecordMeta = v
	return s
}

// SetType sets the Type field's value.
func (s *ListStreamRecordsOutput) SetType(v string) *ListStreamRecordsOutput {
	s.Type = &v
	return s
}

type RecordForListStreamRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Duration *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	Format *string `type:"string" json:",omitempty"`

	StartTime *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s RecordForListStreamRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordForListStreamRecordsOutput) GoString() string {
	return s.String()
}

// SetDuration sets the Duration field's value.
func (s *RecordForListStreamRecordsOutput) SetDuration(v int32) *RecordForListStreamRecordsOutput {
	s.Duration = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *RecordForListStreamRecordsOutput) SetEndTime(v int32) *RecordForListStreamRecordsOutput {
	s.EndTime = &v
	return s
}

// SetFormat sets the Format field's value.
func (s *RecordForListStreamRecordsOutput) SetFormat(v string) *RecordForListStreamRecordsOutput {
	s.Format = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *RecordForListStreamRecordsOutput) SetStartTime(v int32) *RecordForListStreamRecordsOutput {
	s.StartTime = &v
	return s
}

type RecordMetaForListStreamRecordsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bucket *string `type:"string" json:",omitempty"`

	Duration *int32 `type:"int32" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	Format *string `type:"string" json:",omitempty"`

	StartTime *int32 `type:"int32" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RecordMetaForListStreamRecordsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RecordMetaForListStreamRecordsOutput) GoString() string {
	return s.String()
}

// SetBucket sets the Bucket field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetBucket(v string) *RecordMetaForListStreamRecordsOutput {
	s.Bucket = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetDuration(v int32) *RecordMetaForListStreamRecordsOutput {
	s.Duration = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetEndTime(v int32) *RecordMetaForListStreamRecordsOutput {
	s.EndTime = &v
	return s
}

// SetFormat sets the Format field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetFormat(v string) *RecordMetaForListStreamRecordsOutput {
	s.Format = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetStartTime(v int32) *RecordMetaForListStreamRecordsOutput {
	s.StartTime = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *RecordMetaForListStreamRecordsOutput) SetStorageType(v string) *RecordMetaForListStreamRecordsOutput {
	s.StorageType = &v
	return s
}
