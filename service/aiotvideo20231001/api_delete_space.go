// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package aiotvideo20231001

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteSpaceCommon = "DeleteSpace"

// DeleteSpaceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSpaceCommon operation. The "output" return
// value will be populated with the DeleteSpaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSpaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSpaceCommon Send returns without error.
//
// See DeleteSpaceCommon for more information on using the DeleteSpaceCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteSpaceCommonRequest method.
//    req, resp := client.DeleteSpaceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) DeleteSpaceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteSpaceCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteSpaceCommon API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation DeleteSpaceCommon for usage and error information.
func (c *AIOTVIDEO20231001) DeleteSpaceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteSpaceCommonRequest(input)
	return out, req.Send()
}

// DeleteSpaceCommonWithContext is the same as DeleteSpaceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSpaceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) DeleteSpaceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteSpaceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSpace = "DeleteSpace"

// DeleteSpaceRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSpace operation. The "output" return
// value will be populated with the DeleteSpaceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSpaceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSpaceCommon Send returns without error.
//
// See DeleteSpace for more information on using the DeleteSpace
// API call, and error handling.
//
//    // Example sending a request using the DeleteSpaceRequest method.
//    req, resp := client.DeleteSpaceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *AIOTVIDEO20231001) DeleteSpaceRequest(input *DeleteSpaceInput) (req *request.Request, output *DeleteSpaceOutput) {
	op := &request.Operation{
		Name:       opDeleteSpace,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteSpaceInput{}
	}

	output = &DeleteSpaceOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteSpace API operation for AIOTVIDEO20231001.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for AIOTVIDEO20231001's
// API operation DeleteSpace for usage and error information.
func (c *AIOTVIDEO20231001) DeleteSpace(input *DeleteSpaceInput) (*DeleteSpaceOutput, error) {
	req, out := c.DeleteSpaceRequest(input)
	return out, req.Send()
}

// DeleteSpaceWithContext is the same as DeleteSpace with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSpace for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *AIOTVIDEO20231001) DeleteSpaceWithContext(ctx volcengine.Context, input *DeleteSpaceInput, opts ...request.Option) (*DeleteSpaceOutput, error) {
	req, out := c.DeleteSpaceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteSpaceInput struct {
	_ struct{} `type:"structure"`

	// SpaceID is a required field
	SpaceID *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteSpaceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSpaceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteSpaceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteSpaceInput"}
	if s.SpaceID == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetSpaceID sets the SpaceID field's value.
func (s *DeleteSpaceInput) SetSpaceID(v string) *DeleteSpaceInput {
	s.SpaceID = &v
	return s
}

type DeleteSpaceOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteSpaceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSpaceOutput) GoString() string {
	return s.String()
}
