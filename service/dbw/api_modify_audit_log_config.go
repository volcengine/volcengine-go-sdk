// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dbw

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyAuditLogConfigCommon = "ModifyAuditLogConfig"

// ModifyAuditLogConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyAuditLogConfigCommon operation. The "output" return
// value will be populated with the ModifyAuditLogConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyAuditLogConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyAuditLogConfigCommon Send returns without error.
//
// See ModifyAuditLogConfigCommon for more information on using the ModifyAuditLogConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyAuditLogConfigCommonRequest method.
//    req, resp := client.ModifyAuditLogConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) ModifyAuditLogConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyAuditLogConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyAuditLogConfigCommon API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation ModifyAuditLogConfigCommon for usage and error information.
func (c *DBW) ModifyAuditLogConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyAuditLogConfigCommonRequest(input)
	return out, req.Send()
}

// ModifyAuditLogConfigCommonWithContext is the same as ModifyAuditLogConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyAuditLogConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) ModifyAuditLogConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyAuditLogConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyAuditLogConfig = "ModifyAuditLogConfig"

// ModifyAuditLogConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyAuditLogConfig operation. The "output" return
// value will be populated with the ModifyAuditLogConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyAuditLogConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyAuditLogConfigCommon Send returns without error.
//
// See ModifyAuditLogConfig for more information on using the ModifyAuditLogConfig
// API call, and error handling.
//
//    // Example sending a request using the ModifyAuditLogConfigRequest method.
//    req, resp := client.ModifyAuditLogConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) ModifyAuditLogConfigRequest(input *ModifyAuditLogConfigInput) (req *request.Request, output *ModifyAuditLogConfigOutput) {
	op := &request.Operation{
		Name:       opModifyAuditLogConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyAuditLogConfigInput{}
	}

	output = &ModifyAuditLogConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyAuditLogConfig API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation ModifyAuditLogConfig for usage and error information.
func (c *DBW) ModifyAuditLogConfig(input *ModifyAuditLogConfigInput) (*ModifyAuditLogConfigOutput, error) {
	req, out := c.ModifyAuditLogConfigRequest(input)
	return out, req.Send()
}

// ModifyAuditLogConfigWithContext is the same as ModifyAuditLogConfig with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyAuditLogConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) ModifyAuditLogConfigWithContext(ctx volcengine.Context, input *ModifyAuditLogConfigInput, opts ...request.Option) (*ModifyAuditLogConfigOutput, error) {
	req, out := c.ModifyAuditLogConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyAuditLogConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceType is a required field
	InstanceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfInstanceTypeForModifyAuditLogConfigInput"`

	SqlRetentionDay *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ModifyAuditLogConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyAuditLogConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyAuditLogConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyAuditLogConfigInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.InstanceType == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyAuditLogConfigInput) SetInstanceId(v string) *ModifyAuditLogConfigInput {
	s.InstanceId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *ModifyAuditLogConfigInput) SetInstanceType(v string) *ModifyAuditLogConfigInput {
	s.InstanceType = &v
	return s
}

// SetSqlRetentionDay sets the SqlRetentionDay field's value.
func (s *ModifyAuditLogConfigInput) SetSqlRetentionDay(v int32) *ModifyAuditLogConfigInput {
	s.SqlRetentionDay = &v
	return s
}

type ModifyAuditLogConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyAuditLogConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyAuditLogConfigOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfInstanceTypeForModifyAuditLogConfigInputMySql is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMySql = "MySQL"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputPostgres is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputPostgres = "Postgres"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputMongo is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMongo = "Mongo"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputRedis is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputRedis = "Redis"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputVeDbmySql is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputVeDbmySql = "VeDBMySQL"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputMetaRds is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMetaRds = "MetaRDS"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputMssql is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMssql = "MSSQL"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputByteRds is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputByteRds = "ByteRDS"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputMySqlsharding is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMySqlsharding = "MySQLSharding"

	// EnumOfInstanceTypeForModifyAuditLogConfigInputMetaMySql is a EnumOfInstanceTypeForModifyAuditLogConfigInput enum value
	EnumOfInstanceTypeForModifyAuditLogConfigInputMetaMySql = "MetaMySQL"
)
