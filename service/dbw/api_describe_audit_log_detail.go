// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dbw

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeAuditLogDetailCommon = "DescribeAuditLogDetail"

// DescribeAuditLogDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAuditLogDetailCommon operation. The "output" return
// value will be populated with the DescribeAuditLogDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAuditLogDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAuditLogDetailCommon Send returns without error.
//
// See DescribeAuditLogDetailCommon for more information on using the DescribeAuditLogDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeAuditLogDetailCommonRequest method.
//    req, resp := client.DescribeAuditLogDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) DescribeAuditLogDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAuditLogDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAuditLogDetailCommon API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation DescribeAuditLogDetailCommon for usage and error information.
func (c *DBW) DescribeAuditLogDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAuditLogDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeAuditLogDetailCommonWithContext is the same as DescribeAuditLogDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAuditLogDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) DescribeAuditLogDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAuditLogDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAuditLogDetail = "DescribeAuditLogDetail"

// DescribeAuditLogDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAuditLogDetail operation. The "output" return
// value will be populated with the DescribeAuditLogDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAuditLogDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAuditLogDetailCommon Send returns without error.
//
// See DescribeAuditLogDetail for more information on using the DescribeAuditLogDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeAuditLogDetailRequest method.
//    req, resp := client.DescribeAuditLogDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DBW) DescribeAuditLogDetailRequest(input *DescribeAuditLogDetailInput) (req *request.Request, output *DescribeAuditLogDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeAuditLogDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAuditLogDetailInput{}
	}

	output = &DescribeAuditLogDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAuditLogDetail API operation for DBW.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DBW's
// API operation DescribeAuditLogDetail for usage and error information.
func (c *DBW) DescribeAuditLogDetail(input *DescribeAuditLogDetailInput) (*DescribeAuditLogDetailOutput, error) {
	req, out := c.DescribeAuditLogDetailRequest(input)
	return out, req.Send()
}

// DescribeAuditLogDetailWithContext is the same as DescribeAuditLogDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAuditLogDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DBW) DescribeAuditLogDetailWithContext(ctx volcengine.Context, input *DescribeAuditLogDetailInput, opts ...request.Option) (*DescribeAuditLogDetailOutput, error) {
	req, out := c.DescribeAuditLogDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeAuditLogDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndTime *int32 `type:"int32" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// InstanceType is a required field
	InstanceType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfInstanceTypeForDescribeAuditLogDetailInput"`

	LogVersion *string `type:"string" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	// RegionId is a required field
	RegionId *string `type:"string" json:",omitempty" required:"true"`

	SearchParam *SearchParamForDescribeAuditLogDetailInput `type:"structure" json:",omitempty"`

	StartTime *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAuditLogDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAuditLogDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeAuditLogDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeAuditLogDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.InstanceType == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceType"))
	}
	if s.RegionId == nil {
		invalidParams.Add(request.NewErrParamRequired("RegionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeAuditLogDetailInput) SetEndTime(v int32) *DescribeAuditLogDetailInput {
	s.EndTime = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeAuditLogDetailInput) SetInstanceId(v string) *DescribeAuditLogDetailInput {
	s.InstanceId = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DescribeAuditLogDetailInput) SetInstanceType(v string) *DescribeAuditLogDetailInput {
	s.InstanceType = &v
	return s
}

// SetLogVersion sets the LogVersion field's value.
func (s *DescribeAuditLogDetailInput) SetLogVersion(v string) *DescribeAuditLogDetailInput {
	s.LogVersion = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeAuditLogDetailInput) SetMaxResults(v int32) *DescribeAuditLogDetailInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeAuditLogDetailInput) SetNextToken(v string) *DescribeAuditLogDetailInput {
	s.NextToken = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeAuditLogDetailInput) SetRegionId(v string) *DescribeAuditLogDetailInput {
	s.RegionId = &v
	return s
}

// SetSearchParam sets the SearchParam field's value.
func (s *DescribeAuditLogDetailInput) SetSearchParam(v *SearchParamForDescribeAuditLogDetailInput) *DescribeAuditLogDetailInput {
	s.SearchParam = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeAuditLogDetailInput) SetStartTime(v int32) *DescribeAuditLogDetailInput {
	s.StartTime = &v
	return s
}

type DescribeAuditLogDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DescribeAuditLogDetailRows []*DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput `type:"list" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAuditLogDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAuditLogDetailOutput) GoString() string {
	return s.String()
}

// SetDescribeAuditLogDetailRows sets the DescribeAuditLogDetailRows field's value.
func (s *DescribeAuditLogDetailOutput) SetDescribeAuditLogDetailRows(v []*DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) *DescribeAuditLogDetailOutput {
	s.DescribeAuditLogDetailRows = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeAuditLogDetailOutput) SetNextToken(v string) *DescribeAuditLogDetailOutput {
	s.NextToken = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeAuditLogDetailOutput) SetTotalCount(v int32) *DescribeAuditLogDetailOutput {
	s.TotalCount = &v
	return s
}

type DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AffectRow *int32 `type:"int32" json:",omitempty"`

	DB *string `type:"string" json:",omitempty"`

	Duration *int32 `type:"int32" json:",omitempty"`

	ExecTime *int32 `type:"int32" json:",omitempty"`

	LogLevel *string `type:"string" json:",omitempty"`

	LogType *string `type:"string" json:",omitempty"`

	NodeId *string `type:"string" json:",omitempty"`

	OriSql *string `type:"string" json:",omitempty"`

	ReturnRows *int32 `type:"int32" json:",omitempty"`

	ScanRows *int32 `type:"int32" json:",omitempty"`

	SourceIP *string `type:"string" json:",omitempty"`

	SqlFingerprint *string `type:"string" json:",omitempty"`

	SqlMethod *string `type:"string" json:",omitempty"`

	Table *string `type:"string" json:",omitempty"`

	User *string `type:"string" json:",omitempty"`

	WaitLockConsumingTime *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) GoString() string {
	return s.String()
}

// SetAffectRow sets the AffectRow field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetAffectRow(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.AffectRow = &v
	return s
}

// SetDB sets the DB field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetDB(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.DB = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetDuration(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.Duration = &v
	return s
}

// SetExecTime sets the ExecTime field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetExecTime(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.ExecTime = &v
	return s
}

// SetLogLevel sets the LogLevel field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetLogLevel(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.LogLevel = &v
	return s
}

// SetLogType sets the LogType field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetLogType(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.LogType = &v
	return s
}

// SetNodeId sets the NodeId field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetNodeId(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.NodeId = &v
	return s
}

// SetOriSql sets the OriSql field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetOriSql(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.OriSql = &v
	return s
}

// SetReturnRows sets the ReturnRows field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetReturnRows(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.ReturnRows = &v
	return s
}

// SetScanRows sets the ScanRows field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetScanRows(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.ScanRows = &v
	return s
}

// SetSourceIP sets the SourceIP field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetSourceIP(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.SourceIP = &v
	return s
}

// SetSqlFingerprint sets the SqlFingerprint field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetSqlFingerprint(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.SqlFingerprint = &v
	return s
}

// SetSqlMethod sets the SqlMethod field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetSqlMethod(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.SqlMethod = &v
	return s
}

// SetTable sets the Table field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetTable(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.Table = &v
	return s
}

// SetUser sets the User field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetUser(v string) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.User = &v
	return s
}

// SetWaitLockConsumingTime sets the WaitLockConsumingTime field's value.
func (s *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput) SetWaitLockConsumingTime(v int32) *DescribeAuditLogDetailRowForDescribeAuditLogDetailOutput {
	s.WaitLockConsumingTime = &v
	return s
}

type SearchParamForDescribeAuditLogDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AffectRowDown *int32 `type:"int32" json:",omitempty"`

	AffectRowUp *int32 `type:"int32" json:",omitempty"`

	DBs []*string `type:"list" json:",omitempty"`

	DuringDown *int64 `type:"int64" json:",omitempty"`

	DuringUp *int64 `type:"int64" json:",omitempty"`

	LogLevels []*string `type:"list" json:",omitempty"`

	LogType []*string `type:"list" json:",omitempty"`

	NodeId *string `type:"string" json:",omitempty"`

	SourceIPs []*string `type:"list" json:",omitempty"`

	SqlFingerprint *string `type:"string" json:",omitempty"`

	SqlMethods []*string `type:"list" json:",omitempty"`

	Tables []*string `type:"list" json:",omitempty"`

	Users []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SearchParamForDescribeAuditLogDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SearchParamForDescribeAuditLogDetailInput) GoString() string {
	return s.String()
}

// SetAffectRowDown sets the AffectRowDown field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetAffectRowDown(v int32) *SearchParamForDescribeAuditLogDetailInput {
	s.AffectRowDown = &v
	return s
}

// SetAffectRowUp sets the AffectRowUp field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetAffectRowUp(v int32) *SearchParamForDescribeAuditLogDetailInput {
	s.AffectRowUp = &v
	return s
}

// SetDBs sets the DBs field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetDBs(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.DBs = v
	return s
}

// SetDuringDown sets the DuringDown field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetDuringDown(v int64) *SearchParamForDescribeAuditLogDetailInput {
	s.DuringDown = &v
	return s
}

// SetDuringUp sets the DuringUp field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetDuringUp(v int64) *SearchParamForDescribeAuditLogDetailInput {
	s.DuringUp = &v
	return s
}

// SetLogLevels sets the LogLevels field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetLogLevels(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.LogLevels = v
	return s
}

// SetLogType sets the LogType field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetLogType(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.LogType = v
	return s
}

// SetNodeId sets the NodeId field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetNodeId(v string) *SearchParamForDescribeAuditLogDetailInput {
	s.NodeId = &v
	return s
}

// SetSourceIPs sets the SourceIPs field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetSourceIPs(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.SourceIPs = v
	return s
}

// SetSqlFingerprint sets the SqlFingerprint field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetSqlFingerprint(v string) *SearchParamForDescribeAuditLogDetailInput {
	s.SqlFingerprint = &v
	return s
}

// SetSqlMethods sets the SqlMethods field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetSqlMethods(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.SqlMethods = v
	return s
}

// SetTables sets the Tables field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetTables(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.Tables = v
	return s
}

// SetUsers sets the Users field's value.
func (s *SearchParamForDescribeAuditLogDetailInput) SetUsers(v []*string) *SearchParamForDescribeAuditLogDetailInput {
	s.Users = v
	return s
}

const (
	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMySql is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMySql = "MySQL"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputPostgres is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputPostgres = "Postgres"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMongo is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMongo = "Mongo"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputRedis is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputRedis = "Redis"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputVeDbmySql is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputVeDbmySql = "VeDBMySQL"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMetaRds is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMetaRds = "MetaRDS"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMssql is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMssql = "MSSQL"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputByteRds is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputByteRds = "ByteRDS"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMySqlsharding is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMySqlsharding = "MySQLSharding"

	// EnumOfInstanceTypeForDescribeAuditLogDetailInputMetaMySql is a EnumOfInstanceTypeForDescribeAuditLogDetailInput enum value
	EnumOfInstanceTypeForDescribeAuditLogDetailInputMetaMySql = "MetaMySQL"
)

const (
	// EnumOfLogLevelListForDescribeAuditLogDetailInputNormal is a EnumOfLogLevelListForDescribeAuditLogDetailInput enum value
	EnumOfLogLevelListForDescribeAuditLogDetailInputNormal = "Normal"

	// EnumOfLogLevelListForDescribeAuditLogDetailInputIncident is a EnumOfLogLevelListForDescribeAuditLogDetailInput enum value
	EnumOfLogLevelListForDescribeAuditLogDetailInputIncident = "Incident"

	// EnumOfLogLevelListForDescribeAuditLogDetailInputWarning is a EnumOfLogLevelListForDescribeAuditLogDetailInput enum value
	EnumOfLogLevelListForDescribeAuditLogDetailInputWarning = "Warning"
)

const (
	// EnumOfSqlMethodListForDescribeAuditLogDetailInputSelect is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputSelect = "SELECT"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputInsert is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputInsert = "INSERT"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputUpdate is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputUpdate = "UPDATE"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputDelete is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputDelete = "DELETE"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputAlter is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputAlter = "ALTER"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputCreate is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputCreate = "CREATE"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputDrop is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputDrop = "DROP"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputRename is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputRename = "RENAME"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputTruncate is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputTruncate = "TRUNCATE"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputLogin is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputLogin = "LOGIN"

	// EnumOfSqlMethodListForDescribeAuditLogDetailInputLogout is a EnumOfSqlMethodListForDescribeAuditLogDetailInput enum value
	EnumOfSqlMethodListForDescribeAuditLogDetailInputLogout = "LOGOUT"
)
