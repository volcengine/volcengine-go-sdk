// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListLLModelsV2Common = "ListLLModelsV2"

// ListLLModelsV2CommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListLLModelsV2Common operation. The "output" return
// value will be populated with the ListLLModelsV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListLLModelsV2Common Request to send the API call to the service.
// the "output" return value is not valid until after ListLLModelsV2Common Send returns without error.
//
// See ListLLModelsV2Common for more information on using the ListLLModelsV2Common
// API call, and error handling.
//
//    // Example sending a request using the ListLLModelsV2CommonRequest method.
//    req, resp := client.ListLLModelsV2CommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListLLModelsV2CommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListLLModelsV2Common,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListLLModelsV2Common API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListLLModelsV2Common for usage and error information.
func (c *VEIAPI) ListLLModelsV2Common(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListLLModelsV2CommonRequest(input)
	return out, req.Send()
}

// ListLLModelsV2CommonWithContext is the same as ListLLModelsV2Common with the addition of
// the ability to pass a context and additional request options.
//
// See ListLLModelsV2Common for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListLLModelsV2CommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListLLModelsV2CommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListLLModelsV2 = "ListLLModelsV2"

// ListLLModelsV2Request generates a "volcengine/request.Request" representing the
// client's request for the ListLLModelsV2 operation. The "output" return
// value will be populated with the ListLLModelsV2Common request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListLLModelsV2Common Request to send the API call to the service.
// the "output" return value is not valid until after ListLLModelsV2Common Send returns without error.
//
// See ListLLModelsV2 for more information on using the ListLLModelsV2
// API call, and error handling.
//
//    // Example sending a request using the ListLLModelsV2Request method.
//    req, resp := client.ListLLModelsV2Request(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListLLModelsV2Request(input *ListLLModelsV2Input) (req *request.Request, output *ListLLModelsV2Output) {
	op := &request.Operation{
		Name:       opListLLModelsV2,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListLLModelsV2Input{}
	}

	output = &ListLLModelsV2Output{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListLLModelsV2 API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListLLModelsV2 for usage and error information.
func (c *VEIAPI) ListLLModelsV2(input *ListLLModelsV2Input) (*ListLLModelsV2Output, error) {
	req, out := c.ListLLModelsV2Request(input)
	return out, req.Send()
}

// ListLLModelsV2WithContext is the same as ListLLModelsV2 with the addition of
// the ability to pass a context and additional request options.
//
// See ListLLModelsV2 for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListLLModelsV2WithContext(ctx volcengine.Context, input *ListLLModelsV2Input, opts ...request.Option) (*ListLLModelsV2Output, error) {
	req, out := c.ListLLModelsV2Request(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListLLModelsV2Input struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *int32 `type:"int32" json:"category,omitempty"`

	Channel_source *int32 `type:"int32" json:"channel_source,omitempty"`

	Model *string `type:"string" json:"model,omitempty"`

	Provider *string `type:"string" json:"provider,omitempty"`

	Tags []*string `type:"list" json:"tags,omitempty"`
}

// String returns the string representation
func (s FilterForListLLModelsV2Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListLLModelsV2Input) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *FilterForListLLModelsV2Input) SetCategory(v int32) *FilterForListLLModelsV2Input {
	s.Category = &v
	return s
}

// SetChannel_source sets the Channel_source field's value.
func (s *FilterForListLLModelsV2Input) SetChannel_source(v int32) *FilterForListLLModelsV2Input {
	s.Channel_source = &v
	return s
}

// SetModel sets the Model field's value.
func (s *FilterForListLLModelsV2Input) SetModel(v string) *FilterForListLLModelsV2Input {
	s.Model = &v
	return s
}

// SetProvider sets the Provider field's value.
func (s *FilterForListLLModelsV2Input) SetProvider(v string) *FilterForListLLModelsV2Input {
	s.Provider = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *FilterForListLLModelsV2Input) SetTags(v []*string) *FilterForListLLModelsV2Input {
	s.Tags = v
	return s
}

type Iot_filterForListLLModelsV2Input struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Instance_id *string `type:"string" json:"instance_id,omitempty"`
}

// String returns the string representation
func (s Iot_filterForListLLModelsV2Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Iot_filterForListLLModelsV2Input) GoString() string {
	return s.String()
}

// SetInstance_id sets the Instance_id field's value.
func (s *Iot_filterForListLLModelsV2Input) SetInstance_id(v string) *Iot_filterForListLLModelsV2Input {
	s.Instance_id = &v
	return s
}

type ItemForListLLModelsV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Added_at *int64 `type:"int64" json:"added_at,omitempty"`

	Bill_type *int32 `type:"int32" json:"bill_type,omitempty"`

	Category *int32 `type:"int32" json:"category,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Model *string `type:"string" json:"model,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Provider *ProviderForListLLModelsV2Output `type:"structure" json:"provider,omitempty"`

	Status *int32 `type:"int32" json:"status,omitempty"`

	Tags []*string `type:"list" json:"tags,omitempty"`

	Usage *UsageForListLLModelsV2Output `type:"structure" json:"usage,omitempty"`
}

// String returns the string representation
func (s ItemForListLLModelsV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListLLModelsV2Output) GoString() string {
	return s.String()
}

// SetAdded_at sets the Added_at field's value.
func (s *ItemForListLLModelsV2Output) SetAdded_at(v int64) *ItemForListLLModelsV2Output {
	s.Added_at = &v
	return s
}

// SetBill_type sets the Bill_type field's value.
func (s *ItemForListLLModelsV2Output) SetBill_type(v int32) *ItemForListLLModelsV2Output {
	s.Bill_type = &v
	return s
}

// SetCategory sets the Category field's value.
func (s *ItemForListLLModelsV2Output) SetCategory(v int32) *ItemForListLLModelsV2Output {
	s.Category = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListLLModelsV2Output) SetId(v string) *ItemForListLLModelsV2Output {
	s.Id = &v
	return s
}

// SetModel sets the Model field's value.
func (s *ItemForListLLModelsV2Output) SetModel(v string) *ItemForListLLModelsV2Output {
	s.Model = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListLLModelsV2Output) SetName(v string) *ItemForListLLModelsV2Output {
	s.Name = &v
	return s
}

// SetProvider sets the Provider field's value.
func (s *ItemForListLLModelsV2Output) SetProvider(v *ProviderForListLLModelsV2Output) *ItemForListLLModelsV2Output {
	s.Provider = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListLLModelsV2Output) SetStatus(v int32) *ItemForListLLModelsV2Output {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ItemForListLLModelsV2Output) SetTags(v []*string) *ItemForListLLModelsV2Output {
	s.Tags = v
	return s
}

// SetUsage sets the Usage field's value.
func (s *ItemForListLLModelsV2Output) SetUsage(v *UsageForListLLModelsV2Output) *ItemForListLLModelsV2Output {
	s.Usage = v
	return s
}

type ListLLModelsV2Input struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListLLModelsV2Input `type:"structure" json:"filter,omitempty"`

	Iot_filter *Iot_filterForListLLModelsV2Input `type:"structure" json:"iot_filter,omitempty"`

	// Page_index is a required field
	Page_index *int32 `type:"int32" json:"page_index,omitempty" required:"true"`

	// Page_size is a required field
	Page_size *int32 `type:"int32" json:"page_size,omitempty" required:"true"`
}

// String returns the string representation
func (s ListLLModelsV2Input) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListLLModelsV2Input) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListLLModelsV2Input) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListLLModelsV2Input"}
	if s.Page_index == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_index"))
	}
	if s.Page_size == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_size"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListLLModelsV2Input) SetFilter(v *FilterForListLLModelsV2Input) *ListLLModelsV2Input {
	s.Filter = v
	return s
}

// SetIot_filter sets the Iot_filter field's value.
func (s *ListLLModelsV2Input) SetIot_filter(v *Iot_filterForListLLModelsV2Input) *ListLLModelsV2Input {
	s.Iot_filter = v
	return s
}

// SetPage_index sets the Page_index field's value.
func (s *ListLLModelsV2Input) SetPage_index(v int32) *ListLLModelsV2Input {
	s.Page_index = &v
	return s
}

// SetPage_size sets the Page_size field's value.
func (s *ListLLModelsV2Input) SetPage_size(v int32) *ListLLModelsV2Input {
	s.Page_size = &v
	return s
}

type ListLLModelsV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListLLModelsV2Output `type:"list" json:"items,omitempty"`

	Pageinator *PageinatorForListLLModelsV2Output `type:"structure" json:"pageinator,omitempty"`
}

// String returns the string representation
func (s ListLLModelsV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListLLModelsV2Output) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListLLModelsV2Output) SetItems(v []*ItemForListLLModelsV2Output) *ListLLModelsV2Output {
	s.Items = v
	return s
}

// SetPageinator sets the Pageinator field's value.
func (s *ListLLModelsV2Output) SetPageinator(v *PageinatorForListLLModelsV2Output) *ListLLModelsV2Output {
	s.Pageinator = v
	return s
}

type PageinatorForListLLModelsV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Index *int32 `type:"int32" json:"index,omitempty"`

	Size *int32 `type:"int32" json:"size,omitempty"`

	Total_items *int32 `type:"int32" json:"total_items,omitempty"`

	Total_pages *int32 `type:"int32" json:"total_pages,omitempty"`
}

// String returns the string representation
func (s PageinatorForListLLModelsV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PageinatorForListLLModelsV2Output) GoString() string {
	return s.String()
}

// SetIndex sets the Index field's value.
func (s *PageinatorForListLLModelsV2Output) SetIndex(v int32) *PageinatorForListLLModelsV2Output {
	s.Index = &v
	return s
}

// SetSize sets the Size field's value.
func (s *PageinatorForListLLModelsV2Output) SetSize(v int32) *PageinatorForListLLModelsV2Output {
	s.Size = &v
	return s
}

// SetTotal_items sets the Total_items field's value.
func (s *PageinatorForListLLModelsV2Output) SetTotal_items(v int32) *PageinatorForListLLModelsV2Output {
	s.Total_items = &v
	return s
}

// SetTotal_pages sets the Total_pages field's value.
func (s *PageinatorForListLLModelsV2Output) SetTotal_pages(v int32) *PageinatorForListLLModelsV2Output {
	s.Total_pages = &v
	return s
}

type ProviderForListLLModelsV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Channel_source *int32 `type:"int32" json:"channel_source,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s ProviderForListLLModelsV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderForListLLModelsV2Output) GoString() string {
	return s.String()
}

// SetChannel_source sets the Channel_source field's value.
func (s *ProviderForListLLModelsV2Output) SetChannel_source(v int32) *ProviderForListLLModelsV2Output {
	s.Channel_source = &v
	return s
}

// SetId sets the Id field's value.
func (s *ProviderForListLLModelsV2Output) SetId(v string) *ProviderForListLLModelsV2Output {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ProviderForListLLModelsV2Output) SetName(v string) *ProviderForListLLModelsV2Output {
	s.Name = &v
	return s
}

type UsageForListLLModelsV2Output struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cached_completion_usage *int64 `type:"int64" json:"cached_completion_usage,omitempty"`

	Cached_prompt_usage *int64 `type:"int64" json:"cached_prompt_usage,omitempty"`

	Cached_total_usage *int64 `type:"int64" json:"cached_total_usage,omitempty"`

	Character *int64 `type:"int64" json:"character,omitempty"`

	Completion_usage *int64 `type:"int64" json:"completion_usage,omitempty"`

	Duration *float64 `type:"double" json:"duration,omitempty"`

	Prompt_usage *int64 `type:"int64" json:"prompt_usage,omitempty"`

	Request *int64 `type:"int64" json:"request,omitempty"`

	Total_usage *int64 `type:"int64" json:"total_usage,omitempty"`
}

// String returns the string representation
func (s UsageForListLLModelsV2Output) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UsageForListLLModelsV2Output) GoString() string {
	return s.String()
}

// SetCached_completion_usage sets the Cached_completion_usage field's value.
func (s *UsageForListLLModelsV2Output) SetCached_completion_usage(v int64) *UsageForListLLModelsV2Output {
	s.Cached_completion_usage = &v
	return s
}

// SetCached_prompt_usage sets the Cached_prompt_usage field's value.
func (s *UsageForListLLModelsV2Output) SetCached_prompt_usage(v int64) *UsageForListLLModelsV2Output {
	s.Cached_prompt_usage = &v
	return s
}

// SetCached_total_usage sets the Cached_total_usage field's value.
func (s *UsageForListLLModelsV2Output) SetCached_total_usage(v int64) *UsageForListLLModelsV2Output {
	s.Cached_total_usage = &v
	return s
}

// SetCharacter sets the Character field's value.
func (s *UsageForListLLModelsV2Output) SetCharacter(v int64) *UsageForListLLModelsV2Output {
	s.Character = &v
	return s
}

// SetCompletion_usage sets the Completion_usage field's value.
func (s *UsageForListLLModelsV2Output) SetCompletion_usage(v int64) *UsageForListLLModelsV2Output {
	s.Completion_usage = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *UsageForListLLModelsV2Output) SetDuration(v float64) *UsageForListLLModelsV2Output {
	s.Duration = &v
	return s
}

// SetPrompt_usage sets the Prompt_usage field's value.
func (s *UsageForListLLModelsV2Output) SetPrompt_usage(v int64) *UsageForListLLModelsV2Output {
	s.Prompt_usage = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *UsageForListLLModelsV2Output) SetRequest(v int64) *UsageForListLLModelsV2Output {
	s.Request = &v
	return s
}

// SetTotal_usage sets the Total_usage field's value.
func (s *UsageForListLLModelsV2Output) SetTotal_usage(v int64) *UsageForListLLModelsV2Output {
	s.Total_usage = &v
	return s
}
