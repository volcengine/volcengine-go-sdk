// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListNodeGroupCommon = "ListNodeGroup"

// ListNodeGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListNodeGroupCommon operation. The "output" return
// value will be populated with the ListNodeGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNodeGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNodeGroupCommon Send returns without error.
//
// See ListNodeGroupCommon for more information on using the ListNodeGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the ListNodeGroupCommonRequest method.
//    req, resp := client.ListNodeGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListNodeGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListNodeGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNodeGroupCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListNodeGroupCommon for usage and error information.
func (c *VEIAPI) ListNodeGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListNodeGroupCommonRequest(input)
	return out, req.Send()
}

// ListNodeGroupCommonWithContext is the same as ListNodeGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListNodeGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListNodeGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListNodeGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListNodeGroup = "ListNodeGroup"

// ListNodeGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the ListNodeGroup operation. The "output" return
// value will be populated with the ListNodeGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListNodeGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListNodeGroupCommon Send returns without error.
//
// See ListNodeGroup for more information on using the ListNodeGroup
// API call, and error handling.
//
//    // Example sending a request using the ListNodeGroupRequest method.
//    req, resp := client.ListNodeGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListNodeGroupRequest(input *ListNodeGroupInput) (req *request.Request, output *ListNodeGroupOutput) {
	op := &request.Operation{
		Name:       opListNodeGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListNodeGroupInput{}
	}

	output = &ListNodeGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListNodeGroup API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListNodeGroup for usage and error information.
func (c *VEIAPI) ListNodeGroup(input *ListNodeGroupInput) (*ListNodeGroupOutput, error) {
	req, out := c.ListNodeGroupRequest(input)
	return out, req.Send()
}

// ListNodeGroupWithContext is the same as ListNodeGroup with the addition of
// the ability to pass a context and additional request options.
//
// See ListNodeGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListNodeGroupWithContext(ctx volcengine.Context, input *ListNodeGroupInput, opts ...request.Option) (*ListNodeGroupOutput, error) {
	req, out := c.ListNodeGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListNodeGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectID *string `type:"string" json:"projectID,omitempty"`
}

// String returns the string representation
func (s ListNodeGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNodeGroupInput) GoString() string {
	return s.String()
}

// SetProjectID sets the ProjectID field's value.
func (s *ListNodeGroupInput) SetProjectID(v string) *ListNodeGroupInput {
	s.ProjectID = &v
	return s
}

type ListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NodeGroups []*NodeGroupForListNodeGroupOutput `type:"list" json:"nodeGroups,omitempty"`
}

// String returns the string representation
func (s ListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListNodeGroupOutput) GoString() string {
	return s.String()
}

// SetNodeGroups sets the NodeGroups field's value.
func (s *ListNodeGroupOutput) SetNodeGroups(v []*NodeGroupForListNodeGroupOutput) *ListNodeGroupOutput {
	s.NodeGroups = v
	return s
}

type MetaForListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:"createdAt,omitempty"`

	DeletedAt *int64 `type:"int64" json:"deletedAt,omitempty"`

	UpdatedAt *int64 `type:"int64" json:"updatedAt,omitempty"`
}

// String returns the string representation
func (s MetaForListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetaForListNodeGroupOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *MetaForListNodeGroupOutput) SetCreatedAt(v int64) *MetaForListNodeGroupOutput {
	s.CreatedAt = &v
	return s
}

// SetDeletedAt sets the DeletedAt field's value.
func (s *MetaForListNodeGroupOutput) SetDeletedAt(v int64) *MetaForListNodeGroupOutput {
	s.DeletedAt = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *MetaForListNodeGroupOutput) SetUpdatedAt(v int64) *MetaForListNodeGroupOutput {
	s.UpdatedAt = &v
	return s
}

type NodeGroupForListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:"description,omitempty"`

	Meta *MetaForListNodeGroupOutput `type:"structure" json:"meta,omitempty"`

	NodeGroupID *string `type:"string" json:"nodeGroupID,omitempty"`

	NodeGroupName *string `type:"string" json:"nodeGroupName,omitempty"`

	NodeInfos []*NodeInfoForListNodeGroupOutput `type:"list" json:"nodeInfos,omitempty"`

	NodeStatusOverview *NodeStatusOverviewForListNodeGroupOutput `type:"structure" json:"nodeStatusOverview,omitempty"`

	Node_available_cpu *string `type:"string" json:"node_available_cpu,omitempty"`

	Node_available_mem *int64 `type:"int64" json:"node_available_mem,omitempty"`

	ProjectID *string `type:"string" json:"projectID,omitempty"`

	Tags *TagsForListNodeGroupOutput `type:"structure" json:"tags,omitempty"`
}

// String returns the string representation
func (s NodeGroupForListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeGroupForListNodeGroupOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *NodeGroupForListNodeGroupOutput) SetDescription(v string) *NodeGroupForListNodeGroupOutput {
	s.Description = &v
	return s
}

// SetMeta sets the Meta field's value.
func (s *NodeGroupForListNodeGroupOutput) SetMeta(v *MetaForListNodeGroupOutput) *NodeGroupForListNodeGroupOutput {
	s.Meta = v
	return s
}

// SetNodeGroupID sets the NodeGroupID field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNodeGroupID(v string) *NodeGroupForListNodeGroupOutput {
	s.NodeGroupID = &v
	return s
}

// SetNodeGroupName sets the NodeGroupName field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNodeGroupName(v string) *NodeGroupForListNodeGroupOutput {
	s.NodeGroupName = &v
	return s
}

// SetNodeInfos sets the NodeInfos field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNodeInfos(v []*NodeInfoForListNodeGroupOutput) *NodeGroupForListNodeGroupOutput {
	s.NodeInfos = v
	return s
}

// SetNodeStatusOverview sets the NodeStatusOverview field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNodeStatusOverview(v *NodeStatusOverviewForListNodeGroupOutput) *NodeGroupForListNodeGroupOutput {
	s.NodeStatusOverview = v
	return s
}

// SetNode_available_cpu sets the Node_available_cpu field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNode_available_cpu(v string) *NodeGroupForListNodeGroupOutput {
	s.Node_available_cpu = &v
	return s
}

// SetNode_available_mem sets the Node_available_mem field's value.
func (s *NodeGroupForListNodeGroupOutput) SetNode_available_mem(v int64) *NodeGroupForListNodeGroupOutput {
	s.Node_available_mem = &v
	return s
}

// SetProjectID sets the ProjectID field's value.
func (s *NodeGroupForListNodeGroupOutput) SetProjectID(v string) *NodeGroupForListNodeGroupOutput {
	s.ProjectID = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *NodeGroupForListNodeGroupOutput) SetTags(v *TagsForListNodeGroupOutput) *NodeGroupForListNodeGroupOutput {
	s.Tags = v
	return s
}

type NodeInfoForListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	NodeID *string `type:"string" json:"nodeID,omitempty"`

	NodeName *string `type:"string" json:"nodeName,omitempty"`

	NodeStatus *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s NodeInfoForListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeInfoForListNodeGroupOutput) GoString() string {
	return s.String()
}

// SetNodeID sets the NodeID field's value.
func (s *NodeInfoForListNodeGroupOutput) SetNodeID(v string) *NodeInfoForListNodeGroupOutput {
	s.NodeID = &v
	return s
}

// SetNodeName sets the NodeName field's value.
func (s *NodeInfoForListNodeGroupOutput) SetNodeName(v string) *NodeInfoForListNodeGroupOutput {
	s.NodeName = &v
	return s
}

// SetNodeStatus sets the NodeStatus field's value.
func (s *NodeInfoForListNodeGroupOutput) SetNodeStatus(v int64) *NodeInfoForListNodeGroupOutput {
	s.NodeStatus = &v
	return s
}

type NodeStatusOverviewForListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	_key *int64 `type:"int64" json:",omitempty"`

	_val *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s NodeStatusOverviewForListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeStatusOverviewForListNodeGroupOutput) GoString() string {
	return s.String()
}

// Set_key sets the _key field's value.
func (s *NodeStatusOverviewForListNodeGroupOutput) Set_key(v int64) *NodeStatusOverviewForListNodeGroupOutput {
	s._key = &v
	return s
}

// Set_val sets the _val field's value.
func (s *NodeStatusOverviewForListNodeGroupOutput) Set_val(v int64) *NodeStatusOverviewForListNodeGroupOutput {
	s._val = &v
	return s
}

type TagsForListNodeGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:"key,omitempty"`

	Value *string `type:"string" json:"value,omitempty"`
}

// String returns the string representation
func (s TagsForListNodeGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagsForListNodeGroupOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagsForListNodeGroupOutput) SetKey(v string) *TagsForListNodeGroupOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagsForListNodeGroupOutput) SetValue(v string) *TagsForListNodeGroupOutput {
	s.Value = &v
	return s
}
