// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateIotLlmTokenCommon = "CreateIotLlmToken"

// CreateIotLlmTokenCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateIotLlmTokenCommon operation. The "output" return
// value will be populated with the CreateIotLlmTokenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateIotLlmTokenCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateIotLlmTokenCommon Send returns without error.
//
// See CreateIotLlmTokenCommon for more information on using the CreateIotLlmTokenCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateIotLlmTokenCommonRequest method.
//    req, resp := client.CreateIotLlmTokenCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateIotLlmTokenCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateIotLlmTokenCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateIotLlmTokenCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateIotLlmTokenCommon for usage and error information.
func (c *VEIAPI) CreateIotLlmTokenCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateIotLlmTokenCommonRequest(input)
	return out, req.Send()
}

// CreateIotLlmTokenCommonWithContext is the same as CreateIotLlmTokenCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateIotLlmTokenCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateIotLlmTokenCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateIotLlmTokenCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateIotLlmToken = "CreateIotLlmToken"

// CreateIotLlmTokenRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateIotLlmToken operation. The "output" return
// value will be populated with the CreateIotLlmTokenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateIotLlmTokenCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateIotLlmTokenCommon Send returns without error.
//
// See CreateIotLlmToken for more information on using the CreateIotLlmToken
// API call, and error handling.
//
//    // Example sending a request using the CreateIotLlmTokenRequest method.
//    req, resp := client.CreateIotLlmTokenRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateIotLlmTokenRequest(input *CreateIotLlmTokenInput) (req *request.Request, output *CreateIotLlmTokenOutput) {
	op := &request.Operation{
		Name:       opCreateIotLlmToken,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateIotLlmTokenInput{}
	}

	output = &CreateIotLlmTokenOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateIotLlmToken API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateIotLlmToken for usage and error information.
func (c *VEIAPI) CreateIotLlmToken(input *CreateIotLlmTokenInput) (*CreateIotLlmTokenOutput, error) {
	req, out := c.CreateIotLlmTokenRequest(input)
	return out, req.Send()
}

// CreateIotLlmTokenWithContext is the same as CreateIotLlmToken with the addition of
// the ability to pass a context and additional request options.
//
// See CreateIotLlmToken for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateIotLlmTokenWithContext(ctx volcengine.Context, input *CreateIotLlmTokenInput, opts ...request.Option) (*CreateIotLlmTokenOutput, error) {
	req, out := c.CreateIotLlmTokenRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CharacterForCreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Count_limit *int64 `type:"int64" json:"count_limit,omitempty"`
}

// String returns the string representation
func (s CharacterForCreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CharacterForCreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// SetCount_limit sets the Count_limit field's value.
func (s *CharacterForCreateIotLlmTokenInput) SetCount_limit(v int64) *CharacterForCreateIotLlmTokenInput {
	s.Count_limit = &v
	return s
}

type CreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Available_devices is a required field
	Available_devices *int64 `type:"int64" json:"available_devices,omitempty" required:"true"`

	// Available_online_devices is a required field
	Available_online_devices *int64 `type:"int64" json:"available_online_devices,omitempty" required:"true"`

	// Instance_id is a required field
	Instance_id *string `type:"string" json:"instance_id,omitempty" required:"true"`

	// Instance_name is a required field
	Instance_name *string `type:"string" json:"instance_name,omitempty" required:"true"`

	// Instance_region is a required field
	Instance_region *string `type:"string" json:"instance_region,omitempty" required:"true"`

	// Instance_spec is a required field
	Instance_spec *string `type:"string" json:"instance_spec,omitempty" required:"true"`

	// Mqtt_broker is a required field
	Mqtt_broker *string `type:"string" json:"mqtt_broker,omitempty" required:"true"`

	// Password is a required field
	Password *string `type:"string" json:"password,omitempty" required:"true"`

	Quota *QuotaForCreateIotLlmTokenInput `type:"structure" json:"quota,omitempty"`

	// Username is a required field
	Username *string `type:"string" json:"username,omitempty" required:"true"`
}

// String returns the string representation
func (s CreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateIotLlmTokenInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateIotLlmTokenInput"}
	if s.Available_devices == nil {
		invalidParams.Add(request.NewErrParamRequired("Available_devices"))
	}
	if s.Available_online_devices == nil {
		invalidParams.Add(request.NewErrParamRequired("Available_online_devices"))
	}
	if s.Instance_id == nil {
		invalidParams.Add(request.NewErrParamRequired("Instance_id"))
	}
	if s.Instance_name == nil {
		invalidParams.Add(request.NewErrParamRequired("Instance_name"))
	}
	if s.Instance_region == nil {
		invalidParams.Add(request.NewErrParamRequired("Instance_region"))
	}
	if s.Instance_spec == nil {
		invalidParams.Add(request.NewErrParamRequired("Instance_spec"))
	}
	if s.Mqtt_broker == nil {
		invalidParams.Add(request.NewErrParamRequired("Mqtt_broker"))
	}
	if s.Password == nil {
		invalidParams.Add(request.NewErrParamRequired("Password"))
	}
	if s.Username == nil {
		invalidParams.Add(request.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAvailable_devices sets the Available_devices field's value.
func (s *CreateIotLlmTokenInput) SetAvailable_devices(v int64) *CreateIotLlmTokenInput {
	s.Available_devices = &v
	return s
}

// SetAvailable_online_devices sets the Available_online_devices field's value.
func (s *CreateIotLlmTokenInput) SetAvailable_online_devices(v int64) *CreateIotLlmTokenInput {
	s.Available_online_devices = &v
	return s
}

// SetInstance_id sets the Instance_id field's value.
func (s *CreateIotLlmTokenInput) SetInstance_id(v string) *CreateIotLlmTokenInput {
	s.Instance_id = &v
	return s
}

// SetInstance_name sets the Instance_name field's value.
func (s *CreateIotLlmTokenInput) SetInstance_name(v string) *CreateIotLlmTokenInput {
	s.Instance_name = &v
	return s
}

// SetInstance_region sets the Instance_region field's value.
func (s *CreateIotLlmTokenInput) SetInstance_region(v string) *CreateIotLlmTokenInput {
	s.Instance_region = &v
	return s
}

// SetInstance_spec sets the Instance_spec field's value.
func (s *CreateIotLlmTokenInput) SetInstance_spec(v string) *CreateIotLlmTokenInput {
	s.Instance_spec = &v
	return s
}

// SetMqtt_broker sets the Mqtt_broker field's value.
func (s *CreateIotLlmTokenInput) SetMqtt_broker(v string) *CreateIotLlmTokenInput {
	s.Mqtt_broker = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CreateIotLlmTokenInput) SetPassword(v string) *CreateIotLlmTokenInput {
	s.Password = &v
	return s
}

// SetQuota sets the Quota field's value.
func (s *CreateIotLlmTokenInput) SetQuota(v *QuotaForCreateIotLlmTokenInput) *CreateIotLlmTokenInput {
	s.Quota = v
	return s
}

// SetUsername sets the Username field's value.
func (s *CreateIotLlmTokenInput) SetUsername(v string) *CreateIotLlmTokenInput {
	s.Username = &v
	return s
}

type CreateIotLlmTokenOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Token *TokenForCreateIotLlmTokenOutput `type:"structure" json:"token,omitempty"`
}

// String returns the string representation
func (s CreateIotLlmTokenOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateIotLlmTokenOutput) GoString() string {
	return s.String()
}

// SetToken sets the Token field's value.
func (s *CreateIotLlmTokenOutput) SetToken(v *TokenForCreateIotLlmTokenOutput) *CreateIotLlmTokenOutput {
	s.Token = v
	return s
}

type DurationForCreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Duration_limit *float64 `type:"double" json:"duration_limit,omitempty"`
}

// String returns the string representation
func (s DurationForCreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DurationForCreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// SetDuration_limit sets the Duration_limit field's value.
func (s *DurationForCreateIotLlmTokenInput) SetDuration_limit(v float64) *DurationForCreateIotLlmTokenInput {
	s.Duration_limit = &v
	return s
}

type QuotaForCreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Character *CharacterForCreateIotLlmTokenInput `type:"structure" json:"character,omitempty"`

	Duration *DurationForCreateIotLlmTokenInput `type:"structure" json:"duration,omitempty"`

	Request *RequestForCreateIotLlmTokenInput `type:"structure" json:"request,omitempty"`

	Token *TokenForCreateIotLlmTokenInput `type:"structure" json:"token,omitempty"`
}

// String returns the string representation
func (s QuotaForCreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuotaForCreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// SetCharacter sets the Character field's value.
func (s *QuotaForCreateIotLlmTokenInput) SetCharacter(v *CharacterForCreateIotLlmTokenInput) *QuotaForCreateIotLlmTokenInput {
	s.Character = v
	return s
}

// SetDuration sets the Duration field's value.
func (s *QuotaForCreateIotLlmTokenInput) SetDuration(v *DurationForCreateIotLlmTokenInput) *QuotaForCreateIotLlmTokenInput {
	s.Duration = v
	return s
}

// SetRequest sets the Request field's value.
func (s *QuotaForCreateIotLlmTokenInput) SetRequest(v *RequestForCreateIotLlmTokenInput) *QuotaForCreateIotLlmTokenInput {
	s.Request = v
	return s
}

// SetToken sets the Token field's value.
func (s *QuotaForCreateIotLlmTokenInput) SetToken(v *TokenForCreateIotLlmTokenInput) *QuotaForCreateIotLlmTokenInput {
	s.Token = v
	return s
}

type RequestForCreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Count_limit *int64 `type:"int64" json:"count_limit,omitempty"`
}

// String returns the string representation
func (s RequestForCreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RequestForCreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// SetCount_limit sets the Count_limit field's value.
func (s *RequestForCreateIotLlmTokenInput) SetCount_limit(v int64) *RequestForCreateIotLlmTokenInput {
	s.Count_limit = &v
	return s
}

type TokenForCreateIotLlmTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Completion_limit *int64 `type:"int64" json:"completion_limit,omitempty"`

	Prompt_limit *int64 `type:"int64" json:"prompt_limit,omitempty"`

	Total_limit *int64 `type:"int64" json:"total_limit,omitempty"`
}

// String returns the string representation
func (s TokenForCreateIotLlmTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TokenForCreateIotLlmTokenInput) GoString() string {
	return s.String()
}

// SetCompletion_limit sets the Completion_limit field's value.
func (s *TokenForCreateIotLlmTokenInput) SetCompletion_limit(v int64) *TokenForCreateIotLlmTokenInput {
	s.Completion_limit = &v
	return s
}

// SetPrompt_limit sets the Prompt_limit field's value.
func (s *TokenForCreateIotLlmTokenInput) SetPrompt_limit(v int64) *TokenForCreateIotLlmTokenInput {
	s.Prompt_limit = &v
	return s
}

// SetTotal_limit sets the Total_limit field's value.
func (s *TokenForCreateIotLlmTokenInput) SetTotal_limit(v int64) *TokenForCreateIotLlmTokenInput {
	s.Total_limit = &v
	return s
}

type TokenForCreateIotLlmTokenOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Gtm *string `type:"string" json:"gtm,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Value *string `type:"string" json:"value,omitempty"`
}

// String returns the string representation
func (s TokenForCreateIotLlmTokenOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TokenForCreateIotLlmTokenOutput) GoString() string {
	return s.String()
}

// SetGtm sets the Gtm field's value.
func (s *TokenForCreateIotLlmTokenOutput) SetGtm(v string) *TokenForCreateIotLlmTokenOutput {
	s.Gtm = &v
	return s
}

// SetId sets the Id field's value.
func (s *TokenForCreateIotLlmTokenOutput) SetId(v string) *TokenForCreateIotLlmTokenOutput {
	s.Id = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TokenForCreateIotLlmTokenOutput) SetValue(v string) *TokenForCreateIotLlmTokenOutput {
	s.Value = &v
	return s
}
