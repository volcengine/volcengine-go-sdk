// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAddIotModelsCommon = "AddIotModels"

// AddIotModelsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AddIotModelsCommon operation. The "output" return
// value will be populated with the AddIotModelsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddIotModelsCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddIotModelsCommon Send returns without error.
//
// See AddIotModelsCommon for more information on using the AddIotModelsCommon
// API call, and error handling.
//
//    // Example sending a request using the AddIotModelsCommonRequest method.
//    req, resp := client.AddIotModelsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) AddIotModelsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAddIotModelsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddIotModelsCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation AddIotModelsCommon for usage and error information.
func (c *VEIAPI) AddIotModelsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AddIotModelsCommonRequest(input)
	return out, req.Send()
}

// AddIotModelsCommonWithContext is the same as AddIotModelsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AddIotModelsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) AddIotModelsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AddIotModelsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAddIotModels = "AddIotModels"

// AddIotModelsRequest generates a "volcengine/request.Request" representing the
// client's request for the AddIotModels operation. The "output" return
// value will be populated with the AddIotModelsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AddIotModelsCommon Request to send the API call to the service.
// the "output" return value is not valid until after AddIotModelsCommon Send returns without error.
//
// See AddIotModels for more information on using the AddIotModels
// API call, and error handling.
//
//    // Example sending a request using the AddIotModelsRequest method.
//    req, resp := client.AddIotModelsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) AddIotModelsRequest(input *AddIotModelsInput) (req *request.Request, output *AddIotModelsOutput) {
	op := &request.Operation{
		Name:       opAddIotModels,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AddIotModelsInput{}
	}

	output = &AddIotModelsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AddIotModels API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation AddIotModels for usage and error information.
func (c *VEIAPI) AddIotModels(input *AddIotModelsInput) (*AddIotModelsOutput, error) {
	req, out := c.AddIotModelsRequest(input)
	return out, req.Send()
}

// AddIotModelsWithContext is the same as AddIotModels with the addition of
// the ability to pass a context and additional request options.
//
// See AddIotModels for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) AddIotModelsWithContext(ctx volcengine.Context, input *AddIotModelsInput, opts ...request.Option) (*AddIotModelsOutput, error) {
	req, out := c.AddIotModelsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Instance_id is a required field
	Instance_id *string `type:"string" json:"instance_id,omitempty" required:"true"`

	Models []*ModelForAddIotModelsInput `type:"list" json:"models,omitempty"`
}

// String returns the string representation
func (s AddIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddIotModelsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AddIotModelsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AddIotModelsInput"}
	if s.Instance_id == nil {
		invalidParams.Add(request.NewErrParamRequired("Instance_id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstance_id sets the Instance_id field's value.
func (s *AddIotModelsInput) SetInstance_id(v string) *AddIotModelsInput {
	s.Instance_id = &v
	return s
}

// SetModels sets the Models field's value.
func (s *AddIotModelsInput) SetModels(v []*ModelForAddIotModelsInput) *AddIotModelsInput {
	s.Models = v
	return s
}

type AddIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s AddIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddIotModelsOutput) GoString() string {
	return s.String()
}

type ModelForAddIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Added_at *int64 `type:"int64" json:"added_at,omitempty"`

	Bill_type *int32 `type:"int32" json:"bill_type,omitempty"`

	Category *int32 `type:"int32" json:"category,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Model *string `type:"string" json:"model,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Provider *ProviderForAddIotModelsInput `type:"structure" json:"provider,omitempty"`

	Status *int32 `type:"int32" json:"status,omitempty"`

	Tags []*string `type:"list" json:"tags,omitempty"`

	Usage *UsageForAddIotModelsInput `type:"structure" json:"usage,omitempty"`
}

// String returns the string representation
func (s ModelForAddIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModelForAddIotModelsInput) GoString() string {
	return s.String()
}

// SetAdded_at sets the Added_at field's value.
func (s *ModelForAddIotModelsInput) SetAdded_at(v int64) *ModelForAddIotModelsInput {
	s.Added_at = &v
	return s
}

// SetBill_type sets the Bill_type field's value.
func (s *ModelForAddIotModelsInput) SetBill_type(v int32) *ModelForAddIotModelsInput {
	s.Bill_type = &v
	return s
}

// SetCategory sets the Category field's value.
func (s *ModelForAddIotModelsInput) SetCategory(v int32) *ModelForAddIotModelsInput {
	s.Category = &v
	return s
}

// SetId sets the Id field's value.
func (s *ModelForAddIotModelsInput) SetId(v string) *ModelForAddIotModelsInput {
	s.Id = &v
	return s
}

// SetModel sets the Model field's value.
func (s *ModelForAddIotModelsInput) SetModel(v string) *ModelForAddIotModelsInput {
	s.Model = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModelForAddIotModelsInput) SetName(v string) *ModelForAddIotModelsInput {
	s.Name = &v
	return s
}

// SetProvider sets the Provider field's value.
func (s *ModelForAddIotModelsInput) SetProvider(v *ProviderForAddIotModelsInput) *ModelForAddIotModelsInput {
	s.Provider = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModelForAddIotModelsInput) SetStatus(v int32) *ModelForAddIotModelsInput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ModelForAddIotModelsInput) SetTags(v []*string) *ModelForAddIotModelsInput {
	s.Tags = v
	return s
}

// SetUsage sets the Usage field's value.
func (s *ModelForAddIotModelsInput) SetUsage(v *UsageForAddIotModelsInput) *ModelForAddIotModelsInput {
	s.Usage = v
	return s
}

type ProviderForAddIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Channel_source *int32 `type:"int32" json:"channel_source,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s ProviderForAddIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderForAddIotModelsInput) GoString() string {
	return s.String()
}

// SetChannel_source sets the Channel_source field's value.
func (s *ProviderForAddIotModelsInput) SetChannel_source(v int32) *ProviderForAddIotModelsInput {
	s.Channel_source = &v
	return s
}

// SetId sets the Id field's value.
func (s *ProviderForAddIotModelsInput) SetId(v string) *ProviderForAddIotModelsInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ProviderForAddIotModelsInput) SetName(v string) *ProviderForAddIotModelsInput {
	s.Name = &v
	return s
}

type UsageForAddIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cached_completion_usage *int64 `type:"int64" json:"cached_completion_usage,omitempty"`

	Cached_prompt_usage *int64 `type:"int64" json:"cached_prompt_usage,omitempty"`

	Cached_total_usage *int64 `type:"int64" json:"cached_total_usage,omitempty"`

	Character *int64 `type:"int64" json:"character,omitempty"`

	Completion_usage *int64 `type:"int64" json:"completion_usage,omitempty"`

	Duration *float64 `type:"double" json:"duration,omitempty"`

	Prompt_usage *int64 `type:"int64" json:"prompt_usage,omitempty"`

	Request *int64 `type:"int64" json:"request,omitempty"`

	Total_usage *int64 `type:"int64" json:"total_usage,omitempty"`
}

// String returns the string representation
func (s UsageForAddIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UsageForAddIotModelsInput) GoString() string {
	return s.String()
}

// SetCached_completion_usage sets the Cached_completion_usage field's value.
func (s *UsageForAddIotModelsInput) SetCached_completion_usage(v int64) *UsageForAddIotModelsInput {
	s.Cached_completion_usage = &v
	return s
}

// SetCached_prompt_usage sets the Cached_prompt_usage field's value.
func (s *UsageForAddIotModelsInput) SetCached_prompt_usage(v int64) *UsageForAddIotModelsInput {
	s.Cached_prompt_usage = &v
	return s
}

// SetCached_total_usage sets the Cached_total_usage field's value.
func (s *UsageForAddIotModelsInput) SetCached_total_usage(v int64) *UsageForAddIotModelsInput {
	s.Cached_total_usage = &v
	return s
}

// SetCharacter sets the Character field's value.
func (s *UsageForAddIotModelsInput) SetCharacter(v int64) *UsageForAddIotModelsInput {
	s.Character = &v
	return s
}

// SetCompletion_usage sets the Completion_usage field's value.
func (s *UsageForAddIotModelsInput) SetCompletion_usage(v int64) *UsageForAddIotModelsInput {
	s.Completion_usage = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *UsageForAddIotModelsInput) SetDuration(v float64) *UsageForAddIotModelsInput {
	s.Duration = &v
	return s
}

// SetPrompt_usage sets the Prompt_usage field's value.
func (s *UsageForAddIotModelsInput) SetPrompt_usage(v int64) *UsageForAddIotModelsInput {
	s.Prompt_usage = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *UsageForAddIotModelsInput) SetRequest(v int64) *UsageForAddIotModelsInput {
	s.Request = &v
	return s
}

// SetTotal_usage sets the Total_usage field's value.
func (s *UsageForAddIotModelsInput) SetTotal_usage(v int64) *UsageForAddIotModelsInput {
	s.Total_usage = &v
	return s
}
