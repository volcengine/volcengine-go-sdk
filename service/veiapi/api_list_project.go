// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListProjectCommon = "ListProject"

// ListProjectCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListProjectCommon operation. The "output" return
// value will be populated with the ListProjectCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListProjectCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListProjectCommon Send returns without error.
//
// See ListProjectCommon for more information on using the ListProjectCommon
// API call, and error handling.
//
//    // Example sending a request using the ListProjectCommonRequest method.
//    req, resp := client.ListProjectCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListProjectCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListProjectCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListProjectCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListProjectCommon for usage and error information.
func (c *VEIAPI) ListProjectCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListProjectCommonRequest(input)
	return out, req.Send()
}

// ListProjectCommonWithContext is the same as ListProjectCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListProjectCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListProjectCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListProjectCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListProject = "ListProject"

// ListProjectRequest generates a "volcengine/request.Request" representing the
// client's request for the ListProject operation. The "output" return
// value will be populated with the ListProjectCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListProjectCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListProjectCommon Send returns without error.
//
// See ListProject for more information on using the ListProject
// API call, and error handling.
//
//    // Example sending a request using the ListProjectRequest method.
//    req, resp := client.ListProjectRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListProjectRequest(input *ListProjectInput) (req *request.Request, output *ListProjectOutput) {
	op := &request.Operation{
		Name:       opListProject,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListProjectInput{}
	}

	output = &ListProjectOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListProject API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListProject for usage and error information.
func (c *VEIAPI) ListProject(input *ListProjectInput) (*ListProjectOutput, error) {
	req, out := c.ListProjectRequest(input)
	return out, req.Send()
}

// ListProjectWithContext is the same as ListProject with the addition of
// the ability to pass a context and additional request options.
//
// See ListProject for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListProjectWithContext(ctx volcengine.Context, input *ListProjectInput, opts ...request.Option) (*ListProjectOutput, error) {
	req, out := c.ListProjectRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListProjectOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Created_at *string `type:"string" json:"created_at,omitempty"`

	Desc *string `type:"string" json:"desc,omitempty"`

	Iam_project_name *string `type:"string" json:"iam_project_name,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Status *string `type:"string" json:"status,omitempty"`

	Tags []*TagForListProjectOutput `type:"list" json:"tags,omitempty"`
}

// String returns the string representation
func (s ItemForListProjectOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListProjectOutput) GoString() string {
	return s.String()
}

// SetCreated_at sets the Created_at field's value.
func (s *ItemForListProjectOutput) SetCreated_at(v string) *ItemForListProjectOutput {
	s.Created_at = &v
	return s
}

// SetDesc sets the Desc field's value.
func (s *ItemForListProjectOutput) SetDesc(v string) *ItemForListProjectOutput {
	s.Desc = &v
	return s
}

// SetIam_project_name sets the Iam_project_name field's value.
func (s *ItemForListProjectOutput) SetIam_project_name(v string) *ItemForListProjectOutput {
	s.Iam_project_name = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListProjectOutput) SetId(v string) *ItemForListProjectOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListProjectOutput) SetName(v string) *ItemForListProjectOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListProjectOutput) SetStatus(v string) *ItemForListProjectOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ItemForListProjectOutput) SetTags(v []*TagForListProjectOutput) *ItemForListProjectOutput {
	s.Tags = v
	return s
}

type ListProjectInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Created_from *int32 `type:"int32" json:"created_from,omitempty"`

	// Created_orderby is a required field
	Created_orderby *int32 `type:"int32" json:"created_orderby,omitempty" required:"true"`

	Created_to *string `type:"string" json:"created_to,omitempty"`

	Iam_project_name *string `type:"string" json:"iam_project_name,omitempty"`

	Iam_projects []*string `type:"list" json:"iam_projects,omitempty"`

	// Page_index is a required field
	Page_index *int32 `type:"int32" json:"page_index,omitempty" required:"true"`

	// Page_size is a required field
	Page_size *int32 `type:"int32" json:"page_size,omitempty" required:"true"`

	Project_name *string `type:"string" json:"project_name,omitempty"`

	Tag_filters []*Tag_filterForListProjectInput `type:"list" json:"tag_filters,omitempty"`
}

// String returns the string representation
func (s ListProjectInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListProjectInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListProjectInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListProjectInput"}
	if s.Created_orderby == nil {
		invalidParams.Add(request.NewErrParamRequired("Created_orderby"))
	}
	if s.Page_index == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_index"))
	}
	if s.Page_size == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_size"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCreated_from sets the Created_from field's value.
func (s *ListProjectInput) SetCreated_from(v int32) *ListProjectInput {
	s.Created_from = &v
	return s
}

// SetCreated_orderby sets the Created_orderby field's value.
func (s *ListProjectInput) SetCreated_orderby(v int32) *ListProjectInput {
	s.Created_orderby = &v
	return s
}

// SetCreated_to sets the Created_to field's value.
func (s *ListProjectInput) SetCreated_to(v string) *ListProjectInput {
	s.Created_to = &v
	return s
}

// SetIam_project_name sets the Iam_project_name field's value.
func (s *ListProjectInput) SetIam_project_name(v string) *ListProjectInput {
	s.Iam_project_name = &v
	return s
}

// SetIam_projects sets the Iam_projects field's value.
func (s *ListProjectInput) SetIam_projects(v []*string) *ListProjectInput {
	s.Iam_projects = v
	return s
}

// SetPage_index sets the Page_index field's value.
func (s *ListProjectInput) SetPage_index(v int32) *ListProjectInput {
	s.Page_index = &v
	return s
}

// SetPage_size sets the Page_size field's value.
func (s *ListProjectInput) SetPage_size(v int32) *ListProjectInput {
	s.Page_size = &v
	return s
}

// SetProject_name sets the Project_name field's value.
func (s *ListProjectInput) SetProject_name(v string) *ListProjectInput {
	s.Project_name = &v
	return s
}

// SetTag_filters sets the Tag_filters field's value.
func (s *ListProjectInput) SetTag_filters(v []*Tag_filterForListProjectInput) *ListProjectInput {
	s.Tag_filters = v
	return s
}

type ListProjectOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListProjectOutput `type:"list" json:"items,omitempty"`

	Pageinator *PageinatorForListProjectOutput `type:"structure" json:"pageinator,omitempty"`

	Total_items *int64 `type:"int64" json:"total_items,omitempty"`
}

// String returns the string representation
func (s ListProjectOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListProjectOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListProjectOutput) SetItems(v []*ItemForListProjectOutput) *ListProjectOutput {
	s.Items = v
	return s
}

// SetPageinator sets the Pageinator field's value.
func (s *ListProjectOutput) SetPageinator(v *PageinatorForListProjectOutput) *ListProjectOutput {
	s.Pageinator = v
	return s
}

// SetTotal_items sets the Total_items field's value.
func (s *ListProjectOutput) SetTotal_items(v int64) *ListProjectOutput {
	s.Total_items = &v
	return s
}

type PageinatorForListProjectOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Index *int32 `type:"int32" json:"index,omitempty"`

	Size *int32 `type:"int32" json:"size,omitempty"`

	Total_items *int32 `type:"int32" json:"total_items,omitempty"`

	Total_pages *int32 `type:"int32" json:"total_pages,omitempty"`
}

// String returns the string representation
func (s PageinatorForListProjectOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PageinatorForListProjectOutput) GoString() string {
	return s.String()
}

// SetIndex sets the Index field's value.
func (s *PageinatorForListProjectOutput) SetIndex(v int32) *PageinatorForListProjectOutput {
	s.Index = &v
	return s
}

// SetSize sets the Size field's value.
func (s *PageinatorForListProjectOutput) SetSize(v int32) *PageinatorForListProjectOutput {
	s.Size = &v
	return s
}

// SetTotal_items sets the Total_items field's value.
func (s *PageinatorForListProjectOutput) SetTotal_items(v int32) *PageinatorForListProjectOutput {
	s.Total_items = &v
	return s
}

// SetTotal_pages sets the Total_pages field's value.
func (s *PageinatorForListProjectOutput) SetTotal_pages(v int32) *PageinatorForListProjectOutput {
	s.Total_pages = &v
	return s
}

type TagForListProjectOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:"key,omitempty"`

	Value *string `type:"string" json:"value,omitempty"`
}

// String returns the string representation
func (s TagForListProjectOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListProjectOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListProjectOutput) SetKey(v string) *TagForListProjectOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListProjectOutput) SetValue(v string) *TagForListProjectOutput {
	s.Value = &v
	return s
}

type Tag_filterForListProjectInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:"key,omitempty"`

	Values []*string `type:"list" json:"values,omitempty"`
}

// String returns the string representation
func (s Tag_filterForListProjectInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Tag_filterForListProjectInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *Tag_filterForListProjectInput) SetKey(v string) *Tag_filterForListProjectInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *Tag_filterForListProjectInput) SetValues(v []*string) *Tag_filterForListProjectInput {
	s.Values = v
	return s
}
