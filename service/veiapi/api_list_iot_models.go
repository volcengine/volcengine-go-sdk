// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListIotModelsCommon = "ListIotModels"

// ListIotModelsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIotModelsCommon operation. The "output" return
// value will be populated with the ListIotModelsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIotModelsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIotModelsCommon Send returns without error.
//
// See ListIotModelsCommon for more information on using the ListIotModelsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListIotModelsCommonRequest method.
//    req, resp := client.ListIotModelsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListIotModelsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListIotModelsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIotModelsCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListIotModelsCommon for usage and error information.
func (c *VEIAPI) ListIotModelsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListIotModelsCommonRequest(input)
	return out, req.Send()
}

// ListIotModelsCommonWithContext is the same as ListIotModelsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListIotModelsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListIotModelsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListIotModelsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListIotModels = "ListIotModels"

// ListIotModelsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIotModels operation. The "output" return
// value will be populated with the ListIotModelsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIotModelsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIotModelsCommon Send returns without error.
//
// See ListIotModels for more information on using the ListIotModels
// API call, and error handling.
//
//    // Example sending a request using the ListIotModelsRequest method.
//    req, resp := client.ListIotModelsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) ListIotModelsRequest(input *ListIotModelsInput) (req *request.Request, output *ListIotModelsOutput) {
	op := &request.Operation{
		Name:       opListIotModels,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListIotModelsInput{}
	}

	output = &ListIotModelsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIotModels API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation ListIotModels for usage and error information.
func (c *VEIAPI) ListIotModels(input *ListIotModelsInput) (*ListIotModelsOutput, error) {
	req, out := c.ListIotModelsRequest(input)
	return out, req.Send()
}

// ListIotModelsWithContext is the same as ListIotModels with the addition of
// the ability to pass a context and additional request options.
//
// See ListIotModels for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) ListIotModelsWithContext(ctx volcengine.Context, input *ListIotModelsInput, opts ...request.Option) (*ListIotModelsOutput, error) {
	req, out := c.ListIotModelsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bill_types []*int32 `type:"list" json:"bill_types,omitempty"`

	Statuses []*int32 `type:"list" json:"statuses,omitempty"`
}

// String returns the string representation
func (s FilterForListIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListIotModelsInput) GoString() string {
	return s.String()
}

// SetBill_types sets the Bill_types field's value.
func (s *FilterForListIotModelsInput) SetBill_types(v []*int32) *FilterForListIotModelsInput {
	s.Bill_types = v
	return s
}

// SetStatuses sets the Statuses field's value.
func (s *FilterForListIotModelsInput) SetStatuses(v []*int32) *FilterForListIotModelsInput {
	s.Statuses = v
	return s
}

type ListIotModelsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListIotModelsInput `type:"structure" json:"filter,omitempty"`

	Instance_id *string `type:"string" json:"instance_id,omitempty"`

	// Page_index is a required field
	Page_index *int32 `type:"int32" json:"page_index,omitempty" required:"true"`

	// Page_size is a required field
	Page_size *int32 `type:"int32" json:"page_size,omitempty" required:"true"`
}

// String returns the string representation
func (s ListIotModelsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIotModelsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListIotModelsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListIotModelsInput"}
	if s.Page_index == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_index"))
	}
	if s.Page_size == nil {
		invalidParams.Add(request.NewErrParamRequired("Page_size"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListIotModelsInput) SetFilter(v *FilterForListIotModelsInput) *ListIotModelsInput {
	s.Filter = v
	return s
}

// SetInstance_id sets the Instance_id field's value.
func (s *ListIotModelsInput) SetInstance_id(v string) *ListIotModelsInput {
	s.Instance_id = &v
	return s
}

// SetPage_index sets the Page_index field's value.
func (s *ListIotModelsInput) SetPage_index(v int32) *ListIotModelsInput {
	s.Page_index = &v
	return s
}

// SetPage_size sets the Page_size field's value.
func (s *ListIotModelsInput) SetPage_size(v int32) *ListIotModelsInput {
	s.Page_size = &v
	return s
}

type ListIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Models []*ModelForListIotModelsOutput `type:"list" json:"models,omitempty"`

	Pageinator *PageinatorForListIotModelsOutput `type:"structure" json:"pageinator,omitempty"`
}

// String returns the string representation
func (s ListIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIotModelsOutput) GoString() string {
	return s.String()
}

// SetModels sets the Models field's value.
func (s *ListIotModelsOutput) SetModels(v []*ModelForListIotModelsOutput) *ListIotModelsOutput {
	s.Models = v
	return s
}

// SetPageinator sets the Pageinator field's value.
func (s *ListIotModelsOutput) SetPageinator(v *PageinatorForListIotModelsOutput) *ListIotModelsOutput {
	s.Pageinator = v
	return s
}

type ModelForListIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Added_at *int64 `type:"int64" json:"added_at,omitempty"`

	Bill_type *int32 `type:"int32" json:"bill_type,omitempty"`

	Category *int32 `type:"int32" json:"category,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Model *string `type:"string" json:"model,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	Provider *ProviderForListIotModelsOutput `type:"structure" json:"provider,omitempty"`

	Status *int32 `type:"int32" json:"status,omitempty"`

	Tags []*string `type:"list" json:"tags,omitempty"`

	Usage *UsageForListIotModelsOutput `type:"structure" json:"usage,omitempty"`
}

// String returns the string representation
func (s ModelForListIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModelForListIotModelsOutput) GoString() string {
	return s.String()
}

// SetAdded_at sets the Added_at field's value.
func (s *ModelForListIotModelsOutput) SetAdded_at(v int64) *ModelForListIotModelsOutput {
	s.Added_at = &v
	return s
}

// SetBill_type sets the Bill_type field's value.
func (s *ModelForListIotModelsOutput) SetBill_type(v int32) *ModelForListIotModelsOutput {
	s.Bill_type = &v
	return s
}

// SetCategory sets the Category field's value.
func (s *ModelForListIotModelsOutput) SetCategory(v int32) *ModelForListIotModelsOutput {
	s.Category = &v
	return s
}

// SetId sets the Id field's value.
func (s *ModelForListIotModelsOutput) SetId(v string) *ModelForListIotModelsOutput {
	s.Id = &v
	return s
}

// SetModel sets the Model field's value.
func (s *ModelForListIotModelsOutput) SetModel(v string) *ModelForListIotModelsOutput {
	s.Model = &v
	return s
}

// SetName sets the Name field's value.
func (s *ModelForListIotModelsOutput) SetName(v string) *ModelForListIotModelsOutput {
	s.Name = &v
	return s
}

// SetProvider sets the Provider field's value.
func (s *ModelForListIotModelsOutput) SetProvider(v *ProviderForListIotModelsOutput) *ModelForListIotModelsOutput {
	s.Provider = v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModelForListIotModelsOutput) SetStatus(v int32) *ModelForListIotModelsOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ModelForListIotModelsOutput) SetTags(v []*string) *ModelForListIotModelsOutput {
	s.Tags = v
	return s
}

// SetUsage sets the Usage field's value.
func (s *ModelForListIotModelsOutput) SetUsage(v *UsageForListIotModelsOutput) *ModelForListIotModelsOutput {
	s.Usage = v
	return s
}

type PageinatorForListIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Index *int32 `type:"int32" json:"index,omitempty"`

	Size *int32 `type:"int32" json:"size,omitempty"`

	Total_items *int32 `type:"int32" json:"total_items,omitempty"`

	Total_pages *int32 `type:"int32" json:"total_pages,omitempty"`
}

// String returns the string representation
func (s PageinatorForListIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PageinatorForListIotModelsOutput) GoString() string {
	return s.String()
}

// SetIndex sets the Index field's value.
func (s *PageinatorForListIotModelsOutput) SetIndex(v int32) *PageinatorForListIotModelsOutput {
	s.Index = &v
	return s
}

// SetSize sets the Size field's value.
func (s *PageinatorForListIotModelsOutput) SetSize(v int32) *PageinatorForListIotModelsOutput {
	s.Size = &v
	return s
}

// SetTotal_items sets the Total_items field's value.
func (s *PageinatorForListIotModelsOutput) SetTotal_items(v int32) *PageinatorForListIotModelsOutput {
	s.Total_items = &v
	return s
}

// SetTotal_pages sets the Total_pages field's value.
func (s *PageinatorForListIotModelsOutput) SetTotal_pages(v int32) *PageinatorForListIotModelsOutput {
	s.Total_pages = &v
	return s
}

type ProviderForListIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Channel_source *int32 `type:"int32" json:"channel_source,omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s ProviderForListIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderForListIotModelsOutput) GoString() string {
	return s.String()
}

// SetChannel_source sets the Channel_source field's value.
func (s *ProviderForListIotModelsOutput) SetChannel_source(v int32) *ProviderForListIotModelsOutput {
	s.Channel_source = &v
	return s
}

// SetId sets the Id field's value.
func (s *ProviderForListIotModelsOutput) SetId(v string) *ProviderForListIotModelsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ProviderForListIotModelsOutput) SetName(v string) *ProviderForListIotModelsOutput {
	s.Name = &v
	return s
}

type UsageForListIotModelsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cached_completion_usage *int64 `type:"int64" json:"cached_completion_usage,omitempty"`

	Cached_prompt_usage *int64 `type:"int64" json:"cached_prompt_usage,omitempty"`

	Cached_total_usage *int64 `type:"int64" json:"cached_total_usage,omitempty"`

	Character *int64 `type:"int64" json:"character,omitempty"`

	Completion_usage *int64 `type:"int64" json:"completion_usage,omitempty"`

	Duration *float64 `type:"double" json:"duration,omitempty"`

	Prompt_usage *int64 `type:"int64" json:"prompt_usage,omitempty"`

	Request *int64 `type:"int64" json:"request,omitempty"`

	Total_usage *int64 `type:"int64" json:"total_usage,omitempty"`
}

// String returns the string representation
func (s UsageForListIotModelsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UsageForListIotModelsOutput) GoString() string {
	return s.String()
}

// SetCached_completion_usage sets the Cached_completion_usage field's value.
func (s *UsageForListIotModelsOutput) SetCached_completion_usage(v int64) *UsageForListIotModelsOutput {
	s.Cached_completion_usage = &v
	return s
}

// SetCached_prompt_usage sets the Cached_prompt_usage field's value.
func (s *UsageForListIotModelsOutput) SetCached_prompt_usage(v int64) *UsageForListIotModelsOutput {
	s.Cached_prompt_usage = &v
	return s
}

// SetCached_total_usage sets the Cached_total_usage field's value.
func (s *UsageForListIotModelsOutput) SetCached_total_usage(v int64) *UsageForListIotModelsOutput {
	s.Cached_total_usage = &v
	return s
}

// SetCharacter sets the Character field's value.
func (s *UsageForListIotModelsOutput) SetCharacter(v int64) *UsageForListIotModelsOutput {
	s.Character = &v
	return s
}

// SetCompletion_usage sets the Completion_usage field's value.
func (s *UsageForListIotModelsOutput) SetCompletion_usage(v int64) *UsageForListIotModelsOutput {
	s.Completion_usage = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *UsageForListIotModelsOutput) SetDuration(v float64) *UsageForListIotModelsOutput {
	s.Duration = &v
	return s
}

// SetPrompt_usage sets the Prompt_usage field's value.
func (s *UsageForListIotModelsOutput) SetPrompt_usage(v int64) *UsageForListIotModelsOutput {
	s.Prompt_usage = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *UsageForListIotModelsOutput) SetRequest(v int64) *UsageForListIotModelsOutput {
	s.Request = &v
	return s
}

// SetTotal_usage sets the Total_usage field's value.
func (s *UsageForListIotModelsOutput) SetTotal_usage(v int64) *UsageForListIotModelsOutput {
	s.Total_usage = &v
	return s
}
