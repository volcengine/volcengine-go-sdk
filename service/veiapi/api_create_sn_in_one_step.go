// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateSNInOneStepCommon = "CreateSNInOneStep"

// CreateSNInOneStepCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateSNInOneStepCommon operation. The "output" return
// value will be populated with the CreateSNInOneStepCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSNInOneStepCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSNInOneStepCommon Send returns without error.
//
// See CreateSNInOneStepCommon for more information on using the CreateSNInOneStepCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateSNInOneStepCommonRequest method.
//    req, resp := client.CreateSNInOneStepCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateSNInOneStepCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateSNInOneStepCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateSNInOneStepCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateSNInOneStepCommon for usage and error information.
func (c *VEIAPI) CreateSNInOneStepCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateSNInOneStepCommonRequest(input)
	return out, req.Send()
}

// CreateSNInOneStepCommonWithContext is the same as CreateSNInOneStepCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSNInOneStepCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateSNInOneStepCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateSNInOneStepCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSNInOneStep = "CreateSNInOneStep"

// CreateSNInOneStepRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateSNInOneStep operation. The "output" return
// value will be populated with the CreateSNInOneStepCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSNInOneStepCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSNInOneStepCommon Send returns without error.
//
// See CreateSNInOneStep for more information on using the CreateSNInOneStep
// API call, and error handling.
//
//    // Example sending a request using the CreateSNInOneStepRequest method.
//    req, resp := client.CreateSNInOneStepRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateSNInOneStepRequest(input *CreateSNInOneStepInput) (req *request.Request, output *CreateSNInOneStepOutput) {
	op := &request.Operation{
		Name:       opCreateSNInOneStep,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateSNInOneStepInput{}
	}

	output = &CreateSNInOneStepOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateSNInOneStep API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateSNInOneStep for usage and error information.
func (c *VEIAPI) CreateSNInOneStep(input *CreateSNInOneStepInput) (*CreateSNInOneStepOutput, error) {
	req, out := c.CreateSNInOneStepRequest(input)
	return out, req.Send()
}

// CreateSNInOneStepWithContext is the same as CreateSNInOneStep with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSNInOneStep for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateSNInOneStepWithContext(ctx volcengine.Context, input *CreateSNInOneStepInput, opts ...request.Option) (*CreateSNInOneStepOutput, error) {
	req, out := c.CreateSNInOneStepRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateSNInOneStepInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Auto_renew *bool `type:"boolean" json:"auto_renew,omitempty"`

	// Count_of_month is a required field
	Count_of_month *int32 `type:"int32" json:"count_of_month,omitempty" required:"true"`

	// Type is a required field
	Type *int32 `type:"int32" json:"type,omitempty" required:"true"`
}

// String returns the string representation
func (s CreateSNInOneStepInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSNInOneStepInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateSNInOneStepInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateSNInOneStepInput"}
	if s.Count_of_month == nil {
		invalidParams.Add(request.NewErrParamRequired("Count_of_month"))
	}
	if s.Type == nil {
		invalidParams.Add(request.NewErrParamRequired("Type"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAuto_renew sets the Auto_renew field's value.
func (s *CreateSNInOneStepInput) SetAuto_renew(v bool) *CreateSNInOneStepInput {
	s.Auto_renew = &v
	return s
}

// SetCount_of_month sets the Count_of_month field's value.
func (s *CreateSNInOneStepInput) SetCount_of_month(v int32) *CreateSNInOneStepInput {
	s.Count_of_month = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateSNInOneStepInput) SetType(v int32) *CreateSNInOneStepInput {
	s.Type = &v
	return s
}

type CreateSNInOneStepOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Node_id *string `type:"string" json:"node_id,omitempty"`

	Sn *string `type:"string" json:"sn,omitempty"`
}

// String returns the string representation
func (s CreateSNInOneStepOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSNInOneStepOutput) GoString() string {
	return s.String()
}

// SetNode_id sets the Node_id field's value.
func (s *CreateSNInOneStepOutput) SetNode_id(v string) *CreateSNInOneStepOutput {
	s.Node_id = &v
	return s
}

// SetSn sets the Sn field's value.
func (s *CreateSNInOneStepOutput) SetSn(v string) *CreateSNInOneStepOutput {
	s.Sn = &v
	return s
}
