// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package veiapi

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateModelServiceCommon = "CreateModelService"

// CreateModelServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateModelServiceCommon operation. The "output" return
// value will be populated with the CreateModelServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateModelServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateModelServiceCommon Send returns without error.
//
// See CreateModelServiceCommon for more information on using the CreateModelServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateModelServiceCommonRequest method.
//    req, resp := client.CreateModelServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateModelServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateModelServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateModelServiceCommon API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateModelServiceCommon for usage and error information.
func (c *VEIAPI) CreateModelServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateModelServiceCommonRequest(input)
	return out, req.Send()
}

// CreateModelServiceCommonWithContext is the same as CreateModelServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateModelServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateModelServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateModelServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateModelService = "CreateModelService"

// CreateModelServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateModelService operation. The "output" return
// value will be populated with the CreateModelServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateModelServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateModelServiceCommon Send returns without error.
//
// See CreateModelService for more information on using the CreateModelService
// API call, and error handling.
//
//    // Example sending a request using the CreateModelServiceRequest method.
//    req, resp := client.CreateModelServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEIAPI) CreateModelServiceRequest(input *CreateModelServiceInput) (req *request.Request, output *CreateModelServiceOutput) {
	op := &request.Operation{
		Name:       opCreateModelService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateModelServiceInput{}
	}

	output = &CreateModelServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateModelService API operation for VEI_API.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEI_API's
// API operation CreateModelService for usage and error information.
func (c *VEIAPI) CreateModelService(input *CreateModelServiceInput) (*CreateModelServiceOutput, error) {
	req, out := c.CreateModelServiceRequest(input)
	return out, req.Send()
}

// CreateModelServiceWithContext is the same as CreateModelService with the addition of
// the ability to pass a context and additional request options.
//
// See CreateModelService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEIAPI) CreateModelServiceWithContext(ctx volcengine.Context, input *CreateModelServiceInput, opts ...request.Option) (*CreateModelServiceOutput, error) {
	req, out := c.CreateModelServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Compression *bool `type:"boolean" json:"compression,omitempty"`

	Cpu_count *int32 `type:"int32" json:"cpu_count,omitempty"`

	Cpu_limit *float64 `type:"double" json:"cpu_limit,omitempty"`

	Cpu_request *float64 `type:"double" json:"cpu_request,omitempty"`

	Deploy_config *Deploy_configForCreateModelServiceInput `type:"structure" json:"deploy_config,omitempty"`

	Dynamic_batching *bool `type:"boolean" json:"dynamic_batching,omitempty"`

	Gpu_count *int32 `type:"int32" json:"gpu_count,omitempty"`

	Grpc_port *int32 `type:"int32" json:"grpc_port,omitempty"`

	Http_mem_limit_unit *string `type:"string" json:"http_mem_limit_unit,omitempty"`

	Http_mem_req_unit *string `type:"string" json:"http_mem_req_unit,omitempty"`

	Json_parameter *string `type:"string" json:"json_parameter,omitempty"`

	Max_batch_size *int64 `type:"int64" json:"max_batch_size,omitempty"`

	Max_queue_delay_microseconds *int64 `type:"int64" json:"max_queue_delay_microseconds,omitempty"`

	Mem_limit *int32 `type:"int32" json:"mem_limit,omitempty"`

	Model_id *string `type:"string" json:"model_id,omitempty"`

	Model_name *string `type:"string" json:"model_name,omitempty"`

	Model_service_name *string `type:"string" json:"model_service_name,omitempty"`

	Open_ai_api *Open_ai_apiForCreateModelServiceInput `type:"structure" json:"open_ai_api,omitempty"`

	Port *int32 `type:"int32" json:"port,omitempty"`

	Process_id *string `type:"string" json:"process_id,omitempty"`

	Process_name *string `type:"string" json:"process_name,omitempty"`

	// Project_id is a required field
	Project_id *string `type:"string" json:"project_id,omitempty" required:"true"`

	Project_name *string `type:"string" json:"project_name,omitempty"`

	Replicas *int32 `type:"int32" json:"replicas,omitempty"`

	Service_config []*Service_configForCreateModelServiceInput `type:"list" json:"service_config,omitempty"`

	Shared_memory *Shared_memoryForCreateModelServiceInput `type:"structure" json:"shared_memory,omitempty"`

	State_type *int32 `type:"int32" json:"state_type,omitempty"`

	Version_id *string `type:"string" json:"version_id,omitempty"`

	Version_name *string `type:"string" json:"version_name,omitempty"`
}

// String returns the string representation
func (s CreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateModelServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateModelServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateModelServiceInput"}
	if s.Project_id == nil {
		invalidParams.Add(request.NewErrParamRequired("Project_id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCompression sets the Compression field's value.
func (s *CreateModelServiceInput) SetCompression(v bool) *CreateModelServiceInput {
	s.Compression = &v
	return s
}

// SetCpu_count sets the Cpu_count field's value.
func (s *CreateModelServiceInput) SetCpu_count(v int32) *CreateModelServiceInput {
	s.Cpu_count = &v
	return s
}

// SetCpu_limit sets the Cpu_limit field's value.
func (s *CreateModelServiceInput) SetCpu_limit(v float64) *CreateModelServiceInput {
	s.Cpu_limit = &v
	return s
}

// SetCpu_request sets the Cpu_request field's value.
func (s *CreateModelServiceInput) SetCpu_request(v float64) *CreateModelServiceInput {
	s.Cpu_request = &v
	return s
}

// SetDeploy_config sets the Deploy_config field's value.
func (s *CreateModelServiceInput) SetDeploy_config(v *Deploy_configForCreateModelServiceInput) *CreateModelServiceInput {
	s.Deploy_config = v
	return s
}

// SetDynamic_batching sets the Dynamic_batching field's value.
func (s *CreateModelServiceInput) SetDynamic_batching(v bool) *CreateModelServiceInput {
	s.Dynamic_batching = &v
	return s
}

// SetGpu_count sets the Gpu_count field's value.
func (s *CreateModelServiceInput) SetGpu_count(v int32) *CreateModelServiceInput {
	s.Gpu_count = &v
	return s
}

// SetGrpc_port sets the Grpc_port field's value.
func (s *CreateModelServiceInput) SetGrpc_port(v int32) *CreateModelServiceInput {
	s.Grpc_port = &v
	return s
}

// SetHttp_mem_limit_unit sets the Http_mem_limit_unit field's value.
func (s *CreateModelServiceInput) SetHttp_mem_limit_unit(v string) *CreateModelServiceInput {
	s.Http_mem_limit_unit = &v
	return s
}

// SetHttp_mem_req_unit sets the Http_mem_req_unit field's value.
func (s *CreateModelServiceInput) SetHttp_mem_req_unit(v string) *CreateModelServiceInput {
	s.Http_mem_req_unit = &v
	return s
}

// SetJson_parameter sets the Json_parameter field's value.
func (s *CreateModelServiceInput) SetJson_parameter(v string) *CreateModelServiceInput {
	s.Json_parameter = &v
	return s
}

// SetMax_batch_size sets the Max_batch_size field's value.
func (s *CreateModelServiceInput) SetMax_batch_size(v int64) *CreateModelServiceInput {
	s.Max_batch_size = &v
	return s
}

// SetMax_queue_delay_microseconds sets the Max_queue_delay_microseconds field's value.
func (s *CreateModelServiceInput) SetMax_queue_delay_microseconds(v int64) *CreateModelServiceInput {
	s.Max_queue_delay_microseconds = &v
	return s
}

// SetMem_limit sets the Mem_limit field's value.
func (s *CreateModelServiceInput) SetMem_limit(v int32) *CreateModelServiceInput {
	s.Mem_limit = &v
	return s
}

// SetModel_id sets the Model_id field's value.
func (s *CreateModelServiceInput) SetModel_id(v string) *CreateModelServiceInput {
	s.Model_id = &v
	return s
}

// SetModel_name sets the Model_name field's value.
func (s *CreateModelServiceInput) SetModel_name(v string) *CreateModelServiceInput {
	s.Model_name = &v
	return s
}

// SetModel_service_name sets the Model_service_name field's value.
func (s *CreateModelServiceInput) SetModel_service_name(v string) *CreateModelServiceInput {
	s.Model_service_name = &v
	return s
}

// SetOpen_ai_api sets the Open_ai_api field's value.
func (s *CreateModelServiceInput) SetOpen_ai_api(v *Open_ai_apiForCreateModelServiceInput) *CreateModelServiceInput {
	s.Open_ai_api = v
	return s
}

// SetPort sets the Port field's value.
func (s *CreateModelServiceInput) SetPort(v int32) *CreateModelServiceInput {
	s.Port = &v
	return s
}

// SetProcess_id sets the Process_id field's value.
func (s *CreateModelServiceInput) SetProcess_id(v string) *CreateModelServiceInput {
	s.Process_id = &v
	return s
}

// SetProcess_name sets the Process_name field's value.
func (s *CreateModelServiceInput) SetProcess_name(v string) *CreateModelServiceInput {
	s.Process_name = &v
	return s
}

// SetProject_id sets the Project_id field's value.
func (s *CreateModelServiceInput) SetProject_id(v string) *CreateModelServiceInput {
	s.Project_id = &v
	return s
}

// SetProject_name sets the Project_name field's value.
func (s *CreateModelServiceInput) SetProject_name(v string) *CreateModelServiceInput {
	s.Project_name = &v
	return s
}

// SetReplicas sets the Replicas field's value.
func (s *CreateModelServiceInput) SetReplicas(v int32) *CreateModelServiceInput {
	s.Replicas = &v
	return s
}

// SetService_config sets the Service_config field's value.
func (s *CreateModelServiceInput) SetService_config(v []*Service_configForCreateModelServiceInput) *CreateModelServiceInput {
	s.Service_config = v
	return s
}

// SetShared_memory sets the Shared_memory field's value.
func (s *CreateModelServiceInput) SetShared_memory(v *Shared_memoryForCreateModelServiceInput) *CreateModelServiceInput {
	s.Shared_memory = v
	return s
}

// SetState_type sets the State_type field's value.
func (s *CreateModelServiceInput) SetState_type(v int32) *CreateModelServiceInput {
	s.State_type = &v
	return s
}

// SetVersion_id sets the Version_id field's value.
func (s *CreateModelServiceInput) SetVersion_id(v string) *CreateModelServiceInput {
	s.Version_id = &v
	return s
}

// SetVersion_name sets the Version_name field's value.
func (s *CreateModelServiceInput) SetVersion_name(v string) *CreateModelServiceInput {
	s.Version_name = &v
	return s
}

type CreateModelServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Model_service_id *string `type:"string" json:"model_service_id,omitempty"`

	Model_service_ids []*string `type:"list" json:"model_service_ids,omitempty"`
}

// String returns the string representation
func (s CreateModelServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateModelServiceOutput) GoString() string {
	return s.String()
}

// SetModel_service_id sets the Model_service_id field's value.
func (s *CreateModelServiceOutput) SetModel_service_id(v string) *CreateModelServiceOutput {
	s.Model_service_id = &v
	return s
}

// SetModel_service_ids sets the Model_service_ids field's value.
func (s *CreateModelServiceOutput) SetModel_service_ids(v []*string) *CreateModelServiceOutput {
	s.Model_service_ids = v
	return s
}

type Deploy_configForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Node_groups []*Node_groupForCreateModelServiceInput `type:"list" json:"node_groups,omitempty"`

	Nodes []*NodeForCreateModelServiceInput `type:"list" json:"nodes,omitempty"`
}

// String returns the string representation
func (s Deploy_configForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Deploy_configForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetNode_groups sets the Node_groups field's value.
func (s *Deploy_configForCreateModelServiceInput) SetNode_groups(v []*Node_groupForCreateModelServiceInput) *Deploy_configForCreateModelServiceInput {
	s.Node_groups = v
	return s
}

// SetNodes sets the Nodes field's value.
func (s *Deploy_configForCreateModelServiceInput) SetNodes(v []*NodeForCreateModelServiceInput) *Deploy_configForCreateModelServiceInput {
	s.Nodes = v
	return s
}

type NodeForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NodeForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *NodeForCreateModelServiceInput) SetId(v string) *NodeForCreateModelServiceInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *NodeForCreateModelServiceInput) SetName(v string) *NodeForCreateModelServiceInput {
	s.Name = &v
	return s
}

type Node_groupForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:"id,omitempty"`

	Name *string `type:"string" json:"name,omitempty"`
}

// String returns the string representation
func (s Node_groupForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Node_groupForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *Node_groupForCreateModelServiceInput) SetId(v string) *Node_groupForCreateModelServiceInput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *Node_groupForCreateModelServiceInput) SetName(v string) *Node_groupForCreateModelServiceInput {
	s.Name = &v
	return s
}

type Open_ai_apiForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Able *bool `type:"boolean" json:"able,omitempty"`

	Port *int32 `type:"int32" json:"port,omitempty"`
}

// String returns the string representation
func (s Open_ai_apiForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Open_ai_apiForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetAble sets the Able field's value.
func (s *Open_ai_apiForCreateModelServiceInput) SetAble(v bool) *Open_ai_apiForCreateModelServiceInput {
	s.Able = &v
	return s
}

// SetPort sets the Port field's value.
func (s *Open_ai_apiForCreateModelServiceInput) SetPort(v int32) *Open_ai_apiForCreateModelServiceInput {
	s.Port = &v
	return s
}

type Service_configForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cpu_count *int32 `type:"int32" json:"cpu_count,omitempty"`

	Dynamic_batching *bool `type:"boolean" json:"dynamic_batching,omitempty"`

	Gpu_count *int32 `type:"int32" json:"gpu_count,omitempty"`

	Gpu_ids []*int32 `type:"list" json:"gpu_ids,omitempty"`

	Json_parameter *string `type:"string" json:"json_parameter,omitempty"`

	Max_batch_size *int64 `type:"int64" json:"max_batch_size,omitempty"`

	Max_queue_delay_microseconds *int64 `type:"int64" json:"max_queue_delay_microseconds,omitempty"`

	Model_id *string `type:"string" json:"model_id,omitempty"`

	Model_name *string `type:"string" json:"model_name,omitempty"`
}

// String returns the string representation
func (s Service_configForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Service_configForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetCpu_count sets the Cpu_count field's value.
func (s *Service_configForCreateModelServiceInput) SetCpu_count(v int32) *Service_configForCreateModelServiceInput {
	s.Cpu_count = &v
	return s
}

// SetDynamic_batching sets the Dynamic_batching field's value.
func (s *Service_configForCreateModelServiceInput) SetDynamic_batching(v bool) *Service_configForCreateModelServiceInput {
	s.Dynamic_batching = &v
	return s
}

// SetGpu_count sets the Gpu_count field's value.
func (s *Service_configForCreateModelServiceInput) SetGpu_count(v int32) *Service_configForCreateModelServiceInput {
	s.Gpu_count = &v
	return s
}

// SetGpu_ids sets the Gpu_ids field's value.
func (s *Service_configForCreateModelServiceInput) SetGpu_ids(v []*int32) *Service_configForCreateModelServiceInput {
	s.Gpu_ids = v
	return s
}

// SetJson_parameter sets the Json_parameter field's value.
func (s *Service_configForCreateModelServiceInput) SetJson_parameter(v string) *Service_configForCreateModelServiceInput {
	s.Json_parameter = &v
	return s
}

// SetMax_batch_size sets the Max_batch_size field's value.
func (s *Service_configForCreateModelServiceInput) SetMax_batch_size(v int64) *Service_configForCreateModelServiceInput {
	s.Max_batch_size = &v
	return s
}

// SetMax_queue_delay_microseconds sets the Max_queue_delay_microseconds field's value.
func (s *Service_configForCreateModelServiceInput) SetMax_queue_delay_microseconds(v int64) *Service_configForCreateModelServiceInput {
	s.Max_queue_delay_microseconds = &v
	return s
}

// SetModel_id sets the Model_id field's value.
func (s *Service_configForCreateModelServiceInput) SetModel_id(v string) *Service_configForCreateModelServiceInput {
	s.Model_id = &v
	return s
}

// SetModel_name sets the Model_name field's value.
func (s *Service_configForCreateModelServiceInput) SetModel_name(v string) *Service_configForCreateModelServiceInput {
	s.Model_name = &v
	return s
}

type Shared_memoryForCreateModelServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Shm_size *int32 `type:"int32" json:"shm_size,omitempty"`

	Shm_size_unit *string `type:"string" json:"shm_size_unit,omitempty"`
}

// String returns the string representation
func (s Shared_memoryForCreateModelServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Shared_memoryForCreateModelServiceInput) GoString() string {
	return s.String()
}

// SetShm_size sets the Shm_size field's value.
func (s *Shared_memoryForCreateModelServiceInput) SetShm_size(v int32) *Shared_memoryForCreateModelServiceInput {
	s.Shm_size = &v
	return s
}

// SetShm_size_unit sets the Shm_size_unit field's value.
func (s *Shared_memoryForCreateModelServiceInput) SetShm_size_unit(v string) *Shared_memoryForCreateModelServiceInput {
	s.Shm_size_unit = &v
	return s
}
