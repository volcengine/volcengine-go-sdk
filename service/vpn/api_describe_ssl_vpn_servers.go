// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeSslVpnServersCommon = "DescribeSslVpnServers"

// DescribeSslVpnServersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSslVpnServersCommon operation. The "output" return
// value will be populated with the DescribeSslVpnServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSslVpnServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSslVpnServersCommon Send returns without error.
//
// See DescribeSslVpnServersCommon for more information on using the DescribeSslVpnServersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSslVpnServersCommonRequest method.
//    req, resp := client.DescribeSslVpnServersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeSslVpnServersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSslVpnServersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSslVpnServersCommon API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation DescribeSslVpnServersCommon for usage and error information.
func (c *VPN) DescribeSslVpnServersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSslVpnServersCommonRequest(input)
	return out, req.Send()
}

// DescribeSslVpnServersCommonWithContext is the same as DescribeSslVpnServersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslVpnServersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeSslVpnServersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSslVpnServersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSslVpnServers = "DescribeSslVpnServers"

// DescribeSslVpnServersRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSslVpnServers operation. The "output" return
// value will be populated with the DescribeSslVpnServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSslVpnServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSslVpnServersCommon Send returns without error.
//
// See DescribeSslVpnServers for more information on using the DescribeSslVpnServers
// API call, and error handling.
//
//    // Example sending a request using the DescribeSslVpnServersRequest method.
//    req, resp := client.DescribeSslVpnServersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeSslVpnServersRequest(input *DescribeSslVpnServersInput) (req *request.Request, output *DescribeSslVpnServersOutput) {
	op := &request.Operation{
		Name:       opDescribeSslVpnServers,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSslVpnServersInput{}
	}

	output = &DescribeSslVpnServersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSslVpnServers API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation DescribeSslVpnServers for usage and error information.
func (c *VPN) DescribeSslVpnServers(input *DescribeSslVpnServersInput) (*DescribeSslVpnServersOutput, error) {
	req, out := c.DescribeSslVpnServersRequest(input)
	return out, req.Send()
}

// DescribeSslVpnServersWithContext is the same as DescribeSslVpnServers with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSslVpnServers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeSslVpnServersWithContext(ctx volcengine.Context, input *DescribeSslVpnServersInput, opts ...request.Option) (*DescribeSslVpnServersOutput, error) {
	req, out := c.DescribeSslVpnServersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSslVpnServersInput struct {
	_ struct{} `type:"structure"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	ProjectName *string `type:"string"`

	SslVpnServerIds []*string `type:"list"`

	SslVpnServerName *string `type:"string"`

	TagFilters []*TagFilterForDescribeSslVpnServersInput `type:"list"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s DescribeSslVpnServersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslVpnServersInput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSslVpnServersInput) SetPageNumber(v int64) *DescribeSslVpnServersInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSslVpnServersInput) SetPageSize(v int64) *DescribeSslVpnServersInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeSslVpnServersInput) SetProjectName(v string) *DescribeSslVpnServersInput {
	s.ProjectName = &v
	return s
}

// SetSslVpnServerIds sets the SslVpnServerIds field's value.
func (s *DescribeSslVpnServersInput) SetSslVpnServerIds(v []*string) *DescribeSslVpnServersInput {
	s.SslVpnServerIds = v
	return s
}

// SetSslVpnServerName sets the SslVpnServerName field's value.
func (s *DescribeSslVpnServersInput) SetSslVpnServerName(v string) *DescribeSslVpnServersInput {
	s.SslVpnServerName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeSslVpnServersInput) SetTagFilters(v []*TagFilterForDescribeSslVpnServersInput) *DescribeSslVpnServersInput {
	s.TagFilters = v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DescribeSslVpnServersInput) SetVpnGatewayId(v string) *DescribeSslVpnServersInput {
	s.VpnGatewayId = &v
	return s
}

type DescribeSslVpnServersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	SslVpnServers []*SslVpnServerForDescribeSslVpnServersOutput `type:"list"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeSslVpnServersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSslVpnServersOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeSslVpnServersOutput) SetPageNumber(v int64) *DescribeSslVpnServersOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeSslVpnServersOutput) SetPageSize(v int64) *DescribeSslVpnServersOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeSslVpnServersOutput) SetRequestId(v string) *DescribeSslVpnServersOutput {
	s.RequestId = &v
	return s
}

// SetSslVpnServers sets the SslVpnServers field's value.
func (s *DescribeSslVpnServersOutput) SetSslVpnServers(v []*SslVpnServerForDescribeSslVpnServersOutput) *DescribeSslVpnServersOutput {
	s.SslVpnServers = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeSslVpnServersOutput) SetTotalCount(v int64) *DescribeSslVpnServersOutput {
	s.TotalCount = &v
	return s
}

type SslVpnServerForDescribeSslVpnServersOutput struct {
	_ struct{} `type:"structure"`

	Auth *string `type:"string"`

	Cipher *string `type:"string"`

	ClientIpPool *string `type:"string"`

	Compress *bool `type:"boolean"`

	CreationTime *string `type:"string"`

	Description *string `type:"string"`

	IsBlocked *bool `type:"boolean"`

	LocalSubnets []*string `type:"list"`

	Port *int64 `type:"integer"`

	ProjectName *string `type:"string"`

	Protocol *string `type:"string"`

	SslVpnServerId *string `type:"string"`

	SslVpnServerName *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeSslVpnServersOutput `type:"list"`

	UpdateTime *string `type:"string"`

	VpnGatewayId *string `type:"string"`
}

// String returns the string representation
func (s SslVpnServerForDescribeSslVpnServersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SslVpnServerForDescribeSslVpnServersOutput) GoString() string {
	return s.String()
}

// SetAuth sets the Auth field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetAuth(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Auth = &v
	return s
}

// SetCipher sets the Cipher field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetCipher(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Cipher = &v
	return s
}

// SetClientIpPool sets the ClientIpPool field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetClientIpPool(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.ClientIpPool = &v
	return s
}

// SetCompress sets the Compress field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetCompress(v bool) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Compress = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetCreationTime(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetDescription(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Description = &v
	return s
}

// SetIsBlocked sets the IsBlocked field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetIsBlocked(v bool) *SslVpnServerForDescribeSslVpnServersOutput {
	s.IsBlocked = &v
	return s
}

// SetLocalSubnets sets the LocalSubnets field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetLocalSubnets(v []*string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.LocalSubnets = v
	return s
}

// SetPort sets the Port field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetPort(v int64) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Port = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetProjectName(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.ProjectName = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetProtocol(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Protocol = &v
	return s
}

// SetSslVpnServerId sets the SslVpnServerId field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetSslVpnServerId(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.SslVpnServerId = &v
	return s
}

// SetSslVpnServerName sets the SslVpnServerName field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetSslVpnServerName(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.SslVpnServerName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetStatus(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetTags(v []*TagForDescribeSslVpnServersOutput) *SslVpnServerForDescribeSslVpnServersOutput {
	s.Tags = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetUpdateTime(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *SslVpnServerForDescribeSslVpnServersOutput) SetVpnGatewayId(v string) *SslVpnServerForDescribeSslVpnServersOutput {
	s.VpnGatewayId = &v
	return s
}

type TagFilterForDescribeSslVpnServersInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeSslVpnServersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeSslVpnServersInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeSslVpnServersInput) SetKey(v string) *TagFilterForDescribeSslVpnServersInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeSslVpnServersInput) SetValues(v []*string) *TagFilterForDescribeSslVpnServersInput {
	s.Values = v
	return s
}

type TagForDescribeSslVpnServersOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeSslVpnServersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeSslVpnServersOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeSslVpnServersOutput) SetKey(v string) *TagForDescribeSslVpnServersOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeSslVpnServersOutput) SetValue(v string) *TagForDescribeSslVpnServersOutput {
	s.Value = &v
	return s
}
