// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeVpnConnectionAttributesCommon = "DescribeVpnConnectionAttributes"

// DescribeVpnConnectionAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVpnConnectionAttributesCommon operation. The "output" return
// value will be populated with the DescribeVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionAttributesCommon Send returns without error.
//
// See DescribeVpnConnectionAttributesCommon for more information on using the DescribeVpnConnectionAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionAttributesCommonRequest method.
//    req, resp := client.DescribeVpnConnectionAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeVpnConnectionAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnectionAttributesCommon API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation DescribeVpnConnectionAttributesCommon for usage and error information.
func (c *VPN) DescribeVpnConnectionAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionAttributesCommonWithContext is the same as DescribeVpnConnectionAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnectionAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeVpnConnectionAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeVpnConnectionAttributes = "DescribeVpnConnectionAttributes"

// DescribeVpnConnectionAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeVpnConnectionAttributes operation. The "output" return
// value will be populated with the DescribeVpnConnectionAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeVpnConnectionAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeVpnConnectionAttributesCommon Send returns without error.
//
// See DescribeVpnConnectionAttributes for more information on using the DescribeVpnConnectionAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeVpnConnectionAttributesRequest method.
//    req, resp := client.DescribeVpnConnectionAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) DescribeVpnConnectionAttributesRequest(input *DescribeVpnConnectionAttributesInput) (req *request.Request, output *DescribeVpnConnectionAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeVpnConnectionAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeVpnConnectionAttributesInput{}
	}

	output = &DescribeVpnConnectionAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeVpnConnectionAttributes API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation DescribeVpnConnectionAttributes for usage and error information.
func (c *VPN) DescribeVpnConnectionAttributes(input *DescribeVpnConnectionAttributesInput) (*DescribeVpnConnectionAttributesOutput, error) {
	req, out := c.DescribeVpnConnectionAttributesRequest(input)
	return out, req.Send()
}

// DescribeVpnConnectionAttributesWithContext is the same as DescribeVpnConnectionAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeVpnConnectionAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) DescribeVpnConnectionAttributesWithContext(ctx volcengine.Context, input *DescribeVpnConnectionAttributesInput, opts ...request.Option) (*DescribeVpnConnectionAttributesOutput, error) {
	req, out := c.DescribeVpnConnectionAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BgpInfoForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	EnableBgp *bool `type:"boolean"`

	LocalAsn *int64 `type:"integer"`

	LocalBgpIp *string `type:"string"`

	PeerAsn *string `type:"string"`

	PeerBgpIp *string `type:"string"`

	SessionStatus *string `type:"string" enum:"SessionStatusForDescribeVpnConnectionAttributesOutput"`

	TunnelCidr *string `type:"string"`
}

// String returns the string representation
func (s BgpInfoForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BgpInfoForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetEnableBgp sets the EnableBgp field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetEnableBgp(v bool) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.EnableBgp = &v
	return s
}

// SetLocalAsn sets the LocalAsn field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetLocalAsn(v int64) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.LocalAsn = &v
	return s
}

// SetLocalBgpIp sets the LocalBgpIp field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetLocalBgpIp(v string) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.LocalBgpIp = &v
	return s
}

// SetPeerAsn sets the PeerAsn field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetPeerAsn(v string) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.PeerAsn = &v
	return s
}

// SetPeerBgpIp sets the PeerBgpIp field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetPeerBgpIp(v string) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.PeerBgpIp = &v
	return s
}

// SetSessionStatus sets the SessionStatus field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetSessionStatus(v string) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.SessionStatus = &v
	return s
}

// SetTunnelCidr sets the TunnelCidr field's value.
func (s *BgpInfoForDescribeVpnConnectionAttributesOutput) SetTunnelCidr(v string) *BgpInfoForDescribeVpnConnectionAttributesOutput {
	s.TunnelCidr = &v
	return s
}

type DescribeVpnConnectionAttributesInput struct {
	_ struct{} `type:"structure"`

	// VpnConnectionId is a required field
	VpnConnectionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeVpnConnectionAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeVpnConnectionAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeVpnConnectionAttributesInput"}
	if s.VpnConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpnConnectionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeVpnConnectionAttributesInput) SetVpnConnectionId(v string) *DescribeVpnConnectionAttributesInput {
	s.VpnConnectionId = &v
	return s
}

type DescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	AttachStatus *string `type:"string"`

	AttachType *string `type:"string"`

	BgpInfo *BgpInfoForDescribeVpnConnectionAttributesOutput `type:"structure"`

	BusinessStatus *string `type:"string"`

	ConnectStatus *string `type:"string"`

	CreationTime *string `type:"string"`

	CustomerGatewayId *string `type:"string"`

	DeletedTime *string `type:"string"`

	Description *string `type:"string"`

	DpdAction *string `type:"string"`

	DualTunnelEnabled *bool `type:"boolean"`

	HealthCheckers []*HealthCheckerForDescribeVpnConnectionAttributesOutput `type:"list"`

	IkeConfig *IkeConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	IpAddress *string `type:"string"`

	IpsecConfig *IpsecConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	IsBlocked *bool `type:"boolean"`

	LocalSubnet []*string `type:"list"`

	LogEnabled *bool `type:"boolean"`

	NatTraversal *bool `type:"boolean"`

	NegotiateInstantly *bool `type:"boolean"`

	OverdueTime *string `type:"string"`

	ProjectName *string `type:"string"`

	RemoteSubnet []*string `type:"list"`

	RequestId *string `type:"string"`

	Spec *string `type:"string"`

	Status *string `type:"string"`

	Tags []*TagForDescribeVpnConnectionAttributesOutput `type:"list"`

	TransitRouterId *string `type:"string"`

	TunnelOptions []*TunnelOptionForDescribeVpnConnectionAttributesOutput `type:"list"`

	UpdateTime *string `type:"string"`

	VpnConnectionId *string `type:"string"`

	VpnConnectionName *string `type:"string"`

	VpnGatewayId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetAccountId(v string) *DescribeVpnConnectionAttributesOutput {
	s.AccountId = &v
	return s
}

// SetAttachStatus sets the AttachStatus field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetAttachStatus(v string) *DescribeVpnConnectionAttributesOutput {
	s.AttachStatus = &v
	return s
}

// SetAttachType sets the AttachType field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetAttachType(v string) *DescribeVpnConnectionAttributesOutput {
	s.AttachType = &v
	return s
}

// SetBgpInfo sets the BgpInfo field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetBgpInfo(v *BgpInfoForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.BgpInfo = v
	return s
}

// SetBusinessStatus sets the BusinessStatus field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetBusinessStatus(v string) *DescribeVpnConnectionAttributesOutput {
	s.BusinessStatus = &v
	return s
}

// SetConnectStatus sets the ConnectStatus field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetConnectStatus(v string) *DescribeVpnConnectionAttributesOutput {
	s.ConnectStatus = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetCreationTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.CreationTime = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetCustomerGatewayId(v string) *DescribeVpnConnectionAttributesOutput {
	s.CustomerGatewayId = &v
	return s
}

// SetDeletedTime sets the DeletedTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetDeletedTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.DeletedTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetDescription(v string) *DescribeVpnConnectionAttributesOutput {
	s.Description = &v
	return s
}

// SetDpdAction sets the DpdAction field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetDpdAction(v string) *DescribeVpnConnectionAttributesOutput {
	s.DpdAction = &v
	return s
}

// SetDualTunnelEnabled sets the DualTunnelEnabled field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetDualTunnelEnabled(v bool) *DescribeVpnConnectionAttributesOutput {
	s.DualTunnelEnabled = &v
	return s
}

// SetHealthCheckers sets the HealthCheckers field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetHealthCheckers(v []*HealthCheckerForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.HealthCheckers = v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIkeConfig(v *IkeConfigForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.IkeConfig = v
	return s
}

// SetIpAddress sets the IpAddress field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIpAddress(v string) *DescribeVpnConnectionAttributesOutput {
	s.IpAddress = &v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIpsecConfig(v *IpsecConfigForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.IpsecConfig = v
	return s
}

// SetIsBlocked sets the IsBlocked field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetIsBlocked(v bool) *DescribeVpnConnectionAttributesOutput {
	s.IsBlocked = &v
	return s
}

// SetLocalSubnet sets the LocalSubnet field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetLocalSubnet(v []*string) *DescribeVpnConnectionAttributesOutput {
	s.LocalSubnet = v
	return s
}

// SetLogEnabled sets the LogEnabled field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetLogEnabled(v bool) *DescribeVpnConnectionAttributesOutput {
	s.LogEnabled = &v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetNatTraversal(v bool) *DescribeVpnConnectionAttributesOutput {
	s.NatTraversal = &v
	return s
}

// SetNegotiateInstantly sets the NegotiateInstantly field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetNegotiateInstantly(v bool) *DescribeVpnConnectionAttributesOutput {
	s.NegotiateInstantly = &v
	return s
}

// SetOverdueTime sets the OverdueTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetOverdueTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.OverdueTime = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetProjectName(v string) *DescribeVpnConnectionAttributesOutput {
	s.ProjectName = &v
	return s
}

// SetRemoteSubnet sets the RemoteSubnet field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetRemoteSubnet(v []*string) *DescribeVpnConnectionAttributesOutput {
	s.RemoteSubnet = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetRequestId(v string) *DescribeVpnConnectionAttributesOutput {
	s.RequestId = &v
	return s
}

// SetSpec sets the Spec field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetSpec(v string) *DescribeVpnConnectionAttributesOutput {
	s.Spec = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetStatus(v string) *DescribeVpnConnectionAttributesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetTags(v []*TagForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.Tags = v
	return s
}

// SetTransitRouterId sets the TransitRouterId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetTransitRouterId(v string) *DescribeVpnConnectionAttributesOutput {
	s.TransitRouterId = &v
	return s
}

// SetTunnelOptions sets the TunnelOptions field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetTunnelOptions(v []*TunnelOptionForDescribeVpnConnectionAttributesOutput) *DescribeVpnConnectionAttributesOutput {
	s.TunnelOptions = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetUpdateTime(v string) *DescribeVpnConnectionAttributesOutput {
	s.UpdateTime = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnConnectionId(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnConnectionId = &v
	return s
}

// SetVpnConnectionName sets the VpnConnectionName field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnConnectionName(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnConnectionName = &v
	return s
}

// SetVpnGatewayId sets the VpnGatewayId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetVpnGatewayId(v string) *DescribeVpnConnectionAttributesOutput {
	s.VpnGatewayId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeVpnConnectionAttributesOutput) SetZoneId(v string) *DescribeVpnConnectionAttributesOutput {
	s.ZoneId = &v
	return s
}

type HealthCheckerForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	CheckInterval *int64 `type:"integer"`

	CheckResult *string `type:"string" enum:"CheckResultForDescribeVpnConnectionAttributesOutput"`

	CheckerId *string `type:"string"`

	DownTime *int64 `type:"integer"`

	LocalIp *string `type:"string"`

	RemoteIp *string `type:"string"`

	Timeout *int64 `type:"integer"`

	UpTime *int64 `type:"integer"`
}

// String returns the string representation
func (s HealthCheckerForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthCheckerForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetCheckInterval sets the CheckInterval field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetCheckInterval(v int64) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.CheckInterval = &v
	return s
}

// SetCheckResult sets the CheckResult field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetCheckResult(v string) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.CheckResult = &v
	return s
}

// SetCheckerId sets the CheckerId field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetCheckerId(v string) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.CheckerId = &v
	return s
}

// SetDownTime sets the DownTime field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetDownTime(v int64) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.DownTime = &v
	return s
}

// SetLocalIp sets the LocalIp field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetLocalIp(v string) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.LocalIp = &v
	return s
}

// SetRemoteIp sets the RemoteIp field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetRemoteIp(v string) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.RemoteIp = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetTimeout(v int64) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.Timeout = &v
	return s
}

// SetUpTime sets the UpTime field's value.
func (s *HealthCheckerForDescribeVpnConnectionAttributesOutput) SetUpTime(v int64) *HealthCheckerForDescribeVpnConnectionAttributesOutput {
	s.UpTime = &v
	return s
}

type IkeConfigForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`

	LocalId *string `type:"string"`

	Mode *string `type:"string"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s IkeConfigForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IkeConfigForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetAuthAlg(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetDhGroup(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetEncAlg(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetLifetime(v int64) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetLocalId(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetMode(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetPsk(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetRemoteId(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *IkeConfigForDescribeVpnConnectionAttributesOutput) SetVersion(v string) *IkeConfigForDescribeVpnConnectionAttributesOutput {
	s.Version = &v
	return s
}

type IpsecConfigForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`
}

// String returns the string representation
func (s IpsecConfigForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpsecConfigForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetAuthAlg(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetDhGroup(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetEncAlg(v string) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IpsecConfigForDescribeVpnConnectionAttributesOutput) SetLifetime(v int64) *IpsecConfigForDescribeVpnConnectionAttributesOutput {
	s.Lifetime = &v
	return s
}

type TagForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeVpnConnectionAttributesOutput) SetKey(v string) *TagForDescribeVpnConnectionAttributesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeVpnConnectionAttributesOutput) SetValue(v string) *TagForDescribeVpnConnectionAttributesOutput {
	s.Value = &v
	return s
}

type TunnelOptionForDescribeVpnConnectionAttributesOutput struct {
	_ struct{} `type:"structure"`

	ConnectStatus *string `type:"string"`

	CustomerGatewayId *string `type:"string"`

	DpdAction *string `type:"string"`

	IkeConfig *IkeConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	IpsecConfig *IpsecConfigForDescribeVpnConnectionAttributesOutput `type:"structure"`

	NatTraversal *bool `type:"boolean"`

	Role *string `type:"string"`

	TunnelId *string `type:"string"`
}

// String returns the string representation
func (s TunnelOptionForDescribeVpnConnectionAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TunnelOptionForDescribeVpnConnectionAttributesOutput) GoString() string {
	return s.String()
}

// SetConnectStatus sets the ConnectStatus field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetConnectStatus(v string) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.ConnectStatus = &v
	return s
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetCustomerGatewayId(v string) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.CustomerGatewayId = &v
	return s
}

// SetDpdAction sets the DpdAction field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetDpdAction(v string) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.DpdAction = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetIkeConfig(v *IkeConfigForDescribeVpnConnectionAttributesOutput) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetIpsecConfig(v *IpsecConfigForDescribeVpnConnectionAttributesOutput) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.IpsecConfig = v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetNatTraversal(v bool) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.NatTraversal = &v
	return s
}

// SetRole sets the Role field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetRole(v string) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.Role = &v
	return s
}

// SetTunnelId sets the TunnelId field's value.
func (s *TunnelOptionForDescribeVpnConnectionAttributesOutput) SetTunnelId(v string) *TunnelOptionForDescribeVpnConnectionAttributesOutput {
	s.TunnelId = &v
	return s
}

const (
	// CheckResultForDescribeVpnConnectionAttributesOutputDown is a CheckResultForDescribeVpnConnectionAttributesOutput enum value
	CheckResultForDescribeVpnConnectionAttributesOutputDown = "Down"

	// CheckResultForDescribeVpnConnectionAttributesOutputUp is a CheckResultForDescribeVpnConnectionAttributesOutput enum value
	CheckResultForDescribeVpnConnectionAttributesOutputUp = " Up"
)

const (
	// SessionStatusForDescribeVpnConnectionAttributesOutputUp is a SessionStatusForDescribeVpnConnectionAttributesOutput enum value
	SessionStatusForDescribeVpnConnectionAttributesOutputUp = "Up"

	// SessionStatusForDescribeVpnConnectionAttributesOutputDown is a SessionStatusForDescribeVpnConnectionAttributesOutput enum value
	SessionStatusForDescribeVpnConnectionAttributesOutputDown = " Down"
)
