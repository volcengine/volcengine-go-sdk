// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vpn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyVpnConnectionTunnelAttributesCommon = "ModifyVpnConnectionTunnelAttributes"

// ModifyVpnConnectionTunnelAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyVpnConnectionTunnelAttributesCommon operation. The "output" return
// value will be populated with the ModifyVpnConnectionTunnelAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnConnectionTunnelAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnConnectionTunnelAttributesCommon Send returns without error.
//
// See ModifyVpnConnectionTunnelAttributesCommon for more information on using the ModifyVpnConnectionTunnelAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnConnectionTunnelAttributesCommonRequest method.
//    req, resp := client.ModifyVpnConnectionTunnelAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnConnectionTunnelAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyVpnConnectionTunnelAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnConnectionTunnelAttributesCommon API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation ModifyVpnConnectionTunnelAttributesCommon for usage and error information.
func (c *VPN) ModifyVpnConnectionTunnelAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnConnectionTunnelAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyVpnConnectionTunnelAttributesCommonWithContext is the same as ModifyVpnConnectionTunnelAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnConnectionTunnelAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnConnectionTunnelAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyVpnConnectionTunnelAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyVpnConnectionTunnelAttributes = "ModifyVpnConnectionTunnelAttributes"

// ModifyVpnConnectionTunnelAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyVpnConnectionTunnelAttributes operation. The "output" return
// value will be populated with the ModifyVpnConnectionTunnelAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyVpnConnectionTunnelAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyVpnConnectionTunnelAttributesCommon Send returns without error.
//
// See ModifyVpnConnectionTunnelAttributes for more information on using the ModifyVpnConnectionTunnelAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyVpnConnectionTunnelAttributesRequest method.
//    req, resp := client.ModifyVpnConnectionTunnelAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VPN) ModifyVpnConnectionTunnelAttributesRequest(input *ModifyVpnConnectionTunnelAttributesInput) (req *request.Request, output *ModifyVpnConnectionTunnelAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyVpnConnectionTunnelAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyVpnConnectionTunnelAttributesInput{}
	}

	output = &ModifyVpnConnectionTunnelAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyVpnConnectionTunnelAttributes API operation for VPN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VPN's
// API operation ModifyVpnConnectionTunnelAttributes for usage and error information.
func (c *VPN) ModifyVpnConnectionTunnelAttributes(input *ModifyVpnConnectionTunnelAttributesInput) (*ModifyVpnConnectionTunnelAttributesOutput, error) {
	req, out := c.ModifyVpnConnectionTunnelAttributesRequest(input)
	return out, req.Send()
}

// ModifyVpnConnectionTunnelAttributesWithContext is the same as ModifyVpnConnectionTunnelAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyVpnConnectionTunnelAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VPN) ModifyVpnConnectionTunnelAttributesWithContext(ctx volcengine.Context, input *ModifyVpnConnectionTunnelAttributesInput, opts ...request.Option) (*ModifyVpnConnectionTunnelAttributesOutput, error) {
	req, out := c.ModifyVpnConnectionTunnelAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type IkeConfigForModifyVpnConnectionTunnelAttributesInput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`

	LocalId *string `type:"string"`

	Mode *string `type:"string"`

	Psk *string `type:"string"`

	RemoteId *string `type:"string"`

	Version *string `type:"string"`
}

// String returns the string representation
func (s IkeConfigForModifyVpnConnectionTunnelAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IkeConfigForModifyVpnConnectionTunnelAttributesInput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetAuthAlg(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetDhGroup(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetEncAlg(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetLifetime(v int64) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.Lifetime = &v
	return s
}

// SetLocalId sets the LocalId field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetLocalId(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.LocalId = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetMode(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.Mode = &v
	return s
}

// SetPsk sets the Psk field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetPsk(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.Psk = &v
	return s
}

// SetRemoteId sets the RemoteId field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetRemoteId(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.RemoteId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *IkeConfigForModifyVpnConnectionTunnelAttributesInput) SetVersion(v string) *IkeConfigForModifyVpnConnectionTunnelAttributesInput {
	s.Version = &v
	return s
}

type IpsecConfigForModifyVpnConnectionTunnelAttributesInput struct {
	_ struct{} `type:"structure"`

	AuthAlg *string `type:"string"`

	DhGroup *string `type:"string"`

	EncAlg *string `type:"string"`

	Lifetime *int64 `type:"integer"`
}

// String returns the string representation
func (s IpsecConfigForModifyVpnConnectionTunnelAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpsecConfigForModifyVpnConnectionTunnelAttributesInput) GoString() string {
	return s.String()
}

// SetAuthAlg sets the AuthAlg field's value.
func (s *IpsecConfigForModifyVpnConnectionTunnelAttributesInput) SetAuthAlg(v string) *IpsecConfigForModifyVpnConnectionTunnelAttributesInput {
	s.AuthAlg = &v
	return s
}

// SetDhGroup sets the DhGroup field's value.
func (s *IpsecConfigForModifyVpnConnectionTunnelAttributesInput) SetDhGroup(v string) *IpsecConfigForModifyVpnConnectionTunnelAttributesInput {
	s.DhGroup = &v
	return s
}

// SetEncAlg sets the EncAlg field's value.
func (s *IpsecConfigForModifyVpnConnectionTunnelAttributesInput) SetEncAlg(v string) *IpsecConfigForModifyVpnConnectionTunnelAttributesInput {
	s.EncAlg = &v
	return s
}

// SetLifetime sets the Lifetime field's value.
func (s *IpsecConfigForModifyVpnConnectionTunnelAttributesInput) SetLifetime(v int64) *IpsecConfigForModifyVpnConnectionTunnelAttributesInput {
	s.Lifetime = &v
	return s
}

type ModifyVpnConnectionTunnelAttributesInput struct {
	_ struct{} `type:"structure"`

	CustomerGatewayId *string `type:"string"`

	DpdAction *string `type:"string"`

	IkeConfig *IkeConfigForModifyVpnConnectionTunnelAttributesInput `type:"structure"`

	IpsecConfig *IpsecConfigForModifyVpnConnectionTunnelAttributesInput `type:"structure"`

	NatTraversal *bool `type:"boolean"`

	// TunnelId is a required field
	TunnelId *string `type:"string" required:"true"`

	// VpnConnectionId is a required field
	VpnConnectionId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyVpnConnectionTunnelAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnConnectionTunnelAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyVpnConnectionTunnelAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyVpnConnectionTunnelAttributesInput"}
	if s.TunnelId == nil {
		invalidParams.Add(request.NewErrParamRequired("TunnelId"))
	}
	if s.VpnConnectionId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpnConnectionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCustomerGatewayId sets the CustomerGatewayId field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetCustomerGatewayId(v string) *ModifyVpnConnectionTunnelAttributesInput {
	s.CustomerGatewayId = &v
	return s
}

// SetDpdAction sets the DpdAction field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetDpdAction(v string) *ModifyVpnConnectionTunnelAttributesInput {
	s.DpdAction = &v
	return s
}

// SetIkeConfig sets the IkeConfig field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetIkeConfig(v *IkeConfigForModifyVpnConnectionTunnelAttributesInput) *ModifyVpnConnectionTunnelAttributesInput {
	s.IkeConfig = v
	return s
}

// SetIpsecConfig sets the IpsecConfig field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetIpsecConfig(v *IpsecConfigForModifyVpnConnectionTunnelAttributesInput) *ModifyVpnConnectionTunnelAttributesInput {
	s.IpsecConfig = v
	return s
}

// SetNatTraversal sets the NatTraversal field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetNatTraversal(v bool) *ModifyVpnConnectionTunnelAttributesInput {
	s.NatTraversal = &v
	return s
}

// SetTunnelId sets the TunnelId field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetTunnelId(v string) *ModifyVpnConnectionTunnelAttributesInput {
	s.TunnelId = &v
	return s
}

// SetVpnConnectionId sets the VpnConnectionId field's value.
func (s *ModifyVpnConnectionTunnelAttributesInput) SetVpnConnectionId(v string) *ModifyVpnConnectionTunnelAttributesInput {
	s.VpnConnectionId = &v
	return s
}

type ModifyVpnConnectionTunnelAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyVpnConnectionTunnelAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyVpnConnectionTunnelAttributesOutput) GoString() string {
	return s.String()
}
