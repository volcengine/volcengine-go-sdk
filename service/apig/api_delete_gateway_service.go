// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteGatewayServiceCommon = "DeleteGatewayService"

// DeleteGatewayServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteGatewayServiceCommon operation. The "output" return
// value will be populated with the DeleteGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteGatewayServiceCommon Send returns without error.
//
// See DeleteGatewayServiceCommon for more information on using the DeleteGatewayServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteGatewayServiceCommonRequest method.
//    req, resp := client.DeleteGatewayServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) DeleteGatewayServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteGatewayServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteGatewayServiceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation DeleteGatewayServiceCommon for usage and error information.
func (c *APIG) DeleteGatewayServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteGatewayServiceCommonRequest(input)
	return out, req.Send()
}

// DeleteGatewayServiceCommonWithContext is the same as DeleteGatewayServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteGatewayServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) DeleteGatewayServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteGatewayServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteGatewayService = "DeleteGatewayService"

// DeleteGatewayServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteGatewayService operation. The "output" return
// value will be populated with the DeleteGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteGatewayServiceCommon Send returns without error.
//
// See DeleteGatewayService for more information on using the DeleteGatewayService
// API call, and error handling.
//
//    // Example sending a request using the DeleteGatewayServiceRequest method.
//    req, resp := client.DeleteGatewayServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) DeleteGatewayServiceRequest(input *DeleteGatewayServiceInput) (req *request.Request, output *DeleteGatewayServiceOutput) {
	op := &request.Operation{
		Name:       opDeleteGatewayService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteGatewayServiceInput{}
	}

	output = &DeleteGatewayServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteGatewayService API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation DeleteGatewayService for usage and error information.
func (c *APIG) DeleteGatewayService(input *DeleteGatewayServiceInput) (*DeleteGatewayServiceOutput, error) {
	req, out := c.DeleteGatewayServiceRequest(input)
	return out, req.Send()
}

// DeleteGatewayServiceWithContext is the same as DeleteGatewayService with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteGatewayService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) DeleteGatewayServiceWithContext(ctx volcengine.Context, input *DeleteGatewayServiceInput, opts ...request.Option) (*DeleteGatewayServiceOutput, error) {
	req, out := c.DeleteGatewayServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteGatewayServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteGatewayServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteGatewayServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteGatewayServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteGatewayServiceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *DeleteGatewayServiceInput) SetId(v string) *DeleteGatewayServiceInput {
	s.Id = &v
	return s
}

type DeleteGatewayServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteGatewayServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteGatewayServiceOutput) GoString() string {
	return s.String()
}
