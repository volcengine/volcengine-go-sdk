// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateGatewayTraceCommon = "UpdateGatewayTrace"

// UpdateGatewayTraceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayTraceCommon operation. The "output" return
// value will be populated with the UpdateGatewayTraceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayTraceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayTraceCommon Send returns without error.
//
// See UpdateGatewayTraceCommon for more information on using the UpdateGatewayTraceCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayTraceCommonRequest method.
//    req, resp := client.UpdateGatewayTraceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayTraceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateGatewayTraceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayTraceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayTraceCommon for usage and error information.
func (c *APIG) UpdateGatewayTraceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayTraceCommonRequest(input)
	return out, req.Send()
}

// UpdateGatewayTraceCommonWithContext is the same as UpdateGatewayTraceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayTraceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayTraceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayTraceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateGatewayTrace = "UpdateGatewayTrace"

// UpdateGatewayTraceRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayTrace operation. The "output" return
// value will be populated with the UpdateGatewayTraceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayTraceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayTraceCommon Send returns without error.
//
// See UpdateGatewayTrace for more information on using the UpdateGatewayTrace
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayTraceRequest method.
//    req, resp := client.UpdateGatewayTraceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayTraceRequest(input *UpdateGatewayTraceInput) (req *request.Request, output *UpdateGatewayTraceOutput) {
	op := &request.Operation{
		Name:       opUpdateGatewayTrace,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateGatewayTraceInput{}
	}

	output = &UpdateGatewayTraceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayTrace API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayTrace for usage and error information.
func (c *APIG) UpdateGatewayTrace(input *UpdateGatewayTraceInput) (*UpdateGatewayTraceOutput, error) {
	req, out := c.UpdateGatewayTraceRequest(input)
	return out, req.Send()
}

// UpdateGatewayTraceWithContext is the same as UpdateGatewayTrace with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayTrace for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayTraceWithContext(ctx volcengine.Context, input *UpdateGatewayTraceInput, opts ...request.Option) (*UpdateGatewayTraceOutput, error) {
	req, out := c.UpdateGatewayTraceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type APMTraceSpecForUpdateGatewayTraceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APIKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s APMTraceSpecForUpdateGatewayTraceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s APMTraceSpecForUpdateGatewayTraceInput) GoString() string {
	return s.String()
}

// SetAPIKey sets the APIKey field's value.
func (s *APMTraceSpecForUpdateGatewayTraceInput) SetAPIKey(v string) *APMTraceSpecForUpdateGatewayTraceInput {
	s.APIKey = &v
	return s
}

type TLSTraceSpecForUpdateGatewayTraceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IAMUserAK *string `type:"string" json:",omitempty"`

	IAMUserSK *string `type:"string" json:",omitempty"`

	ProjectId *string `type:"string" json:",omitempty"`

	TraceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TLSTraceSpecForUpdateGatewayTraceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TLSTraceSpecForUpdateGatewayTraceInput) GoString() string {
	return s.String()
}

// SetIAMUserAK sets the IAMUserAK field's value.
func (s *TLSTraceSpecForUpdateGatewayTraceInput) SetIAMUserAK(v string) *TLSTraceSpecForUpdateGatewayTraceInput {
	s.IAMUserAK = &v
	return s
}

// SetIAMUserSK sets the IAMUserSK field's value.
func (s *TLSTraceSpecForUpdateGatewayTraceInput) SetIAMUserSK(v string) *TLSTraceSpecForUpdateGatewayTraceInput {
	s.IAMUserSK = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *TLSTraceSpecForUpdateGatewayTraceInput) SetProjectId(v string) *TLSTraceSpecForUpdateGatewayTraceInput {
	s.ProjectId = &v
	return s
}

// SetTraceId sets the TraceId field's value.
func (s *TLSTraceSpecForUpdateGatewayTraceInput) SetTraceId(v string) *TLSTraceSpecForUpdateGatewayTraceInput {
	s.TraceId = &v
	return s
}

type TraceSpecForUpdateGatewayTraceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APMTraceSpec *APMTraceSpecForUpdateGatewayTraceInput `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	TLSTraceSpec *TLSTraceSpecForUpdateGatewayTraceInput `type:"structure" json:",omitempty"`

	TraceType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TraceSpecForUpdateGatewayTraceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TraceSpecForUpdateGatewayTraceInput) GoString() string {
	return s.String()
}

// SetAPMTraceSpec sets the APMTraceSpec field's value.
func (s *TraceSpecForUpdateGatewayTraceInput) SetAPMTraceSpec(v *APMTraceSpecForUpdateGatewayTraceInput) *TraceSpecForUpdateGatewayTraceInput {
	s.APMTraceSpec = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *TraceSpecForUpdateGatewayTraceInput) SetEnable(v bool) *TraceSpecForUpdateGatewayTraceInput {
	s.Enable = &v
	return s
}

// SetTLSTraceSpec sets the TLSTraceSpec field's value.
func (s *TraceSpecForUpdateGatewayTraceInput) SetTLSTraceSpec(v *TLSTraceSpecForUpdateGatewayTraceInput) *TraceSpecForUpdateGatewayTraceInput {
	s.TLSTraceSpec = v
	return s
}

// SetTraceType sets the TraceType field's value.
func (s *TraceSpecForUpdateGatewayTraceInput) SetTraceType(v string) *TraceSpecForUpdateGatewayTraceInput {
	s.TraceType = &v
	return s
}

type UpdateGatewayTraceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	TraceSpec *TraceSpecForUpdateGatewayTraceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayTraceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayTraceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateGatewayTraceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateGatewayTraceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *UpdateGatewayTraceInput) SetId(v string) *UpdateGatewayTraceInput {
	s.Id = &v
	return s
}

// SetTraceSpec sets the TraceSpec field's value.
func (s *UpdateGatewayTraceInput) SetTraceSpec(v *TraceSpecForUpdateGatewayTraceInput) *UpdateGatewayTraceInput {
	s.TraceSpec = v
	return s
}

type UpdateGatewayTraceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayTraceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayTraceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateGatewayTraceOutput) SetId(v string) *UpdateGatewayTraceOutput {
	s.Id = &v
	return s
}
