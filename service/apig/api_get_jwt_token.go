// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetJwtTokenCommon = "GetJwtToken"

// GetJwtTokenCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetJwtTokenCommon operation. The "output" return
// value will be populated with the GetJwtTokenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetJwtTokenCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetJwtTokenCommon Send returns without error.
//
// See GetJwtTokenCommon for more information on using the GetJwtTokenCommon
// API call, and error handling.
//
//    // Example sending a request using the GetJwtTokenCommonRequest method.
//    req, resp := client.GetJwtTokenCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetJwtTokenCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetJwtTokenCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetJwtTokenCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetJwtTokenCommon for usage and error information.
func (c *APIG) GetJwtTokenCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetJwtTokenCommonRequest(input)
	return out, req.Send()
}

// GetJwtTokenCommonWithContext is the same as GetJwtTokenCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetJwtTokenCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetJwtTokenCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetJwtTokenCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetJwtToken = "GetJwtToken"

// GetJwtTokenRequest generates a "volcengine/request.Request" representing the
// client's request for the GetJwtToken operation. The "output" return
// value will be populated with the GetJwtTokenCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetJwtTokenCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetJwtTokenCommon Send returns without error.
//
// See GetJwtToken for more information on using the GetJwtToken
// API call, and error handling.
//
//    // Example sending a request using the GetJwtTokenRequest method.
//    req, resp := client.GetJwtTokenRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetJwtTokenRequest(input *GetJwtTokenInput) (req *request.Request, output *GetJwtTokenOutput) {
	op := &request.Operation{
		Name:       opGetJwtToken,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetJwtTokenInput{}
	}

	output = &GetJwtTokenOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetJwtToken API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetJwtToken for usage and error information.
func (c *APIG) GetJwtToken(input *GetJwtTokenInput) (*GetJwtTokenOutput, error) {
	req, out := c.GetJwtTokenRequest(input)
	return out, req.Send()
}

// GetJwtTokenWithContext is the same as GetJwtToken with the addition of
// the ability to pass a context and additional request options.
//
// See GetJwtToken for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetJwtTokenWithContext(ctx volcengine.Context, input *GetJwtTokenInput, opts ...request.Option) (*GetJwtTokenOutput, error) {
	req, out := c.GetJwtTokenRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetJwtTokenInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	GatewayId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetJwtTokenInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetJwtTokenInput) GoString() string {
	return s.String()
}

// SetGatewayId sets the GatewayId field's value.
func (s *GetJwtTokenInput) SetGatewayId(v string) *GetJwtTokenInput {
	s.GatewayId = &v
	return s
}

type GetJwtTokenOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	JwtToken *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetJwtTokenOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetJwtTokenOutput) GoString() string {
	return s.String()
}

// SetJwtToken sets the JwtToken field's value.
func (s *GetJwtTokenOutput) SetJwtToken(v string) *GetJwtTokenOutput {
	s.JwtToken = &v
	return s
}
