// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateUpstreamSourceCommon = "CreateUpstreamSource"

// CreateUpstreamSourceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUpstreamSourceCommon operation. The "output" return
// value will be populated with the CreateUpstreamSourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUpstreamSourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUpstreamSourceCommon Send returns without error.
//
// See CreateUpstreamSourceCommon for more information on using the CreateUpstreamSourceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateUpstreamSourceCommonRequest method.
//    req, resp := client.CreateUpstreamSourceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateUpstreamSourceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateUpstreamSourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateUpstreamSourceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateUpstreamSourceCommon for usage and error information.
func (c *APIG) CreateUpstreamSourceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateUpstreamSourceCommonRequest(input)
	return out, req.Send()
}

// CreateUpstreamSourceCommonWithContext is the same as CreateUpstreamSourceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUpstreamSourceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateUpstreamSourceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateUpstreamSourceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateUpstreamSource = "CreateUpstreamSource"

// CreateUpstreamSourceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUpstreamSource operation. The "output" return
// value will be populated with the CreateUpstreamSourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUpstreamSourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUpstreamSourceCommon Send returns without error.
//
// See CreateUpstreamSource for more information on using the CreateUpstreamSource
// API call, and error handling.
//
//    // Example sending a request using the CreateUpstreamSourceRequest method.
//    req, resp := client.CreateUpstreamSourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateUpstreamSourceRequest(input *CreateUpstreamSourceInput) (req *request.Request, output *CreateUpstreamSourceOutput) {
	op := &request.Operation{
		Name:       opCreateUpstreamSource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateUpstreamSourceInput{}
	}

	output = &CreateUpstreamSourceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateUpstreamSource API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateUpstreamSource for usage and error information.
func (c *APIG) CreateUpstreamSource(input *CreateUpstreamSourceInput) (*CreateUpstreamSourceOutput, error) {
	req, out := c.CreateUpstreamSourceRequest(input)
	return out, req.Send()
}

// CreateUpstreamSourceWithContext is the same as CreateUpstreamSource with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUpstreamSource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateUpstreamSourceWithContext(ctx volcengine.Context, input *CreateUpstreamSourceInput, opts ...request.Option) (*CreateUpstreamSourceOutput, error) {
	req, out := c.CreateUpstreamSourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthConfigForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Basic *BasicForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AuthConfigForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthConfigForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetBasic sets the Basic field's value.
func (s *AuthConfigForCreateUpstreamSourceInput) SetBasic(v *BasicForCreateUpstreamSourceInput) *AuthConfigForCreateUpstreamSourceInput {
	s.Basic = v
	return s
}

type BasicForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BasicForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BasicForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetPassword sets the Password field's value.
func (s *BasicForCreateUpstreamSourceInput) SetPassword(v string) *BasicForCreateUpstreamSourceInput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *BasicForCreateUpstreamSourceInput) SetUsername(v string) *BasicForCreateUpstreamSourceInput {
	s.Username = &v
	return s
}

type CreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	// GatewayId is a required field
	GatewayId *string `type:"string" json:",omitempty" required:"true"`

	IngressSettings *IngressSettingsForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`

	SourceSpec *SourceSpecForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`

	// SourceType is a required field
	SourceType *string `type:"string" json:",omitempty" required:"true"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateUpstreamSourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateUpstreamSourceInput"}
	if s.GatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("GatewayId"))
	}
	if s.SourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetComments sets the Comments field's value.
func (s *CreateUpstreamSourceInput) SetComments(v string) *CreateUpstreamSourceInput {
	s.Comments = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *CreateUpstreamSourceInput) SetGatewayId(v string) *CreateUpstreamSourceInput {
	s.GatewayId = &v
	return s
}

// SetIngressSettings sets the IngressSettings field's value.
func (s *CreateUpstreamSourceInput) SetIngressSettings(v *IngressSettingsForCreateUpstreamSourceInput) *CreateUpstreamSourceInput {
	s.IngressSettings = v
	return s
}

// SetSourceSpec sets the SourceSpec field's value.
func (s *CreateUpstreamSourceInput) SetSourceSpec(v *SourceSpecForCreateUpstreamSourceInput) *CreateUpstreamSourceInput {
	s.SourceSpec = v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *CreateUpstreamSourceInput) SetSourceType(v string) *CreateUpstreamSourceInput {
	s.SourceType = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *CreateUpstreamSourceInput) SetWatchNamespaces(v []*string) *CreateUpstreamSourceInput {
	s.WatchNamespaces = v
	return s
}

type CreateUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateUpstreamSourceOutput) SetId(v string) *CreateUpstreamSourceOutput {
	s.Id = &v
	return s
}

type IngressSettingsForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableAllIngressClasses *bool `type:"boolean" json:",omitempty"`

	EnableAllNamespaces *bool `type:"boolean" json:",omitempty"`

	EnableIngress *bool `type:"boolean" json:",omitempty"`

	EnableIngressWithoutIngressClass *bool `type:"boolean" json:",omitempty"`

	IngressClasses []*string `type:"list" json:",omitempty"`

	UpdateStatus *bool `type:"boolean" json:",omitempty"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s IngressSettingsForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IngressSettingsForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetEnableAllIngressClasses sets the EnableAllIngressClasses field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetEnableAllIngressClasses(v bool) *IngressSettingsForCreateUpstreamSourceInput {
	s.EnableAllIngressClasses = &v
	return s
}

// SetEnableAllNamespaces sets the EnableAllNamespaces field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetEnableAllNamespaces(v bool) *IngressSettingsForCreateUpstreamSourceInput {
	s.EnableAllNamespaces = &v
	return s
}

// SetEnableIngress sets the EnableIngress field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetEnableIngress(v bool) *IngressSettingsForCreateUpstreamSourceInput {
	s.EnableIngress = &v
	return s
}

// SetEnableIngressWithoutIngressClass sets the EnableIngressWithoutIngressClass field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetEnableIngressWithoutIngressClass(v bool) *IngressSettingsForCreateUpstreamSourceInput {
	s.EnableIngressWithoutIngressClass = &v
	return s
}

// SetIngressClasses sets the IngressClasses field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetIngressClasses(v []*string) *IngressSettingsForCreateUpstreamSourceInput {
	s.IngressClasses = v
	return s
}

// SetUpdateStatus sets the UpdateStatus field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetUpdateStatus(v bool) *IngressSettingsForCreateUpstreamSourceInput {
	s.UpdateStatus = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *IngressSettingsForCreateUpstreamSourceInput) SetWatchNamespaces(v []*string) *IngressSettingsForCreateUpstreamSourceInput {
	s.WatchNamespaces = v
	return s
}

type K8SSourceForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s K8SSourceForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s K8SSourceForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *K8SSourceForCreateUpstreamSourceInput) SetClusterId(v string) *K8SSourceForCreateUpstreamSourceInput {
	s.ClusterId = &v
	return s
}

// SetClusterType sets the ClusterType field's value.
func (s *K8SSourceForCreateUpstreamSourceInput) SetClusterType(v string) *K8SSourceForCreateUpstreamSourceInput {
	s.ClusterType = &v
	return s
}

type NacosSourceForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthConfig *AuthConfigForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`

	NacosId *string `type:"string" json:",omitempty"`

	NacosName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NacosSourceForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NacosSourceForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetAuthConfig sets the AuthConfig field's value.
func (s *NacosSourceForCreateUpstreamSourceInput) SetAuthConfig(v *AuthConfigForCreateUpstreamSourceInput) *NacosSourceForCreateUpstreamSourceInput {
	s.AuthConfig = v
	return s
}

// SetNacosId sets the NacosId field's value.
func (s *NacosSourceForCreateUpstreamSourceInput) SetNacosId(v string) *NacosSourceForCreateUpstreamSourceInput {
	s.NacosId = &v
	return s
}

// SetNacosName sets the NacosName field's value.
func (s *NacosSourceForCreateUpstreamSourceInput) SetNacosName(v string) *NacosSourceForCreateUpstreamSourceInput {
	s.NacosName = &v
	return s
}

type SourceSpecForCreateUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	K8SSource *K8SSourceForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`

	NacosSource *NacosSourceForCreateUpstreamSourceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s SourceSpecForCreateUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceSpecForCreateUpstreamSourceInput) GoString() string {
	return s.String()
}

// SetK8SSource sets the K8SSource field's value.
func (s *SourceSpecForCreateUpstreamSourceInput) SetK8SSource(v *K8SSourceForCreateUpstreamSourceInput) *SourceSpecForCreateUpstreamSourceInput {
	s.K8SSource = v
	return s
}

// SetNacosSource sets the NacosSource field's value.
func (s *SourceSpecForCreateUpstreamSourceInput) SetNacosSource(v *NacosSourceForCreateUpstreamSourceInput) *SourceSpecForCreateUpstreamSourceInput {
	s.NacosSource = v
	return s
}
