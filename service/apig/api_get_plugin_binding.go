// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetPluginBindingCommon = "GetPluginBinding"

// GetPluginBindingCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetPluginBindingCommon operation. The "output" return
// value will be populated with the GetPluginBindingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetPluginBindingCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetPluginBindingCommon Send returns without error.
//
// See GetPluginBindingCommon for more information on using the GetPluginBindingCommon
// API call, and error handling.
//
//    // Example sending a request using the GetPluginBindingCommonRequest method.
//    req, resp := client.GetPluginBindingCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetPluginBindingCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetPluginBindingCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetPluginBindingCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetPluginBindingCommon for usage and error information.
func (c *APIG) GetPluginBindingCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetPluginBindingCommonRequest(input)
	return out, req.Send()
}

// GetPluginBindingCommonWithContext is the same as GetPluginBindingCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetPluginBindingCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetPluginBindingCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetPluginBindingCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetPluginBinding = "GetPluginBinding"

// GetPluginBindingRequest generates a "volcengine/request.Request" representing the
// client's request for the GetPluginBinding operation. The "output" return
// value will be populated with the GetPluginBindingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetPluginBindingCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetPluginBindingCommon Send returns without error.
//
// See GetPluginBinding for more information on using the GetPluginBinding
// API call, and error handling.
//
//    // Example sending a request using the GetPluginBindingRequest method.
//    req, resp := client.GetPluginBindingRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetPluginBindingRequest(input *GetPluginBindingInput) (req *request.Request, output *GetPluginBindingOutput) {
	op := &request.Operation{
		Name:       opGetPluginBinding,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetPluginBindingInput{}
	}

	output = &GetPluginBindingOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetPluginBinding API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetPluginBinding for usage and error information.
func (c *APIG) GetPluginBinding(input *GetPluginBindingInput) (*GetPluginBindingOutput, error) {
	req, out := c.GetPluginBindingRequest(input)
	return out, req.Send()
}

// GetPluginBindingWithContext is the same as GetPluginBinding with the addition of
// the ability to pass a context and additional request options.
//
// See GetPluginBinding for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetPluginBindingWithContext(ctx volcengine.Context, input *GetPluginBindingInput, opts ...request.Option) (*GetPluginBindingOutput, error) {
	req, out := c.GetPluginBindingRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetPluginBindingInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	PluginName *string `type:"string" json:",omitempty"`

	Scope *string `type:"string" json:",omitempty"`

	Target *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetPluginBindingInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetPluginBindingInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *GetPluginBindingInput) SetId(v string) *GetPluginBindingInput {
	s.Id = &v
	return s
}

// SetPluginName sets the PluginName field's value.
func (s *GetPluginBindingInput) SetPluginName(v string) *GetPluginBindingInput {
	s.PluginName = &v
	return s
}

// SetScope sets the Scope field's value.
func (s *GetPluginBindingInput) SetScope(v string) *GetPluginBindingInput {
	s.Scope = &v
	return s
}

// SetTarget sets the Target field's value.
func (s *GetPluginBindingInput) SetTarget(v string) *GetPluginBindingInput {
	s.Target = &v
	return s
}

type GetPluginBindingOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Description *string `type:"string" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	GatewayId *string `type:"string" json:",omitempty"`

	GatewayName *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	PluginConfig *string `type:"string" json:",omitempty"`

	PluginName *string `type:"string" json:",omitempty"`

	RouteId *string `type:"string" json:",omitempty"`

	RouteName *string `type:"string" json:",omitempty"`

	Scope *string `type:"string" json:",omitempty"`

	ServiceId *string `type:"string" json:",omitempty"`

	ServiceName *string `type:"string" json:",omitempty"`

	Target *string `type:"string" json:",omitempty"`

	TargetName *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetPluginBindingOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetPluginBindingOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *GetPluginBindingOutput) SetDescription(v string) *GetPluginBindingOutput {
	s.Description = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *GetPluginBindingOutput) SetEnable(v bool) *GetPluginBindingOutput {
	s.Enable = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *GetPluginBindingOutput) SetGatewayId(v string) *GetPluginBindingOutput {
	s.GatewayId = &v
	return s
}

// SetGatewayName sets the GatewayName field's value.
func (s *GetPluginBindingOutput) SetGatewayName(v string) *GetPluginBindingOutput {
	s.GatewayName = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetPluginBindingOutput) SetId(v string) *GetPluginBindingOutput {
	s.Id = &v
	return s
}

// SetPluginConfig sets the PluginConfig field's value.
func (s *GetPluginBindingOutput) SetPluginConfig(v string) *GetPluginBindingOutput {
	s.PluginConfig = &v
	return s
}

// SetPluginName sets the PluginName field's value.
func (s *GetPluginBindingOutput) SetPluginName(v string) *GetPluginBindingOutput {
	s.PluginName = &v
	return s
}

// SetRouteId sets the RouteId field's value.
func (s *GetPluginBindingOutput) SetRouteId(v string) *GetPluginBindingOutput {
	s.RouteId = &v
	return s
}

// SetRouteName sets the RouteName field's value.
func (s *GetPluginBindingOutput) SetRouteName(v string) *GetPluginBindingOutput {
	s.RouteName = &v
	return s
}

// SetScope sets the Scope field's value.
func (s *GetPluginBindingOutput) SetScope(v string) *GetPluginBindingOutput {
	s.Scope = &v
	return s
}

// SetServiceId sets the ServiceId field's value.
func (s *GetPluginBindingOutput) SetServiceId(v string) *GetPluginBindingOutput {
	s.ServiceId = &v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *GetPluginBindingOutput) SetServiceName(v string) *GetPluginBindingOutput {
	s.ServiceName = &v
	return s
}

// SetTarget sets the Target field's value.
func (s *GetPluginBindingOutput) SetTarget(v string) *GetPluginBindingOutput {
	s.Target = &v
	return s
}

// SetTargetName sets the TargetName field's value.
func (s *GetPluginBindingOutput) SetTargetName(v string) *GetPluginBindingOutput {
	s.TargetName = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetPluginBindingOutput) SetUpdateTime(v string) *GetPluginBindingOutput {
	s.UpdateTime = &v
	return s
}
