// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetUpstreamSourceCommon = "GetUpstreamSource"

// GetUpstreamSourceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUpstreamSourceCommon operation. The "output" return
// value will be populated with the GetUpstreamSourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUpstreamSourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUpstreamSourceCommon Send returns without error.
//
// See GetUpstreamSourceCommon for more information on using the GetUpstreamSourceCommon
// API call, and error handling.
//
//    // Example sending a request using the GetUpstreamSourceCommonRequest method.
//    req, resp := client.GetUpstreamSourceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetUpstreamSourceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetUpstreamSourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUpstreamSourceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetUpstreamSourceCommon for usage and error information.
func (c *APIG) GetUpstreamSourceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetUpstreamSourceCommonRequest(input)
	return out, req.Send()
}

// GetUpstreamSourceCommonWithContext is the same as GetUpstreamSourceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetUpstreamSourceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetUpstreamSourceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetUpstreamSourceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetUpstreamSource = "GetUpstreamSource"

// GetUpstreamSourceRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUpstreamSource operation. The "output" return
// value will be populated with the GetUpstreamSourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUpstreamSourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUpstreamSourceCommon Send returns without error.
//
// See GetUpstreamSource for more information on using the GetUpstreamSource
// API call, and error handling.
//
//    // Example sending a request using the GetUpstreamSourceRequest method.
//    req, resp := client.GetUpstreamSourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) GetUpstreamSourceRequest(input *GetUpstreamSourceInput) (req *request.Request, output *GetUpstreamSourceOutput) {
	op := &request.Operation{
		Name:       opGetUpstreamSource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetUpstreamSourceInput{}
	}

	output = &GetUpstreamSourceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUpstreamSource API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation GetUpstreamSource for usage and error information.
func (c *APIG) GetUpstreamSource(input *GetUpstreamSourceInput) (*GetUpstreamSourceOutput, error) {
	req, out := c.GetUpstreamSourceRequest(input)
	return out, req.Send()
}

// GetUpstreamSourceWithContext is the same as GetUpstreamSource with the addition of
// the ability to pass a context and additional request options.
//
// See GetUpstreamSource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) GetUpstreamSourceWithContext(ctx volcengine.Context, input *GetUpstreamSourceInput, opts ...request.Option) (*GetUpstreamSourceOutput, error) {
	req, out := c.GetUpstreamSourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthConfigForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Basic *BasicForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AuthConfigForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthConfigForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetBasic sets the Basic field's value.
func (s *AuthConfigForGetUpstreamSourceOutput) SetBasic(v *BasicForGetUpstreamSourceOutput) *AuthConfigForGetUpstreamSourceOutput {
	s.Basic = v
	return s
}

type BasicForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BasicForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BasicForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetPassword sets the Password field's value.
func (s *BasicForGetUpstreamSourceOutput) SetPassword(v string) *BasicForGetUpstreamSourceOutput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *BasicForGetUpstreamSourceOutput) SetUsername(v string) *BasicForGetUpstreamSourceOutput {
	s.Username = &v
	return s
}

type GetUpstreamSourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetUpstreamSourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUpstreamSourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetUpstreamSourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetUpstreamSourceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetUpstreamSourceInput) SetId(v string) *GetUpstreamSourceInput {
	s.Id = &v
	return s
}

type GetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	UpstreamSource *UpstreamSourceForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetUpstreamSource sets the UpstreamSource field's value.
func (s *GetUpstreamSourceOutput) SetUpstreamSource(v *UpstreamSourceForGetUpstreamSourceOutput) *GetUpstreamSourceOutput {
	s.UpstreamSource = v
	return s
}

type IngressSettingsForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableAllIngressClasses *bool `type:"boolean" json:",omitempty"`

	EnableAllNamespaces *bool `type:"boolean" json:",omitempty"`

	EnableIngress *bool `type:"boolean" json:",omitempty"`

	EnableIngressWithoutIngressClass *bool `type:"boolean" json:",omitempty"`

	IngressClasses []*string `type:"list" json:",omitempty"`

	UpdateStatus *bool `type:"boolean" json:",omitempty"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s IngressSettingsForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IngressSettingsForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetEnableAllIngressClasses sets the EnableAllIngressClasses field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetEnableAllIngressClasses(v bool) *IngressSettingsForGetUpstreamSourceOutput {
	s.EnableAllIngressClasses = &v
	return s
}

// SetEnableAllNamespaces sets the EnableAllNamespaces field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetEnableAllNamespaces(v bool) *IngressSettingsForGetUpstreamSourceOutput {
	s.EnableAllNamespaces = &v
	return s
}

// SetEnableIngress sets the EnableIngress field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetEnableIngress(v bool) *IngressSettingsForGetUpstreamSourceOutput {
	s.EnableIngress = &v
	return s
}

// SetEnableIngressWithoutIngressClass sets the EnableIngressWithoutIngressClass field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetEnableIngressWithoutIngressClass(v bool) *IngressSettingsForGetUpstreamSourceOutput {
	s.EnableIngressWithoutIngressClass = &v
	return s
}

// SetIngressClasses sets the IngressClasses field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetIngressClasses(v []*string) *IngressSettingsForGetUpstreamSourceOutput {
	s.IngressClasses = v
	return s
}

// SetUpdateStatus sets the UpdateStatus field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetUpdateStatus(v bool) *IngressSettingsForGetUpstreamSourceOutput {
	s.UpdateStatus = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *IngressSettingsForGetUpstreamSourceOutput) SetWatchNamespaces(v []*string) *IngressSettingsForGetUpstreamSourceOutput {
	s.WatchNamespaces = v
	return s
}

type K8SSourceForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s K8SSourceForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s K8SSourceForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *K8SSourceForGetUpstreamSourceOutput) SetClusterId(v string) *K8SSourceForGetUpstreamSourceOutput {
	s.ClusterId = &v
	return s
}

// SetClusterType sets the ClusterType field's value.
func (s *K8SSourceForGetUpstreamSourceOutput) SetClusterType(v string) *K8SSourceForGetUpstreamSourceOutput {
	s.ClusterType = &v
	return s
}

type NacosSourceForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthConfig *AuthConfigForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`

	NacosId *string `type:"string" json:",omitempty"`

	NacosName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NacosSourceForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NacosSourceForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetAuthConfig sets the AuthConfig field's value.
func (s *NacosSourceForGetUpstreamSourceOutput) SetAuthConfig(v *AuthConfigForGetUpstreamSourceOutput) *NacosSourceForGetUpstreamSourceOutput {
	s.AuthConfig = v
	return s
}

// SetNacosId sets the NacosId field's value.
func (s *NacosSourceForGetUpstreamSourceOutput) SetNacosId(v string) *NacosSourceForGetUpstreamSourceOutput {
	s.NacosId = &v
	return s
}

// SetNacosName sets the NacosName field's value.
func (s *NacosSourceForGetUpstreamSourceOutput) SetNacosName(v string) *NacosSourceForGetUpstreamSourceOutput {
	s.NacosName = &v
	return s
}

type SourceSpecForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	K8SSource *K8SSourceForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`

	NacosSource *NacosSourceForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s SourceSpecForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceSpecForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetK8SSource sets the K8SSource field's value.
func (s *SourceSpecForGetUpstreamSourceOutput) SetK8SSource(v *K8SSourceForGetUpstreamSourceOutput) *SourceSpecForGetUpstreamSourceOutput {
	s.K8SSource = v
	return s
}

// SetNacosSource sets the NacosSource field's value.
func (s *SourceSpecForGetUpstreamSourceOutput) SetNacosSource(v *NacosSourceForGetUpstreamSourceOutput) *SourceSpecForGetUpstreamSourceOutput {
	s.NacosSource = v
	return s
}

type UpstreamSourceForGetUpstreamSourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	GatewayId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	IngressSettings *IngressSettingsForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`

	SourceSpec *SourceSpecForGetUpstreamSourceOutput `type:"structure" json:",omitempty"`

	SourceType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	StatusMessage *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpstreamSourceForGetUpstreamSourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpstreamSourceForGetUpstreamSourceOutput) GoString() string {
	return s.String()
}

// SetComments sets the Comments field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetComments(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.Comments = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetCreateTime(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.CreateTime = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetGatewayId(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.GatewayId = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetId(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.Id = &v
	return s
}

// SetIngressSettings sets the IngressSettings field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetIngressSettings(v *IngressSettingsForGetUpstreamSourceOutput) *UpstreamSourceForGetUpstreamSourceOutput {
	s.IngressSettings = v
	return s
}

// SetSourceSpec sets the SourceSpec field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetSourceSpec(v *SourceSpecForGetUpstreamSourceOutput) *UpstreamSourceForGetUpstreamSourceOutput {
	s.SourceSpec = v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetSourceType(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.SourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetStatus(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.Status = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetStatusMessage(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.StatusMessage = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetUpdateTime(v string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.UpdateTime = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *UpstreamSourceForGetUpstreamSourceOutput) SetWatchNamespaces(v []*string) *UpstreamSourceForGetUpstreamSourceOutput {
	s.WatchNamespaces = v
	return s
}
