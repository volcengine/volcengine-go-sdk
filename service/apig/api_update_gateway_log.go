// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateGatewayLogCommon = "UpdateGatewayLog"

// UpdateGatewayLogCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayLogCommon operation. The "output" return
// value will be populated with the UpdateGatewayLogCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayLogCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayLogCommon Send returns without error.
//
// See UpdateGatewayLogCommon for more information on using the UpdateGatewayLogCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayLogCommonRequest method.
//    req, resp := client.UpdateGatewayLogCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayLogCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateGatewayLogCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayLogCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayLogCommon for usage and error information.
func (c *APIG) UpdateGatewayLogCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayLogCommonRequest(input)
	return out, req.Send()
}

// UpdateGatewayLogCommonWithContext is the same as UpdateGatewayLogCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayLogCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayLogCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayLogCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateGatewayLog = "UpdateGatewayLog"

// UpdateGatewayLogRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayLog operation. The "output" return
// value will be populated with the UpdateGatewayLogCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayLogCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayLogCommon Send returns without error.
//
// See UpdateGatewayLog for more information on using the UpdateGatewayLog
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayLogRequest method.
//    req, resp := client.UpdateGatewayLogRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayLogRequest(input *UpdateGatewayLogInput) (req *request.Request, output *UpdateGatewayLogOutput) {
	op := &request.Operation{
		Name:       opUpdateGatewayLog,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateGatewayLogInput{}
	}

	output = &UpdateGatewayLogOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayLog API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayLog for usage and error information.
func (c *APIG) UpdateGatewayLog(input *UpdateGatewayLogInput) (*UpdateGatewayLogOutput, error) {
	req, out := c.UpdateGatewayLogRequest(input)
	return out, req.Send()
}

// UpdateGatewayLogWithContext is the same as UpdateGatewayLog with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayLog for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayLogWithContext(ctx volcengine.Context, input *UpdateGatewayLogInput, opts ...request.Option) (*UpdateGatewayLogOutput, error) {
	req, out := c.UpdateGatewayLogRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type LogSpecForUpdateGatewayLogInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	ProjectId *string `type:"string" json:",omitempty"`

	TopicId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LogSpecForUpdateGatewayLogInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LogSpecForUpdateGatewayLogInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *LogSpecForUpdateGatewayLogInput) SetEnable(v bool) *LogSpecForUpdateGatewayLogInput {
	s.Enable = &v
	return s
}

// SetProjectId sets the ProjectId field's value.
func (s *LogSpecForUpdateGatewayLogInput) SetProjectId(v string) *LogSpecForUpdateGatewayLogInput {
	s.ProjectId = &v
	return s
}

// SetTopicId sets the TopicId field's value.
func (s *LogSpecForUpdateGatewayLogInput) SetTopicId(v string) *LogSpecForUpdateGatewayLogInput {
	s.TopicId = &v
	return s
}

type UpdateGatewayLogInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	LogSpec *LogSpecForUpdateGatewayLogInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayLogInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayLogInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateGatewayLogInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateGatewayLogInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *UpdateGatewayLogInput) SetId(v string) *UpdateGatewayLogInput {
	s.Id = &v
	return s
}

// SetLogSpec sets the LogSpec field's value.
func (s *UpdateGatewayLogInput) SetLogSpec(v *LogSpecForUpdateGatewayLogInput) *UpdateGatewayLogInput {
	s.LogSpec = v
	return s
}

type UpdateGatewayLogOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayLogOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayLogOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateGatewayLogOutput) SetId(v string) *UpdateGatewayLogOutput {
	s.Id = &v
	return s
}
