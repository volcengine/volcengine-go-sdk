// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateGatewayServiceCommon = "CreateGatewayService"

// CreateGatewayServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateGatewayServiceCommon operation. The "output" return
// value will be populated with the CreateGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateGatewayServiceCommon Send returns without error.
//
// See CreateGatewayServiceCommon for more information on using the CreateGatewayServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateGatewayServiceCommonRequest method.
//    req, resp := client.CreateGatewayServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateGatewayServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateGatewayServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateGatewayServiceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateGatewayServiceCommon for usage and error information.
func (c *APIG) CreateGatewayServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateGatewayServiceCommonRequest(input)
	return out, req.Send()
}

// CreateGatewayServiceCommonWithContext is the same as CreateGatewayServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateGatewayServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateGatewayServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateGatewayServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateGatewayService = "CreateGatewayService"

// CreateGatewayServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateGatewayService operation. The "output" return
// value will be populated with the CreateGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateGatewayServiceCommon Send returns without error.
//
// See CreateGatewayService for more information on using the CreateGatewayService
// API call, and error handling.
//
//    // Example sending a request using the CreateGatewayServiceRequest method.
//    req, resp := client.CreateGatewayServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateGatewayServiceRequest(input *CreateGatewayServiceInput) (req *request.Request, output *CreateGatewayServiceOutput) {
	op := &request.Operation{
		Name:       opCreateGatewayService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateGatewayServiceInput{}
	}

	output = &CreateGatewayServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateGatewayService API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateGatewayService for usage and error information.
func (c *APIG) CreateGatewayService(input *CreateGatewayServiceInput) (*CreateGatewayServiceOutput, error) {
	req, out := c.CreateGatewayServiceRequest(input)
	return out, req.Send()
}

// CreateGatewayServiceWithContext is the same as CreateGatewayService with the addition of
// the ability to pass a context and additional request options.
//
// See CreateGatewayService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateGatewayServiceWithContext(ctx volcengine.Context, input *CreateGatewayServiceInput, opts ...request.Option) (*CreateGatewayServiceOutput, error) {
	req, out := c.CreateGatewayServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthSpecForCreateGatewayServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AuthSpecForCreateGatewayServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthSpecForCreateGatewayServiceInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *AuthSpecForCreateGatewayServiceInput) SetEnable(v bool) *AuthSpecForCreateGatewayServiceInput {
	s.Enable = &v
	return s
}

type CreateGatewayServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthSpec *AuthSpecForCreateGatewayServiceInput `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	// GatewayId is a required field
	GatewayId *string `type:"string" json:",omitempty" required:"true"`

	Protocol []*string `type:"list" json:",omitempty"`

	// ServiceName is a required field
	ServiceName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateGatewayServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateGatewayServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateGatewayServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateGatewayServiceInput"}
	if s.GatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("GatewayId"))
	}
	if s.ServiceName == nil {
		invalidParams.Add(request.NewErrParamRequired("ServiceName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAuthSpec sets the AuthSpec field's value.
func (s *CreateGatewayServiceInput) SetAuthSpec(v *AuthSpecForCreateGatewayServiceInput) *CreateGatewayServiceInput {
	s.AuthSpec = v
	return s
}

// SetComments sets the Comments field's value.
func (s *CreateGatewayServiceInput) SetComments(v string) *CreateGatewayServiceInput {
	s.Comments = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *CreateGatewayServiceInput) SetGatewayId(v string) *CreateGatewayServiceInput {
	s.GatewayId = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CreateGatewayServiceInput) SetProtocol(v []*string) *CreateGatewayServiceInput {
	s.Protocol = v
	return s
}

// SetServiceName sets the ServiceName field's value.
func (s *CreateGatewayServiceInput) SetServiceName(v string) *CreateGatewayServiceInput {
	s.ServiceName = &v
	return s
}

type CreateGatewayServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateGatewayServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateGatewayServiceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateGatewayServiceOutput) SetId(v string) *CreateGatewayServiceOutput {
	s.Id = &v
	return s
}
