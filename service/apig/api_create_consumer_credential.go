// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateConsumerCredentialCommon = "CreateConsumerCredential"

// CreateConsumerCredentialCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateConsumerCredentialCommon operation. The "output" return
// value will be populated with the CreateConsumerCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateConsumerCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateConsumerCredentialCommon Send returns without error.
//
// See CreateConsumerCredentialCommon for more information on using the CreateConsumerCredentialCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateConsumerCredentialCommonRequest method.
//    req, resp := client.CreateConsumerCredentialCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateConsumerCredentialCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateConsumerCredentialCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateConsumerCredentialCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateConsumerCredentialCommon for usage and error information.
func (c *APIG) CreateConsumerCredentialCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateConsumerCredentialCommonRequest(input)
	return out, req.Send()
}

// CreateConsumerCredentialCommonWithContext is the same as CreateConsumerCredentialCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateConsumerCredentialCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateConsumerCredentialCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateConsumerCredentialCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateConsumerCredential = "CreateConsumerCredential"

// CreateConsumerCredentialRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateConsumerCredential operation. The "output" return
// value will be populated with the CreateConsumerCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateConsumerCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateConsumerCredentialCommon Send returns without error.
//
// See CreateConsumerCredential for more information on using the CreateConsumerCredential
// API call, and error handling.
//
//    // Example sending a request using the CreateConsumerCredentialRequest method.
//    req, resp := client.CreateConsumerCredentialRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) CreateConsumerCredentialRequest(input *CreateConsumerCredentialInput) (req *request.Request, output *CreateConsumerCredentialOutput) {
	op := &request.Operation{
		Name:       opCreateConsumerCredential,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateConsumerCredentialInput{}
	}

	output = &CreateConsumerCredentialOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateConsumerCredential API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation CreateConsumerCredential for usage and error information.
func (c *APIG) CreateConsumerCredential(input *CreateConsumerCredentialInput) (*CreateConsumerCredentialOutput, error) {
	req, out := c.CreateConsumerCredentialRequest(input)
	return out, req.Send()
}

// CreateConsumerCredentialWithContext is the same as CreateConsumerCredential with the addition of
// the ability to pass a context and additional request options.
//
// See CreateConsumerCredential for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) CreateConsumerCredentialWithContext(ctx volcengine.Context, input *CreateConsumerCredentialInput, opts ...request.Option) (*CreateConsumerCredentialOutput, error) {
	req, out := c.CreateConsumerCredentialRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateConsumerCredentialInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ConsumerId is a required field
	ConsumerId *string `type:"string" json:",omitempty" required:"true"`

	// CredentialType is a required field
	CredentialType *string `type:"string" json:",omitempty" required:"true"`

	HmacAuthCredential *HmacAuthCredentialForCreateConsumerCredentialInput `type:"structure" json:",omitempty"`

	KeyAuthCredential *KeyAuthCredentialForCreateConsumerCredentialInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CreateConsumerCredentialInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConsumerCredentialInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateConsumerCredentialInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateConsumerCredentialInput"}
	if s.ConsumerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ConsumerId"))
	}
	if s.CredentialType == nil {
		invalidParams.Add(request.NewErrParamRequired("CredentialType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConsumerId sets the ConsumerId field's value.
func (s *CreateConsumerCredentialInput) SetConsumerId(v string) *CreateConsumerCredentialInput {
	s.ConsumerId = &v
	return s
}

// SetCredentialType sets the CredentialType field's value.
func (s *CreateConsumerCredentialInput) SetCredentialType(v string) *CreateConsumerCredentialInput {
	s.CredentialType = &v
	return s
}

// SetHmacAuthCredential sets the HmacAuthCredential field's value.
func (s *CreateConsumerCredentialInput) SetHmacAuthCredential(v *HmacAuthCredentialForCreateConsumerCredentialInput) *CreateConsumerCredentialInput {
	s.HmacAuthCredential = v
	return s
}

// SetKeyAuthCredential sets the KeyAuthCredential field's value.
func (s *CreateConsumerCredentialInput) SetKeyAuthCredential(v *KeyAuthCredentialForCreateConsumerCredentialInput) *CreateConsumerCredentialInput {
	s.KeyAuthCredential = v
	return s
}

type CreateConsumerCredentialOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateConsumerCredentialOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateConsumerCredentialOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CreateConsumerCredentialOutput) SetId(v string) *CreateConsumerCredentialOutput {
	s.Id = &v
	return s
}

type HmacAuthCredentialForCreateConsumerCredentialInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s HmacAuthCredentialForCreateConsumerCredentialInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HmacAuthCredentialForCreateConsumerCredentialInput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *HmacAuthCredentialForCreateConsumerCredentialInput) SetAccessKey(v string) *HmacAuthCredentialForCreateConsumerCredentialInput {
	s.AccessKey = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *HmacAuthCredentialForCreateConsumerCredentialInput) SetSecretKey(v string) *HmacAuthCredentialForCreateConsumerCredentialInput {
	s.SecretKey = &v
	return s
}

type KeyAuthCredentialForCreateConsumerCredentialInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APIKey *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s KeyAuthCredentialForCreateConsumerCredentialInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s KeyAuthCredentialForCreateConsumerCredentialInput) GoString() string {
	return s.String()
}

// SetAPIKey sets the APIKey field's value.
func (s *KeyAuthCredentialForCreateConsumerCredentialInput) SetAPIKey(v string) *KeyAuthCredentialForCreateConsumerCredentialInput {
	s.APIKey = &v
	return s
}
