// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListUpstreamSourcesCommon = "ListUpstreamSources"

// ListUpstreamSourcesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUpstreamSourcesCommon operation. The "output" return
// value will be populated with the ListUpstreamSourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUpstreamSourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUpstreamSourcesCommon Send returns without error.
//
// See ListUpstreamSourcesCommon for more information on using the ListUpstreamSourcesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListUpstreamSourcesCommonRequest method.
//    req, resp := client.ListUpstreamSourcesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) ListUpstreamSourcesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListUpstreamSourcesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUpstreamSourcesCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation ListUpstreamSourcesCommon for usage and error information.
func (c *APIG) ListUpstreamSourcesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListUpstreamSourcesCommonRequest(input)
	return out, req.Send()
}

// ListUpstreamSourcesCommonWithContext is the same as ListUpstreamSourcesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListUpstreamSourcesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) ListUpstreamSourcesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListUpstreamSourcesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListUpstreamSources = "ListUpstreamSources"

// ListUpstreamSourcesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUpstreamSources operation. The "output" return
// value will be populated with the ListUpstreamSourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUpstreamSourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUpstreamSourcesCommon Send returns without error.
//
// See ListUpstreamSources for more information on using the ListUpstreamSources
// API call, and error handling.
//
//    // Example sending a request using the ListUpstreamSourcesRequest method.
//    req, resp := client.ListUpstreamSourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) ListUpstreamSourcesRequest(input *ListUpstreamSourcesInput) (req *request.Request, output *ListUpstreamSourcesOutput) {
	op := &request.Operation{
		Name:       opListUpstreamSources,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListUpstreamSourcesInput{}
	}

	output = &ListUpstreamSourcesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUpstreamSources API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation ListUpstreamSources for usage and error information.
func (c *APIG) ListUpstreamSources(input *ListUpstreamSourcesInput) (*ListUpstreamSourcesOutput, error) {
	req, out := c.ListUpstreamSourcesRequest(input)
	return out, req.Send()
}

// ListUpstreamSourcesWithContext is the same as ListUpstreamSources with the addition of
// the ability to pass a context and additional request options.
//
// See ListUpstreamSources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) ListUpstreamSourcesWithContext(ctx volcengine.Context, input *ListUpstreamSourcesInput, opts ...request.Option) (*ListUpstreamSourcesOutput, error) {
	req, out := c.ListUpstreamSourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthConfigForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Basic *BasicForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AuthConfigForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthConfigForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetBasic sets the Basic field's value.
func (s *AuthConfigForListUpstreamSourcesOutput) SetBasic(v *BasicForListUpstreamSourcesOutput) *AuthConfigForListUpstreamSourcesOutput {
	s.Basic = v
	return s
}

type BasicForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BasicForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BasicForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetPassword sets the Password field's value.
func (s *BasicForListUpstreamSourcesOutput) SetPassword(v string) *BasicForListUpstreamSourcesOutput {
	s.Password = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *BasicForListUpstreamSourcesOutput) SetUsername(v string) *BasicForListUpstreamSourcesOutput {
	s.Username = &v
	return s
}

type FilterForListUpstreamSourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:"name,omitempty"`

	SourceType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListUpstreamSourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListUpstreamSourcesInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *FilterForListUpstreamSourcesInput) SetName(v string) *FilterForListUpstreamSourcesInput {
	s.Name = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *FilterForListUpstreamSourcesInput) SetSourceType(v string) *FilterForListUpstreamSourcesInput {
	s.SourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *FilterForListUpstreamSourcesInput) SetStatus(v string) *FilterForListUpstreamSourcesInput {
	s.Status = &v
	return s
}

type IngressSettingsFilterForListUpstreamSourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableIngress *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s IngressSettingsFilterForListUpstreamSourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IngressSettingsFilterForListUpstreamSourcesInput) GoString() string {
	return s.String()
}

// SetEnableIngress sets the EnableIngress field's value.
func (s *IngressSettingsFilterForListUpstreamSourcesInput) SetEnableIngress(v bool) *IngressSettingsFilterForListUpstreamSourcesInput {
	s.EnableIngress = &v
	return s
}

type IngressSettingsForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EnableAllIngressClasses *bool `type:"boolean" json:",omitempty"`

	EnableAllNamespaces *bool `type:"boolean" json:",omitempty"`

	EnableIngress *bool `type:"boolean" json:",omitempty"`

	EnableIngressWithoutIngressClass *bool `type:"boolean" json:",omitempty"`

	IngressClasses []*string `type:"list" json:",omitempty"`

	UpdateStatus *bool `type:"boolean" json:",omitempty"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s IngressSettingsForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IngressSettingsForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetEnableAllIngressClasses sets the EnableAllIngressClasses field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetEnableAllIngressClasses(v bool) *IngressSettingsForListUpstreamSourcesOutput {
	s.EnableAllIngressClasses = &v
	return s
}

// SetEnableAllNamespaces sets the EnableAllNamespaces field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetEnableAllNamespaces(v bool) *IngressSettingsForListUpstreamSourcesOutput {
	s.EnableAllNamespaces = &v
	return s
}

// SetEnableIngress sets the EnableIngress field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetEnableIngress(v bool) *IngressSettingsForListUpstreamSourcesOutput {
	s.EnableIngress = &v
	return s
}

// SetEnableIngressWithoutIngressClass sets the EnableIngressWithoutIngressClass field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetEnableIngressWithoutIngressClass(v bool) *IngressSettingsForListUpstreamSourcesOutput {
	s.EnableIngressWithoutIngressClass = &v
	return s
}

// SetIngressClasses sets the IngressClasses field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetIngressClasses(v []*string) *IngressSettingsForListUpstreamSourcesOutput {
	s.IngressClasses = v
	return s
}

// SetUpdateStatus sets the UpdateStatus field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetUpdateStatus(v bool) *IngressSettingsForListUpstreamSourcesOutput {
	s.UpdateStatus = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *IngressSettingsForListUpstreamSourcesOutput) SetWatchNamespaces(v []*string) *IngressSettingsForListUpstreamSourcesOutput {
	s.WatchNamespaces = v
	return s
}

type ItemForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	GatewayId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	IngressSettings *IngressSettingsForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`

	SourceSpec *SourceSpecForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`

	SourceType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	StatusMessage *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	WatchNamespaces []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetComments sets the Comments field's value.
func (s *ItemForListUpstreamSourcesOutput) SetComments(v string) *ItemForListUpstreamSourcesOutput {
	s.Comments = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListUpstreamSourcesOutput) SetCreateTime(v string) *ItemForListUpstreamSourcesOutput {
	s.CreateTime = &v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *ItemForListUpstreamSourcesOutput) SetGatewayId(v string) *ItemForListUpstreamSourcesOutput {
	s.GatewayId = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListUpstreamSourcesOutput) SetId(v string) *ItemForListUpstreamSourcesOutput {
	s.Id = &v
	return s
}

// SetIngressSettings sets the IngressSettings field's value.
func (s *ItemForListUpstreamSourcesOutput) SetIngressSettings(v *IngressSettingsForListUpstreamSourcesOutput) *ItemForListUpstreamSourcesOutput {
	s.IngressSettings = v
	return s
}

// SetSourceSpec sets the SourceSpec field's value.
func (s *ItemForListUpstreamSourcesOutput) SetSourceSpec(v *SourceSpecForListUpstreamSourcesOutput) *ItemForListUpstreamSourcesOutput {
	s.SourceSpec = v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *ItemForListUpstreamSourcesOutput) SetSourceType(v string) *ItemForListUpstreamSourcesOutput {
	s.SourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListUpstreamSourcesOutput) SetStatus(v string) *ItemForListUpstreamSourcesOutput {
	s.Status = &v
	return s
}

// SetStatusMessage sets the StatusMessage field's value.
func (s *ItemForListUpstreamSourcesOutput) SetStatusMessage(v string) *ItemForListUpstreamSourcesOutput {
	s.StatusMessage = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListUpstreamSourcesOutput) SetUpdateTime(v string) *ItemForListUpstreamSourcesOutput {
	s.UpdateTime = &v
	return s
}

// SetWatchNamespaces sets the WatchNamespaces field's value.
func (s *ItemForListUpstreamSourcesOutput) SetWatchNamespaces(v []*string) *ItemForListUpstreamSourcesOutput {
	s.WatchNamespaces = v
	return s
}

type K8SSourceForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s K8SSourceForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s K8SSourceForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *K8SSourceForListUpstreamSourcesOutput) SetClusterId(v string) *K8SSourceForListUpstreamSourcesOutput {
	s.ClusterId = &v
	return s
}

// SetClusterType sets the ClusterType field's value.
func (s *K8SSourceForListUpstreamSourcesOutput) SetClusterType(v string) *K8SSourceForListUpstreamSourcesOutput {
	s.ClusterType = &v
	return s
}

type ListUpstreamSourcesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListUpstreamSourcesInput `type:"structure" json:",omitempty"`

	GatewayId *string `type:"string" json:",omitempty"`

	IngressSettingsFilter *IngressSettingsFilterForListUpstreamSourcesInput `type:"structure" json:",omitempty"`

	PageNumber *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListUpstreamSourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUpstreamSourcesInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListUpstreamSourcesInput) SetFilter(v *FilterForListUpstreamSourcesInput) *ListUpstreamSourcesInput {
	s.Filter = v
	return s
}

// SetGatewayId sets the GatewayId field's value.
func (s *ListUpstreamSourcesInput) SetGatewayId(v string) *ListUpstreamSourcesInput {
	s.GatewayId = &v
	return s
}

// SetIngressSettingsFilter sets the IngressSettingsFilter field's value.
func (s *ListUpstreamSourcesInput) SetIngressSettingsFilter(v *IngressSettingsFilterForListUpstreamSourcesInput) *ListUpstreamSourcesInput {
	s.IngressSettingsFilter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListUpstreamSourcesInput) SetPageNumber(v int64) *ListUpstreamSourcesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListUpstreamSourcesInput) SetPageSize(v int64) *ListUpstreamSourcesInput {
	s.PageSize = &v
	return s
}

type ListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListUpstreamSourcesOutput `type:"list" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListUpstreamSourcesOutput) SetItems(v []*ItemForListUpstreamSourcesOutput) *ListUpstreamSourcesOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListUpstreamSourcesOutput) SetTotal(v int64) *ListUpstreamSourcesOutput {
	s.Total = &v
	return s
}

type NacosSourceForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthConfig *AuthConfigForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`

	NacosId *string `type:"string" json:",omitempty"`

	NacosName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NacosSourceForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NacosSourceForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetAuthConfig sets the AuthConfig field's value.
func (s *NacosSourceForListUpstreamSourcesOutput) SetAuthConfig(v *AuthConfigForListUpstreamSourcesOutput) *NacosSourceForListUpstreamSourcesOutput {
	s.AuthConfig = v
	return s
}

// SetNacosId sets the NacosId field's value.
func (s *NacosSourceForListUpstreamSourcesOutput) SetNacosId(v string) *NacosSourceForListUpstreamSourcesOutput {
	s.NacosId = &v
	return s
}

// SetNacosName sets the NacosName field's value.
func (s *NacosSourceForListUpstreamSourcesOutput) SetNacosName(v string) *NacosSourceForListUpstreamSourcesOutput {
	s.NacosName = &v
	return s
}

type SourceSpecForListUpstreamSourcesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	K8SSource *K8SSourceForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`

	NacosSource *NacosSourceForListUpstreamSourcesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s SourceSpecForListUpstreamSourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceSpecForListUpstreamSourcesOutput) GoString() string {
	return s.String()
}

// SetK8SSource sets the K8SSource field's value.
func (s *SourceSpecForListUpstreamSourcesOutput) SetK8SSource(v *K8SSourceForListUpstreamSourcesOutput) *SourceSpecForListUpstreamSourcesOutput {
	s.K8SSource = v
	return s
}

// SetNacosSource sets the NacosSource field's value.
func (s *SourceSpecForListUpstreamSourcesOutput) SetNacosSource(v *NacosSourceForListUpstreamSourcesOutput) *SourceSpecForListUpstreamSourcesOutput {
	s.NacosSource = v
	return s
}
