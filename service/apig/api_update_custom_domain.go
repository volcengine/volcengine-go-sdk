// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateCustomDomainCommon = "UpdateCustomDomain"

// UpdateCustomDomainCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomDomainCommon operation. The "output" return
// value will be populated with the UpdateCustomDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomDomainCommon Send returns without error.
//
// See UpdateCustomDomainCommon for more information on using the UpdateCustomDomainCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomDomainCommonRequest method.
//    req, resp := client.UpdateCustomDomainCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateCustomDomainCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateCustomDomainCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomDomainCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateCustomDomainCommon for usage and error information.
func (c *APIG) UpdateCustomDomainCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomDomainCommonRequest(input)
	return out, req.Send()
}

// UpdateCustomDomainCommonWithContext is the same as UpdateCustomDomainCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomDomainCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateCustomDomainCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateCustomDomainCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateCustomDomain = "UpdateCustomDomain"

// UpdateCustomDomainRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateCustomDomain operation. The "output" return
// value will be populated with the UpdateCustomDomainCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateCustomDomainCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateCustomDomainCommon Send returns without error.
//
// See UpdateCustomDomain for more information on using the UpdateCustomDomain
// API call, and error handling.
//
//    // Example sending a request using the UpdateCustomDomainRequest method.
//    req, resp := client.UpdateCustomDomainRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateCustomDomainRequest(input *UpdateCustomDomainInput) (req *request.Request, output *UpdateCustomDomainOutput) {
	op := &request.Operation{
		Name:       opUpdateCustomDomain,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateCustomDomainInput{}
	}

	output = &UpdateCustomDomainOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateCustomDomain API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateCustomDomain for usage and error information.
func (c *APIG) UpdateCustomDomain(input *UpdateCustomDomainInput) (*UpdateCustomDomainOutput, error) {
	req, out := c.UpdateCustomDomainRequest(input)
	return out, req.Send()
}

// UpdateCustomDomainWithContext is the same as UpdateCustomDomain with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateCustomDomain for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateCustomDomainWithContext(ctx volcengine.Context, input *UpdateCustomDomainInput, opts ...request.Option) (*UpdateCustomDomainOutput, error) {
	req, out := c.UpdateCustomDomainRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateCustomDomainInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CertificateId *string `type:"string" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Protocol []*string `type:"list" json:",omitempty"`

	SSLRedirect *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s UpdateCustomDomainInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomDomainInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateCustomDomainInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateCustomDomainInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCertificateId sets the CertificateId field's value.
func (s *UpdateCustomDomainInput) SetCertificateId(v string) *UpdateCustomDomainInput {
	s.CertificateId = &v
	return s
}

// SetComments sets the Comments field's value.
func (s *UpdateCustomDomainInput) SetComments(v string) *UpdateCustomDomainInput {
	s.Comments = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateCustomDomainInput) SetId(v string) *UpdateCustomDomainInput {
	s.Id = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *UpdateCustomDomainInput) SetProtocol(v []*string) *UpdateCustomDomainInput {
	s.Protocol = v
	return s
}

// SetSSLRedirect sets the SSLRedirect field's value.
func (s *UpdateCustomDomainInput) SetSSLRedirect(v bool) *UpdateCustomDomainInput {
	s.SSLRedirect = &v
	return s
}

type UpdateCustomDomainOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateCustomDomainOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateCustomDomainOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateCustomDomainOutput) SetId(v string) *UpdateCustomDomainOutput {
	s.Id = &v
	return s
}
