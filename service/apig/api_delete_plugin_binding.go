// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeletePluginBindingCommon = "DeletePluginBinding"

// DeletePluginBindingCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeletePluginBindingCommon operation. The "output" return
// value will be populated with the DeletePluginBindingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeletePluginBindingCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeletePluginBindingCommon Send returns without error.
//
// See DeletePluginBindingCommon for more information on using the DeletePluginBindingCommon
// API call, and error handling.
//
//    // Example sending a request using the DeletePluginBindingCommonRequest method.
//    req, resp := client.DeletePluginBindingCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) DeletePluginBindingCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeletePluginBindingCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeletePluginBindingCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation DeletePluginBindingCommon for usage and error information.
func (c *APIG) DeletePluginBindingCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeletePluginBindingCommonRequest(input)
	return out, req.Send()
}

// DeletePluginBindingCommonWithContext is the same as DeletePluginBindingCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeletePluginBindingCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) DeletePluginBindingCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeletePluginBindingCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeletePluginBinding = "DeletePluginBinding"

// DeletePluginBindingRequest generates a "volcengine/request.Request" representing the
// client's request for the DeletePluginBinding operation. The "output" return
// value will be populated with the DeletePluginBindingCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeletePluginBindingCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeletePluginBindingCommon Send returns without error.
//
// See DeletePluginBinding for more information on using the DeletePluginBinding
// API call, and error handling.
//
//    // Example sending a request using the DeletePluginBindingRequest method.
//    req, resp := client.DeletePluginBindingRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) DeletePluginBindingRequest(input *DeletePluginBindingInput) (req *request.Request, output *DeletePluginBindingOutput) {
	op := &request.Operation{
		Name:       opDeletePluginBinding,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeletePluginBindingInput{}
	}

	output = &DeletePluginBindingOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeletePluginBinding API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation DeletePluginBinding for usage and error information.
func (c *APIG) DeletePluginBinding(input *DeletePluginBindingInput) (*DeletePluginBindingOutput, error) {
	req, out := c.DeletePluginBindingRequest(input)
	return out, req.Send()
}

// DeletePluginBindingWithContext is the same as DeletePluginBinding with the addition of
// the ability to pass a context and additional request options.
//
// See DeletePluginBinding for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) DeletePluginBindingWithContext(ctx volcengine.Context, input *DeletePluginBindingInput, opts ...request.Option) (*DeletePluginBindingOutput, error) {
	req, out := c.DeletePluginBindingRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeletePluginBindingInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeletePluginBindingInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeletePluginBindingInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeletePluginBindingInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeletePluginBindingInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *DeletePluginBindingInput) SetId(v string) *DeletePluginBindingInput {
	s.Id = &v
	return s
}

type DeletePluginBindingOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeletePluginBindingOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeletePluginBindingOutput) GoString() string {
	return s.String()
}
