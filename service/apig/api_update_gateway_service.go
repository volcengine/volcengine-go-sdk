// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateGatewayServiceCommon = "UpdateGatewayService"

// UpdateGatewayServiceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayServiceCommon operation. The "output" return
// value will be populated with the UpdateGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayServiceCommon Send returns without error.
//
// See UpdateGatewayServiceCommon for more information on using the UpdateGatewayServiceCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayServiceCommonRequest method.
//    req, resp := client.UpdateGatewayServiceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayServiceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateGatewayServiceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayServiceCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayServiceCommon for usage and error information.
func (c *APIG) UpdateGatewayServiceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayServiceCommonRequest(input)
	return out, req.Send()
}

// UpdateGatewayServiceCommonWithContext is the same as UpdateGatewayServiceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayServiceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayServiceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateGatewayServiceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateGatewayService = "UpdateGatewayService"

// UpdateGatewayServiceRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGatewayService operation. The "output" return
// value will be populated with the UpdateGatewayServiceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGatewayServiceCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGatewayServiceCommon Send returns without error.
//
// See UpdateGatewayService for more information on using the UpdateGatewayService
// API call, and error handling.
//
//    // Example sending a request using the UpdateGatewayServiceRequest method.
//    req, resp := client.UpdateGatewayServiceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateGatewayServiceRequest(input *UpdateGatewayServiceInput) (req *request.Request, output *UpdateGatewayServiceOutput) {
	op := &request.Operation{
		Name:       opUpdateGatewayService,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateGatewayServiceInput{}
	}

	output = &UpdateGatewayServiceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGatewayService API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateGatewayService for usage and error information.
func (c *APIG) UpdateGatewayService(input *UpdateGatewayServiceInput) (*UpdateGatewayServiceOutput, error) {
	req, out := c.UpdateGatewayServiceRequest(input)
	return out, req.Send()
}

// UpdateGatewayServiceWithContext is the same as UpdateGatewayService with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGatewayService for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateGatewayServiceWithContext(ctx volcengine.Context, input *UpdateGatewayServiceInput, opts ...request.Option) (*UpdateGatewayServiceOutput, error) {
	req, out := c.UpdateGatewayServiceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthSpecForUpdateGatewayServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s AuthSpecForUpdateGatewayServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthSpecForUpdateGatewayServiceInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *AuthSpecForUpdateGatewayServiceInput) SetEnable(v bool) *AuthSpecForUpdateGatewayServiceInput {
	s.Enable = &v
	return s
}

type UpdateGatewayServiceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthSpec *AuthSpecForUpdateGatewayServiceInput `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	Protocol []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayServiceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayServiceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateGatewayServiceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateGatewayServiceInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAuthSpec sets the AuthSpec field's value.
func (s *UpdateGatewayServiceInput) SetAuthSpec(v *AuthSpecForUpdateGatewayServiceInput) *UpdateGatewayServiceInput {
	s.AuthSpec = v
	return s
}

// SetComments sets the Comments field's value.
func (s *UpdateGatewayServiceInput) SetComments(v string) *UpdateGatewayServiceInput {
	s.Comments = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateGatewayServiceInput) SetId(v string) *UpdateGatewayServiceInput {
	s.Id = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *UpdateGatewayServiceInput) SetProtocol(v []*string) *UpdateGatewayServiceInput {
	s.Protocol = v
	return s
}

type UpdateGatewayServiceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGatewayServiceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGatewayServiceOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateGatewayServiceOutput) SetId(v string) *UpdateGatewayServiceOutput {
	s.Id = &v
	return s
}
