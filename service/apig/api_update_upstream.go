// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateUpstreamCommon = "UpdateUpstream"

// UpdateUpstreamCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateUpstreamCommon operation. The "output" return
// value will be populated with the UpdateUpstreamCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateUpstreamCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateUpstreamCommon Send returns without error.
//
// See UpdateUpstreamCommon for more information on using the UpdateUpstreamCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateUpstreamCommonRequest method.
//    req, resp := client.UpdateUpstreamCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateUpstreamCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateUpstreamCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateUpstreamCommon API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateUpstreamCommon for usage and error information.
func (c *APIG) UpdateUpstreamCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateUpstreamCommonRequest(input)
	return out, req.Send()
}

// UpdateUpstreamCommonWithContext is the same as UpdateUpstreamCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateUpstreamCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateUpstreamCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateUpstreamCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateUpstream = "UpdateUpstream"

// UpdateUpstreamRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateUpstream operation. The "output" return
// value will be populated with the UpdateUpstreamCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateUpstreamCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateUpstreamCommon Send returns without error.
//
// See UpdateUpstream for more information on using the UpdateUpstream
// API call, and error handling.
//
//    // Example sending a request using the UpdateUpstreamRequest method.
//    req, resp := client.UpdateUpstreamRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG) UpdateUpstreamRequest(input *UpdateUpstreamInput) (req *request.Request, output *UpdateUpstreamOutput) {
	op := &request.Operation{
		Name:       opUpdateUpstream,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateUpstreamInput{}
	}

	output = &UpdateUpstreamOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateUpstream API operation for APIG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG's
// API operation UpdateUpstream for usage and error information.
func (c *APIG) UpdateUpstream(input *UpdateUpstreamInput) (*UpdateUpstreamOutput, error) {
	req, out := c.UpdateUpstreamRequest(input)
	return out, req.Send()
}

// UpdateUpstreamWithContext is the same as UpdateUpstream with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateUpstream for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG) UpdateUpstreamWithContext(ctx volcengine.Context, input *UpdateUpstreamInput, opts ...request.Option) (*UpdateUpstreamOutput, error) {
	req, out := c.UpdateUpstreamRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AIProviderForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BaseUrl *string `type:"string" json:",omitempty"`

	CustomBodyParams *CustomBodyParamsForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	CustomHeaderParams *CustomHeaderParamsForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	CustomModelService *CustomModelServiceForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Token *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AIProviderForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AIProviderForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetBaseUrl sets the BaseUrl field's value.
func (s *AIProviderForUpdateUpstreamInput) SetBaseUrl(v string) *AIProviderForUpdateUpstreamInput {
	s.BaseUrl = &v
	return s
}

// SetCustomBodyParams sets the CustomBodyParams field's value.
func (s *AIProviderForUpdateUpstreamInput) SetCustomBodyParams(v *CustomBodyParamsForUpdateUpstreamInput) *AIProviderForUpdateUpstreamInput {
	s.CustomBodyParams = v
	return s
}

// SetCustomHeaderParams sets the CustomHeaderParams field's value.
func (s *AIProviderForUpdateUpstreamInput) SetCustomHeaderParams(v *CustomHeaderParamsForUpdateUpstreamInput) *AIProviderForUpdateUpstreamInput {
	s.CustomHeaderParams = v
	return s
}

// SetCustomModelService sets the CustomModelService field's value.
func (s *AIProviderForUpdateUpstreamInput) SetCustomModelService(v *CustomModelServiceForUpdateUpstreamInput) *AIProviderForUpdateUpstreamInput {
	s.CustomModelService = v
	return s
}

// SetName sets the Name field's value.
func (s *AIProviderForUpdateUpstreamInput) SetName(v string) *AIProviderForUpdateUpstreamInput {
	s.Name = &v
	return s
}

// SetToken sets the Token field's value.
func (s *AIProviderForUpdateUpstreamInput) SetToken(v string) *AIProviderForUpdateUpstreamInput {
	s.Token = &v
	return s
}

type CircuitBreakingSettingsForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BaseEjectionTime *int64 `type:"int64" json:",omitempty"`

	ConsecutiveErrors *int64 `type:"int64" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	Interval *int64 `type:"int64" json:",omitempty"`

	MaxEjectionPercent *int32 `type:"int32" json:",omitempty"`

	MinHealthPercent *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s CircuitBreakingSettingsForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CircuitBreakingSettingsForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetBaseEjectionTime sets the BaseEjectionTime field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetBaseEjectionTime(v int64) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.BaseEjectionTime = &v
	return s
}

// SetConsecutiveErrors sets the ConsecutiveErrors field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetConsecutiveErrors(v int64) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.ConsecutiveErrors = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetEnable(v bool) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.Enable = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetInterval(v int64) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.Interval = &v
	return s
}

// SetMaxEjectionPercent sets the MaxEjectionPercent field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetMaxEjectionPercent(v int32) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.MaxEjectionPercent = &v
	return s
}

// SetMinHealthPercent sets the MinHealthPercent field's value.
func (s *CircuitBreakingSettingsForUpdateUpstreamInput) SetMinHealthPercent(v int32) *CircuitBreakingSettingsForUpdateUpstreamInput {
	s.MinHealthPercent = &v
	return s
}

type ConsistentHashLBForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HTTPCookie *HTTPCookieForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	HashKey *string `type:"string" json:",omitempty"`

	HttpHeaderName *string `type:"string" json:",omitempty"`

	HttpQueryParameterName *string `type:"string" json:",omitempty"`

	UseSourceIp *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConsistentHashLBForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConsistentHashLBForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetHTTPCookie sets the HTTPCookie field's value.
func (s *ConsistentHashLBForUpdateUpstreamInput) SetHTTPCookie(v *HTTPCookieForUpdateUpstreamInput) *ConsistentHashLBForUpdateUpstreamInput {
	s.HTTPCookie = v
	return s
}

// SetHashKey sets the HashKey field's value.
func (s *ConsistentHashLBForUpdateUpstreamInput) SetHashKey(v string) *ConsistentHashLBForUpdateUpstreamInput {
	s.HashKey = &v
	return s
}

// SetHttpHeaderName sets the HttpHeaderName field's value.
func (s *ConsistentHashLBForUpdateUpstreamInput) SetHttpHeaderName(v string) *ConsistentHashLBForUpdateUpstreamInput {
	s.HttpHeaderName = &v
	return s
}

// SetHttpQueryParameterName sets the HttpQueryParameterName field's value.
func (s *ConsistentHashLBForUpdateUpstreamInput) SetHttpQueryParameterName(v string) *ConsistentHashLBForUpdateUpstreamInput {
	s.HttpQueryParameterName = &v
	return s
}

// SetUseSourceIp sets the UseSourceIp field's value.
func (s *ConsistentHashLBForUpdateUpstreamInput) SetUseSourceIp(v string) *ConsistentHashLBForUpdateUpstreamInput {
	s.UseSourceIp = &v
	return s
}

type CustomBodyParamsForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CustomBodyParamsForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomBodyParamsForUpdateUpstreamInput) GoString() string {
	return s.String()
}

type CustomHeaderParamsForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CustomHeaderParamsForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomHeaderParamsForUpdateUpstreamInput) GoString() string {
	return s.String()
}

type CustomModelServiceForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s CustomModelServiceForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomModelServiceForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *CustomModelServiceForUpdateUpstreamInput) SetName(v string) *CustomModelServiceForUpdateUpstreamInput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *CustomModelServiceForUpdateUpstreamInput) SetNamespace(v string) *CustomModelServiceForUpdateUpstreamInput {
	s.Namespace = &v
	return s
}

// SetPort sets the Port field's value.
func (s *CustomModelServiceForUpdateUpstreamInput) SetPort(v int32) *CustomModelServiceForUpdateUpstreamInput {
	s.Port = &v
	return s
}

type EcsListForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EcsId *string `type:"string" json:",omitempty"`

	IP *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s EcsListForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EcsListForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetEcsId sets the EcsId field's value.
func (s *EcsListForUpdateUpstreamInput) SetEcsId(v string) *EcsListForUpdateUpstreamInput {
	s.EcsId = &v
	return s
}

// SetIP sets the IP field's value.
func (s *EcsListForUpdateUpstreamInput) SetIP(v string) *EcsListForUpdateUpstreamInput {
	s.IP = &v
	return s
}

// SetPort sets the Port field's value.
func (s *EcsListForUpdateUpstreamInput) SetPort(v int32) *EcsListForUpdateUpstreamInput {
	s.Port = &v
	return s
}

type HTTPCookieForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Path *string `type:"string" json:",omitempty"`

	Ttl *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s HTTPCookieForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HTTPCookieForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *HTTPCookieForUpdateUpstreamInput) SetName(v string) *HTTPCookieForUpdateUpstreamInput {
	s.Name = &v
	return s
}

// SetPath sets the Path field's value.
func (s *HTTPCookieForUpdateUpstreamInput) SetPath(v string) *HTTPCookieForUpdateUpstreamInput {
	s.Path = &v
	return s
}

// SetTtl sets the Ttl field's value.
func (s *HTTPCookieForUpdateUpstreamInput) SetTtl(v int64) *HTTPCookieForUpdateUpstreamInput {
	s.Ttl = &v
	return s
}

type K8SServiceForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s K8SServiceForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s K8SServiceForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *K8SServiceForUpdateUpstreamInput) SetName(v string) *K8SServiceForUpdateUpstreamInput {
	s.Name = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *K8SServiceForUpdateUpstreamInput) SetNamespace(v string) *K8SServiceForUpdateUpstreamInput {
	s.Namespace = &v
	return s
}

// SetPort sets the Port field's value.
func (s *K8SServiceForUpdateUpstreamInput) SetPort(v int32) *K8SServiceForUpdateUpstreamInput {
	s.Port = &v
	return s
}

type LoadBalancerSettingsForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ConsistentHashLB *ConsistentHashLBForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	LbPolicy *string `type:"string" json:",omitempty"`

	SimpleLB *string `type:"string" json:",omitempty"`

	WarmupDuration *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s LoadBalancerSettingsForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoadBalancerSettingsForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetConsistentHashLB sets the ConsistentHashLB field's value.
func (s *LoadBalancerSettingsForUpdateUpstreamInput) SetConsistentHashLB(v *ConsistentHashLBForUpdateUpstreamInput) *LoadBalancerSettingsForUpdateUpstreamInput {
	s.ConsistentHashLB = v
	return s
}

// SetLbPolicy sets the LbPolicy field's value.
func (s *LoadBalancerSettingsForUpdateUpstreamInput) SetLbPolicy(v string) *LoadBalancerSettingsForUpdateUpstreamInput {
	s.LbPolicy = &v
	return s
}

// SetSimpleLB sets the SimpleLB field's value.
func (s *LoadBalancerSettingsForUpdateUpstreamInput) SetSimpleLB(v string) *LoadBalancerSettingsForUpdateUpstreamInput {
	s.SimpleLB = &v
	return s
}

// SetWarmupDuration sets the WarmupDuration field's value.
func (s *LoadBalancerSettingsForUpdateUpstreamInput) SetWarmupDuration(v int64) *LoadBalancerSettingsForUpdateUpstreamInput {
	s.WarmupDuration = &v
	return s
}

type NacosServiceForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Group *string `type:"string" json:",omitempty"`

	Namespace *string `type:"string" json:",omitempty"`

	NamespaceId *string `type:"string" json:",omitempty"`

	Service *string `type:"string" json:",omitempty"`

	UpstreamSourceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NacosServiceForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NacosServiceForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetGroup sets the Group field's value.
func (s *NacosServiceForUpdateUpstreamInput) SetGroup(v string) *NacosServiceForUpdateUpstreamInput {
	s.Group = &v
	return s
}

// SetNamespace sets the Namespace field's value.
func (s *NacosServiceForUpdateUpstreamInput) SetNamespace(v string) *NacosServiceForUpdateUpstreamInput {
	s.Namespace = &v
	return s
}

// SetNamespaceId sets the NamespaceId field's value.
func (s *NacosServiceForUpdateUpstreamInput) SetNamespaceId(v string) *NacosServiceForUpdateUpstreamInput {
	s.NamespaceId = &v
	return s
}

// SetService sets the Service field's value.
func (s *NacosServiceForUpdateUpstreamInput) SetService(v string) *NacosServiceForUpdateUpstreamInput {
	s.Service = &v
	return s
}

// SetUpstreamSourceId sets the UpstreamSourceId field's value.
func (s *NacosServiceForUpdateUpstreamInput) SetUpstreamSourceId(v string) *NacosServiceForUpdateUpstreamInput {
	s.UpstreamSourceId = &v
	return s
}

type TlsSettingsForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Sni *string `type:"string" json:",omitempty"`

	TlsMode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TlsSettingsForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TlsSettingsForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetSni sets the Sni field's value.
func (s *TlsSettingsForUpdateUpstreamInput) SetSni(v string) *TlsSettingsForUpdateUpstreamInput {
	s.Sni = &v
	return s
}

// SetTlsMode sets the TlsMode field's value.
func (s *TlsSettingsForUpdateUpstreamInput) SetTlsMode(v string) *TlsSettingsForUpdateUpstreamInput {
	s.TlsMode = &v
	return s
}

type UpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CircuitBreakingSettings *CircuitBreakingSettingsForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	Comments *string `type:"string" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	LoadBalancerSettings *LoadBalancerSettingsForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	Protocol *string `type:"string" json:",omitempty"`

	// SourceType is a required field
	SourceType *string `type:"string" json:",omitempty" required:"true"`

	TlsSettings *TlsSettingsForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	UpstreamSpec *UpstreamSpecForUpdateUpstreamInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateUpstreamInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateUpstreamInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateUpstreamInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.SourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCircuitBreakingSettings sets the CircuitBreakingSettings field's value.
func (s *UpdateUpstreamInput) SetCircuitBreakingSettings(v *CircuitBreakingSettingsForUpdateUpstreamInput) *UpdateUpstreamInput {
	s.CircuitBreakingSettings = v
	return s
}

// SetComments sets the Comments field's value.
func (s *UpdateUpstreamInput) SetComments(v string) *UpdateUpstreamInput {
	s.Comments = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateUpstreamInput) SetId(v string) *UpdateUpstreamInput {
	s.Id = &v
	return s
}

// SetLoadBalancerSettings sets the LoadBalancerSettings field's value.
func (s *UpdateUpstreamInput) SetLoadBalancerSettings(v *LoadBalancerSettingsForUpdateUpstreamInput) *UpdateUpstreamInput {
	s.LoadBalancerSettings = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateUpstreamInput) SetName(v string) *UpdateUpstreamInput {
	s.Name = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *UpdateUpstreamInput) SetProtocol(v string) *UpdateUpstreamInput {
	s.Protocol = &v
	return s
}

// SetSourceType sets the SourceType field's value.
func (s *UpdateUpstreamInput) SetSourceType(v string) *UpdateUpstreamInput {
	s.SourceType = &v
	return s
}

// SetTlsSettings sets the TlsSettings field's value.
func (s *UpdateUpstreamInput) SetTlsSettings(v *TlsSettingsForUpdateUpstreamInput) *UpdateUpstreamInput {
	s.TlsSettings = v
	return s
}

// SetUpstreamSpec sets the UpstreamSpec field's value.
func (s *UpdateUpstreamInput) SetUpstreamSpec(v *UpstreamSpecForUpdateUpstreamInput) *UpdateUpstreamInput {
	s.UpstreamSpec = v
	return s
}

type UpdateUpstreamOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateUpstreamOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateUpstreamOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateUpstreamOutput) SetId(v string) *UpdateUpstreamOutput {
	s.Id = &v
	return s
}

type UpstreamSpecForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AIProvider *AIProviderForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	EcsList []*EcsListForUpdateUpstreamInput `type:"list" json:",omitempty"`

	K8SService *K8SServiceForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	NacosService *NacosServiceForUpdateUpstreamInput `type:"structure" json:",omitempty"`

	VeFaas *VeFaasForUpdateUpstreamInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpstreamSpecForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpstreamSpecForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetAIProvider sets the AIProvider field's value.
func (s *UpstreamSpecForUpdateUpstreamInput) SetAIProvider(v *AIProviderForUpdateUpstreamInput) *UpstreamSpecForUpdateUpstreamInput {
	s.AIProvider = v
	return s
}

// SetEcsList sets the EcsList field's value.
func (s *UpstreamSpecForUpdateUpstreamInput) SetEcsList(v []*EcsListForUpdateUpstreamInput) *UpstreamSpecForUpdateUpstreamInput {
	s.EcsList = v
	return s
}

// SetK8SService sets the K8SService field's value.
func (s *UpstreamSpecForUpdateUpstreamInput) SetK8SService(v *K8SServiceForUpdateUpstreamInput) *UpstreamSpecForUpdateUpstreamInput {
	s.K8SService = v
	return s
}

// SetNacosService sets the NacosService field's value.
func (s *UpstreamSpecForUpdateUpstreamInput) SetNacosService(v *NacosServiceForUpdateUpstreamInput) *UpstreamSpecForUpdateUpstreamInput {
	s.NacosService = v
	return s
}

// SetVeFaas sets the VeFaas field's value.
func (s *UpstreamSpecForUpdateUpstreamInput) SetVeFaas(v *VeFaasForUpdateUpstreamInput) *UpstreamSpecForUpdateUpstreamInput {
	s.VeFaas = v
	return s
}

type VeFaasForUpdateUpstreamInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VeFaasForUpdateUpstreamInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VeFaasForUpdateUpstreamInput) GoString() string {
	return s.String()
}

// SetFunctionId sets the FunctionId field's value.
func (s *VeFaasForUpdateUpstreamInput) SetFunctionId(v string) *VeFaasForUpdateUpstreamInput {
	s.FunctionId = &v
	return s
}
