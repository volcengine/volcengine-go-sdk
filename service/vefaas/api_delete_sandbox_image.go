// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteSandboxImageCommon = "DeleteSandboxImage"

// DeleteSandboxImageCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSandboxImageCommon operation. The "output" return
// value will be populated with the DeleteSandboxImageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSandboxImageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSandboxImageCommon Send returns without error.
//
// See DeleteSandboxImageCommon for more information on using the DeleteSandboxImageCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteSandboxImageCommonRequest method.
//    req, resp := client.DeleteSandboxImageCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DeleteSandboxImageCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteSandboxImageCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSandboxImageCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DeleteSandboxImageCommon for usage and error information.
func (c *VEFAAS) DeleteSandboxImageCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteSandboxImageCommonRequest(input)
	return out, req.Send()
}

// DeleteSandboxImageCommonWithContext is the same as DeleteSandboxImageCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSandboxImageCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DeleteSandboxImageCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteSandboxImageCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteSandboxImage = "DeleteSandboxImage"

// DeleteSandboxImageRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteSandboxImage operation. The "output" return
// value will be populated with the DeleteSandboxImageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteSandboxImageCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteSandboxImageCommon Send returns without error.
//
// See DeleteSandboxImage for more information on using the DeleteSandboxImage
// API call, and error handling.
//
//    // Example sending a request using the DeleteSandboxImageRequest method.
//    req, resp := client.DeleteSandboxImageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DeleteSandboxImageRequest(input *DeleteSandboxImageInput) (req *request.Request, output *DeleteSandboxImageOutput) {
	op := &request.Operation{
		Name:       opDeleteSandboxImage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteSandboxImageInput{}
	}

	output = &DeleteSandboxImageOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteSandboxImage API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DeleteSandboxImage for usage and error information.
func (c *VEFAAS) DeleteSandboxImage(input *DeleteSandboxImageInput) (*DeleteSandboxImageOutput, error) {
	req, out := c.DeleteSandboxImageRequest(input)
	return out, req.Send()
}

// DeleteSandboxImageWithContext is the same as DeleteSandboxImage with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteSandboxImage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DeleteSandboxImageWithContext(ctx volcengine.Context, input *DeleteSandboxImageInput, opts ...request.Option) (*DeleteSandboxImageOutput, error) {
	req, out := c.DeleteSandboxImageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteSandboxImageInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ImageId is a required field
	ImageId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteSandboxImageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSandboxImageInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteSandboxImageInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteSandboxImageInput"}
	if s.ImageId == nil {
		invalidParams.Add(request.NewErrParamRequired("ImageId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetImageId sets the ImageId field's value.
func (s *DeleteSandboxImageInput) SetImageId(v string) *DeleteSandboxImageInput {
	s.ImageId = &v
	return s
}

type DeleteSandboxImageOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	RelatedSandboxApplications []*string `type:"list" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteSandboxImageOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteSandboxImageOutput) GoString() string {
	return s.String()
}

// SetRelatedSandboxApplications sets the RelatedSandboxApplications field's value.
func (s *DeleteSandboxImageOutput) SetRelatedSandboxApplications(v []*string) *DeleteSandboxImageOutput {
	s.RelatedSandboxApplications = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DeleteSandboxImageOutput) SetStatus(v string) *DeleteSandboxImageOutput {
	s.Status = &v
	return s
}
