// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetSandboxImagePrecacheTicketCommon = "GetSandboxImagePrecacheTicket"

// GetSandboxImagePrecacheTicketCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetSandboxImagePrecacheTicketCommon operation. The "output" return
// value will be populated with the GetSandboxImagePrecacheTicketCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetSandboxImagePrecacheTicketCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetSandboxImagePrecacheTicketCommon Send returns without error.
//
// See GetSandboxImagePrecacheTicketCommon for more information on using the GetSandboxImagePrecacheTicketCommon
// API call, and error handling.
//
//    // Example sending a request using the GetSandboxImagePrecacheTicketCommonRequest method.
//    req, resp := client.GetSandboxImagePrecacheTicketCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetSandboxImagePrecacheTicketCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetSandboxImagePrecacheTicketCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetSandboxImagePrecacheTicketCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetSandboxImagePrecacheTicketCommon for usage and error information.
func (c *VEFAAS) GetSandboxImagePrecacheTicketCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetSandboxImagePrecacheTicketCommonRequest(input)
	return out, req.Send()
}

// GetSandboxImagePrecacheTicketCommonWithContext is the same as GetSandboxImagePrecacheTicketCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetSandboxImagePrecacheTicketCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetSandboxImagePrecacheTicketCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetSandboxImagePrecacheTicketCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetSandboxImagePrecacheTicket = "GetSandboxImagePrecacheTicket"

// GetSandboxImagePrecacheTicketRequest generates a "volcengine/request.Request" representing the
// client's request for the GetSandboxImagePrecacheTicket operation. The "output" return
// value will be populated with the GetSandboxImagePrecacheTicketCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetSandboxImagePrecacheTicketCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetSandboxImagePrecacheTicketCommon Send returns without error.
//
// See GetSandboxImagePrecacheTicket for more information on using the GetSandboxImagePrecacheTicket
// API call, and error handling.
//
//    // Example sending a request using the GetSandboxImagePrecacheTicketRequest method.
//    req, resp := client.GetSandboxImagePrecacheTicketRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetSandboxImagePrecacheTicketRequest(input *GetSandboxImagePrecacheTicketInput) (req *request.Request, output *GetSandboxImagePrecacheTicketOutput) {
	op := &request.Operation{
		Name:       opGetSandboxImagePrecacheTicket,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetSandboxImagePrecacheTicketInput{}
	}

	output = &GetSandboxImagePrecacheTicketOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetSandboxImagePrecacheTicket API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetSandboxImagePrecacheTicket for usage and error information.
func (c *VEFAAS) GetSandboxImagePrecacheTicket(input *GetSandboxImagePrecacheTicketInput) (*GetSandboxImagePrecacheTicketOutput, error) {
	req, out := c.GetSandboxImagePrecacheTicketRequest(input)
	return out, req.Send()
}

// GetSandboxImagePrecacheTicketWithContext is the same as GetSandboxImagePrecacheTicket with the addition of
// the ability to pass a context and additional request options.
//
// See GetSandboxImagePrecacheTicket for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetSandboxImagePrecacheTicketWithContext(ctx volcengine.Context, input *GetSandboxImagePrecacheTicketInput, opts ...request.Option) (*GetSandboxImagePrecacheTicketOutput, error) {
	req, out := c.GetSandboxImagePrecacheTicketRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetSandboxImagePrecacheTicketInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TicketId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetSandboxImagePrecacheTicketInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetSandboxImagePrecacheTicketInput) GoString() string {
	return s.String()
}

// SetTicketId sets the TicketId field's value.
func (s *GetSandboxImagePrecacheTicketInput) SetTicketId(v string) *GetSandboxImagePrecacheTicketInput {
	s.TicketId = &v
	return s
}

type GetSandboxImagePrecacheTicketOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Duration *int64 `type:"int64" json:",omitempty"`

	Progress *ProgressForGetSandboxImagePrecacheTicketOutput `type:"structure" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TicketId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetSandboxImagePrecacheTicketOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetSandboxImagePrecacheTicketOutput) GoString() string {
	return s.String()
}

// SetDuration sets the Duration field's value.
func (s *GetSandboxImagePrecacheTicketOutput) SetDuration(v int64) *GetSandboxImagePrecacheTicketOutput {
	s.Duration = &v
	return s
}

// SetProgress sets the Progress field's value.
func (s *GetSandboxImagePrecacheTicketOutput) SetProgress(v *ProgressForGetSandboxImagePrecacheTicketOutput) *GetSandboxImagePrecacheTicketOutput {
	s.Progress = v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetSandboxImagePrecacheTicketOutput) SetStatus(v string) *GetSandboxImagePrecacheTicketOutput {
	s.Status = &v
	return s
}

// SetTicketId sets the TicketId field's value.
func (s *GetSandboxImagePrecacheTicketOutput) SetTicketId(v string) *GetSandboxImagePrecacheTicketOutput {
	s.TicketId = &v
	return s
}

type ProgressForGetSandboxImagePrecacheTicketOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ProgressForGetSandboxImagePrecacheTicketOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProgressForGetSandboxImagePrecacheTicketOutput) GoString() string {
	return s.String()
}
