// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDependencyInstallTaskLogDownloadURICommon = "GetDependencyInstallTaskLogDownloadURI"

// GetDependencyInstallTaskLogDownloadURICommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDependencyInstallTaskLogDownloadURICommon operation. The "output" return
// value will be populated with the GetDependencyInstallTaskLogDownloadURICommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDependencyInstallTaskLogDownloadURICommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDependencyInstallTaskLogDownloadURICommon Send returns without error.
//
// See GetDependencyInstallTaskLogDownloadURICommon for more information on using the GetDependencyInstallTaskLogDownloadURICommon
// API call, and error handling.
//
//    // Example sending a request using the GetDependencyInstallTaskLogDownloadURICommonRequest method.
//    req, resp := client.GetDependencyInstallTaskLogDownloadURICommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURICommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDependencyInstallTaskLogDownloadURICommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDependencyInstallTaskLogDownloadURICommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetDependencyInstallTaskLogDownloadURICommon for usage and error information.
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURICommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDependencyInstallTaskLogDownloadURICommonRequest(input)
	return out, req.Send()
}

// GetDependencyInstallTaskLogDownloadURICommonWithContext is the same as GetDependencyInstallTaskLogDownloadURICommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDependencyInstallTaskLogDownloadURICommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURICommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDependencyInstallTaskLogDownloadURICommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDependencyInstallTaskLogDownloadURI = "GetDependencyInstallTaskLogDownloadURI"

// GetDependencyInstallTaskLogDownloadURIRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDependencyInstallTaskLogDownloadURI operation. The "output" return
// value will be populated with the GetDependencyInstallTaskLogDownloadURICommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDependencyInstallTaskLogDownloadURICommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDependencyInstallTaskLogDownloadURICommon Send returns without error.
//
// See GetDependencyInstallTaskLogDownloadURI for more information on using the GetDependencyInstallTaskLogDownloadURI
// API call, and error handling.
//
//    // Example sending a request using the GetDependencyInstallTaskLogDownloadURIRequest method.
//    req, resp := client.GetDependencyInstallTaskLogDownloadURIRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURIRequest(input *GetDependencyInstallTaskLogDownloadURIInput) (req *request.Request, output *GetDependencyInstallTaskLogDownloadURIOutput) {
	op := &request.Operation{
		Name:       opGetDependencyInstallTaskLogDownloadURI,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDependencyInstallTaskLogDownloadURIInput{}
	}

	output = &GetDependencyInstallTaskLogDownloadURIOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDependencyInstallTaskLogDownloadURI API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetDependencyInstallTaskLogDownloadURI for usage and error information.
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURI(input *GetDependencyInstallTaskLogDownloadURIInput) (*GetDependencyInstallTaskLogDownloadURIOutput, error) {
	req, out := c.GetDependencyInstallTaskLogDownloadURIRequest(input)
	return out, req.Send()
}

// GetDependencyInstallTaskLogDownloadURIWithContext is the same as GetDependencyInstallTaskLogDownloadURI with the addition of
// the ability to pass a context and additional request options.
//
// See GetDependencyInstallTaskLogDownloadURI for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetDependencyInstallTaskLogDownloadURIWithContext(ctx volcengine.Context, input *GetDependencyInstallTaskLogDownloadURIInput, opts ...request.Option) (*GetDependencyInstallTaskLogDownloadURIOutput, error) {
	req, out := c.GetDependencyInstallTaskLogDownloadURIRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetDependencyInstallTaskLogDownloadURIInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetDependencyInstallTaskLogDownloadURIInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDependencyInstallTaskLogDownloadURIInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDependencyInstallTaskLogDownloadURIInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDependencyInstallTaskLogDownloadURIInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *GetDependencyInstallTaskLogDownloadURIInput) SetFunctionId(v string) *GetDependencyInstallTaskLogDownloadURIInput {
	s.FunctionId = &v
	return s
}

type GetDependencyInstallTaskLogDownloadURIOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	DownloadURL *string `type:"string" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetDependencyInstallTaskLogDownloadURIOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDependencyInstallTaskLogDownloadURIOutput) GoString() string {
	return s.String()
}

// SetDownloadURL sets the DownloadURL field's value.
func (s *GetDependencyInstallTaskLogDownloadURIOutput) SetDownloadURL(v string) *GetDependencyInstallTaskLogDownloadURIOutput {
	s.DownloadURL = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *GetDependencyInstallTaskLogDownloadURIOutput) SetFunctionId(v string) *GetDependencyInstallTaskLogDownloadURIOutput {
	s.FunctionId = &v
	return s
}
