// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetDependencyInstallTaskStatusCommon = "GetDependencyInstallTaskStatus"

// GetDependencyInstallTaskStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDependencyInstallTaskStatusCommon operation. The "output" return
// value will be populated with the GetDependencyInstallTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDependencyInstallTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDependencyInstallTaskStatusCommon Send returns without error.
//
// See GetDependencyInstallTaskStatusCommon for more information on using the GetDependencyInstallTaskStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the GetDependencyInstallTaskStatusCommonRequest method.
//    req, resp := client.GetDependencyInstallTaskStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetDependencyInstallTaskStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetDependencyInstallTaskStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDependencyInstallTaskStatusCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetDependencyInstallTaskStatusCommon for usage and error information.
func (c *VEFAAS) GetDependencyInstallTaskStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetDependencyInstallTaskStatusCommonRequest(input)
	return out, req.Send()
}

// GetDependencyInstallTaskStatusCommonWithContext is the same as GetDependencyInstallTaskStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetDependencyInstallTaskStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetDependencyInstallTaskStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetDependencyInstallTaskStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetDependencyInstallTaskStatus = "GetDependencyInstallTaskStatus"

// GetDependencyInstallTaskStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the GetDependencyInstallTaskStatus operation. The "output" return
// value will be populated with the GetDependencyInstallTaskStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetDependencyInstallTaskStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetDependencyInstallTaskStatusCommon Send returns without error.
//
// See GetDependencyInstallTaskStatus for more information on using the GetDependencyInstallTaskStatus
// API call, and error handling.
//
//    // Example sending a request using the GetDependencyInstallTaskStatusRequest method.
//    req, resp := client.GetDependencyInstallTaskStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetDependencyInstallTaskStatusRequest(input *GetDependencyInstallTaskStatusInput) (req *request.Request, output *GetDependencyInstallTaskStatusOutput) {
	op := &request.Operation{
		Name:       opGetDependencyInstallTaskStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetDependencyInstallTaskStatusInput{}
	}

	output = &GetDependencyInstallTaskStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetDependencyInstallTaskStatus API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetDependencyInstallTaskStatus for usage and error information.
func (c *VEFAAS) GetDependencyInstallTaskStatus(input *GetDependencyInstallTaskStatusInput) (*GetDependencyInstallTaskStatusOutput, error) {
	req, out := c.GetDependencyInstallTaskStatusRequest(input)
	return out, req.Send()
}

// GetDependencyInstallTaskStatusWithContext is the same as GetDependencyInstallTaskStatus with the addition of
// the ability to pass a context and additional request options.
//
// See GetDependencyInstallTaskStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetDependencyInstallTaskStatusWithContext(ctx volcengine.Context, input *GetDependencyInstallTaskStatusInput, opts ...request.Option) (*GetDependencyInstallTaskStatusOutput, error) {
	req, out := c.GetDependencyInstallTaskStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetDependencyInstallTaskStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetDependencyInstallTaskStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDependencyInstallTaskStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetDependencyInstallTaskStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetDependencyInstallTaskStatusInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *GetDependencyInstallTaskStatusInput) SetFunctionId(v string) *GetDependencyInstallTaskStatusInput {
	s.FunctionId = &v
	return s
}

type GetDependencyInstallTaskStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreateTime *string `type:"string" json:",omitempty"`

	FinishTime *string `type:"string" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetDependencyInstallTaskStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetDependencyInstallTaskStatusOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetDependencyInstallTaskStatusOutput) SetCreateTime(v string) *GetDependencyInstallTaskStatusOutput {
	s.CreateTime = &v
	return s
}

// SetFinishTime sets the FinishTime field's value.
func (s *GetDependencyInstallTaskStatusOutput) SetFinishTime(v string) *GetDependencyInstallTaskStatusOutput {
	s.FinishTime = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *GetDependencyInstallTaskStatusOutput) SetFunctionId(v string) *GetDependencyInstallTaskStatusOutput {
	s.FunctionId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *GetDependencyInstallTaskStatusOutput) SetStatus(v string) *GetDependencyInstallTaskStatusOutput {
	s.Status = &v
	return s
}
