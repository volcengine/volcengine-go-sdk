// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSandboxImagesCommon = "ListSandboxImages"

// ListSandboxImagesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSandboxImagesCommon operation. The "output" return
// value will be populated with the ListSandboxImagesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSandboxImagesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSandboxImagesCommon Send returns without error.
//
// See ListSandboxImagesCommon for more information on using the ListSandboxImagesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSandboxImagesCommonRequest method.
//    req, resp := client.ListSandboxImagesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListSandboxImagesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSandboxImagesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSandboxImagesCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListSandboxImagesCommon for usage and error information.
func (c *VEFAAS) ListSandboxImagesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSandboxImagesCommonRequest(input)
	return out, req.Send()
}

// ListSandboxImagesCommonWithContext is the same as ListSandboxImagesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSandboxImagesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListSandboxImagesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSandboxImagesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSandboxImages = "ListSandboxImages"

// ListSandboxImagesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSandboxImages operation. The "output" return
// value will be populated with the ListSandboxImagesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSandboxImagesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSandboxImagesCommon Send returns without error.
//
// See ListSandboxImages for more information on using the ListSandboxImages
// API call, and error handling.
//
//    // Example sending a request using the ListSandboxImagesRequest method.
//    req, resp := client.ListSandboxImagesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListSandboxImagesRequest(input *ListSandboxImagesInput) (req *request.Request, output *ListSandboxImagesOutput) {
	op := &request.Operation{
		Name:       opListSandboxImages,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSandboxImagesInput{}
	}

	output = &ListSandboxImagesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSandboxImages API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListSandboxImages for usage and error information.
func (c *VEFAAS) ListSandboxImages(input *ListSandboxImagesInput) (*ListSandboxImagesOutput, error) {
	req, out := c.ListSandboxImagesRequest(input)
	return out, req.Send()
}

// ListSandboxImagesWithContext is the same as ListSandboxImages with the addition of
// the ability to pass a context and additional request options.
//
// See ListSandboxImages for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListSandboxImagesWithContext(ctx volcengine.Context, input *ListSandboxImagesInput, opts ...request.Option) (*ListSandboxImagesOutput, error) {
	req, out := c.ListSandboxImagesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FilterForListSandboxImagesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListSandboxImagesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListSandboxImagesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *FilterForListSandboxImagesInput) SetKey(v string) *FilterForListSandboxImagesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *FilterForListSandboxImagesInput) SetValues(v []*string) *FilterForListSandboxImagesInput {
	s.Values = v
	return s
}

type ImageForListSandboxImagesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ImageGroup *string `type:"string" json:",omitempty"`

	ImageId *string `type:"string" json:",omitempty"`

	ImageUrl *string `type:"string" json:",omitempty"`

	PrecacheStatus *string `type:"string" json:",omitempty"`

	RelatedSandboxApplications []*string `type:"list" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ImageForListSandboxImagesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageForListSandboxImagesOutput) GoString() string {
	return s.String()
}

// SetImageGroup sets the ImageGroup field's value.
func (s *ImageForListSandboxImagesOutput) SetImageGroup(v string) *ImageForListSandboxImagesOutput {
	s.ImageGroup = &v
	return s
}

// SetImageId sets the ImageId field's value.
func (s *ImageForListSandboxImagesOutput) SetImageId(v string) *ImageForListSandboxImagesOutput {
	s.ImageId = &v
	return s
}

// SetImageUrl sets the ImageUrl field's value.
func (s *ImageForListSandboxImagesOutput) SetImageUrl(v string) *ImageForListSandboxImagesOutput {
	s.ImageUrl = &v
	return s
}

// SetPrecacheStatus sets the PrecacheStatus field's value.
func (s *ImageForListSandboxImagesOutput) SetPrecacheStatus(v string) *ImageForListSandboxImagesOutput {
	s.PrecacheStatus = &v
	return s
}

// SetRelatedSandboxApplications sets the RelatedSandboxApplications field's value.
func (s *ImageForListSandboxImagesOutput) SetRelatedSandboxApplications(v []*string) *ImageForListSandboxImagesOutput {
	s.RelatedSandboxApplications = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ImageForListSandboxImagesOutput) SetUpdateTime(v string) *ImageForListSandboxImagesOutput {
	s.UpdateTime = &v
	return s
}

type ListSandboxImagesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filters []*FilterForListSandboxImagesInput `type:"list" json:",omitempty"`

	// ImageType is a required field
	ImageType *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListSandboxImagesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSandboxImagesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListSandboxImagesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListSandboxImagesInput"}
	if s.ImageType == nil {
		invalidParams.Add(request.NewErrParamRequired("ImageType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilters sets the Filters field's value.
func (s *ListSandboxImagesInput) SetFilters(v []*FilterForListSandboxImagesInput) *ListSandboxImagesInput {
	s.Filters = v
	return s
}

// SetImageType sets the ImageType field's value.
func (s *ListSandboxImagesInput) SetImageType(v string) *ListSandboxImagesInput {
	s.ImageType = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSandboxImagesInput) SetPageNumber(v int32) *ListSandboxImagesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSandboxImagesInput) SetPageSize(v int32) *ListSandboxImagesInput {
	s.PageSize = &v
	return s
}

type ListSandboxImagesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Images []*ImageForListSandboxImagesOutput `type:"list" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListSandboxImagesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSandboxImagesOutput) GoString() string {
	return s.String()
}

// SetImages sets the Images field's value.
func (s *ListSandboxImagesOutput) SetImages(v []*ImageForListSandboxImagesOutput) *ListSandboxImagesOutput {
	s.Images = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListSandboxImagesOutput) SetTotalCount(v int32) *ListSandboxImagesOutput {
	s.TotalCount = &v
	return s
}
