// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetFunctionResourceCommon = "GetFunctionResource"

// GetFunctionResourceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFunctionResourceCommon operation. The "output" return
// value will be populated with the GetFunctionResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFunctionResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFunctionResourceCommon Send returns without error.
//
// See GetFunctionResourceCommon for more information on using the GetFunctionResourceCommon
// API call, and error handling.
//
//    // Example sending a request using the GetFunctionResourceCommonRequest method.
//    req, resp := client.GetFunctionResourceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetFunctionResourceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetFunctionResourceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFunctionResourceCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetFunctionResourceCommon for usage and error information.
func (c *VEFAAS) GetFunctionResourceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetFunctionResourceCommonRequest(input)
	return out, req.Send()
}

// GetFunctionResourceCommonWithContext is the same as GetFunctionResourceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetFunctionResourceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetFunctionResourceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetFunctionResourceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetFunctionResource = "GetFunctionResource"

// GetFunctionResourceRequest generates a "volcengine/request.Request" representing the
// client's request for the GetFunctionResource operation. The "output" return
// value will be populated with the GetFunctionResourceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetFunctionResourceCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetFunctionResourceCommon Send returns without error.
//
// See GetFunctionResource for more information on using the GetFunctionResource
// API call, and error handling.
//
//    // Example sending a request using the GetFunctionResourceRequest method.
//    req, resp := client.GetFunctionResourceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) GetFunctionResourceRequest(input *GetFunctionResourceInput) (req *request.Request, output *GetFunctionResourceOutput) {
	op := &request.Operation{
		Name:       opGetFunctionResource,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetFunctionResourceInput{}
	}

	output = &GetFunctionResourceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetFunctionResource API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation GetFunctionResource for usage and error information.
func (c *VEFAAS) GetFunctionResource(input *GetFunctionResourceInput) (*GetFunctionResourceOutput, error) {
	req, out := c.GetFunctionResourceRequest(input)
	return out, req.Send()
}

// GetFunctionResourceWithContext is the same as GetFunctionResource with the addition of
// the ability to pass a context and additional request options.
//
// See GetFunctionResource for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) GetFunctionResourceWithContext(ctx volcengine.Context, input *GetFunctionResourceInput, opts ...request.Option) (*GetFunctionResourceOutput, error) {
	req, out := c.GetFunctionResourceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AccountResourceForGetFunctionResourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Aailable *int64 `type:"int64" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	Allocated *int64 `type:"int64" json:",omitempty"`

	GpuMemoryAailable *int64 `type:"int64" json:",omitempty"`

	GpuMemoryAllocated *int64 `type:"int64" json:",omitempty"`

	GpuMemoryTotal *int64 `type:"int64" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s AccountResourceForGetFunctionResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AccountResourceForGetFunctionResourceOutput) GoString() string {
	return s.String()
}

// SetAailable sets the Aailable field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetAailable(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.Aailable = &v
	return s
}

// SetAccountId sets the AccountId field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetAccountId(v string) *AccountResourceForGetFunctionResourceOutput {
	s.AccountId = &v
	return s
}

// SetAllocated sets the Allocated field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetAllocated(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.Allocated = &v
	return s
}

// SetGpuMemoryAailable sets the GpuMemoryAailable field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetGpuMemoryAailable(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.GpuMemoryAailable = &v
	return s
}

// SetGpuMemoryAllocated sets the GpuMemoryAllocated field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetGpuMemoryAllocated(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.GpuMemoryAllocated = &v
	return s
}

// SetGpuMemoryTotal sets the GpuMemoryTotal field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetGpuMemoryTotal(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.GpuMemoryTotal = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *AccountResourceForGetFunctionResourceOutput) SetTotal(v int64) *AccountResourceForGetFunctionResourceOutput {
	s.Total = &v
	return s
}

type FunctionResourceForGetFunctionResourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	GPUMemoryMB *int32 `type:"int32" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	LastUpdateTime *string `type:"string" json:",omitempty"`

	MaxGPUResource *int64 `type:"int64" json:",omitempty"`

	MaxInstance *int32 `type:"int32" json:",omitempty"`

	MaxResource *int64 `type:"int64" json:",omitempty"`

	MemoryMB *int32 `type:"int32" json:",omitempty"`

	MinInstance *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ReservedDPEnabled *bool `type:"boolean" json:",omitempty"`

	ReservedFrozenInstance *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FunctionResourceForGetFunctionResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FunctionResourceForGetFunctionResourceOutput) GoString() string {
	return s.String()
}

// SetGPUMemoryMB sets the GPUMemoryMB field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetGPUMemoryMB(v int32) *FunctionResourceForGetFunctionResourceOutput {
	s.GPUMemoryMB = &v
	return s
}

// SetId sets the Id field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetId(v string) *FunctionResourceForGetFunctionResourceOutput {
	s.Id = &v
	return s
}

// SetLastUpdateTime sets the LastUpdateTime field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetLastUpdateTime(v string) *FunctionResourceForGetFunctionResourceOutput {
	s.LastUpdateTime = &v
	return s
}

// SetMaxGPUResource sets the MaxGPUResource field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetMaxGPUResource(v int64) *FunctionResourceForGetFunctionResourceOutput {
	s.MaxGPUResource = &v
	return s
}

// SetMaxInstance sets the MaxInstance field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetMaxInstance(v int32) *FunctionResourceForGetFunctionResourceOutput {
	s.MaxInstance = &v
	return s
}

// SetMaxResource sets the MaxResource field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetMaxResource(v int64) *FunctionResourceForGetFunctionResourceOutput {
	s.MaxResource = &v
	return s
}

// SetMemoryMB sets the MemoryMB field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetMemoryMB(v int32) *FunctionResourceForGetFunctionResourceOutput {
	s.MemoryMB = &v
	return s
}

// SetMinInstance sets the MinInstance field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetMinInstance(v int32) *FunctionResourceForGetFunctionResourceOutput {
	s.MinInstance = &v
	return s
}

// SetName sets the Name field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetName(v string) *FunctionResourceForGetFunctionResourceOutput {
	s.Name = &v
	return s
}

// SetReservedDPEnabled sets the ReservedDPEnabled field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetReservedDPEnabled(v bool) *FunctionResourceForGetFunctionResourceOutput {
	s.ReservedDPEnabled = &v
	return s
}

// SetReservedFrozenInstance sets the ReservedFrozenInstance field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetReservedFrozenInstance(v int32) *FunctionResourceForGetFunctionResourceOutput {
	s.ReservedFrozenInstance = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *FunctionResourceForGetFunctionResourceOutput) SetStatus(v string) *FunctionResourceForGetFunctionResourceOutput {
	s.Status = &v
	return s
}

type GetFunctionResourceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetFunctionResourceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFunctionResourceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetFunctionResourceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetFunctionResourceInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *GetFunctionResourceInput) SetFunctionId(v string) *GetFunctionResourceInput {
	s.FunctionId = &v
	return s
}

type GetFunctionResourceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccountResource *AccountResourceForGetFunctionResourceOutput `type:"structure" json:",omitempty"`

	FunctionResource *FunctionResourceForGetFunctionResourceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GetFunctionResourceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetFunctionResourceOutput) GoString() string {
	return s.String()
}

// SetAccountResource sets the AccountResource field's value.
func (s *GetFunctionResourceOutput) SetAccountResource(v *AccountResourceForGetFunctionResourceOutput) *GetFunctionResourceOutput {
	s.AccountResource = v
	return s
}

// SetFunctionResource sets the FunctionResource field's value.
func (s *GetFunctionResourceOutput) SetFunctionResource(v *FunctionResourceForGetFunctionResourceOutput) *GetFunctionResourceOutput {
	s.FunctionResource = v
	return s
}
