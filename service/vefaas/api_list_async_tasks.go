// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAsyncTasksCommon = "ListAsyncTasks"

// ListAsyncTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAsyncTasksCommon operation. The "output" return
// value will be populated with the ListAsyncTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAsyncTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAsyncTasksCommon Send returns without error.
//
// See ListAsyncTasksCommon for more information on using the ListAsyncTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAsyncTasksCommonRequest method.
//    req, resp := client.ListAsyncTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListAsyncTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAsyncTasksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAsyncTasksCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListAsyncTasksCommon for usage and error information.
func (c *VEFAAS) ListAsyncTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAsyncTasksCommonRequest(input)
	return out, req.Send()
}

// ListAsyncTasksCommonWithContext is the same as ListAsyncTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAsyncTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListAsyncTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAsyncTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAsyncTasks = "ListAsyncTasks"

// ListAsyncTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAsyncTasks operation. The "output" return
// value will be populated with the ListAsyncTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAsyncTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAsyncTasksCommon Send returns without error.
//
// See ListAsyncTasks for more information on using the ListAsyncTasks
// API call, and error handling.
//
//    // Example sending a request using the ListAsyncTasksRequest method.
//    req, resp := client.ListAsyncTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListAsyncTasksRequest(input *ListAsyncTasksInput) (req *request.Request, output *ListAsyncTasksOutput) {
	op := &request.Operation{
		Name:       opListAsyncTasks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAsyncTasksInput{}
	}

	output = &ListAsyncTasksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAsyncTasks API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListAsyncTasks for usage and error information.
func (c *VEFAAS) ListAsyncTasks(input *ListAsyncTasksInput) (*ListAsyncTasksOutput, error) {
	req, out := c.ListAsyncTasksRequest(input)
	return out, req.Send()
}

// ListAsyncTasksWithContext is the same as ListAsyncTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListAsyncTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListAsyncTasksWithContext(ctx volcengine.Context, input *ListAsyncTasksInput, opts ...request.Option) (*ListAsyncTasksOutput, error) {
	req, out := c.ListAsyncTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ExecutionRecordForListAsyncTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Command *string `type:"string" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	ErrorMessage *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	RevisionNumber *int32 `type:"int32" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ExecutionRecordForListAsyncTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExecutionRecordForListAsyncTasksOutput) GoString() string {
	return s.String()
}

// SetCommand sets the Command field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetCommand(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.Command = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetEndTime(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.EndTime = &v
	return s
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetErrorMessage(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.ErrorMessage = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetInstanceName(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.InstanceName = &v
	return s
}

// SetRevisionNumber sets the RevisionNumber field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetRevisionNumber(v int32) *ExecutionRecordForListAsyncTasksOutput {
	s.RevisionNumber = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetStartTime(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ExecutionRecordForListAsyncTasksOutput) SetStatus(v string) *ExecutionRecordForListAsyncTasksOutput {
	s.Status = &v
	return s
}

type FilterForListAsyncTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	Statuses []*string `type:"list" json:",omitempty"`

	SubmitTimeBegin *int64 `type:"int64" json:",omitempty"`

	SubmitTimeEnd *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListAsyncTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListAsyncTasksInput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *FilterForListAsyncTasksInput) SetRequestId(v string) *FilterForListAsyncTasksInput {
	s.RequestId = &v
	return s
}

// SetStatuses sets the Statuses field's value.
func (s *FilterForListAsyncTasksInput) SetStatuses(v []*string) *FilterForListAsyncTasksInput {
	s.Statuses = v
	return s
}

// SetSubmitTimeBegin sets the SubmitTimeBegin field's value.
func (s *FilterForListAsyncTasksInput) SetSubmitTimeBegin(v int64) *FilterForListAsyncTasksInput {
	s.SubmitTimeBegin = &v
	return s
}

// SetSubmitTimeEnd sets the SubmitTimeEnd field's value.
func (s *FilterForListAsyncTasksInput) SetSubmitTimeEnd(v int64) *FilterForListAsyncTasksInput {
	s.SubmitTimeEnd = &v
	return s
}

type ItemForListAsyncTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndTime *string `type:"string" json:",omitempty"`

	ExecutionRecords []*ExecutionRecordForListAsyncTasksOutput `type:"list" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubmitTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListAsyncTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListAsyncTasksOutput) GoString() string {
	return s.String()
}

// SetEndTime sets the EndTime field's value.
func (s *ItemForListAsyncTasksOutput) SetEndTime(v string) *ItemForListAsyncTasksOutput {
	s.EndTime = &v
	return s
}

// SetExecutionRecords sets the ExecutionRecords field's value.
func (s *ItemForListAsyncTasksOutput) SetExecutionRecords(v []*ExecutionRecordForListAsyncTasksOutput) *ItemForListAsyncTasksOutput {
	s.ExecutionRecords = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ItemForListAsyncTasksOutput) SetRequestId(v string) *ItemForListAsyncTasksOutput {
	s.RequestId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListAsyncTasksOutput) SetStatus(v string) *ItemForListAsyncTasksOutput {
	s.Status = &v
	return s
}

// SetSubmitTime sets the SubmitTime field's value.
func (s *ItemForListAsyncTasksOutput) SetSubmitTime(v string) *ItemForListAsyncTasksOutput {
	s.SubmitTime = &v
	return s
}

type ListAsyncTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListAsyncTasksInput `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	OrderBy *OrderByForListAsyncTasksInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAsyncTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAsyncTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAsyncTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAsyncTasksInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListAsyncTasksInput) SetFilter(v *FilterForListAsyncTasksInput) *ListAsyncTasksInput {
	s.Filter = v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *ListAsyncTasksInput) SetFunctionId(v string) *ListAsyncTasksInput {
	s.FunctionId = &v
	return s
}

// SetOrderBy sets the OrderBy field's value.
func (s *ListAsyncTasksInput) SetOrderBy(v *OrderByForListAsyncTasksInput) *ListAsyncTasksInput {
	s.OrderBy = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAsyncTasksInput) SetPageNumber(v int32) *ListAsyncTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAsyncTasksInput) SetPageSize(v int32) *ListAsyncTasksInput {
	s.PageSize = &v
	return s
}

type ListAsyncTasksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListAsyncTasksOutput `type:"list" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAsyncTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAsyncTasksOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListAsyncTasksOutput) SetItems(v []*ItemForListAsyncTasksOutput) *ListAsyncTasksOutput {
	s.Items = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListAsyncTasksOutput) SetTotal(v int32) *ListAsyncTasksOutput {
	s.Total = &v
	return s
}

type OrderByForListAsyncTasksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ascend *bool `type:"boolean" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderByForListAsyncTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderByForListAsyncTasksInput) GoString() string {
	return s.String()
}

// SetAscend sets the Ascend field's value.
func (s *OrderByForListAsyncTasksInput) SetAscend(v bool) *OrderByForListAsyncTasksInput {
	s.Ascend = &v
	return s
}

// SetKey sets the Key field's value.
func (s *OrderByForListAsyncTasksInput) SetKey(v string) *OrderByForListAsyncTasksInput {
	s.Key = &v
	return s
}
