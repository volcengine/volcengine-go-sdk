// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeSandboxCommon = "DescribeSandbox"

// DescribeSandboxCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSandboxCommon operation. The "output" return
// value will be populated with the DescribeSandboxCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSandboxCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSandboxCommon Send returns without error.
//
// See DescribeSandboxCommon for more information on using the DescribeSandboxCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSandboxCommonRequest method.
//    req, resp := client.DescribeSandboxCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DescribeSandboxCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSandboxCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSandboxCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DescribeSandboxCommon for usage and error information.
func (c *VEFAAS) DescribeSandboxCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSandboxCommonRequest(input)
	return out, req.Send()
}

// DescribeSandboxCommonWithContext is the same as DescribeSandboxCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSandboxCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DescribeSandboxCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSandboxCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSandbox = "DescribeSandbox"

// DescribeSandboxRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSandbox operation. The "output" return
// value will be populated with the DescribeSandboxCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSandboxCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSandboxCommon Send returns without error.
//
// See DescribeSandbox for more information on using the DescribeSandbox
// API call, and error handling.
//
//    // Example sending a request using the DescribeSandboxRequest method.
//    req, resp := client.DescribeSandboxRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) DescribeSandboxRequest(input *DescribeSandboxInput) (req *request.Request, output *DescribeSandboxOutput) {
	op := &request.Operation{
		Name:       opDescribeSandbox,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSandboxInput{}
	}

	output = &DescribeSandboxOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeSandbox API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation DescribeSandbox for usage and error information.
func (c *VEFAAS) DescribeSandbox(input *DescribeSandboxInput) (*DescribeSandboxOutput, error) {
	req, out := c.DescribeSandboxRequest(input)
	return out, req.Send()
}

// DescribeSandboxWithContext is the same as DescribeSandbox with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSandbox for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) DescribeSandboxWithContext(ctx volcengine.Context, input *DescribeSandboxInput, opts ...request.Option) (*DescribeSandboxOutput, error) {
	req, out := c.DescribeSandboxRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSandboxInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	// SandboxId is a required field
	SandboxId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeSandboxInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSandboxInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSandboxInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeSandboxInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}
	if s.SandboxId == nil {
		invalidParams.Add(request.NewErrParamRequired("SandboxId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *DescribeSandboxInput) SetFunctionId(v string) *DescribeSandboxInput {
	s.FunctionId = &v
	return s
}

// SetSandboxId sets the SandboxId field's value.
func (s *DescribeSandboxInput) SetSandboxId(v string) *DescribeSandboxInput {
	s.SandboxId = &v
	return s
}

type DescribeSandboxOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AvailabilityZone *string `type:"string" json:",omitempty"`

	CpuMilli *int32 `type:"int32" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Envs []*EnvForDescribeSandboxOutput `type:"list" json:",omitempty"`

	ErrorCode *string `type:"string" json:",omitempty"`

	ErrorMessage *string `type:"string" json:",omitempty"`

	ExpireAt *string `type:"string" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	ImageInfo *ImageInfoForDescribeSandboxOutput `type:"structure" json:",omitempty"`

	InstanceTosMountConfig *InstanceTosMountConfigForDescribeSandboxOutput `type:"structure" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	MaxConcurrency *int32 `type:"int32" json:",omitempty"`

	MemoryMB *int32 `type:"int32" json:",omitempty"`

	Pending *bool `type:"boolean" json:",omitempty"`

	RequestTimeout *int32 `type:"int32" json:",omitempty"`

	RevisionNumber *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeSandboxOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSandboxOutput) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *DescribeSandboxOutput) SetAvailabilityZone(v string) *DescribeSandboxOutput {
	s.AvailabilityZone = &v
	return s
}

// SetCpuMilli sets the CpuMilli field's value.
func (s *DescribeSandboxOutput) SetCpuMilli(v int32) *DescribeSandboxOutput {
	s.CpuMilli = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *DescribeSandboxOutput) SetCreatedAt(v string) *DescribeSandboxOutput {
	s.CreatedAt = &v
	return s
}

// SetEnvs sets the Envs field's value.
func (s *DescribeSandboxOutput) SetEnvs(v []*EnvForDescribeSandboxOutput) *DescribeSandboxOutput {
	s.Envs = v
	return s
}

// SetErrorCode sets the ErrorCode field's value.
func (s *DescribeSandboxOutput) SetErrorCode(v string) *DescribeSandboxOutput {
	s.ErrorCode = &v
	return s
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *DescribeSandboxOutput) SetErrorMessage(v string) *DescribeSandboxOutput {
	s.ErrorMessage = &v
	return s
}

// SetExpireAt sets the ExpireAt field's value.
func (s *DescribeSandboxOutput) SetExpireAt(v string) *DescribeSandboxOutput {
	s.ExpireAt = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *DescribeSandboxOutput) SetFunctionId(v string) *DescribeSandboxOutput {
	s.FunctionId = &v
	return s
}

// SetId sets the Id field's value.
func (s *DescribeSandboxOutput) SetId(v string) *DescribeSandboxOutput {
	s.Id = &v
	return s
}

// SetImageInfo sets the ImageInfo field's value.
func (s *DescribeSandboxOutput) SetImageInfo(v *ImageInfoForDescribeSandboxOutput) *DescribeSandboxOutput {
	s.ImageInfo = v
	return s
}

// SetInstanceTosMountConfig sets the InstanceTosMountConfig field's value.
func (s *DescribeSandboxOutput) SetInstanceTosMountConfig(v *InstanceTosMountConfigForDescribeSandboxOutput) *DescribeSandboxOutput {
	s.InstanceTosMountConfig = v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DescribeSandboxOutput) SetInstanceType(v string) *DescribeSandboxOutput {
	s.InstanceType = &v
	return s
}

// SetMaxConcurrency sets the MaxConcurrency field's value.
func (s *DescribeSandboxOutput) SetMaxConcurrency(v int32) *DescribeSandboxOutput {
	s.MaxConcurrency = &v
	return s
}

// SetMemoryMB sets the MemoryMB field's value.
func (s *DescribeSandboxOutput) SetMemoryMB(v int32) *DescribeSandboxOutput {
	s.MemoryMB = &v
	return s
}

// SetPending sets the Pending field's value.
func (s *DescribeSandboxOutput) SetPending(v bool) *DescribeSandboxOutput {
	s.Pending = &v
	return s
}

// SetRequestTimeout sets the RequestTimeout field's value.
func (s *DescribeSandboxOutput) SetRequestTimeout(v int32) *DescribeSandboxOutput {
	s.RequestTimeout = &v
	return s
}

// SetRevisionNumber sets the RevisionNumber field's value.
func (s *DescribeSandboxOutput) SetRevisionNumber(v int32) *DescribeSandboxOutput {
	s.RevisionNumber = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeSandboxOutput) SetStatus(v string) *DescribeSandboxOutput {
	s.Status = &v
	return s
}

type EnvForDescribeSandboxOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EnvForDescribeSandboxOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EnvForDescribeSandboxOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *EnvForDescribeSandboxOutput) SetKey(v string) *EnvForDescribeSandboxOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *EnvForDescribeSandboxOutput) SetValue(v string) *EnvForDescribeSandboxOutput {
	s.Value = &v
	return s
}

type ImageInfoForDescribeSandboxOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Command *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Image *string `type:"string" json:",omitempty"`

	Port *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ImageInfoForDescribeSandboxOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ImageInfoForDescribeSandboxOutput) GoString() string {
	return s.String()
}

// SetCommand sets the Command field's value.
func (s *ImageInfoForDescribeSandboxOutput) SetCommand(v string) *ImageInfoForDescribeSandboxOutput {
	s.Command = &v
	return s
}

// SetId sets the Id field's value.
func (s *ImageInfoForDescribeSandboxOutput) SetId(v string) *ImageInfoForDescribeSandboxOutput {
	s.Id = &v
	return s
}

// SetImage sets the Image field's value.
func (s *ImageInfoForDescribeSandboxOutput) SetImage(v string) *ImageInfoForDescribeSandboxOutput {
	s.Image = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ImageInfoForDescribeSandboxOutput) SetPort(v int32) *ImageInfoForDescribeSandboxOutput {
	s.Port = &v
	return s
}

type InstanceTosMountConfigForDescribeSandboxOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	TosMountPoints []*TosMountPointForDescribeSandboxOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceTosMountConfigForDescribeSandboxOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceTosMountConfigForDescribeSandboxOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *InstanceTosMountConfigForDescribeSandboxOutput) SetEnable(v bool) *InstanceTosMountConfigForDescribeSandboxOutput {
	s.Enable = &v
	return s
}

// SetTosMountPoints sets the TosMountPoints field's value.
func (s *InstanceTosMountConfigForDescribeSandboxOutput) SetTosMountPoints(v []*TosMountPointForDescribeSandboxOutput) *InstanceTosMountConfigForDescribeSandboxOutput {
	s.TosMountPoints = v
	return s
}

type TosMountPointForDescribeSandboxOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BucketPath *string `type:"string" json:",omitempty"`

	LocalMountPath *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TosMountPointForDescribeSandboxOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TosMountPointForDescribeSandboxOutput) GoString() string {
	return s.String()
}

// SetBucketPath sets the BucketPath field's value.
func (s *TosMountPointForDescribeSandboxOutput) SetBucketPath(v string) *TosMountPointForDescribeSandboxOutput {
	s.BucketPath = &v
	return s
}

// SetLocalMountPath sets the LocalMountPath field's value.
func (s *TosMountPointForDescribeSandboxOutput) SetLocalMountPath(v string) *TosMountPointForDescribeSandboxOutput {
	s.LocalMountPath = &v
	return s
}
