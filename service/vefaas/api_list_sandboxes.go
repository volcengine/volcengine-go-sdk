// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vefaas

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSandboxesCommon = "ListSandboxes"

// ListSandboxesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSandboxesCommon operation. The "output" return
// value will be populated with the ListSandboxesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSandboxesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSandboxesCommon Send returns without error.
//
// See ListSandboxesCommon for more information on using the ListSandboxesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSandboxesCommonRequest method.
//    req, resp := client.ListSandboxesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListSandboxesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSandboxesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSandboxesCommon API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListSandboxesCommon for usage and error information.
func (c *VEFAAS) ListSandboxesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSandboxesCommonRequest(input)
	return out, req.Send()
}

// ListSandboxesCommonWithContext is the same as ListSandboxesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSandboxesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListSandboxesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSandboxesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSandboxes = "ListSandboxes"

// ListSandboxesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSandboxes operation. The "output" return
// value will be populated with the ListSandboxesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSandboxesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSandboxesCommon Send returns without error.
//
// See ListSandboxes for more information on using the ListSandboxes
// API call, and error handling.
//
//    // Example sending a request using the ListSandboxesRequest method.
//    req, resp := client.ListSandboxesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VEFAAS) ListSandboxesRequest(input *ListSandboxesInput) (req *request.Request, output *ListSandboxesOutput) {
	op := &request.Operation{
		Name:       opListSandboxes,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSandboxesInput{}
	}

	output = &ListSandboxesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSandboxes API operation for VEFAAS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VEFAAS's
// API operation ListSandboxes for usage and error information.
func (c *VEFAAS) ListSandboxes(input *ListSandboxesInput) (*ListSandboxesOutput, error) {
	req, out := c.ListSandboxesRequest(input)
	return out, req.Send()
}

// ListSandboxesWithContext is the same as ListSandboxes with the addition of
// the ability to pass a context and additional request options.
//
// See ListSandboxes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VEFAAS) ListSandboxesWithContext(ctx volcengine.Context, input *ListSandboxesInput, opts ...request.Option) (*ListSandboxesOutput, error) {
	req, out := c.ListSandboxesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListSandboxesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// FunctionId is a required field
	FunctionId *string `type:"string" json:",omitempty" required:"true"`

	Metadata *MetadataForListSandboxesInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	SandboxId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListSandboxesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSandboxesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListSandboxesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListSandboxesInput"}
	if s.FunctionId == nil {
		invalidParams.Add(request.NewErrParamRequired("FunctionId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFunctionId sets the FunctionId field's value.
func (s *ListSandboxesInput) SetFunctionId(v string) *ListSandboxesInput {
	s.FunctionId = &v
	return s
}

// SetMetadata sets the Metadata field's value.
func (s *ListSandboxesInput) SetMetadata(v *MetadataForListSandboxesInput) *ListSandboxesInput {
	s.Metadata = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListSandboxesInput) SetPageNumber(v int32) *ListSandboxesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListSandboxesInput) SetPageSize(v int32) *ListSandboxesInput {
	s.PageSize = &v
	return s
}

// SetSandboxId sets the SandboxId field's value.
func (s *ListSandboxesInput) SetSandboxId(v string) *ListSandboxesInput {
	s.SandboxId = &v
	return s
}

type ListSandboxesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Sandboxes []*SandboxForListSandboxesOutput `type:"list" json:",omitempty"`

	StatusCount *StatusCountForListSandboxesOutput `type:"structure" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListSandboxesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSandboxesOutput) GoString() string {
	return s.String()
}

// SetSandboxes sets the Sandboxes field's value.
func (s *ListSandboxesOutput) SetSandboxes(v []*SandboxForListSandboxesOutput) *ListSandboxesOutput {
	s.Sandboxes = v
	return s
}

// SetStatusCount sets the StatusCount field's value.
func (s *ListSandboxesOutput) SetStatusCount(v *StatusCountForListSandboxesOutput) *ListSandboxesOutput {
	s.StatusCount = v
	return s
}

// SetTotal sets the Total field's value.
func (s *ListSandboxesOutput) SetTotal(v int32) *ListSandboxesOutput {
	s.Total = &v
	return s
}

type MetadataForListSandboxesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s MetadataForListSandboxesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetadataForListSandboxesInput) GoString() string {
	return s.String()
}

type MetadataForListSandboxesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s MetadataForListSandboxesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetadataForListSandboxesOutput) GoString() string {
	return s.String()
}

type SandboxForListSandboxesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailabilityZone *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	ErrorCode *string `type:"string" json:",omitempty"`

	ErrorMessage *string `type:"string" json:",omitempty"`

	ExpireAt *string `type:"string" json:",omitempty"`

	FunctionId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	Metadata *MetadataForListSandboxesOutput `type:"structure" json:",omitempty"`

	Pending *bool `type:"boolean" json:",omitempty"`

	RevisionNumber *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SandboxForListSandboxesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SandboxForListSandboxesOutput) GoString() string {
	return s.String()
}

// SetAvailabilityZone sets the AvailabilityZone field's value.
func (s *SandboxForListSandboxesOutput) SetAvailabilityZone(v string) *SandboxForListSandboxesOutput {
	s.AvailabilityZone = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *SandboxForListSandboxesOutput) SetCreatedAt(v string) *SandboxForListSandboxesOutput {
	s.CreatedAt = &v
	return s
}

// SetErrorCode sets the ErrorCode field's value.
func (s *SandboxForListSandboxesOutput) SetErrorCode(v string) *SandboxForListSandboxesOutput {
	s.ErrorCode = &v
	return s
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *SandboxForListSandboxesOutput) SetErrorMessage(v string) *SandboxForListSandboxesOutput {
	s.ErrorMessage = &v
	return s
}

// SetExpireAt sets the ExpireAt field's value.
func (s *SandboxForListSandboxesOutput) SetExpireAt(v string) *SandboxForListSandboxesOutput {
	s.ExpireAt = &v
	return s
}

// SetFunctionId sets the FunctionId field's value.
func (s *SandboxForListSandboxesOutput) SetFunctionId(v string) *SandboxForListSandboxesOutput {
	s.FunctionId = &v
	return s
}

// SetId sets the Id field's value.
func (s *SandboxForListSandboxesOutput) SetId(v string) *SandboxForListSandboxesOutput {
	s.Id = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *SandboxForListSandboxesOutput) SetInstanceType(v string) *SandboxForListSandboxesOutput {
	s.InstanceType = &v
	return s
}

// SetMetadata sets the Metadata field's value.
func (s *SandboxForListSandboxesOutput) SetMetadata(v *MetadataForListSandboxesOutput) *SandboxForListSandboxesOutput {
	s.Metadata = v
	return s
}

// SetPending sets the Pending field's value.
func (s *SandboxForListSandboxesOutput) SetPending(v bool) *SandboxForListSandboxesOutput {
	s.Pending = &v
	return s
}

// SetRevisionNumber sets the RevisionNumber field's value.
func (s *SandboxForListSandboxesOutput) SetRevisionNumber(v int32) *SandboxForListSandboxesOutput {
	s.RevisionNumber = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SandboxForListSandboxesOutput) SetStatus(v string) *SandboxForListSandboxesOutput {
	s.Status = &v
	return s
}

type StatusCountForListSandboxesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s StatusCountForListSandboxesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatusCountForListSandboxesOutput) GoString() string {
	return s.String()
}
