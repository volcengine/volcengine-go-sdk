// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package emr

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListClustersCommon = "ListClusters"

// ListClustersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListClustersCommon operation. The "output" return
// value will be populated with the ListClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListClustersCommon Send returns without error.
//
// See ListClustersCommon for more information on using the ListClustersCommon
// API call, and error handling.
//
//    // Example sending a request using the ListClustersCommonRequest method.
//    req, resp := client.ListClustersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) ListClustersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListClustersCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListClustersCommon API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation ListClustersCommon for usage and error information.
func (c *EMR) ListClustersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListClustersCommonRequest(input)
	return out, req.Send()
}

// ListClustersCommonWithContext is the same as ListClustersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListClustersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) ListClustersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListClustersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListClusters = "ListClusters"

// ListClustersRequest generates a "volcengine/request.Request" representing the
// client's request for the ListClusters operation. The "output" return
// value will be populated with the ListClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListClustersCommon Send returns without error.
//
// See ListClusters for more information on using the ListClusters
// API call, and error handling.
//
//    // Example sending a request using the ListClustersRequest method.
//    req, resp := client.ListClustersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *EMR) ListClustersRequest(input *ListClustersInput) (req *request.Request, output *ListClustersOutput) {
	op := &request.Operation{
		Name:       opListClusters,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListClustersInput{}
	}

	output = &ListClustersOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListClusters API operation for EMR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for EMR's
// API operation ListClusters for usage and error information.
func (c *EMR) ListClusters(input *ListClustersInput) (*ListClustersOutput, error) {
	req, out := c.ListClustersRequest(input)
	return out, req.Send()
}

// ListClustersWithContext is the same as ListClusters with the addition of
// the ability to pass a context and additional request options.
//
// See ListClusters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *EMR) ListClustersWithContext(ctx volcengine.Context, input *ListClustersInput, opts ...request.Option) (*ListClustersOutput, error) {
	req, out := c.ListClustersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListClustersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	ClusterState *string `type:"string" json:",omitempty"`

	ClusterType *string `type:"string" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	CreateTimeStr *string `type:"string" json:",omitempty"`

	Creator *string `type:"string" json:",omitempty"`

	ExpireTime *int64 `type:"int64" json:",omitempty"`

	NodeAttribute *NodeAttributeForListClustersOutput `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	ReadyTime *int64 `type:"int64" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	ReleaseVersion *string `type:"string" json:",omitempty"`

	SecurityGroupId *string `type:"string" json:",omitempty"`

	StateChangeReason *StateChangeReasonForListClustersOutput `type:"structure" json:",omitempty"`

	Tags []*TagForListClustersOutput `type:"list" json:",omitempty"`

	TerminateTime *int64 `type:"int64" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListClustersOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ItemForListClustersOutput) SetAccountId(v int64) *ItemForListClustersOutput {
	s.AccountId = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ItemForListClustersOutput) SetChargeType(v string) *ItemForListClustersOutput {
	s.ChargeType = &v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *ItemForListClustersOutput) SetClusterId(v string) *ItemForListClustersOutput {
	s.ClusterId = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *ItemForListClustersOutput) SetClusterName(v string) *ItemForListClustersOutput {
	s.ClusterName = &v
	return s
}

// SetClusterState sets the ClusterState field's value.
func (s *ItemForListClustersOutput) SetClusterState(v string) *ItemForListClustersOutput {
	s.ClusterState = &v
	return s
}

// SetClusterType sets the ClusterType field's value.
func (s *ItemForListClustersOutput) SetClusterType(v string) *ItemForListClustersOutput {
	s.ClusterType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListClustersOutput) SetCreateTime(v int64) *ItemForListClustersOutput {
	s.CreateTime = &v
	return s
}

// SetCreateTimeStr sets the CreateTimeStr field's value.
func (s *ItemForListClustersOutput) SetCreateTimeStr(v string) *ItemForListClustersOutput {
	s.CreateTimeStr = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *ItemForListClustersOutput) SetCreator(v string) *ItemForListClustersOutput {
	s.Creator = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *ItemForListClustersOutput) SetExpireTime(v int64) *ItemForListClustersOutput {
	s.ExpireTime = &v
	return s
}

// SetNodeAttribute sets the NodeAttribute field's value.
func (s *ItemForListClustersOutput) SetNodeAttribute(v *NodeAttributeForListClustersOutput) *ItemForListClustersOutput {
	s.NodeAttribute = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ItemForListClustersOutput) SetProjectName(v string) *ItemForListClustersOutput {
	s.ProjectName = &v
	return s
}

// SetReadyTime sets the ReadyTime field's value.
func (s *ItemForListClustersOutput) SetReadyTime(v int64) *ItemForListClustersOutput {
	s.ReadyTime = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *ItemForListClustersOutput) SetRegionId(v string) *ItemForListClustersOutput {
	s.RegionId = &v
	return s
}

// SetReleaseVersion sets the ReleaseVersion field's value.
func (s *ItemForListClustersOutput) SetReleaseVersion(v string) *ItemForListClustersOutput {
	s.ReleaseVersion = &v
	return s
}

// SetSecurityGroupId sets the SecurityGroupId field's value.
func (s *ItemForListClustersOutput) SetSecurityGroupId(v string) *ItemForListClustersOutput {
	s.SecurityGroupId = &v
	return s
}

// SetStateChangeReason sets the StateChangeReason field's value.
func (s *ItemForListClustersOutput) SetStateChangeReason(v *StateChangeReasonForListClustersOutput) *ItemForListClustersOutput {
	s.StateChangeReason = v
	return s
}

// SetTags sets the Tags field's value.
func (s *ItemForListClustersOutput) SetTags(v []*TagForListClustersOutput) *ItemForListClustersOutput {
	s.Tags = v
	return s
}

// SetTerminateTime sets the TerminateTime field's value.
func (s *ItemForListClustersOutput) SetTerminateTime(v int64) *ItemForListClustersOutput {
	s.TerminateTime = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ItemForListClustersOutput) SetVpcId(v string) *ItemForListClustersOutput {
	s.VpcId = &v
	return s
}

type ListClustersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeTypes []*string `type:"list" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	ClusterIds []*string `type:"list" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	ClusterStates []*string `type:"list" json:",omitempty"`

	ClusterTypes []*string `type:"list" json:",omitempty"`

	CreateTimeAfter *string `type:"string" json:",omitempty"`

	CreateTimeBefore *string `type:"string" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	ReleaseVersion *string `type:"string" json:",omitempty"`

	Tags []*TagForListClustersInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListClustersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListClustersInput) GoString() string {
	return s.String()
}

// SetChargeTypes sets the ChargeTypes field's value.
func (s *ListClustersInput) SetChargeTypes(v []*string) *ListClustersInput {
	s.ChargeTypes = v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *ListClustersInput) SetClusterId(v string) *ListClustersInput {
	s.ClusterId = &v
	return s
}

// SetClusterIds sets the ClusterIds field's value.
func (s *ListClustersInput) SetClusterIds(v []*string) *ListClustersInput {
	s.ClusterIds = v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *ListClustersInput) SetClusterName(v string) *ListClustersInput {
	s.ClusterName = &v
	return s
}

// SetClusterStates sets the ClusterStates field's value.
func (s *ListClustersInput) SetClusterStates(v []*string) *ListClustersInput {
	s.ClusterStates = v
	return s
}

// SetClusterTypes sets the ClusterTypes field's value.
func (s *ListClustersInput) SetClusterTypes(v []*string) *ListClustersInput {
	s.ClusterTypes = v
	return s
}

// SetCreateTimeAfter sets the CreateTimeAfter field's value.
func (s *ListClustersInput) SetCreateTimeAfter(v string) *ListClustersInput {
	s.CreateTimeAfter = &v
	return s
}

// SetCreateTimeBefore sets the CreateTimeBefore field's value.
func (s *ListClustersInput) SetCreateTimeBefore(v string) *ListClustersInput {
	s.CreateTimeBefore = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListClustersInput) SetMaxResults(v int32) *ListClustersInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListClustersInput) SetNextToken(v string) *ListClustersInput {
	s.NextToken = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListClustersInput) SetProjectName(v string) *ListClustersInput {
	s.ProjectName = &v
	return s
}

// SetReleaseVersion sets the ReleaseVersion field's value.
func (s *ListClustersInput) SetReleaseVersion(v string) *ListClustersInput {
	s.ReleaseVersion = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListClustersInput) SetTags(v []*TagForListClustersInput) *ListClustersInput {
	s.Tags = v
	return s
}

type ListClustersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListClustersOutput `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListClustersOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListClustersOutput) SetItems(v []*ItemForListClustersOutput) *ListClustersOutput {
	s.Items = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListClustersOutput) SetMaxResults(v int32) *ListClustersOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListClustersOutput) SetNextToken(v string) *ListClustersOutput {
	s.NextToken = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListClustersOutput) SetTotalCount(v int32) *ListClustersOutput {
	s.TotalCount = &v
	return s
}

type NodeAttributeForListClustersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EcsIamRole *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NodeAttributeForListClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeAttributeForListClustersOutput) GoString() string {
	return s.String()
}

// SetEcsIamRole sets the EcsIamRole field's value.
func (s *NodeAttributeForListClustersOutput) SetEcsIamRole(v string) *NodeAttributeForListClustersOutput {
	s.EcsIamRole = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *NodeAttributeForListClustersOutput) SetZoneId(v string) *NodeAttributeForListClustersOutput {
	s.ZoneId = &v
	return s
}

type StateChangeReasonForListClustersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:"code,omitempty"`

	Reason *string `type:"string" json:"reason,omitempty"`
}

// String returns the string representation
func (s StateChangeReasonForListClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StateChangeReasonForListClustersOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *StateChangeReasonForListClustersOutput) SetCode(v string) *StateChangeReasonForListClustersOutput {
	s.Code = &v
	return s
}

// SetReason sets the Reason field's value.
func (s *StateChangeReasonForListClustersOutput) SetReason(v string) *StateChangeReasonForListClustersOutput {
	s.Reason = &v
	return s
}

type TagForListClustersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListClustersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListClustersInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListClustersInput) SetKey(v string) *TagForListClustersInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListClustersInput) SetValue(v string) *TagForListClustersInput {
	s.Value = &v
	return s
}

type TagForListClustersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForListClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListClustersOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListClustersOutput) SetKey(v string) *TagForListClustersOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForListClustersOutput) SetValue(v string) *TagForListClustersOutput {
	s.Value = &v
	return s
}

const (
	// EnumOfChargeTypeListForListClustersInputPre is a EnumOfChargeTypeListForListClustersInput enum value
	EnumOfChargeTypeListForListClustersInputPre = "PRE"

	// EnumOfChargeTypeListForListClustersInputPost is a EnumOfChargeTypeListForListClustersInput enum value
	EnumOfChargeTypeListForListClustersInputPost = "POST"
)

const (
	// EnumOfClusterStateListForListClustersInputPendingForPayment is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputPendingForPayment = "PENDING_FOR_PAYMENT"

	// EnumOfClusterStateListForListClustersInputCreating is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputCreating = "CREATING"

	// EnumOfClusterStateListForListClustersInputRunning is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputRunning = "RUNNING"

	// EnumOfClusterStateListForListClustersInputTerminating is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputTerminating = "TERMINATING"

	// EnumOfClusterStateListForListClustersInputTerminated is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputTerminated = "TERMINATED"

	// EnumOfClusterStateListForListClustersInputTerminatedWithError is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputTerminatedWithError = "TERMINATED_WITH_ERROR"

	// EnumOfClusterStateListForListClustersInputFailed is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputFailed = "FAILED"

	// EnumOfClusterStateListForListClustersInputShutdown is a EnumOfClusterStateListForListClustersInput enum value
	EnumOfClusterStateListForListClustersInputShutdown = "SHUTDOWN"
)
