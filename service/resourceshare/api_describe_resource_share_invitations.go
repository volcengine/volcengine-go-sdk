// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package resourceshare

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeResourceShareInvitationsCommon = "DescribeResourceShareInvitations"

// DescribeResourceShareInvitationsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeResourceShareInvitationsCommon operation. The "output" return
// value will be populated with the DescribeResourceShareInvitationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeResourceShareInvitationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeResourceShareInvitationsCommon Send returns without error.
//
// See DescribeResourceShareInvitationsCommon for more information on using the DescribeResourceShareInvitationsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeResourceShareInvitationsCommonRequest method.
//    req, resp := client.DescribeResourceShareInvitationsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) DescribeResourceShareInvitationsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeResourceShareInvitationsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeResourceShareInvitationsCommon API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation DescribeResourceShareInvitationsCommon for usage and error information.
func (c *RESOURCESHARE) DescribeResourceShareInvitationsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeResourceShareInvitationsCommonRequest(input)
	return out, req.Send()
}

// DescribeResourceShareInvitationsCommonWithContext is the same as DescribeResourceShareInvitationsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeResourceShareInvitationsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) DescribeResourceShareInvitationsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeResourceShareInvitationsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeResourceShareInvitations = "DescribeResourceShareInvitations"

// DescribeResourceShareInvitationsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeResourceShareInvitations operation. The "output" return
// value will be populated with the DescribeResourceShareInvitationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeResourceShareInvitationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeResourceShareInvitationsCommon Send returns without error.
//
// See DescribeResourceShareInvitations for more information on using the DescribeResourceShareInvitations
// API call, and error handling.
//
//    // Example sending a request using the DescribeResourceShareInvitationsRequest method.
//    req, resp := client.DescribeResourceShareInvitationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) DescribeResourceShareInvitationsRequest(input *DescribeResourceShareInvitationsInput) (req *request.Request, output *DescribeResourceShareInvitationsOutput) {
	op := &request.Operation{
		Name:       opDescribeResourceShareInvitations,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeResourceShareInvitationsInput{}
	}

	output = &DescribeResourceShareInvitationsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeResourceShareInvitations API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation DescribeResourceShareInvitations for usage and error information.
func (c *RESOURCESHARE) DescribeResourceShareInvitations(input *DescribeResourceShareInvitationsInput) (*DescribeResourceShareInvitationsOutput, error) {
	req, out := c.DescribeResourceShareInvitationsRequest(input)
	return out, req.Send()
}

// DescribeResourceShareInvitationsWithContext is the same as DescribeResourceShareInvitations with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeResourceShareInvitations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) DescribeResourceShareInvitationsWithContext(ctx volcengine.Context, input *DescribeResourceShareInvitationsInput, opts ...request.Option) (*DescribeResourceShareInvitationsOutput, error) {
	req, out := c.DescribeResourceShareInvitationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeResourceShareInvitationsInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `type:"int64"`

	NextToken *string `type:"string"`

	ResourceShareInvitationTrns *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s DescribeResourceShareInvitationsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceShareInvitationsInput) GoString() string {
	return s.String()
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeResourceShareInvitationsInput) SetMaxResults(v int64) *DescribeResourceShareInvitationsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeResourceShareInvitationsInput) SetNextToken(v string) *DescribeResourceShareInvitationsInput {
	s.NextToken = &v
	return s
}

// SetResourceShareInvitationTrns sets the ResourceShareInvitationTrns field's value.
func (s *DescribeResourceShareInvitationsInput) SetResourceShareInvitationTrns(v string) *DescribeResourceShareInvitationsInput {
	s.ResourceShareInvitationTrns = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeResourceShareInvitationsInput) SetStatus(v string) *DescribeResourceShareInvitationsInput {
	s.Status = &v
	return s
}

type DescribeResourceShareInvitationsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	ResourceShareInvitations []*ResourceShareInvitationForDescribeResourceShareInvitationsOutput `type:"list"`
}

// String returns the string representation
func (s DescribeResourceShareInvitationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeResourceShareInvitationsOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeResourceShareInvitationsOutput) SetNextToken(v string) *DescribeResourceShareInvitationsOutput {
	s.NextToken = &v
	return s
}

// SetResourceShareInvitations sets the ResourceShareInvitations field's value.
func (s *DescribeResourceShareInvitationsOutput) SetResourceShareInvitations(v []*ResourceShareInvitationForDescribeResourceShareInvitationsOutput) *DescribeResourceShareInvitationsOutput {
	s.ResourceShareInvitations = v
	return s
}

type ResourceShareInvitationForDescribeResourceShareInvitationsOutput struct {
	_ struct{} `type:"structure"`

	InvitatedTime *string `type:"string"`

	OwningAccountId *int64 `type:"int64"`

	ReceiverAccountId *int64 `type:"int64"`

	ResourceShareId *string `type:"string"`

	ResourceShareInvitationTrn *string `type:"string"`

	ResourceShareName *string `type:"string"`

	ResourceShareTrn *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s ResourceShareInvitationForDescribeResourceShareInvitationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceShareInvitationForDescribeResourceShareInvitationsOutput) GoString() string {
	return s.String()
}

// SetInvitatedTime sets the InvitatedTime field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetInvitatedTime(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.InvitatedTime = &v
	return s
}

// SetOwningAccountId sets the OwningAccountId field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetOwningAccountId(v int64) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.OwningAccountId = &v
	return s
}

// SetReceiverAccountId sets the ReceiverAccountId field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetReceiverAccountId(v int64) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.ReceiverAccountId = &v
	return s
}

// SetResourceShareId sets the ResourceShareId field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetResourceShareId(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.ResourceShareId = &v
	return s
}

// SetResourceShareInvitationTrn sets the ResourceShareInvitationTrn field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetResourceShareInvitationTrn(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.ResourceShareInvitationTrn = &v
	return s
}

// SetResourceShareName sets the ResourceShareName field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetResourceShareName(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.ResourceShareName = &v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetResourceShareTrn(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.ResourceShareTrn = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ResourceShareInvitationForDescribeResourceShareInvitationsOutput) SetStatus(v string) *ResourceShareInvitationForDescribeResourceShareInvitationsOutput {
	s.Status = &v
	return s
}
