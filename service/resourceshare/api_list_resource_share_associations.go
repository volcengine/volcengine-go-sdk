// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package resourceshare

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResourceShareAssociationsCommon = "ListResourceShareAssociations"

// ListResourceShareAssociationsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourceShareAssociationsCommon operation. The "output" return
// value will be populated with the ListResourceShareAssociationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourceShareAssociationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourceShareAssociationsCommon Send returns without error.
//
// See ListResourceShareAssociationsCommon for more information on using the ListResourceShareAssociationsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResourceShareAssociationsCommonRequest method.
//    req, resp := client.ListResourceShareAssociationsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourceShareAssociationsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourceShareAssociationsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListResourceShareAssociationsCommon API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResourceShareAssociationsCommon for usage and error information.
func (c *RESOURCESHARE) ListResourceShareAssociationsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourceShareAssociationsCommonRequest(input)
	return out, req.Send()
}

// ListResourceShareAssociationsCommonWithContext is the same as ListResourceShareAssociationsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourceShareAssociationsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourceShareAssociationsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourceShareAssociationsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResourceShareAssociations = "ListResourceShareAssociations"

// ListResourceShareAssociationsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourceShareAssociations operation. The "output" return
// value will be populated with the ListResourceShareAssociationsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourceShareAssociationsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourceShareAssociationsCommon Send returns without error.
//
// See ListResourceShareAssociations for more information on using the ListResourceShareAssociations
// API call, and error handling.
//
//    // Example sending a request using the ListResourceShareAssociationsRequest method.
//    req, resp := client.ListResourceShareAssociationsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourceShareAssociationsRequest(input *ListResourceShareAssociationsInput) (req *request.Request, output *ListResourceShareAssociationsOutput) {
	op := &request.Operation{
		Name:       opListResourceShareAssociations,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourceShareAssociationsInput{}
	}

	output = &ListResourceShareAssociationsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListResourceShareAssociations API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResourceShareAssociations for usage and error information.
func (c *RESOURCESHARE) ListResourceShareAssociations(input *ListResourceShareAssociationsInput) (*ListResourceShareAssociationsOutput, error) {
	req, out := c.ListResourceShareAssociationsRequest(input)
	return out, req.Send()
}

// ListResourceShareAssociationsWithContext is the same as ListResourceShareAssociations with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourceShareAssociations for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourceShareAssociationsWithContext(ctx volcengine.Context, input *ListResourceShareAssociationsInput, opts ...request.Option) (*ListResourceShareAssociationsOutput, error) {
	req, out := c.ListResourceShareAssociationsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AssociationForListResourceShareAssociationsOutput struct {
	_ struct{} `type:"structure"`

	AssociateTime *string `type:"string"`

	AssociationEntity *string `type:"string"`

	AssociationType *string `type:"string"`

	External *bool `type:"boolean"`

	ResourceShareId *string `type:"string"`

	ResourceShareName *string `type:"string"`

	ResourceShareTrn *string `type:"string"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s AssociationForListResourceShareAssociationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AssociationForListResourceShareAssociationsOutput) GoString() string {
	return s.String()
}

// SetAssociateTime sets the AssociateTime field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetAssociateTime(v string) *AssociationForListResourceShareAssociationsOutput {
	s.AssociateTime = &v
	return s
}

// SetAssociationEntity sets the AssociationEntity field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetAssociationEntity(v string) *AssociationForListResourceShareAssociationsOutput {
	s.AssociationEntity = &v
	return s
}

// SetAssociationType sets the AssociationType field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetAssociationType(v string) *AssociationForListResourceShareAssociationsOutput {
	s.AssociationType = &v
	return s
}

// SetExternal sets the External field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetExternal(v bool) *AssociationForListResourceShareAssociationsOutput {
	s.External = &v
	return s
}

// SetResourceShareId sets the ResourceShareId field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetResourceShareId(v string) *AssociationForListResourceShareAssociationsOutput {
	s.ResourceShareId = &v
	return s
}

// SetResourceShareName sets the ResourceShareName field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetResourceShareName(v string) *AssociationForListResourceShareAssociationsOutput {
	s.ResourceShareName = &v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetResourceShareTrn(v string) *AssociationForListResourceShareAssociationsOutput {
	s.ResourceShareTrn = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *AssociationForListResourceShareAssociationsOutput) SetStatus(v string) *AssociationForListResourceShareAssociationsOutput {
	s.Status = &v
	return s
}

type ListResourceShareAssociationsInput struct {
	_ struct{} `type:"structure"`

	// AssociationType is a required field
	AssociationType *string `type:"string" required:"true"`

	MaxResults *int64 `type:"int64"`

	NextToken *string `type:"string"`

	// ResourceShareTrn is a required field
	ResourceShareTrn *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ListResourceShareAssociationsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourceShareAssociationsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListResourceShareAssociationsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListResourceShareAssociationsInput"}
	if s.AssociationType == nil {
		invalidParams.Add(request.NewErrParamRequired("AssociationType"))
	}
	if s.ResourceShareTrn == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceShareTrn"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssociationType sets the AssociationType field's value.
func (s *ListResourceShareAssociationsInput) SetAssociationType(v string) *ListResourceShareAssociationsInput {
	s.AssociationType = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListResourceShareAssociationsInput) SetMaxResults(v int64) *ListResourceShareAssociationsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourceShareAssociationsInput) SetNextToken(v string) *ListResourceShareAssociationsInput {
	s.NextToken = &v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *ListResourceShareAssociationsInput) SetResourceShareTrn(v string) *ListResourceShareAssociationsInput {
	s.ResourceShareTrn = &v
	return s
}

type ListResourceShareAssociationsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Associations []*AssociationForListResourceShareAssociationsOutput `type:"list"`

	NextToken *string `type:"string"`

	TotalPage *int32 `type:"int32"`
}

// String returns the string representation
func (s ListResourceShareAssociationsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourceShareAssociationsOutput) GoString() string {
	return s.String()
}

// SetAssociations sets the Associations field's value.
func (s *ListResourceShareAssociationsOutput) SetAssociations(v []*AssociationForListResourceShareAssociationsOutput) *ListResourceShareAssociationsOutput {
	s.Associations = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourceShareAssociationsOutput) SetNextToken(v string) *ListResourceShareAssociationsOutput {
	s.NextToken = &v
	return s
}

// SetTotalPage sets the TotalPage field's value.
func (s *ListResourceShareAssociationsOutput) SetTotalPage(v int32) *ListResourceShareAssociationsOutput {
	s.TotalPage = &v
	return s
}
