// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package resourceshare

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResourceSharePermissionsCommon = "ListResourceSharePermissions"

// ListResourceSharePermissionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourceSharePermissionsCommon operation. The "output" return
// value will be populated with the ListResourceSharePermissionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourceSharePermissionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourceSharePermissionsCommon Send returns without error.
//
// See ListResourceSharePermissionsCommon for more information on using the ListResourceSharePermissionsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResourceSharePermissionsCommonRequest method.
//    req, resp := client.ListResourceSharePermissionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourceSharePermissionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourceSharePermissionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListResourceSharePermissionsCommon API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResourceSharePermissionsCommon for usage and error information.
func (c *RESOURCESHARE) ListResourceSharePermissionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourceSharePermissionsCommonRequest(input)
	return out, req.Send()
}

// ListResourceSharePermissionsCommonWithContext is the same as ListResourceSharePermissionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourceSharePermissionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourceSharePermissionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourceSharePermissionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResourceSharePermissions = "ListResourceSharePermissions"

// ListResourceSharePermissionsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourceSharePermissions operation. The "output" return
// value will be populated with the ListResourceSharePermissionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourceSharePermissionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourceSharePermissionsCommon Send returns without error.
//
// See ListResourceSharePermissions for more information on using the ListResourceSharePermissions
// API call, and error handling.
//
//    // Example sending a request using the ListResourceSharePermissionsRequest method.
//    req, resp := client.ListResourceSharePermissionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourceSharePermissionsRequest(input *ListResourceSharePermissionsInput) (req *request.Request, output *ListResourceSharePermissionsOutput) {
	op := &request.Operation{
		Name:       opListResourceSharePermissions,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourceSharePermissionsInput{}
	}

	output = &ListResourceSharePermissionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListResourceSharePermissions API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResourceSharePermissions for usage and error information.
func (c *RESOURCESHARE) ListResourceSharePermissions(input *ListResourceSharePermissionsInput) (*ListResourceSharePermissionsOutput, error) {
	req, out := c.ListResourceSharePermissionsRequest(input)
	return out, req.Send()
}

// ListResourceSharePermissionsWithContext is the same as ListResourceSharePermissions with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourceSharePermissions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourceSharePermissionsWithContext(ctx volcengine.Context, input *ListResourceSharePermissionsInput, opts ...request.Option) (*ListResourceSharePermissionsOutput, error) {
	req, out := c.ListResourceSharePermissionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListResourceSharePermissionsInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `type:"int64"`

	NextToken *string `type:"string"`

	// ResourceShareTrn is a required field
	ResourceShareTrn *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ListResourceSharePermissionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourceSharePermissionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListResourceSharePermissionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListResourceSharePermissionsInput"}
	if s.ResourceShareTrn == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceShareTrn"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListResourceSharePermissionsInput) SetMaxResults(v int64) *ListResourceSharePermissionsInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourceSharePermissionsInput) SetNextToken(v string) *ListResourceSharePermissionsInput {
	s.NextToken = &v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *ListResourceSharePermissionsInput) SetResourceShareTrn(v string) *ListResourceSharePermissionsInput {
	s.ResourceShareTrn = &v
	return s
}

type ListResourceSharePermissionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	Permissions []*PermissionForListResourceSharePermissionsOutput `type:"list"`

	ResourceShareTrn *string `type:"string"`
}

// String returns the string representation
func (s ListResourceSharePermissionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourceSharePermissionsOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourceSharePermissionsOutput) SetNextToken(v string) *ListResourceSharePermissionsOutput {
	s.NextToken = &v
	return s
}

// SetPermissions sets the Permissions field's value.
func (s *ListResourceSharePermissionsOutput) SetPermissions(v []*PermissionForListResourceSharePermissionsOutput) *ListResourceSharePermissionsOutput {
	s.Permissions = v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *ListResourceSharePermissionsOutput) SetResourceShareTrn(v string) *ListResourceSharePermissionsOutput {
	s.ResourceShareTrn = &v
	return s
}

type PermissionForListResourceSharePermissionsOutput struct {
	_ struct{} `type:"structure"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	Name *string `type:"string"`

	Permission *string `type:"string"`

	PermissionType *string `type:"string"`

	ResourceType *string `type:"string"`

	Trn *string `type:"string"`
}

// String returns the string representation
func (s PermissionForListResourceSharePermissionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PermissionForListResourceSharePermissionsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetCreateTime(v string) *PermissionForListResourceSharePermissionsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetDescription(v string) *PermissionForListResourceSharePermissionsOutput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetName(v string) *PermissionForListResourceSharePermissionsOutput {
	s.Name = &v
	return s
}

// SetPermission sets the Permission field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetPermission(v string) *PermissionForListResourceSharePermissionsOutput {
	s.Permission = &v
	return s
}

// SetPermissionType sets the PermissionType field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetPermissionType(v string) *PermissionForListResourceSharePermissionsOutput {
	s.PermissionType = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetResourceType(v string) *PermissionForListResourceSharePermissionsOutput {
	s.ResourceType = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *PermissionForListResourceSharePermissionsOutput) SetTrn(v string) *PermissionForListResourceSharePermissionsOutput {
	s.Trn = &v
	return s
}
