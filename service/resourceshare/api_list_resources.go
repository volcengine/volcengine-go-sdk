// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package resourceshare

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListResourcesCommon = "ListResources"

// ListResourcesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResourcesCommon operation. The "output" return
// value will be populated with the ListResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcesCommon Send returns without error.
//
// See ListResourcesCommon for more information on using the ListResourcesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListResourcesCommonRequest method.
//    req, resp := client.ListResourcesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourcesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListResourcesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListResourcesCommon API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResourcesCommon for usage and error information.
func (c *RESOURCESHARE) ListResourcesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListResourcesCommonRequest(input)
	return out, req.Send()
}

// ListResourcesCommonWithContext is the same as ListResourcesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListResourcesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourcesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListResourcesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListResources = "ListResources"

// ListResourcesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListResources operation. The "output" return
// value will be populated with the ListResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListResourcesCommon Send returns without error.
//
// See ListResources for more information on using the ListResources
// API call, and error handling.
//
//    // Example sending a request using the ListResourcesRequest method.
//    req, resp := client.ListResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *RESOURCESHARE) ListResourcesRequest(input *ListResourcesInput) (req *request.Request, output *ListResourcesOutput) {
	op := &request.Operation{
		Name:       opListResources,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListResourcesInput{}
	}

	output = &ListResourcesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListResources API operation for RESOURCE_SHARE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for RESOURCE_SHARE's
// API operation ListResources for usage and error information.
func (c *RESOURCESHARE) ListResources(input *ListResourcesInput) (*ListResourcesOutput, error) {
	req, out := c.ListResourcesRequest(input)
	return out, req.Send()
}

// ListResourcesWithContext is the same as ListResources with the addition of
// the ability to pass a context and additional request options.
//
// See ListResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *RESOURCESHARE) ListResourcesWithContext(ctx volcengine.Context, input *ListResourcesInput, opts ...request.Option) (*ListResourcesOutput, error) {
	req, out := c.ListResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListResourcesInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `type:"int64"`

	NextToken *string `type:"string"`

	Principal *string `type:"string"`

	ResourceShareTrns *string `type:"string"`

	ResourceTrns *string `type:"string"`

	ResourceType *string `type:"string"`
}

// String returns the string representation
func (s ListResourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesInput) GoString() string {
	return s.String()
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListResourcesInput) SetMaxResults(v int64) *ListResourcesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourcesInput) SetNextToken(v string) *ListResourcesInput {
	s.NextToken = &v
	return s
}

// SetPrincipal sets the Principal field's value.
func (s *ListResourcesInput) SetPrincipal(v string) *ListResourcesInput {
	s.Principal = &v
	return s
}

// SetResourceShareTrns sets the ResourceShareTrns field's value.
func (s *ListResourcesInput) SetResourceShareTrns(v string) *ListResourcesInput {
	s.ResourceShareTrns = &v
	return s
}

// SetResourceTrns sets the ResourceTrns field's value.
func (s *ListResourcesInput) SetResourceTrns(v string) *ListResourcesInput {
	s.ResourceTrns = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListResourcesInput) SetResourceType(v string) *ListResourcesInput {
	s.ResourceType = &v
	return s
}

type ListResourcesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	Resources []*ResourceForListResourcesOutput `type:"list"`
}

// String returns the string representation
func (s ListResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListResourcesOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListResourcesOutput) SetNextToken(v string) *ListResourcesOutput {
	s.NextToken = &v
	return s
}

// SetResources sets the Resources field's value.
func (s *ListResourcesOutput) SetResources(v []*ResourceForListResourcesOutput) *ListResourcesOutput {
	s.Resources = v
	return s
}

type ResourceForListResourcesOutput struct {
	_ struct{} `type:"structure"`

	RegionScope *string `type:"string"`

	ResourceShares []*ResourceShareForListResourcesOutput `type:"list"`

	ResourceType *string `type:"string"`

	Status *string `type:"string"`

	Trn *string `type:"string"`
}

// String returns the string representation
func (s ResourceForListResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceForListResourcesOutput) GoString() string {
	return s.String()
}

// SetRegionScope sets the RegionScope field's value.
func (s *ResourceForListResourcesOutput) SetRegionScope(v string) *ResourceForListResourcesOutput {
	s.RegionScope = &v
	return s
}

// SetResourceShares sets the ResourceShares field's value.
func (s *ResourceForListResourcesOutput) SetResourceShares(v []*ResourceShareForListResourcesOutput) *ResourceForListResourcesOutput {
	s.ResourceShares = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ResourceForListResourcesOutput) SetResourceType(v string) *ResourceForListResourcesOutput {
	s.ResourceType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ResourceForListResourcesOutput) SetStatus(v string) *ResourceForListResourcesOutput {
	s.Status = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *ResourceForListResourcesOutput) SetTrn(v string) *ResourceForListResourcesOutput {
	s.Trn = &v
	return s
}

type ResourceShareForListResourcesOutput struct {
	_ struct{} `type:"structure"`

	ResourceShareName *string `type:"string"`

	ResourceShareTrn *string `type:"string"`

	ShareTime *string `type:"string"`
}

// String returns the string representation
func (s ResourceShareForListResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceShareForListResourcesOutput) GoString() string {
	return s.String()
}

// SetResourceShareName sets the ResourceShareName field's value.
func (s *ResourceShareForListResourcesOutput) SetResourceShareName(v string) *ResourceShareForListResourcesOutput {
	s.ResourceShareName = &v
	return s
}

// SetResourceShareTrn sets the ResourceShareTrn field's value.
func (s *ResourceShareForListResourcesOutput) SetResourceShareTrn(v string) *ResourceShareForListResourcesOutput {
	s.ResourceShareTrn = &v
	return s
}

// SetShareTime sets the ShareTime field's value.
func (s *ResourceShareForListResourcesOutput) SetShareTime(v string) *ResourceShareForListResourcesOutput {
	s.ShareTime = &v
	return s
}
