// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudmonitor

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyStateOfSilencePolicyByIdsCommon = "ModifyStateOfSilencePolicyByIds"

// ModifyStateOfSilencePolicyByIdsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyStateOfSilencePolicyByIdsCommon operation. The "output" return
// value will be populated with the ModifyStateOfSilencePolicyByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyStateOfSilencePolicyByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyStateOfSilencePolicyByIdsCommon Send returns without error.
//
// See ModifyStateOfSilencePolicyByIdsCommon for more information on using the ModifyStateOfSilencePolicyByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyStateOfSilencePolicyByIdsCommonRequest method.
//    req, resp := client.ModifyStateOfSilencePolicyByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyStateOfSilencePolicyByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyStateOfSilencePolicyByIdsCommon API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ModifyStateOfSilencePolicyByIdsCommon for usage and error information.
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyStateOfSilencePolicyByIdsCommonRequest(input)
	return out, req.Send()
}

// ModifyStateOfSilencePolicyByIdsCommonWithContext is the same as ModifyStateOfSilencePolicyByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyStateOfSilencePolicyByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIdsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyStateOfSilencePolicyByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyStateOfSilencePolicyByIds = "ModifyStateOfSilencePolicyByIds"

// ModifyStateOfSilencePolicyByIdsRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyStateOfSilencePolicyByIds operation. The "output" return
// value will be populated with the ModifyStateOfSilencePolicyByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyStateOfSilencePolicyByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyStateOfSilencePolicyByIdsCommon Send returns without error.
//
// See ModifyStateOfSilencePolicyByIds for more information on using the ModifyStateOfSilencePolicyByIds
// API call, and error handling.
//
//    // Example sending a request using the ModifyStateOfSilencePolicyByIdsRequest method.
//    req, resp := client.ModifyStateOfSilencePolicyByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIdsRequest(input *ModifyStateOfSilencePolicyByIdsInput) (req *request.Request, output *ModifyStateOfSilencePolicyByIdsOutput) {
	op := &request.Operation{
		Name:       opModifyStateOfSilencePolicyByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyStateOfSilencePolicyByIdsInput{}
	}

	output = &ModifyStateOfSilencePolicyByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyStateOfSilencePolicyByIds API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ModifyStateOfSilencePolicyByIds for usage and error information.
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIds(input *ModifyStateOfSilencePolicyByIdsInput) (*ModifyStateOfSilencePolicyByIdsOutput, error) {
	req, out := c.ModifyStateOfSilencePolicyByIdsRequest(input)
	return out, req.Send()
}

// ModifyStateOfSilencePolicyByIdsWithContext is the same as ModifyStateOfSilencePolicyByIds with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyStateOfSilencePolicyByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ModifyStateOfSilencePolicyByIdsWithContext(ctx volcengine.Context, input *ModifyStateOfSilencePolicyByIdsInput, opts ...request.Option) (*ModifyStateOfSilencePolicyByIdsOutput, error) {
	req, out := c.ModifyStateOfSilencePolicyByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyStateOfSilencePolicyByIdsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	// State is a required field
	State *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfStateForModifyStateOfSilencePolicyByIdsInput"`
}

// String returns the string representation
func (s ModifyStateOfSilencePolicyByIdsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyStateOfSilencePolicyByIdsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyStateOfSilencePolicyByIdsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyStateOfSilencePolicyByIdsInput"}
	if s.State == nil {
		invalidParams.Add(request.NewErrParamRequired("State"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIds sets the Ids field's value.
func (s *ModifyStateOfSilencePolicyByIdsInput) SetIds(v []*string) *ModifyStateOfSilencePolicyByIdsInput {
	s.Ids = v
	return s
}

// SetState sets the State field's value.
func (s *ModifyStateOfSilencePolicyByIdsInput) SetState(v string) *ModifyStateOfSilencePolicyByIdsInput {
	s.State = &v
	return s
}

type ModifyStateOfSilencePolicyByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ModifyStateOfSilencePolicyByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyStateOfSilencePolicyByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ModifyStateOfSilencePolicyByIdsOutput) SetData(v []*string) *ModifyStateOfSilencePolicyByIdsOutput {
	s.Data = v
	return s
}

const (
	// EnumOfStateForModifyStateOfSilencePolicyByIdsInputDisable is a EnumOfStateForModifyStateOfSilencePolicyByIdsInput enum value
	EnumOfStateForModifyStateOfSilencePolicyByIdsInputDisable = "disable"

	// EnumOfStateForModifyStateOfSilencePolicyByIdsInputEnable is a EnumOfStateForModifyStateOfSilencePolicyByIdsInput enum value
	EnumOfStateForModifyStateOfSilencePolicyByIdsInputEnable = "enable"
)
