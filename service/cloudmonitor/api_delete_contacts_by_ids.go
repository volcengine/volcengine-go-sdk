// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudmonitor

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteContactsByIdsCommon = "DeleteContactsByIds"

// DeleteContactsByIdsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteContactsByIdsCommon operation. The "output" return
// value will be populated with the DeleteContactsByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteContactsByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteContactsByIdsCommon Send returns without error.
//
// See DeleteContactsByIdsCommon for more information on using the DeleteContactsByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteContactsByIdsCommonRequest method.
//    req, resp := client.DeleteContactsByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) DeleteContactsByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteContactsByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteContactsByIdsCommon API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation DeleteContactsByIdsCommon for usage and error information.
func (c *CLOUDMONITOR) DeleteContactsByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteContactsByIdsCommonRequest(input)
	return out, req.Send()
}

// DeleteContactsByIdsCommonWithContext is the same as DeleteContactsByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteContactsByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) DeleteContactsByIdsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteContactsByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteContactsByIds = "DeleteContactsByIds"

// DeleteContactsByIdsRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteContactsByIds operation. The "output" return
// value will be populated with the DeleteContactsByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteContactsByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteContactsByIdsCommon Send returns without error.
//
// See DeleteContactsByIds for more information on using the DeleteContactsByIds
// API call, and error handling.
//
//    // Example sending a request using the DeleteContactsByIdsRequest method.
//    req, resp := client.DeleteContactsByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) DeleteContactsByIdsRequest(input *DeleteContactsByIdsInput) (req *request.Request, output *DeleteContactsByIdsOutput) {
	op := &request.Operation{
		Name:       opDeleteContactsByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteContactsByIdsInput{}
	}

	output = &DeleteContactsByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteContactsByIds API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation DeleteContactsByIds for usage and error information.
func (c *CLOUDMONITOR) DeleteContactsByIds(input *DeleteContactsByIdsInput) (*DeleteContactsByIdsOutput, error) {
	req, out := c.DeleteContactsByIdsRequest(input)
	return out, req.Send()
}

// DeleteContactsByIdsWithContext is the same as DeleteContactsByIds with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteContactsByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) DeleteContactsByIdsWithContext(ctx volcengine.Context, input *DeleteContactsByIdsInput, opts ...request.Option) (*DeleteContactsByIdsOutput, error) {
	req, out := c.DeleteContactsByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteContactsByIdsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteContactsByIdsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteContactsByIdsInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DeleteContactsByIdsInput) SetIds(v []*string) *DeleteContactsByIdsInput {
	s.Ids = v
	return s
}

type DeleteContactsByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteContactsByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteContactsByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *DeleteContactsByIdsOutput) SetData(v []*string) *DeleteContactsByIdsOutput {
	s.Data = v
	return s
}
