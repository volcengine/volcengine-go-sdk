// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudmonitor

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteNotifyTemplatesByIdsCommon = "DeleteNotifyTemplatesByIds"

// DeleteNotifyTemplatesByIdsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNotifyTemplatesByIdsCommon operation. The "output" return
// value will be populated with the DeleteNotifyTemplatesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNotifyTemplatesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNotifyTemplatesByIdsCommon Send returns without error.
//
// See DeleteNotifyTemplatesByIdsCommon for more information on using the DeleteNotifyTemplatesByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteNotifyTemplatesByIdsCommonRequest method.
//    req, resp := client.DeleteNotifyTemplatesByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteNotifyTemplatesByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteNotifyTemplatesByIdsCommon API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation DeleteNotifyTemplatesByIdsCommon for usage and error information.
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteNotifyTemplatesByIdsCommonRequest(input)
	return out, req.Send()
}

// DeleteNotifyTemplatesByIdsCommonWithContext is the same as DeleteNotifyTemplatesByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNotifyTemplatesByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIdsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteNotifyTemplatesByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteNotifyTemplatesByIds = "DeleteNotifyTemplatesByIds"

// DeleteNotifyTemplatesByIdsRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNotifyTemplatesByIds operation. The "output" return
// value will be populated with the DeleteNotifyTemplatesByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNotifyTemplatesByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNotifyTemplatesByIdsCommon Send returns without error.
//
// See DeleteNotifyTemplatesByIds for more information on using the DeleteNotifyTemplatesByIds
// API call, and error handling.
//
//    // Example sending a request using the DeleteNotifyTemplatesByIdsRequest method.
//    req, resp := client.DeleteNotifyTemplatesByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIdsRequest(input *DeleteNotifyTemplatesByIdsInput) (req *request.Request, output *DeleteNotifyTemplatesByIdsOutput) {
	op := &request.Operation{
		Name:       opDeleteNotifyTemplatesByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNotifyTemplatesByIdsInput{}
	}

	output = &DeleteNotifyTemplatesByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteNotifyTemplatesByIds API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation DeleteNotifyTemplatesByIds for usage and error information.
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIds(input *DeleteNotifyTemplatesByIdsInput) (*DeleteNotifyTemplatesByIdsOutput, error) {
	req, out := c.DeleteNotifyTemplatesByIdsRequest(input)
	return out, req.Send()
}

// DeleteNotifyTemplatesByIdsWithContext is the same as DeleteNotifyTemplatesByIds with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNotifyTemplatesByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) DeleteNotifyTemplatesByIdsWithContext(ctx volcengine.Context, input *DeleteNotifyTemplatesByIdsInput, opts ...request.Option) (*DeleteNotifyTemplatesByIdsOutput, error) {
	req, out := c.DeleteNotifyTemplatesByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteNotifyTemplatesByIdsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteNotifyTemplatesByIdsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNotifyTemplatesByIdsInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *DeleteNotifyTemplatesByIdsInput) SetIds(v []*string) *DeleteNotifyTemplatesByIdsInput {
	s.Ids = v
	return s
}

type DeleteNotifyTemplatesByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DeleteNotifyTemplatesByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNotifyTemplatesByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *DeleteNotifyTemplatesByIdsOutput) SetData(v []*string) *DeleteNotifyTemplatesByIdsOutput {
	s.Data = v
	return s
}
