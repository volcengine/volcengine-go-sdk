// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudmonitor

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListContactsCommon = "ListContacts"

// ListContactsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContactsCommon operation. The "output" return
// value will be populated with the ListContactsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactsCommon Send returns without error.
//
// See ListContactsCommon for more information on using the ListContactsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListContactsCommonRequest method.
//    req, resp := client.ListContactsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ListContactsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListContactsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContactsCommon API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ListContactsCommon for usage and error information.
func (c *CLOUDMONITOR) ListContactsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListContactsCommonRequest(input)
	return out, req.Send()
}

// ListContactsCommonWithContext is the same as ListContactsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListContactsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ListContactsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListContactsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListContacts = "ListContacts"

// ListContactsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContacts operation. The "output" return
// value will be populated with the ListContactsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactsCommon Send returns without error.
//
// See ListContacts for more information on using the ListContacts
// API call, and error handling.
//
//    // Example sending a request using the ListContactsRequest method.
//    req, resp := client.ListContactsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ListContactsRequest(input *ListContactsInput) (req *request.Request, output *ListContactsOutput) {
	op := &request.Operation{
		Name:       opListContacts,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListContactsInput{}
	}

	output = &ListContactsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContacts API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ListContacts for usage and error information.
func (c *CLOUDMONITOR) ListContacts(input *ListContactsInput) (*ListContactsOutput, error) {
	req, out := c.ListContactsRequest(input)
	return out, req.Send()
}

// ListContactsWithContext is the same as ListContacts with the addition of
// the ability to pass a context and additional request options.
//
// See ListContacts for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ListContactsWithContext(ctx volcengine.Context, input *ListContactsInput, opts ...request.Option) (*ListContactsOutput, error) {
	req, out := c.ListContactsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ContactGroupForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ContactGroupForListContactsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContactGroupForListContactsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ContactGroupForListContactsOutput) SetAccountId(v string) *ContactGroupForListContactsOutput {
	s.AccountId = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *ContactGroupForListContactsOutput) SetCreatedAt(v string) *ContactGroupForListContactsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ContactGroupForListContactsOutput) SetDescription(v string) *ContactGroupForListContactsOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ContactGroupForListContactsOutput) SetId(v string) *ContactGroupForListContactsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ContactGroupForListContactsOutput) SetName(v string) *ContactGroupForListContactsOutput {
	s.Name = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *ContactGroupForListContactsOutput) SetUpdatedAt(v string) *ContactGroupForListContactsOutput {
	s.UpdatedAt = &v
	return s
}

type DataForListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ContactGroups []*ContactGroupForListContactsOutput `type:"list" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Phone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListContactsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListContactsOutput) GoString() string {
	return s.String()
}

// SetContactGroups sets the ContactGroups field's value.
func (s *DataForListContactsOutput) SetContactGroups(v []*ContactGroupForListContactsOutput) *DataForListContactsOutput {
	s.ContactGroups = v
	return s
}

// SetEmail sets the Email field's value.
func (s *DataForListContactsOutput) SetEmail(v string) *DataForListContactsOutput {
	s.Email = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListContactsOutput) SetId(v string) *DataForListContactsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListContactsOutput) SetName(v string) *DataForListContactsOutput {
	s.Name = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *DataForListContactsOutput) SetPhone(v string) *DataForListContactsOutput {
	s.Phone = &v
	return s
}

type ListContactsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Phone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListContactsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactsInput) GoString() string {
	return s.String()
}

// SetEmail sets the Email field's value.
func (s *ListContactsInput) SetEmail(v string) *ListContactsInput {
	s.Email = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListContactsInput) SetName(v string) *ListContactsInput {
	s.Name = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListContactsInput) SetPageNumber(v int32) *ListContactsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListContactsInput) SetPageSize(v int32) *ListContactsInput {
	s.PageSize = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *ListContactsInput) SetPhone(v string) *ListContactsInput {
	s.Phone = &v
	return s
}

type ListContactsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListContactsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListContactsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListContactsOutput) SetData(v []*DataForListContactsOutput) *ListContactsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListContactsOutput) SetPageNumber(v int32) *ListContactsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListContactsOutput) SetPageSize(v int32) *ListContactsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListContactsOutput) SetTotalCount(v int32) *ListContactsOutput {
	s.TotalCount = &v
	return s
}
