// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudmonitor

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListContactGroupByIdsCommon = "ListContactGroupByIds"

// ListContactGroupByIdsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContactGroupByIdsCommon operation. The "output" return
// value will be populated with the ListContactGroupByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactGroupByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactGroupByIdsCommon Send returns without error.
//
// See ListContactGroupByIdsCommon for more information on using the ListContactGroupByIdsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListContactGroupByIdsCommonRequest method.
//    req, resp := client.ListContactGroupByIdsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ListContactGroupByIdsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListContactGroupByIdsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContactGroupByIdsCommon API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ListContactGroupByIdsCommon for usage and error information.
func (c *CLOUDMONITOR) ListContactGroupByIdsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListContactGroupByIdsCommonRequest(input)
	return out, req.Send()
}

// ListContactGroupByIdsCommonWithContext is the same as ListContactGroupByIdsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListContactGroupByIdsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ListContactGroupByIdsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListContactGroupByIdsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListContactGroupByIds = "ListContactGroupByIds"

// ListContactGroupByIdsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListContactGroupByIds operation. The "output" return
// value will be populated with the ListContactGroupByIdsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListContactGroupByIdsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListContactGroupByIdsCommon Send returns without error.
//
// See ListContactGroupByIds for more information on using the ListContactGroupByIds
// API call, and error handling.
//
//    // Example sending a request using the ListContactGroupByIdsRequest method.
//    req, resp := client.ListContactGroupByIdsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDMONITOR) ListContactGroupByIdsRequest(input *ListContactGroupByIdsInput) (req *request.Request, output *ListContactGroupByIdsOutput) {
	op := &request.Operation{
		Name:       opListContactGroupByIds,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListContactGroupByIdsInput{}
	}

	output = &ListContactGroupByIdsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListContactGroupByIds API operation for CLOUDMONITOR.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDMONITOR's
// API operation ListContactGroupByIds for usage and error information.
func (c *CLOUDMONITOR) ListContactGroupByIds(input *ListContactGroupByIdsInput) (*ListContactGroupByIdsOutput, error) {
	req, out := c.ListContactGroupByIdsRequest(input)
	return out, req.Send()
}

// ListContactGroupByIdsWithContext is the same as ListContactGroupByIds with the addition of
// the ability to pass a context and additional request options.
//
// See ListContactGroupByIds for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDMONITOR) ListContactGroupByIdsWithContext(ctx volcengine.Context, input *ListContactGroupByIdsInput, opts ...request.Option) (*ListContactGroupByIdsOutput, error) {
	req, out := c.ListContactGroupByIdsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ContactForListContactGroupByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Phone *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ContactForListContactGroupByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContactForListContactGroupByIdsOutput) GoString() string {
	return s.String()
}

// SetEmail sets the Email field's value.
func (s *ContactForListContactGroupByIdsOutput) SetEmail(v string) *ContactForListContactGroupByIdsOutput {
	s.Email = &v
	return s
}

// SetId sets the Id field's value.
func (s *ContactForListContactGroupByIdsOutput) SetId(v string) *ContactForListContactGroupByIdsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ContactForListContactGroupByIdsOutput) SetName(v string) *ContactForListContactGroupByIdsOutput {
	s.Name = &v
	return s
}

// SetPhone sets the Phone field's value.
func (s *ContactForListContactGroupByIdsOutput) SetPhone(v string) *ContactForListContactGroupByIdsOutput {
	s.Phone = &v
	return s
}

type DataForListContactGroupByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *string `type:"string" json:",omitempty"`

	Contacts []*ContactForListContactGroupByIdsOutput `type:"list" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListContactGroupByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListContactGroupByIdsOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *DataForListContactGroupByIdsOutput) SetAccountId(v string) *DataForListContactGroupByIdsOutput {
	s.AccountId = &v
	return s
}

// SetContacts sets the Contacts field's value.
func (s *DataForListContactGroupByIdsOutput) SetContacts(v []*ContactForListContactGroupByIdsOutput) *DataForListContactGroupByIdsOutput {
	s.Contacts = v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *DataForListContactGroupByIdsOutput) SetCreatedAt(v string) *DataForListContactGroupByIdsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForListContactGroupByIdsOutput) SetDescription(v string) *DataForListContactGroupByIdsOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListContactGroupByIdsOutput) SetId(v string) *DataForListContactGroupByIdsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListContactGroupByIdsOutput) SetName(v string) *DataForListContactGroupByIdsOutput {
	s.Name = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *DataForListContactGroupByIdsOutput) SetUpdatedAt(v string) *DataForListContactGroupByIdsOutput {
	s.UpdatedAt = &v
	return s
}

type ListContactGroupByIdsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListContactGroupByIdsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactGroupByIdsInput) GoString() string {
	return s.String()
}

// SetIds sets the Ids field's value.
func (s *ListContactGroupByIdsInput) SetIds(v []*string) *ListContactGroupByIdsInput {
	s.Ids = v
	return s
}

type ListContactGroupByIdsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListContactGroupByIdsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListContactGroupByIdsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListContactGroupByIdsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListContactGroupByIdsOutput) SetData(v []*DataForListContactGroupByIdsOutput) *ListContactGroupByIdsOutput {
	s.Data = v
	return s
}
