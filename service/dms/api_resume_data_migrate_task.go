// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dms

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opResumeDataMigrateTaskCommon = "ResumeDataMigrateTask"

// ResumeDataMigrateTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ResumeDataMigrateTaskCommon operation. The "output" return
// value will be populated with the ResumeDataMigrateTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResumeDataMigrateTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResumeDataMigrateTaskCommon Send returns without error.
//
// See ResumeDataMigrateTaskCommon for more information on using the ResumeDataMigrateTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the ResumeDataMigrateTaskCommonRequest method.
//    req, resp := client.ResumeDataMigrateTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS) ResumeDataMigrateTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opResumeDataMigrateTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResumeDataMigrateTaskCommon API operation for DMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS's
// API operation ResumeDataMigrateTaskCommon for usage and error information.
func (c *DMS) ResumeDataMigrateTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ResumeDataMigrateTaskCommonRequest(input)
	return out, req.Send()
}

// ResumeDataMigrateTaskCommonWithContext is the same as ResumeDataMigrateTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ResumeDataMigrateTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS) ResumeDataMigrateTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ResumeDataMigrateTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opResumeDataMigrateTask = "ResumeDataMigrateTask"

// ResumeDataMigrateTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the ResumeDataMigrateTask operation. The "output" return
// value will be populated with the ResumeDataMigrateTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ResumeDataMigrateTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after ResumeDataMigrateTaskCommon Send returns without error.
//
// See ResumeDataMigrateTask for more information on using the ResumeDataMigrateTask
// API call, and error handling.
//
//    // Example sending a request using the ResumeDataMigrateTaskRequest method.
//    req, resp := client.ResumeDataMigrateTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS) ResumeDataMigrateTaskRequest(input *ResumeDataMigrateTaskInput) (req *request.Request, output *ResumeDataMigrateTaskOutput) {
	op := &request.Operation{
		Name:       opResumeDataMigrateTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ResumeDataMigrateTaskInput{}
	}

	output = &ResumeDataMigrateTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ResumeDataMigrateTask API operation for DMS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS's
// API operation ResumeDataMigrateTask for usage and error information.
func (c *DMS) ResumeDataMigrateTask(input *ResumeDataMigrateTaskInput) (*ResumeDataMigrateTaskOutput, error) {
	req, out := c.ResumeDataMigrateTaskRequest(input)
	return out, req.Send()
}

// ResumeDataMigrateTaskWithContext is the same as ResumeDataMigrateTask with the addition of
// the ability to pass a context and additional request options.
//
// See ResumeDataMigrateTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS) ResumeDataMigrateTaskWithContext(ctx volcengine.Context, input *ResumeDataMigrateTaskInput, opts ...request.Option) (*ResumeDataMigrateTaskOutput, error) {
	req, out := c.ResumeDataMigrateTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ResumeDataMigrateTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// TaskID is a required field
	TaskID *int64 `type:"int64" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ResumeDataMigrateTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeDataMigrateTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ResumeDataMigrateTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ResumeDataMigrateTaskInput"}
	if s.TaskID == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetTaskID sets the TaskID field's value.
func (s *ResumeDataMigrateTaskInput) SetTaskID(v int64) *ResumeDataMigrateTaskInput {
	s.TaskID = &v
	return s
}

type ResumeDataMigrateTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ResumeDataMigrateTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResumeDataMigrateTaskOutput) GoString() string {
	return s.String()
}
