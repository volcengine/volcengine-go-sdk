// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreatePrivateLinkCommon = "CreatePrivateLink"

// CreatePrivateLinkCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePrivateLinkCommon operation. The "output" return
// value will be populated with the CreatePrivateLinkCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePrivateLinkCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePrivateLinkCommon Send returns without error.
//
// See CreatePrivateLinkCommon for more information on using the CreatePrivateLinkCommon
// API call, and error handling.
//
//    // Example sending a request using the CreatePrivateLinkCommonRequest method.
//    req, resp := client.CreatePrivateLinkCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) CreatePrivateLinkCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreatePrivateLinkCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePrivateLinkCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation CreatePrivateLinkCommon for usage and error information.
func (c *ROCKETMQ) CreatePrivateLinkCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreatePrivateLinkCommonRequest(input)
	return out, req.Send()
}

// CreatePrivateLinkCommonWithContext is the same as CreatePrivateLinkCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePrivateLinkCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) CreatePrivateLinkCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreatePrivateLinkCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreatePrivateLink = "CreatePrivateLink"

// CreatePrivateLinkRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePrivateLink operation. The "output" return
// value will be populated with the CreatePrivateLinkCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePrivateLinkCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePrivateLinkCommon Send returns without error.
//
// See CreatePrivateLink for more information on using the CreatePrivateLink
// API call, and error handling.
//
//    // Example sending a request using the CreatePrivateLinkRequest method.
//    req, resp := client.CreatePrivateLinkRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) CreatePrivateLinkRequest(input *CreatePrivateLinkInput) (req *request.Request, output *CreatePrivateLinkOutput) {
	op := &request.Operation{
		Name:       opCreatePrivateLink,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreatePrivateLinkInput{}
	}

	output = &CreatePrivateLinkOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePrivateLink API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation CreatePrivateLink for usage and error information.
func (c *ROCKETMQ) CreatePrivateLink(input *CreatePrivateLinkInput) (*CreatePrivateLinkOutput, error) {
	req, out := c.CreatePrivateLinkRequest(input)
	return out, req.Send()
}

// CreatePrivateLinkWithContext is the same as CreatePrivateLink with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePrivateLink for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) CreatePrivateLinkWithContext(ctx volcengine.Context, input *CreatePrivateLinkInput, opts ...request.Option) (*CreatePrivateLinkOutput, error) {
	req, out := c.CreatePrivateLinkRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatePrivateLinkInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreatePrivateLinkInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePrivateLinkInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreatePrivateLinkInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreatePrivateLinkInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreatePrivateLinkInput) SetInstanceId(v string) *CreatePrivateLinkInput {
	s.InstanceId = &v
	return s
}

type CreatePrivateLinkOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	PrivateLinkId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreatePrivateLinkOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePrivateLinkOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreatePrivateLinkOutput) SetInstanceId(v string) *CreatePrivateLinkOutput {
	s.InstanceId = &v
	return s
}

// SetPrivateLinkId sets the PrivateLinkId field's value.
func (s *CreatePrivateLinkOutput) SetPrivateLinkId(v string) *CreatePrivateLinkOutput {
	s.PrivateLinkId = &v
	return s
}
