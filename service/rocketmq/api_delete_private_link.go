// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package rocketmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeletePrivateLinkCommon = "DeletePrivateLink"

// DeletePrivateLinkCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeletePrivateLinkCommon operation. The "output" return
// value will be populated with the DeletePrivateLinkCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeletePrivateLinkCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeletePrivateLinkCommon Send returns without error.
//
// See DeletePrivateLinkCommon for more information on using the DeletePrivateLinkCommon
// API call, and error handling.
//
//    // Example sending a request using the DeletePrivateLinkCommonRequest method.
//    req, resp := client.DeletePrivateLinkCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DeletePrivateLinkCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeletePrivateLinkCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeletePrivateLinkCommon API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DeletePrivateLinkCommon for usage and error information.
func (c *ROCKETMQ) DeletePrivateLinkCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeletePrivateLinkCommonRequest(input)
	return out, req.Send()
}

// DeletePrivateLinkCommonWithContext is the same as DeletePrivateLinkCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeletePrivateLinkCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DeletePrivateLinkCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeletePrivateLinkCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeletePrivateLink = "DeletePrivateLink"

// DeletePrivateLinkRequest generates a "volcengine/request.Request" representing the
// client's request for the DeletePrivateLink operation. The "output" return
// value will be populated with the DeletePrivateLinkCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeletePrivateLinkCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeletePrivateLinkCommon Send returns without error.
//
// See DeletePrivateLink for more information on using the DeletePrivateLink
// API call, and error handling.
//
//    // Example sending a request using the DeletePrivateLinkRequest method.
//    req, resp := client.DeletePrivateLinkRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ROCKETMQ) DeletePrivateLinkRequest(input *DeletePrivateLinkInput) (req *request.Request, output *DeletePrivateLinkOutput) {
	op := &request.Operation{
		Name:       opDeletePrivateLink,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeletePrivateLinkInput{}
	}

	output = &DeletePrivateLinkOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeletePrivateLink API operation for ROCKETMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ROCKETMQ's
// API operation DeletePrivateLink for usage and error information.
func (c *ROCKETMQ) DeletePrivateLink(input *DeletePrivateLinkInput) (*DeletePrivateLinkOutput, error) {
	req, out := c.DeletePrivateLinkRequest(input)
	return out, req.Send()
}

// DeletePrivateLinkWithContext is the same as DeletePrivateLink with the addition of
// the ability to pass a context and additional request options.
//
// See DeletePrivateLink for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ROCKETMQ) DeletePrivateLinkWithContext(ctx volcengine.Context, input *DeletePrivateLinkInput, opts ...request.Option) (*DeletePrivateLinkOutput, error) {
	req, out := c.DeletePrivateLinkRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeletePrivateLinkInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeletePrivateLinkInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeletePrivateLinkInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeletePrivateLinkInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeletePrivateLinkInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DeletePrivateLinkInput) SetInstanceId(v string) *DeletePrivateLinkInput {
	s.InstanceId = &v
	return s
}

type DeletePrivateLinkOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeletePrivateLinkOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeletePrivateLinkOutput) GoString() string {
	return s.String()
}
