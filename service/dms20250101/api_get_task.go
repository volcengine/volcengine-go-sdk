// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dms20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTaskCommon = "GetTask"

// GetTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTaskCommon operation. The "output" return
// value will be populated with the GetTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTaskCommon Send returns without error.
//
// See GetTaskCommon for more information on using the GetTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTaskCommonRequest method.
//    req, resp := client.GetTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) GetTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTaskCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetTaskCommon API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation GetTaskCommon for usage and error information.
func (c *DMS20250101) GetTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTaskCommonRequest(input)
	return out, req.Send()
}

// GetTaskCommonWithContext is the same as GetTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) GetTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTask = "GetTask"

// GetTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTask operation. The "output" return
// value will be populated with the GetTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTaskCommon Send returns without error.
//
// See GetTask for more information on using the GetTask
// API call, and error handling.
//
//    // Example sending a request using the GetTaskRequest method.
//    req, resp := client.GetTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) GetTaskRequest(input *GetTaskInput) (req *request.Request, output *GetTaskOutput) {
	op := &request.Operation{
		Name:       opGetTask,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTaskInput{}
	}

	output = &GetTaskOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetTask API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation GetTask for usage and error information.
func (c *DMS20250101) GetTask(input *GetTaskInput) (*GetTaskOutput, error) {
	req, out := c.GetTaskRequest(input)
	return out, req.Send()
}

// GetTaskWithContext is the same as GetTask with the addition of
// the ability to pass a context and additional request options.
//
// See GetTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) GetTaskWithContext(ctx volcengine.Context, input *GetTaskInput, opts ...request.Option) (*GetTaskOutput, error) {
	req, out := c.GetTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTaskInput struct {
	_ struct{} `type:"structure"`

	// Id is a required field
	Id *string `type:"string" required:"true"`
}

// String returns the string representation
func (s GetTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTaskInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetTaskInput) SetId(v string) *GetTaskInput {
	s.Id = &v
	return s
}

type GetTaskOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string"`

	AgentGroupId *string `type:"string"`

	CreateAt *string `type:"string"`

	DestinationId *string `type:"string"`

	Id *string `type:"string"`

	SourceId *string `type:"string"`

	TaskConfig *TaskConfigForGetTaskOutput `type:"structure"`

	TaskContext *TaskContextForGetTaskOutput `type:"structure"`

	TaskName *string `type:"string"`

	TaskStatus *string `type:"string"`

	TaskType *string `type:"string"`

	UpdateAt *string `type:"string"`
}

// String returns the string representation
func (s GetTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTaskOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *GetTaskOutput) SetAccountId(v string) *GetTaskOutput {
	s.AccountId = &v
	return s
}

// SetAgentGroupId sets the AgentGroupId field's value.
func (s *GetTaskOutput) SetAgentGroupId(v string) *GetTaskOutput {
	s.AgentGroupId = &v
	return s
}

// SetCreateAt sets the CreateAt field's value.
func (s *GetTaskOutput) SetCreateAt(v string) *GetTaskOutput {
	s.CreateAt = &v
	return s
}

// SetDestinationId sets the DestinationId field's value.
func (s *GetTaskOutput) SetDestinationId(v string) *GetTaskOutput {
	s.DestinationId = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetTaskOutput) SetId(v string) *GetTaskOutput {
	s.Id = &v
	return s
}

// SetSourceId sets the SourceId field's value.
func (s *GetTaskOutput) SetSourceId(v string) *GetTaskOutput {
	s.SourceId = &v
	return s
}

// SetTaskConfig sets the TaskConfig field's value.
func (s *GetTaskOutput) SetTaskConfig(v *TaskConfigForGetTaskOutput) *GetTaskOutput {
	s.TaskConfig = v
	return s
}

// SetTaskContext sets the TaskContext field's value.
func (s *GetTaskOutput) SetTaskContext(v *TaskContextForGetTaskOutput) *GetTaskOutput {
	s.TaskContext = v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *GetTaskOutput) SetTaskName(v string) *GetTaskOutput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *GetTaskOutput) SetTaskStatus(v string) *GetTaskOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *GetTaskOutput) SetTaskType(v string) *GetTaskOutput {
	s.TaskType = &v
	return s
}

// SetUpdateAt sets the UpdateAt field's value.
func (s *GetTaskOutput) SetUpdateAt(v string) *GetTaskOutput {
	s.UpdateAt = &v
	return s
}

type ListConfigForGetTaskOutput struct {
	_ struct{} `type:"structure"`

	GenerateReport *bool `type:"boolean"`

	ListIncludeBeginTime *string `type:"string"`

	ListIncludeBucketKeys *ListIncludeBucketKeysForGetTaskOutput `type:"structure"`

	ListIncludeEndTime *string `type:"string"`

	ListIncludePrefixes []*string `type:"list"`
}

// String returns the string representation
func (s ListConfigForGetTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigForGetTaskOutput) GoString() string {
	return s.String()
}

// SetGenerateReport sets the GenerateReport field's value.
func (s *ListConfigForGetTaskOutput) SetGenerateReport(v bool) *ListConfigForGetTaskOutput {
	s.GenerateReport = &v
	return s
}

// SetListIncludeBeginTime sets the ListIncludeBeginTime field's value.
func (s *ListConfigForGetTaskOutput) SetListIncludeBeginTime(v string) *ListConfigForGetTaskOutput {
	s.ListIncludeBeginTime = &v
	return s
}

// SetListIncludeBucketKeys sets the ListIncludeBucketKeys field's value.
func (s *ListConfigForGetTaskOutput) SetListIncludeBucketKeys(v *ListIncludeBucketKeysForGetTaskOutput) *ListConfigForGetTaskOutput {
	s.ListIncludeBucketKeys = v
	return s
}

// SetListIncludeEndTime sets the ListIncludeEndTime field's value.
func (s *ListConfigForGetTaskOutput) SetListIncludeEndTime(v string) *ListConfigForGetTaskOutput {
	s.ListIncludeEndTime = &v
	return s
}

// SetListIncludePrefixes sets the ListIncludePrefixes field's value.
func (s *ListConfigForGetTaskOutput) SetListIncludePrefixes(v []*string) *ListConfigForGetTaskOutput {
	s.ListIncludePrefixes = v
	return s
}

type ListIncludeBucketKeysForGetTaskOutput struct {
	_ struct{} `type:"structure"`

	Ak *string `type:"string"`

	Bucket *string `type:"string"`

	Keys []*string `type:"list"`

	Sk *string `type:"string"`
}

// String returns the string representation
func (s ListIncludeBucketKeysForGetTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIncludeBucketKeysForGetTaskOutput) GoString() string {
	return s.String()
}

// SetAk sets the Ak field's value.
func (s *ListIncludeBucketKeysForGetTaskOutput) SetAk(v string) *ListIncludeBucketKeysForGetTaskOutput {
	s.Ak = &v
	return s
}

// SetBucket sets the Bucket field's value.
func (s *ListIncludeBucketKeysForGetTaskOutput) SetBucket(v string) *ListIncludeBucketKeysForGetTaskOutput {
	s.Bucket = &v
	return s
}

// SetKeys sets the Keys field's value.
func (s *ListIncludeBucketKeysForGetTaskOutput) SetKeys(v []*string) *ListIncludeBucketKeysForGetTaskOutput {
	s.Keys = v
	return s
}

// SetSk sets the Sk field's value.
func (s *ListIncludeBucketKeysForGetTaskOutput) SetSk(v string) *ListIncludeBucketKeysForGetTaskOutput {
	s.Sk = &v
	return s
}

type TaskConfigForGetTaskOutput struct {
	_ struct{} `type:"structure"`

	ListConfig *ListConfigForGetTaskOutput `type:"structure"`

	OverwritePolicy *string `type:"string" enum:"EnumOfOverwritePolicyForGetTaskOutput"`

	StorageClassDirective *string `type:"string"`

	SymlinkPolicy *string `type:"string" enum:"EnumOfSymlinkPolicyForGetTaskOutput"`
}

// String returns the string representation
func (s TaskConfigForGetTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskConfigForGetTaskOutput) GoString() string {
	return s.String()
}

// SetListConfig sets the ListConfig field's value.
func (s *TaskConfigForGetTaskOutput) SetListConfig(v *ListConfigForGetTaskOutput) *TaskConfigForGetTaskOutput {
	s.ListConfig = v
	return s
}

// SetOverwritePolicy sets the OverwritePolicy field's value.
func (s *TaskConfigForGetTaskOutput) SetOverwritePolicy(v string) *TaskConfigForGetTaskOutput {
	s.OverwritePolicy = &v
	return s
}

// SetStorageClassDirective sets the StorageClassDirective field's value.
func (s *TaskConfigForGetTaskOutput) SetStorageClassDirective(v string) *TaskConfigForGetTaskOutput {
	s.StorageClassDirective = &v
	return s
}

// SetSymlinkPolicy sets the SymlinkPolicy field's value.
func (s *TaskConfigForGetTaskOutput) SetSymlinkPolicy(v string) *TaskConfigForGetTaskOutput {
	s.SymlinkPolicy = &v
	return s
}

type TaskContextForGetTaskOutput struct {
	_ struct{} `type:"structure"`

	ErrorCode *string `type:"string"`

	ErrorMessage *string `type:"string"`
}

// String returns the string representation
func (s TaskContextForGetTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskContextForGetTaskOutput) GoString() string {
	return s.String()
}

// SetErrorCode sets the ErrorCode field's value.
func (s *TaskContextForGetTaskOutput) SetErrorCode(v string) *TaskContextForGetTaskOutput {
	s.ErrorCode = &v
	return s
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *TaskContextForGetTaskOutput) SetErrorMessage(v string) *TaskContextForGetTaskOutput {
	s.ErrorMessage = &v
	return s
}

const (
	// EnumOfOverwritePolicyForGetTaskOutputForce is a EnumOfOverwritePolicyForGetTaskOutput enum value
	EnumOfOverwritePolicyForGetTaskOutputForce = "Force"

	// EnumOfOverwritePolicyForGetTaskOutputNone is a EnumOfOverwritePolicyForGetTaskOutput enum value
	EnumOfOverwritePolicyForGetTaskOutputNone = "None"

	// EnumOfOverwritePolicyForGetTaskOutputLastModify is a EnumOfOverwritePolicyForGetTaskOutput enum value
	EnumOfOverwritePolicyForGetTaskOutputLastModify = "LastModify"
)

const (
	// EnumOfSymlinkPolicyForGetTaskOutputSkip is a EnumOfSymlinkPolicyForGetTaskOutput enum value
	EnumOfSymlinkPolicyForGetTaskOutputSkip = "Skip"

	// EnumOfSymlinkPolicyForGetTaskOutputFollow is a EnumOfSymlinkPolicyForGetTaskOutput enum value
	EnumOfSymlinkPolicyForGetTaskOutputFollow = "Follow"
)
