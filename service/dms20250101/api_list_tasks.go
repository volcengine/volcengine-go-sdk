// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dms20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTasksCommon = "ListTasks"

// ListTasksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTasksCommon operation. The "output" return
// value will be populated with the ListTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTasksCommon Send returns without error.
//
// See ListTasksCommon for more information on using the ListTasksCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTasksCommonRequest method.
//    req, resp := client.ListTasksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) ListTasksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTasksCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListTasksCommon API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation ListTasksCommon for usage and error information.
func (c *DMS20250101) ListTasksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTasksCommonRequest(input)
	return out, req.Send()
}

// ListTasksCommonWithContext is the same as ListTasksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTasksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) ListTasksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTasksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTasks = "ListTasks"

// ListTasksRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTasks operation. The "output" return
// value will be populated with the ListTasksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTasksCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTasksCommon Send returns without error.
//
// See ListTasks for more information on using the ListTasks
// API call, and error handling.
//
//    // Example sending a request using the ListTasksRequest method.
//    req, resp := client.ListTasksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) ListTasksRequest(input *ListTasksInput) (req *request.Request, output *ListTasksOutput) {
	op := &request.Operation{
		Name:       opListTasks,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTasksInput{}
	}

	output = &ListTasksOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListTasks API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation ListTasks for usage and error information.
func (c *DMS20250101) ListTasks(input *ListTasksInput) (*ListTasksOutput, error) {
	req, out := c.ListTasksRequest(input)
	return out, req.Send()
}

// ListTasksWithContext is the same as ListTasks with the addition of
// the ability to pass a context and additional request options.
//
// See ListTasks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) ListTasksWithContext(ctx volcengine.Context, input *ListTasksInput, opts ...request.Option) (*ListTasksOutput, error) {
	req, out := c.ListTasksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemListForListTasksOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	AgentGroupId *string `type:"string"`

	CreateAt *string `type:"string"`

	DestinationId *string `type:"string"`

	Id *string `type:"string"`

	SourceId *string `type:"string"`

	TaskConfig *TaskConfigForListTasksOutput `type:"structure"`

	TaskContext *TaskContextForListTasksOutput `type:"structure"`

	TaskName *string `type:"string"`

	TaskStatus *string `type:"string" enum:"EnumOfTaskStatusForListTasksOutput"`

	TaskType *string `type:"string" enum:"EnumOfTaskTypeForListTasksOutput"`

	UpdateAt *string `type:"string"`
}

// String returns the string representation
func (s ItemListForListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemListForListTasksOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ItemListForListTasksOutput) SetAccountId(v string) *ItemListForListTasksOutput {
	s.AccountId = &v
	return s
}

// SetAgentGroupId sets the AgentGroupId field's value.
func (s *ItemListForListTasksOutput) SetAgentGroupId(v string) *ItemListForListTasksOutput {
	s.AgentGroupId = &v
	return s
}

// SetCreateAt sets the CreateAt field's value.
func (s *ItemListForListTasksOutput) SetCreateAt(v string) *ItemListForListTasksOutput {
	s.CreateAt = &v
	return s
}

// SetDestinationId sets the DestinationId field's value.
func (s *ItemListForListTasksOutput) SetDestinationId(v string) *ItemListForListTasksOutput {
	s.DestinationId = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemListForListTasksOutput) SetId(v string) *ItemListForListTasksOutput {
	s.Id = &v
	return s
}

// SetSourceId sets the SourceId field's value.
func (s *ItemListForListTasksOutput) SetSourceId(v string) *ItemListForListTasksOutput {
	s.SourceId = &v
	return s
}

// SetTaskConfig sets the TaskConfig field's value.
func (s *ItemListForListTasksOutput) SetTaskConfig(v *TaskConfigForListTasksOutput) *ItemListForListTasksOutput {
	s.TaskConfig = v
	return s
}

// SetTaskContext sets the TaskContext field's value.
func (s *ItemListForListTasksOutput) SetTaskContext(v *TaskContextForListTasksOutput) *ItemListForListTasksOutput {
	s.TaskContext = v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *ItemListForListTasksOutput) SetTaskName(v string) *ItemListForListTasksOutput {
	s.TaskName = &v
	return s
}

// SetTaskStatus sets the TaskStatus field's value.
func (s *ItemListForListTasksOutput) SetTaskStatus(v string) *ItemListForListTasksOutput {
	s.TaskStatus = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *ItemListForListTasksOutput) SetTaskType(v string) *ItemListForListTasksOutput {
	s.TaskType = &v
	return s
}

// SetUpdateAt sets the UpdateAt field's value.
func (s *ItemListForListTasksOutput) SetUpdateAt(v string) *ItemListForListTasksOutput {
	s.UpdateAt = &v
	return s
}

type ListConfigForListTasksOutput struct {
	_ struct{} `type:"structure"`

	GenerateReport *bool `type:"boolean"`

	ListIncludeBeginTime *string `type:"string"`

	ListIncludeBucketKeys *ListIncludeBucketKeysForListTasksOutput `type:"structure"`

	ListIncludeEndTime *string `type:"string"`

	ListIncludePrefixes []*string `type:"list"`
}

// String returns the string representation
func (s ListConfigForListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigForListTasksOutput) GoString() string {
	return s.String()
}

// SetGenerateReport sets the GenerateReport field's value.
func (s *ListConfigForListTasksOutput) SetGenerateReport(v bool) *ListConfigForListTasksOutput {
	s.GenerateReport = &v
	return s
}

// SetListIncludeBeginTime sets the ListIncludeBeginTime field's value.
func (s *ListConfigForListTasksOutput) SetListIncludeBeginTime(v string) *ListConfigForListTasksOutput {
	s.ListIncludeBeginTime = &v
	return s
}

// SetListIncludeBucketKeys sets the ListIncludeBucketKeys field's value.
func (s *ListConfigForListTasksOutput) SetListIncludeBucketKeys(v *ListIncludeBucketKeysForListTasksOutput) *ListConfigForListTasksOutput {
	s.ListIncludeBucketKeys = v
	return s
}

// SetListIncludeEndTime sets the ListIncludeEndTime field's value.
func (s *ListConfigForListTasksOutput) SetListIncludeEndTime(v string) *ListConfigForListTasksOutput {
	s.ListIncludeEndTime = &v
	return s
}

// SetListIncludePrefixes sets the ListIncludePrefixes field's value.
func (s *ListConfigForListTasksOutput) SetListIncludePrefixes(v []*string) *ListConfigForListTasksOutput {
	s.ListIncludePrefixes = v
	return s
}

type ListIncludeBucketKeysForListTasksOutput struct {
	_ struct{} `type:"structure"`

	Ak *string `type:"string"`

	Bucket *string `type:"string"`

	Keys []*string `type:"list"`

	Sk *string `type:"string"`
}

// String returns the string representation
func (s ListIncludeBucketKeysForListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIncludeBucketKeysForListTasksOutput) GoString() string {
	return s.String()
}

// SetAk sets the Ak field's value.
func (s *ListIncludeBucketKeysForListTasksOutput) SetAk(v string) *ListIncludeBucketKeysForListTasksOutput {
	s.Ak = &v
	return s
}

// SetBucket sets the Bucket field's value.
func (s *ListIncludeBucketKeysForListTasksOutput) SetBucket(v string) *ListIncludeBucketKeysForListTasksOutput {
	s.Bucket = &v
	return s
}

// SetKeys sets the Keys field's value.
func (s *ListIncludeBucketKeysForListTasksOutput) SetKeys(v []*string) *ListIncludeBucketKeysForListTasksOutput {
	s.Keys = v
	return s
}

// SetSk sets the Sk field's value.
func (s *ListIncludeBucketKeysForListTasksOutput) SetSk(v string) *ListIncludeBucketKeysForListTasksOutput {
	s.Sk = &v
	return s
}

type ListTasksInput struct {
	_ struct{} `type:"structure"`

	FetchCount *bool `type:"boolean"`

	// IdCursor is a required field
	IdCursor *string `type:"string" required:"true"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" required:"true"`
}

// String returns the string representation
func (s ListTasksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTasksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTasksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListTasksInput"}
	if s.IdCursor == nil {
		invalidParams.Add(request.NewErrParamRequired("IdCursor"))
	}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFetchCount sets the FetchCount field's value.
func (s *ListTasksInput) SetFetchCount(v bool) *ListTasksInput {
	s.FetchCount = &v
	return s
}

// SetIdCursor sets the IdCursor field's value.
func (s *ListTasksInput) SetIdCursor(v string) *ListTasksInput {
	s.IdCursor = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListTasksInput) SetPageNumber(v int32) *ListTasksInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListTasksInput) SetPageSize(v int32) *ListTasksInput {
	s.PageSize = &v
	return s
}

type ListTasksOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	HasNext *bool `type:"boolean"`

	ItemList []*ItemListForListTasksOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s ListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTasksOutput) GoString() string {
	return s.String()
}

// SetHasNext sets the HasNext field's value.
func (s *ListTasksOutput) SetHasNext(v bool) *ListTasksOutput {
	s.HasNext = &v
	return s
}

// SetItemList sets the ItemList field's value.
func (s *ListTasksOutput) SetItemList(v []*ItemListForListTasksOutput) *ListTasksOutput {
	s.ItemList = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListTasksOutput) SetTotalCount(v int32) *ListTasksOutput {
	s.TotalCount = &v
	return s
}

type TaskConfigForListTasksOutput struct {
	_ struct{} `type:"structure"`

	ListConfig *ListConfigForListTasksOutput `type:"structure"`

	OverwritePolicy *string `type:"string" enum:"EnumOfOverwritePolicyForListTasksOutput"`

	StorageClassDirective *string `type:"string"`

	SymlinkPolicy *string `type:"string" enum:"EnumOfSymlinkPolicyForListTasksOutput"`
}

// String returns the string representation
func (s TaskConfigForListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskConfigForListTasksOutput) GoString() string {
	return s.String()
}

// SetListConfig sets the ListConfig field's value.
func (s *TaskConfigForListTasksOutput) SetListConfig(v *ListConfigForListTasksOutput) *TaskConfigForListTasksOutput {
	s.ListConfig = v
	return s
}

// SetOverwritePolicy sets the OverwritePolicy field's value.
func (s *TaskConfigForListTasksOutput) SetOverwritePolicy(v string) *TaskConfigForListTasksOutput {
	s.OverwritePolicy = &v
	return s
}

// SetStorageClassDirective sets the StorageClassDirective field's value.
func (s *TaskConfigForListTasksOutput) SetStorageClassDirective(v string) *TaskConfigForListTasksOutput {
	s.StorageClassDirective = &v
	return s
}

// SetSymlinkPolicy sets the SymlinkPolicy field's value.
func (s *TaskConfigForListTasksOutput) SetSymlinkPolicy(v string) *TaskConfigForListTasksOutput {
	s.SymlinkPolicy = &v
	return s
}

type TaskContextForListTasksOutput struct {
	_ struct{} `type:"structure"`

	ErrorCode *string `type:"string"`

	ErrorMessage *string `type:"string"`
}

// String returns the string representation
func (s TaskContextForListTasksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskContextForListTasksOutput) GoString() string {
	return s.String()
}

// SetErrorCode sets the ErrorCode field's value.
func (s *TaskContextForListTasksOutput) SetErrorCode(v string) *TaskContextForListTasksOutput {
	s.ErrorCode = &v
	return s
}

// SetErrorMessage sets the ErrorMessage field's value.
func (s *TaskContextForListTasksOutput) SetErrorMessage(v string) *TaskContextForListTasksOutput {
	s.ErrorMessage = &v
	return s
}

const (
	// EnumOfOverwritePolicyForListTasksOutputForce is a EnumOfOverwritePolicyForListTasksOutput enum value
	EnumOfOverwritePolicyForListTasksOutputForce = "Force"

	// EnumOfOverwritePolicyForListTasksOutputNone is a EnumOfOverwritePolicyForListTasksOutput enum value
	EnumOfOverwritePolicyForListTasksOutputNone = "None"

	// EnumOfOverwritePolicyForListTasksOutputLastModify is a EnumOfOverwritePolicyForListTasksOutput enum value
	EnumOfOverwritePolicyForListTasksOutputLastModify = "LastModify"
)

const (
	// EnumOfSymlinkPolicyForListTasksOutputSkip is a EnumOfSymlinkPolicyForListTasksOutput enum value
	EnumOfSymlinkPolicyForListTasksOutputSkip = "Skip"

	// EnumOfSymlinkPolicyForListTasksOutputFollow is a EnumOfSymlinkPolicyForListTasksOutput enum value
	EnumOfSymlinkPolicyForListTasksOutputFollow = "Follow"
)

const (
	// EnumOfTaskStatusForListTasksOutputQueueing is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputQueueing = "Queueing"

	// EnumOfTaskStatusForListTasksOutputPreparing is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputPreparing = "Preparing"

	// EnumOfTaskStatusForListTasksOutputTransferring is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputTransferring = "Transferring"

	// EnumOfTaskStatusForListTasksOutputVerifying is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputVerifying = "Verifying"

	// EnumOfTaskStatusForListTasksOutputFinished is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputFinished = "Finished"

	// EnumOfTaskStatusForListTasksOutputStopping is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputStopping = "Stopping"

	// EnumOfTaskStatusForListTasksOutputStopped is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputStopped = "Stopped"

	// EnumOfTaskStatusForListTasksOutputFailing is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputFailing = "Failing"

	// EnumOfTaskStatusForListTasksOutputFailed is a EnumOfTaskStatusForListTasksOutput enum value
	EnumOfTaskStatusForListTasksOutputFailed = "Failed"
)

const (
	// EnumOfTaskTypeForListTasksOutputHalfManaged is a EnumOfTaskTypeForListTasksOutput enum value
	EnumOfTaskTypeForListTasksOutputHalfManaged = "HalfManaged"
)
