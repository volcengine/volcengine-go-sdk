// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dms20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateTaskCommon = "CreateTask"

// CreateTaskCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTaskCommon operation. The "output" return
// value will be populated with the CreateTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTaskCommon Send returns without error.
//
// See CreateTaskCommon for more information on using the CreateTaskCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateTaskCommonRequest method.
//    req, resp := client.CreateTaskCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) CreateTaskCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateTaskCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateTaskCommon API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation CreateTaskCommon for usage and error information.
func (c *DMS20250101) CreateTaskCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateTaskCommonRequest(input)
	return out, req.Send()
}

// CreateTaskCommonWithContext is the same as CreateTaskCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTaskCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) CreateTaskCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateTaskCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateTask = "CreateTask"

// CreateTaskRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateTask operation. The "output" return
// value will be populated with the CreateTaskCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateTaskCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateTaskCommon Send returns without error.
//
// See CreateTask for more information on using the CreateTask
// API call, and error handling.
//
//    // Example sending a request using the CreateTaskRequest method.
//    req, resp := client.CreateTaskRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) CreateTaskRequest(input *CreateTaskInput) (req *request.Request, output *CreateTaskOutput) {
	op := &request.Operation{
		Name:       opCreateTask,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateTaskInput{}
	}

	output = &CreateTaskOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateTask API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation CreateTask for usage and error information.
func (c *DMS20250101) CreateTask(input *CreateTaskInput) (*CreateTaskOutput, error) {
	req, out := c.CreateTaskRequest(input)
	return out, req.Send()
}

// CreateTaskWithContext is the same as CreateTask with the addition of
// the ability to pass a context and additional request options.
//
// See CreateTask for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) CreateTaskWithContext(ctx volcengine.Context, input *CreateTaskInput, opts ...request.Option) (*CreateTaskOutput, error) {
	req, out := c.CreateTaskRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AgentGroupId *string `type:"string" json:",omitempty"`

	// DestinationId is a required field
	DestinationId *string `type:"string" json:",omitempty" required:"true"`

	// SourceId is a required field
	SourceId *string `type:"string" json:",omitempty" required:"true"`

	TaskConfig *TaskConfigForCreateTaskInput `type:"structure" json:",omitempty"`

	// TaskName is a required field
	TaskName *string `type:"string" json:",omitempty" required:"true"`

	// TaskType is a required field
	TaskType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfTaskTypeForCreateTaskInput"`
}

// String returns the string representation
func (s CreateTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTaskInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateTaskInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateTaskInput"}
	if s.DestinationId == nil {
		invalidParams.Add(request.NewErrParamRequired("DestinationId"))
	}
	if s.SourceId == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceId"))
	}
	if s.TaskName == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskName"))
	}
	if s.TaskType == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAgentGroupId sets the AgentGroupId field's value.
func (s *CreateTaskInput) SetAgentGroupId(v string) *CreateTaskInput {
	s.AgentGroupId = &v
	return s
}

// SetDestinationId sets the DestinationId field's value.
func (s *CreateTaskInput) SetDestinationId(v string) *CreateTaskInput {
	s.DestinationId = &v
	return s
}

// SetSourceId sets the SourceId field's value.
func (s *CreateTaskInput) SetSourceId(v string) *CreateTaskInput {
	s.SourceId = &v
	return s
}

// SetTaskConfig sets the TaskConfig field's value.
func (s *CreateTaskInput) SetTaskConfig(v *TaskConfigForCreateTaskInput) *CreateTaskInput {
	s.TaskConfig = v
	return s
}

// SetTaskName sets the TaskName field's value.
func (s *CreateTaskInput) SetTaskName(v string) *CreateTaskInput {
	s.TaskName = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *CreateTaskInput) SetTaskType(v string) *CreateTaskInput {
	s.TaskType = &v
	return s
}

type CreateTaskOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccountId *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateTaskOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateTaskOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *CreateTaskOutput) SetAccountId(v string) *CreateTaskOutput {
	s.AccountId = &v
	return s
}

// SetId sets the Id field's value.
func (s *CreateTaskOutput) SetId(v string) *CreateTaskOutput {
	s.Id = &v
	return s
}

type ListConfigForCreateTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	GenerateReport *bool `type:"boolean" json:",omitempty"`

	ListIncludeBeginTime *string `type:"string" json:",omitempty"`

	ListIncludeBucketKeys *ListIncludeBucketKeysForCreateTaskInput `type:"structure" json:",omitempty"`

	ListIncludeEndTime *string `type:"string" json:",omitempty"`

	ListIncludePrefixes []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListConfigForCreateTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListConfigForCreateTaskInput) GoString() string {
	return s.String()
}

// SetGenerateReport sets the GenerateReport field's value.
func (s *ListConfigForCreateTaskInput) SetGenerateReport(v bool) *ListConfigForCreateTaskInput {
	s.GenerateReport = &v
	return s
}

// SetListIncludeBeginTime sets the ListIncludeBeginTime field's value.
func (s *ListConfigForCreateTaskInput) SetListIncludeBeginTime(v string) *ListConfigForCreateTaskInput {
	s.ListIncludeBeginTime = &v
	return s
}

// SetListIncludeBucketKeys sets the ListIncludeBucketKeys field's value.
func (s *ListConfigForCreateTaskInput) SetListIncludeBucketKeys(v *ListIncludeBucketKeysForCreateTaskInput) *ListConfigForCreateTaskInput {
	s.ListIncludeBucketKeys = v
	return s
}

// SetListIncludeEndTime sets the ListIncludeEndTime field's value.
func (s *ListConfigForCreateTaskInput) SetListIncludeEndTime(v string) *ListConfigForCreateTaskInput {
	s.ListIncludeEndTime = &v
	return s
}

// SetListIncludePrefixes sets the ListIncludePrefixes field's value.
func (s *ListConfigForCreateTaskInput) SetListIncludePrefixes(v []*string) *ListConfigForCreateTaskInput {
	s.ListIncludePrefixes = v
	return s
}

type ListIncludeBucketKeysForCreateTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Ak *string `type:"string" json:",omitempty"`

	Bucket *string `type:"string" json:",omitempty"`

	Keys []*string `type:"list" json:",omitempty"`

	Sk *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListIncludeBucketKeysForCreateTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIncludeBucketKeysForCreateTaskInput) GoString() string {
	return s.String()
}

// SetAk sets the Ak field's value.
func (s *ListIncludeBucketKeysForCreateTaskInput) SetAk(v string) *ListIncludeBucketKeysForCreateTaskInput {
	s.Ak = &v
	return s
}

// SetBucket sets the Bucket field's value.
func (s *ListIncludeBucketKeysForCreateTaskInput) SetBucket(v string) *ListIncludeBucketKeysForCreateTaskInput {
	s.Bucket = &v
	return s
}

// SetKeys sets the Keys field's value.
func (s *ListIncludeBucketKeysForCreateTaskInput) SetKeys(v []*string) *ListIncludeBucketKeysForCreateTaskInput {
	s.Keys = v
	return s
}

// SetSk sets the Sk field's value.
func (s *ListIncludeBucketKeysForCreateTaskInput) SetSk(v string) *ListIncludeBucketKeysForCreateTaskInput {
	s.Sk = &v
	return s
}

type TaskConfigForCreateTaskInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ListConfig *ListConfigForCreateTaskInput `type:"structure" json:",omitempty"`

	OverwritePolicy *string `type:"string" json:",omitempty" enum:"EnumOfOverwritePolicyForCreateTaskInput"`

	StorageClassDirective *string `type:"string" json:",omitempty"`

	SymlinkPolicy *string `type:"string" json:",omitempty" enum:"EnumOfSymlinkPolicyForCreateTaskInput"`
}

// String returns the string representation
func (s TaskConfigForCreateTaskInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TaskConfigForCreateTaskInput) GoString() string {
	return s.String()
}

// SetListConfig sets the ListConfig field's value.
func (s *TaskConfigForCreateTaskInput) SetListConfig(v *ListConfigForCreateTaskInput) *TaskConfigForCreateTaskInput {
	s.ListConfig = v
	return s
}

// SetOverwritePolicy sets the OverwritePolicy field's value.
func (s *TaskConfigForCreateTaskInput) SetOverwritePolicy(v string) *TaskConfigForCreateTaskInput {
	s.OverwritePolicy = &v
	return s
}

// SetStorageClassDirective sets the StorageClassDirective field's value.
func (s *TaskConfigForCreateTaskInput) SetStorageClassDirective(v string) *TaskConfigForCreateTaskInput {
	s.StorageClassDirective = &v
	return s
}

// SetSymlinkPolicy sets the SymlinkPolicy field's value.
func (s *TaskConfigForCreateTaskInput) SetSymlinkPolicy(v string) *TaskConfigForCreateTaskInput {
	s.SymlinkPolicy = &v
	return s
}

const (
	// EnumOfOverwritePolicyForCreateTaskInputForce is a EnumOfOverwritePolicyForCreateTaskInput enum value
	EnumOfOverwritePolicyForCreateTaskInputForce = "Force"

	// EnumOfOverwritePolicyForCreateTaskInputNone is a EnumOfOverwritePolicyForCreateTaskInput enum value
	EnumOfOverwritePolicyForCreateTaskInputNone = "None"

	// EnumOfOverwritePolicyForCreateTaskInputLastModify is a EnumOfOverwritePolicyForCreateTaskInput enum value
	EnumOfOverwritePolicyForCreateTaskInputLastModify = "LastModify"
)

const (
	// EnumOfSymlinkPolicyForCreateTaskInputSkip is a EnumOfSymlinkPolicyForCreateTaskInput enum value
	EnumOfSymlinkPolicyForCreateTaskInputSkip = "Skip"

	// EnumOfSymlinkPolicyForCreateTaskInputFollow is a EnumOfSymlinkPolicyForCreateTaskInput enum value
	EnumOfSymlinkPolicyForCreateTaskInputFollow = "Follow"
)

const (
	// EnumOfTaskTypeForCreateTaskInputHalfManaged is a EnumOfTaskTypeForCreateTaskInput enum value
	EnumOfTaskTypeForCreateTaskInputHalfManaged = "HalfManaged"
)
