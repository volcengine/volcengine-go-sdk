// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package dms20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAddressesCommon = "ListAddresses"

// ListAddressesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAddressesCommon operation. The "output" return
// value will be populated with the ListAddressesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAddressesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAddressesCommon Send returns without error.
//
// See ListAddressesCommon for more information on using the ListAddressesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAddressesCommonRequest method.
//    req, resp := client.ListAddressesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) ListAddressesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAddressesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAddressesCommon API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation ListAddressesCommon for usage and error information.
func (c *DMS20250101) ListAddressesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAddressesCommonRequest(input)
	return out, req.Send()
}

// ListAddressesCommonWithContext is the same as ListAddressesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAddressesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) ListAddressesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAddressesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAddresses = "ListAddresses"

// ListAddressesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAddresses operation. The "output" return
// value will be populated with the ListAddressesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAddressesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAddressesCommon Send returns without error.
//
// See ListAddresses for more information on using the ListAddresses
// API call, and error handling.
//
//    // Example sending a request using the ListAddressesRequest method.
//    req, resp := client.ListAddressesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *DMS20250101) ListAddressesRequest(input *ListAddressesInput) (req *request.Request, output *ListAddressesOutput) {
	op := &request.Operation{
		Name:       opListAddresses,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAddressesInput{}
	}

	output = &ListAddressesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAddresses API operation for DMS20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for DMS20250101's
// API operation ListAddresses for usage and error information.
func (c *DMS20250101) ListAddresses(input *ListAddressesInput) (*ListAddressesOutput, error) {
	req, out := c.ListAddressesRequest(input)
	return out, req.Send()
}

// ListAddressesWithContext is the same as ListAddresses with the addition of
// the ability to pass a context and additional request options.
//
// See ListAddresses for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *DMS20250101) ListAddressesWithContext(ctx volcengine.Context, input *ListAddressesInput, opts ...request.Option) (*ListAddressesOutput, error) {
	req, out := c.ListAddressesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddressAccessConfigForListAddressesOutput struct {
	_ struct{} `type:"structure"`

	LocalFs *LocalFsForListAddressesOutput `type:"structure"`

	Tos *TosForListAddressesOutput `type:"structure"`
}

// String returns the string representation
func (s AddressAccessConfigForListAddressesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddressAccessConfigForListAddressesOutput) GoString() string {
	return s.String()
}

// SetLocalFs sets the LocalFs field's value.
func (s *AddressAccessConfigForListAddressesOutput) SetLocalFs(v *LocalFsForListAddressesOutput) *AddressAccessConfigForListAddressesOutput {
	s.LocalFs = v
	return s
}

// SetTos sets the Tos field's value.
func (s *AddressAccessConfigForListAddressesOutput) SetTos(v *TosForListAddressesOutput) *AddressAccessConfigForListAddressesOutput {
	s.Tos = v
	return s
}

type ItemListForListAddressesOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	AddressAccessConfig *AddressAccessConfigForListAddressesOutput `type:"structure"`

	AddressName *string `type:"string"`

	AddressType *string `type:"string" enum:"EnumOfAddressTypeForListAddressesOutput"`

	CreateAt *string `type:"string"`

	Id *string `type:"string"`

	ProtocolType *string `type:"string" enum:"EnumOfProtocolTypeForListAddressesOutput"`

	UpdateAt *string `type:"string"`
}

// String returns the string representation
func (s ItemListForListAddressesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemListForListAddressesOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ItemListForListAddressesOutput) SetAccountId(v string) *ItemListForListAddressesOutput {
	s.AccountId = &v
	return s
}

// SetAddressAccessConfig sets the AddressAccessConfig field's value.
func (s *ItemListForListAddressesOutput) SetAddressAccessConfig(v *AddressAccessConfigForListAddressesOutput) *ItemListForListAddressesOutput {
	s.AddressAccessConfig = v
	return s
}

// SetAddressName sets the AddressName field's value.
func (s *ItemListForListAddressesOutput) SetAddressName(v string) *ItemListForListAddressesOutput {
	s.AddressName = &v
	return s
}

// SetAddressType sets the AddressType field's value.
func (s *ItemListForListAddressesOutput) SetAddressType(v string) *ItemListForListAddressesOutput {
	s.AddressType = &v
	return s
}

// SetCreateAt sets the CreateAt field's value.
func (s *ItemListForListAddressesOutput) SetCreateAt(v string) *ItemListForListAddressesOutput {
	s.CreateAt = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemListForListAddressesOutput) SetId(v string) *ItemListForListAddressesOutput {
	s.Id = &v
	return s
}

// SetProtocolType sets the ProtocolType field's value.
func (s *ItemListForListAddressesOutput) SetProtocolType(v string) *ItemListForListAddressesOutput {
	s.ProtocolType = &v
	return s
}

// SetUpdateAt sets the UpdateAt field's value.
func (s *ItemListForListAddressesOutput) SetUpdateAt(v string) *ItemListForListAddressesOutput {
	s.UpdateAt = &v
	return s
}

type ListAddressesInput struct {
	_ struct{} `type:"structure"`

	FetchCount *bool `type:"boolean"`

	IdCursor *string `type:"string"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" required:"true"`
}

// String returns the string representation
func (s ListAddressesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAddressesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAddressesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAddressesInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFetchCount sets the FetchCount field's value.
func (s *ListAddressesInput) SetFetchCount(v bool) *ListAddressesInput {
	s.FetchCount = &v
	return s
}

// SetIdCursor sets the IdCursor field's value.
func (s *ListAddressesInput) SetIdCursor(v string) *ListAddressesInput {
	s.IdCursor = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAddressesInput) SetPageNumber(v int32) *ListAddressesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAddressesInput) SetPageSize(v int32) *ListAddressesInput {
	s.PageSize = &v
	return s
}

type ListAddressesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	HasNext *bool `type:"boolean"`

	ItemList []*ItemListForListAddressesOutput `type:"list"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s ListAddressesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAddressesOutput) GoString() string {
	return s.String()
}

// SetHasNext sets the HasNext field's value.
func (s *ListAddressesOutput) SetHasNext(v bool) *ListAddressesOutput {
	s.HasNext = &v
	return s
}

// SetItemList sets the ItemList field's value.
func (s *ListAddressesOutput) SetItemList(v []*ItemListForListAddressesOutput) *ListAddressesOutput {
	s.ItemList = v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAddressesOutput) SetTotalCount(v int32) *ListAddressesOutput {
	s.TotalCount = &v
	return s
}

type LocalFsForListAddressesOutput struct {
	_ struct{} `type:"structure"`

	BasePath *string `type:"string"`
}

// String returns the string representation
func (s LocalFsForListAddressesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LocalFsForListAddressesOutput) GoString() string {
	return s.String()
}

// SetBasePath sets the BasePath field's value.
func (s *LocalFsForListAddressesOutput) SetBasePath(v string) *LocalFsForListAddressesOutput {
	s.BasePath = &v
	return s
}

type TosForListAddressesOutput struct {
	_ struct{} `type:"structure"`

	Ak *string `type:"string"`

	Bucket *string `type:"string"`

	Region *string `type:"string"`

	Sk *string `type:"string"`
}

// String returns the string representation
func (s TosForListAddressesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TosForListAddressesOutput) GoString() string {
	return s.String()
}

// SetAk sets the Ak field's value.
func (s *TosForListAddressesOutput) SetAk(v string) *TosForListAddressesOutput {
	s.Ak = &v
	return s
}

// SetBucket sets the Bucket field's value.
func (s *TosForListAddressesOutput) SetBucket(v string) *TosForListAddressesOutput {
	s.Bucket = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *TosForListAddressesOutput) SetRegion(v string) *TosForListAddressesOutput {
	s.Region = &v
	return s
}

// SetSk sets the Sk field's value.
func (s *TosForListAddressesOutput) SetSk(v string) *TosForListAddressesOutput {
	s.Sk = &v
	return s
}

const (
	// EnumOfAddressTypeForListAddressesOutputSource is a EnumOfAddressTypeForListAddressesOutput enum value
	EnumOfAddressTypeForListAddressesOutputSource = "Source"

	// EnumOfAddressTypeForListAddressesOutputDestination is a EnumOfAddressTypeForListAddressesOutput enum value
	EnumOfAddressTypeForListAddressesOutputDestination = "Destination"
)

const (
	// EnumOfProtocolTypeForListAddressesOutputLocalFs is a EnumOfProtocolTypeForListAddressesOutput enum value
	EnumOfProtocolTypeForListAddressesOutputLocalFs = "LocalFS"

	// EnumOfProtocolTypeForListAddressesOutputTos is a EnumOfProtocolTypeForListAddressesOutput enum value
	EnumOfProtocolTypeForListAddressesOutputTos = "Tos"
)
