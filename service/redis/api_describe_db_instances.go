// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstancesCommon = "DescribeDBInstances"

// DescribeDBInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstancesCommon operation. The "output" return
// value will be populated with the DescribeDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancesCommon Send returns without error.
//
// See DescribeDBInstancesCommon for more information on using the DescribeDBInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancesCommonRequest method.
//    req, resp := client.DescribeDBInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeDBInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstancesCommon API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeDBInstancesCommon for usage and error information.
func (c *REDIS) DescribeDBInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstancesCommonWithContext is the same as DescribeDBInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeDBInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstances = "DescribeDBInstances"

// DescribeDBInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstances operation. The "output" return
// value will be populated with the DescribeDBInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstancesCommon Send returns without error.
//
// See DescribeDBInstances for more information on using the DescribeDBInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstancesRequest method.
//    req, resp := client.DescribeDBInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeDBInstancesRequest(input *DescribeDBInstancesInput) (req *request.Request, output *DescribeDBInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstancesInput{}
	}

	output = &DescribeDBInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstances API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeDBInstances for usage and error information.
func (c *REDIS) DescribeDBInstances(input *DescribeDBInstancesInput) (*DescribeDBInstancesOutput, error) {
	req, out := c.DescribeDBInstancesRequest(input)
	return out, req.Send()
}

// DescribeDBInstancesWithContext is the same as DescribeDBInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeDBInstancesWithContext(ctx volcengine.Context, input *DescribeDBInstancesInput, opts ...request.Option) (*DescribeDBInstancesOutput, error) {
	req, out := c.DescribeDBInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CapacityForDescribeDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`

	Used *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CapacityForDescribeDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CapacityForDescribeDBInstancesOutput) GoString() string {
	return s.String()
}

// SetTotal sets the Total field's value.
func (s *CapacityForDescribeDBInstancesOutput) SetTotal(v int64) *CapacityForDescribeDBInstancesOutput {
	s.Total = &v
	return s
}

// SetUsed sets the Used field's value.
func (s *CapacityForDescribeDBInstancesOutput) SetUsed(v int64) *CapacityForDescribeDBInstancesOutput {
	s.Used = &v
	return s
}

type DescribeDBInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	DataLayout *string `type:"string" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	ServiceType *string `type:"string" json:",omitempty"`

	ShardedCluster *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForDescribeDBInstancesInput `type:"list" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancesInput) GoString() string {
	return s.String()
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstancesInput) SetChargeType(v string) *DescribeDBInstancesInput {
	s.ChargeType = &v
	return s
}

// SetDataLayout sets the DataLayout field's value.
func (s *DescribeDBInstancesInput) SetDataLayout(v string) *DescribeDBInstancesInput {
	s.DataLayout = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeDBInstancesInput) SetEngineVersion(v string) *DescribeDBInstancesInput {
	s.EngineVersion = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstancesInput) SetInstanceId(v string) *DescribeDBInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeDBInstancesInput) SetInstanceName(v string) *DescribeDBInstancesInput {
	s.InstanceName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDBInstancesInput) SetPageNumber(v int32) *DescribeDBInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDBInstancesInput) SetPageSize(v int32) *DescribeDBInstancesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDBInstancesInput) SetProjectName(v string) *DescribeDBInstancesInput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeDBInstancesInput) SetRegionId(v string) *DescribeDBInstancesInput {
	s.RegionId = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *DescribeDBInstancesInput) SetServiceType(v string) *DescribeDBInstancesInput {
	s.ServiceType = &v
	return s
}

// SetShardedCluster sets the ShardedCluster field's value.
func (s *DescribeDBInstancesInput) SetShardedCluster(v int32) *DescribeDBInstancesInput {
	s.ShardedCluster = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDBInstancesInput) SetStatus(v string) *DescribeDBInstancesInput {
	s.Status = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeDBInstancesInput) SetTagFilters(v []*TagFilterForDescribeDBInstancesInput) *DescribeDBInstancesInput {
	s.TagFilters = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeDBInstancesInput) SetVpcId(v string) *DescribeDBInstancesInput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeDBInstancesInput) SetZoneId(v string) *DescribeDBInstancesInput {
	s.ZoneId = &v
	return s
}

type DescribeDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Instances []*InstanceForDescribeDBInstancesOutput `type:"list" json:",omitempty"`

	TotalInstancesNum *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstancesOutput) GoString() string {
	return s.String()
}

// SetInstances sets the Instances field's value.
func (s *DescribeDBInstancesOutput) SetInstances(v []*InstanceForDescribeDBInstancesOutput) *DescribeDBInstancesOutput {
	s.Instances = v
	return s
}

// SetTotalInstancesNum sets the TotalInstancesNum field's value.
func (s *DescribeDBInstancesOutput) SetTotalInstancesNum(v int32) *DescribeDBInstancesOutput {
	s.TotalInstancesNum = &v
	return s
}

type InstanceForDescribeDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Capacity *CapacityForDescribeDBInstancesOutput `type:"structure" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DataLayout *string `type:"string" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	ExpiredTime *string `type:"string" json:",omitempty"`

	InstanceClass *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	MultiAZ *string `type:"string" json:",omitempty"`

	NodeNumber *int32 `type:"int32" json:",omitempty"`

	PrivateAddress *string `type:"string" json:",omitempty"`

	PrivatePort *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	ServiceType *string `type:"string" json:",omitempty"`

	ShardCapacity *float64 `type:"double" json:",omitempty"`

	ShardNumber *int32 `type:"int32" json:",omitempty"`

	ShardedCluster *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeDBInstancesOutput `type:"list" json:",omitempty"`

	VIP *string `type:"string" json:",omitempty"`

	VIPv6 *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceForDescribeDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceForDescribeDBInstancesOutput) GoString() string {
	return s.String()
}

// SetCapacity sets the Capacity field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetCapacity(v *CapacityForDescribeDBInstancesOutput) *InstanceForDescribeDBInstancesOutput {
	s.Capacity = v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetChargeType(v string) *InstanceForDescribeDBInstancesOutput {
	s.ChargeType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetCreateTime(v string) *InstanceForDescribeDBInstancesOutput {
	s.CreateTime = &v
	return s
}

// SetDataLayout sets the DataLayout field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetDataLayout(v string) *InstanceForDescribeDBInstancesOutput {
	s.DataLayout = &v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetDeletionProtection(v string) *InstanceForDescribeDBInstancesOutput {
	s.DeletionProtection = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetEngineVersion(v string) *InstanceForDescribeDBInstancesOutput {
	s.EngineVersion = &v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetExpiredTime(v string) *InstanceForDescribeDBInstancesOutput {
	s.ExpiredTime = &v
	return s
}

// SetInstanceClass sets the InstanceClass field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetInstanceClass(v string) *InstanceForDescribeDBInstancesOutput {
	s.InstanceClass = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetInstanceId(v string) *InstanceForDescribeDBInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetInstanceName(v string) *InstanceForDescribeDBInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetMultiAZ sets the MultiAZ field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetMultiAZ(v string) *InstanceForDescribeDBInstancesOutput {
	s.MultiAZ = &v
	return s
}

// SetNodeNumber sets the NodeNumber field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetNodeNumber(v int32) *InstanceForDescribeDBInstancesOutput {
	s.NodeNumber = &v
	return s
}

// SetPrivateAddress sets the PrivateAddress field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetPrivateAddress(v string) *InstanceForDescribeDBInstancesOutput {
	s.PrivateAddress = &v
	return s
}

// SetPrivatePort sets the PrivatePort field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetPrivatePort(v string) *InstanceForDescribeDBInstancesOutput {
	s.PrivatePort = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetProjectName(v string) *InstanceForDescribeDBInstancesOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetRegionId(v string) *InstanceForDescribeDBInstancesOutput {
	s.RegionId = &v
	return s
}

// SetServiceType sets the ServiceType field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetServiceType(v string) *InstanceForDescribeDBInstancesOutput {
	s.ServiceType = &v
	return s
}

// SetShardCapacity sets the ShardCapacity field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetShardCapacity(v float64) *InstanceForDescribeDBInstancesOutput {
	s.ShardCapacity = &v
	return s
}

// SetShardNumber sets the ShardNumber field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetShardNumber(v int32) *InstanceForDescribeDBInstancesOutput {
	s.ShardNumber = &v
	return s
}

// SetShardedCluster sets the ShardedCluster field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetShardedCluster(v int32) *InstanceForDescribeDBInstancesOutput {
	s.ShardedCluster = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetStatus(v string) *InstanceForDescribeDBInstancesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetTags(v []*TagForDescribeDBInstancesOutput) *InstanceForDescribeDBInstancesOutput {
	s.Tags = v
	return s
}

// SetVIP sets the VIP field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetVIP(v string) *InstanceForDescribeDBInstancesOutput {
	s.VIP = &v
	return s
}

// SetVIPv6 sets the VIPv6 field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetVIPv6(v string) *InstanceForDescribeDBInstancesOutput {
	s.VIPv6 = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetVpcId(v string) *InstanceForDescribeDBInstancesOutput {
	s.VpcId = &v
	return s
}

// SetZoneIds sets the ZoneIds field's value.
func (s *InstanceForDescribeDBInstancesOutput) SetZoneIds(v []*string) *InstanceForDescribeDBInstancesOutput {
	s.ZoneIds = v
	return s
}

type TagFilterForDescribeDBInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForDescribeDBInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeDBInstancesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeDBInstancesInput) SetKey(v string) *TagFilterForDescribeDBInstancesInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagFilterForDescribeDBInstancesInput) SetValue(v string) *TagFilterForDescribeDBInstancesInput {
	s.Value = &v
	return s
}

type TagForDescribeDBInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeDBInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeDBInstancesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeDBInstancesOutput) SetKey(v string) *TagForDescribeDBInstancesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeDBInstancesOutput) SetValue(v string) *TagForDescribeDBInstancesOutput {
	s.Value = &v
	return s
}
