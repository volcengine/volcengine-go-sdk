// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package redis

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeKeyScanJobsCommon = "DescribeKeyScanJobs"

// DescribeKeyScanJobsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeKeyScanJobsCommon operation. The "output" return
// value will be populated with the DescribeKeyScanJobsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeKeyScanJobsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeKeyScanJobsCommon Send returns without error.
//
// See DescribeKeyScanJobsCommon for more information on using the DescribeKeyScanJobsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeKeyScanJobsCommonRequest method.
//    req, resp := client.DescribeKeyScanJobsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeKeyScanJobsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeKeyScanJobsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeKeyScanJobsCommon API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeKeyScanJobsCommon for usage and error information.
func (c *REDIS) DescribeKeyScanJobsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeKeyScanJobsCommonRequest(input)
	return out, req.Send()
}

// DescribeKeyScanJobsCommonWithContext is the same as DescribeKeyScanJobsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeKeyScanJobsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeKeyScanJobsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeKeyScanJobsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeKeyScanJobs = "DescribeKeyScanJobs"

// DescribeKeyScanJobsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeKeyScanJobs operation. The "output" return
// value will be populated with the DescribeKeyScanJobsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeKeyScanJobsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeKeyScanJobsCommon Send returns without error.
//
// See DescribeKeyScanJobs for more information on using the DescribeKeyScanJobs
// API call, and error handling.
//
//    // Example sending a request using the DescribeKeyScanJobsRequest method.
//    req, resp := client.DescribeKeyScanJobsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *REDIS) DescribeKeyScanJobsRequest(input *DescribeKeyScanJobsInput) (req *request.Request, output *DescribeKeyScanJobsOutput) {
	op := &request.Operation{
		Name:       opDescribeKeyScanJobs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeKeyScanJobsInput{}
	}

	output = &DescribeKeyScanJobsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeKeyScanJobs API operation for REDIS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for REDIS's
// API operation DescribeKeyScanJobs for usage and error information.
func (c *REDIS) DescribeKeyScanJobs(input *DescribeKeyScanJobsInput) (*DescribeKeyScanJobsOutput, error) {
	req, out := c.DescribeKeyScanJobsRequest(input)
	return out, req.Send()
}

// DescribeKeyScanJobsWithContext is the same as DescribeKeyScanJobs with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeKeyScanJobs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *REDIS) DescribeKeyScanJobsWithContext(ctx volcengine.Context, input *DescribeKeyScanJobsInput, opts ...request.Option) (*DescribeKeyScanJobsOutput, error) {
	req, out := c.DescribeKeyScanJobsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeKeyScanJobsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	// QueryEndTime is a required field
	QueryEndTime *string `type:"string" json:",omitempty" required:"true"`

	// QueryStartTime is a required field
	QueryStartTime *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeKeyScanJobsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeKeyScanJobsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeKeyScanJobsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeKeyScanJobsInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.QueryEndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("QueryEndTime"))
	}
	if s.QueryStartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("QueryStartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeKeyScanJobsInput) SetInstanceId(v string) *DescribeKeyScanJobsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeKeyScanJobsInput) SetPageNumber(v int32) *DescribeKeyScanJobsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeKeyScanJobsInput) SetPageSize(v int32) *DescribeKeyScanJobsInput {
	s.PageSize = &v
	return s
}

// SetQueryEndTime sets the QueryEndTime field's value.
func (s *DescribeKeyScanJobsInput) SetQueryEndTime(v string) *DescribeKeyScanJobsInput {
	s.QueryEndTime = &v
	return s
}

// SetQueryStartTime sets the QueryStartTime field's value.
func (s *DescribeKeyScanJobsInput) SetQueryStartTime(v string) *DescribeKeyScanJobsInput {
	s.QueryStartTime = &v
	return s
}

type DescribeKeyScanJobsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	JobList []*JobListForDescribeKeyScanJobsOutput `type:"list" json:",omitempty"`

	TotalJobsNumber *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeKeyScanJobsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeKeyScanJobsOutput) GoString() string {
	return s.String()
}

// SetJobList sets the JobList field's value.
func (s *DescribeKeyScanJobsOutput) SetJobList(v []*JobListForDescribeKeyScanJobsOutput) *DescribeKeyScanJobsOutput {
	s.JobList = v
	return s
}

// SetTotalJobsNumber sets the TotalJobsNumber field's value.
func (s *DescribeKeyScanJobsOutput) SetTotalJobsNumber(v int32) *DescribeKeyScanJobsOutput {
	s.TotalJobsNumber = &v
	return s
}

type JobListForDescribeKeyScanJobsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CompletedCount *int32 `type:"int32" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	FinishTime *string `type:"string" json:",omitempty"`

	JobId *string `type:"string" json:",omitempty"`

	StartTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s JobListForDescribeKeyScanJobsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s JobListForDescribeKeyScanJobsOutput) GoString() string {
	return s.String()
}

// SetCompletedCount sets the CompletedCount field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetCompletedCount(v int32) *JobListForDescribeKeyScanJobsOutput {
	s.CompletedCount = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetCreateTime(v string) *JobListForDescribeKeyScanJobsOutput {
	s.CreateTime = &v
	return s
}

// SetFinishTime sets the FinishTime field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetFinishTime(v string) *JobListForDescribeKeyScanJobsOutput {
	s.FinishTime = &v
	return s
}

// SetJobId sets the JobId field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetJobId(v string) *JobListForDescribeKeyScanJobsOutput {
	s.JobId = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetStartTime(v string) *JobListForDescribeKeyScanJobsOutput {
	s.StartTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetStatus(v string) *JobListForDescribeKeyScanJobsOutput {
	s.Status = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *JobListForDescribeKeyScanJobsOutput) SetTotalCount(v int32) *JobListForDescribeKeyScanJobsOutput {
	s.TotalCount = &v
	return s
}
