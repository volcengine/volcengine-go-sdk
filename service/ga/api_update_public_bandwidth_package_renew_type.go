// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdatePublicBandwidthPackageRenewTypeCommon = "UpdatePublicBandwidthPackageRenewType"

// UpdatePublicBandwidthPackageRenewTypeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePublicBandwidthPackageRenewTypeCommon operation. The "output" return
// value will be populated with the UpdatePublicBandwidthPackageRenewTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePublicBandwidthPackageRenewTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePublicBandwidthPackageRenewTypeCommon Send returns without error.
//
// See UpdatePublicBandwidthPackageRenewTypeCommon for more information on using the UpdatePublicBandwidthPackageRenewTypeCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdatePublicBandwidthPackageRenewTypeCommonRequest method.
//    req, resp := client.UpdatePublicBandwidthPackageRenewTypeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) UpdatePublicBandwidthPackageRenewTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdatePublicBandwidthPackageRenewTypeCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePublicBandwidthPackageRenewTypeCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation UpdatePublicBandwidthPackageRenewTypeCommon for usage and error information.
func (c *GA) UpdatePublicBandwidthPackageRenewTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdatePublicBandwidthPackageRenewTypeCommonRequest(input)
	return out, req.Send()
}

// UpdatePublicBandwidthPackageRenewTypeCommonWithContext is the same as UpdatePublicBandwidthPackageRenewTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePublicBandwidthPackageRenewTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) UpdatePublicBandwidthPackageRenewTypeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdatePublicBandwidthPackageRenewTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdatePublicBandwidthPackageRenewType = "UpdatePublicBandwidthPackageRenewType"

// UpdatePublicBandwidthPackageRenewTypeRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdatePublicBandwidthPackageRenewType operation. The "output" return
// value will be populated with the UpdatePublicBandwidthPackageRenewTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdatePublicBandwidthPackageRenewTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdatePublicBandwidthPackageRenewTypeCommon Send returns without error.
//
// See UpdatePublicBandwidthPackageRenewType for more information on using the UpdatePublicBandwidthPackageRenewType
// API call, and error handling.
//
//    // Example sending a request using the UpdatePublicBandwidthPackageRenewTypeRequest method.
//    req, resp := client.UpdatePublicBandwidthPackageRenewTypeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) UpdatePublicBandwidthPackageRenewTypeRequest(input *UpdatePublicBandwidthPackageRenewTypeInput) (req *request.Request, output *UpdatePublicBandwidthPackageRenewTypeOutput) {
	op := &request.Operation{
		Name:       opUpdatePublicBandwidthPackageRenewType,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdatePublicBandwidthPackageRenewTypeInput{}
	}

	output = &UpdatePublicBandwidthPackageRenewTypeOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdatePublicBandwidthPackageRenewType API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation UpdatePublicBandwidthPackageRenewType for usage and error information.
func (c *GA) UpdatePublicBandwidthPackageRenewType(input *UpdatePublicBandwidthPackageRenewTypeInput) (*UpdatePublicBandwidthPackageRenewTypeOutput, error) {
	req, out := c.UpdatePublicBandwidthPackageRenewTypeRequest(input)
	return out, req.Send()
}

// UpdatePublicBandwidthPackageRenewTypeWithContext is the same as UpdatePublicBandwidthPackageRenewType with the addition of
// the ability to pass a context and additional request options.
//
// See UpdatePublicBandwidthPackageRenewType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) UpdatePublicBandwidthPackageRenewTypeWithContext(ctx volcengine.Context, input *UpdatePublicBandwidthPackageRenewTypeInput, opts ...request.Option) (*UpdatePublicBandwidthPackageRenewTypeOutput, error) {
	req, out := c.UpdatePublicBandwidthPackageRenewTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdatePublicBandwidthPackageRenewTypeInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BandwidthPackageId is a required field
	BandwidthPackageId *string `type:"string" json:",omitempty" required:"true"`

	// RenewType is a required field
	RenewType *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdatePublicBandwidthPackageRenewTypeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePublicBandwidthPackageRenewTypeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdatePublicBandwidthPackageRenewTypeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdatePublicBandwidthPackageRenewTypeInput"}
	if s.BandwidthPackageId == nil {
		invalidParams.Add(request.NewErrParamRequired("BandwidthPackageId"))
	}
	if s.RenewType == nil {
		invalidParams.Add(request.NewErrParamRequired("RenewType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidthPackageId sets the BandwidthPackageId field's value.
func (s *UpdatePublicBandwidthPackageRenewTypeInput) SetBandwidthPackageId(v string) *UpdatePublicBandwidthPackageRenewTypeInput {
	s.BandwidthPackageId = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *UpdatePublicBandwidthPackageRenewTypeInput) SetRenewType(v int32) *UpdatePublicBandwidthPackageRenewTypeInput {
	s.RenewType = &v
	return s
}

type UpdatePublicBandwidthPackageRenewTypeOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdatePublicBandwidthPackageRenewTypeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdatePublicBandwidthPackageRenewTypeOutput) GoString() string {
	return s.String()
}
