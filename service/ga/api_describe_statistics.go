// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeStatisticsCommon = "DescribeStatistics"

// DescribeStatisticsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatisticsCommon operation. The "output" return
// value will be populated with the DescribeStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsCommon Send returns without error.
//
// See DescribeStatisticsCommon for more information on using the DescribeStatisticsCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsCommonRequest method.
//    req, resp := client.DescribeStatisticsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) DescribeStatisticsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeStatisticsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatisticsCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation DescribeStatisticsCommon for usage and error information.
func (c *GA) DescribeStatisticsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsCommonRequest(input)
	return out, req.Send()
}

// DescribeStatisticsCommonWithContext is the same as DescribeStatisticsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatisticsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) DescribeStatisticsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeStatisticsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeStatistics = "DescribeStatistics"

// DescribeStatisticsRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeStatistics operation. The "output" return
// value will be populated with the DescribeStatisticsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeStatisticsCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeStatisticsCommon Send returns without error.
//
// See DescribeStatistics for more information on using the DescribeStatistics
// API call, and error handling.
//
//    // Example sending a request using the DescribeStatisticsRequest method.
//    req, resp := client.DescribeStatisticsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) DescribeStatisticsRequest(input *DescribeStatisticsInput) (req *request.Request, output *DescribeStatisticsOutput) {
	op := &request.Operation{
		Name:       opDescribeStatistics,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeStatisticsInput{}
	}

	output = &DescribeStatisticsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeStatistics API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation DescribeStatistics for usage and error information.
func (c *GA) DescribeStatistics(input *DescribeStatisticsInput) (*DescribeStatisticsOutput, error) {
	req, out := c.DescribeStatisticsRequest(input)
	return out, req.Send()
}

// DescribeStatisticsWithContext is the same as DescribeStatistics with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeStatistics for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) DescribeStatisticsWithContext(ctx volcengine.Context, input *DescribeStatisticsInput, opts ...request.Option) (*DescribeStatisticsOutput, error) {
	req, out := c.DescribeStatisticsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeStatisticsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EndTime is a required field
	EndTime *string `type:"string" json:",omitempty" required:"true"`

	GroupByAccelerator *bool `type:"boolean" json:",omitempty"`

	GroupByListener *bool `type:"boolean" json:",omitempty"`

	GroupByRegion *bool `type:"boolean" json:",omitempty"`

	InputId []*string `type:"list" json:",omitempty"`

	// InputIdType is a required field
	InputIdType *string `type:"string" json:",omitempty" required:"true"`

	// Interval is a required field
	Interval *int32 `type:"int32" json:",omitempty" required:"true"`

	Metrics []*string `type:"list" json:",omitempty"`

	Region []*string `type:"list" json:",omitempty"`

	RegionType *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeStatisticsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeStatisticsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeStatisticsInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.InputIdType == nil {
		invalidParams.Add(request.NewErrParamRequired("InputIdType"))
	}
	if s.Interval == nil {
		invalidParams.Add(request.NewErrParamRequired("Interval"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeStatisticsInput) SetEndTime(v string) *DescribeStatisticsInput {
	s.EndTime = &v
	return s
}

// SetGroupByAccelerator sets the GroupByAccelerator field's value.
func (s *DescribeStatisticsInput) SetGroupByAccelerator(v bool) *DescribeStatisticsInput {
	s.GroupByAccelerator = &v
	return s
}

// SetGroupByListener sets the GroupByListener field's value.
func (s *DescribeStatisticsInput) SetGroupByListener(v bool) *DescribeStatisticsInput {
	s.GroupByListener = &v
	return s
}

// SetGroupByRegion sets the GroupByRegion field's value.
func (s *DescribeStatisticsInput) SetGroupByRegion(v bool) *DescribeStatisticsInput {
	s.GroupByRegion = &v
	return s
}

// SetInputId sets the InputId field's value.
func (s *DescribeStatisticsInput) SetInputId(v []*string) *DescribeStatisticsInput {
	s.InputId = v
	return s
}

// SetInputIdType sets the InputIdType field's value.
func (s *DescribeStatisticsInput) SetInputIdType(v string) *DescribeStatisticsInput {
	s.InputIdType = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *DescribeStatisticsInput) SetInterval(v int32) *DescribeStatisticsInput {
	s.Interval = &v
	return s
}

// SetMetrics sets the Metrics field's value.
func (s *DescribeStatisticsInput) SetMetrics(v []*string) *DescribeStatisticsInput {
	s.Metrics = v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeStatisticsInput) SetRegion(v []*string) *DescribeStatisticsInput {
	s.Region = v
	return s
}

// SetRegionType sets the RegionType field's value.
func (s *DescribeStatisticsInput) SetRegionType(v string) *DescribeStatisticsInput {
	s.RegionType = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeStatisticsInput) SetStartTime(v string) *DescribeStatisticsInput {
	s.StartTime = &v
	return s
}

type DescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Results []*ResultForDescribeStatisticsOutput `type:"list" json:",omitempty"`

	TotalStatisticResults []*TotalStatisticResultForDescribeStatisticsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetResults sets the Results field's value.
func (s *DescribeStatisticsOutput) SetResults(v []*ResultForDescribeStatisticsOutput) *DescribeStatisticsOutput {
	s.Results = v
	return s
}

// SetTotalStatisticResults sets the TotalStatisticResults field's value.
func (s *DescribeStatisticsOutput) SetTotalStatisticResults(v []*TotalStatisticResultForDescribeStatisticsOutput) *DescribeStatisticsOutput {
	s.TotalStatisticResults = v
	return s
}

type DetailInfoForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Value *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s DetailInfoForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetailInfoForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *DetailInfoForDescribeStatisticsOutput) SetName(v string) *DetailInfoForDescribeStatisticsOutput {
	s.Name = &v
	return s
}

// SetValue sets the Value field's value.
func (s *DetailInfoForDescribeStatisticsOutput) SetValue(v float64) *DetailInfoForDescribeStatisticsOutput {
	s.Value = &v
	return s
}

type ResultForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	StatisticsResults []*StatisticsResultForDescribeStatisticsOutput `type:"list" json:",omitempty"`

	TimeStamp *string `type:"string" json:",omitempty"`

	TimeStampInt *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ResultForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResultForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetStatisticsResults sets the StatisticsResults field's value.
func (s *ResultForDescribeStatisticsOutput) SetStatisticsResults(v []*StatisticsResultForDescribeStatisticsOutput) *ResultForDescribeStatisticsOutput {
	s.StatisticsResults = v
	return s
}

// SetTimeStamp sets the TimeStamp field's value.
func (s *ResultForDescribeStatisticsOutput) SetTimeStamp(v string) *ResultForDescribeStatisticsOutput {
	s.TimeStamp = &v
	return s
}

// SetTimeStampInt sets the TimeStampInt field's value.
func (s *ResultForDescribeStatisticsOutput) SetTimeStampInt(v int64) *ResultForDescribeStatisticsOutput {
	s.TimeStampInt = &v
	return s
}

type StatisticsResultForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	DetailInfo []*DetailInfoForDescribeStatisticsOutput `type:"list" json:",omitempty"`

	ListenerId *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StatisticsResultForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatisticsResultForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *StatisticsResultForDescribeStatisticsOutput) SetAcceleratorId(v string) *StatisticsResultForDescribeStatisticsOutput {
	s.AcceleratorId = &v
	return s
}

// SetDetailInfo sets the DetailInfo field's value.
func (s *StatisticsResultForDescribeStatisticsOutput) SetDetailInfo(v []*DetailInfoForDescribeStatisticsOutput) *StatisticsResultForDescribeStatisticsOutput {
	s.DetailInfo = v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *StatisticsResultForDescribeStatisticsOutput) SetListenerId(v string) *StatisticsResultForDescribeStatisticsOutput {
	s.ListenerId = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *StatisticsResultForDescribeStatisticsOutput) SetRegion(v string) *StatisticsResultForDescribeStatisticsOutput {
	s.Region = &v
	return s
}

type TotalStatisticResultForDescribeStatisticsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	ListenerId *string `type:"string" json:",omitempty"`

	MaxBandwidth *float64 `type:"float" json:",omitempty"`

	MaxBandwidth95 *float64 `type:"float" json:",omitempty"`

	MaxConnectionNum *float64 `type:"float" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	TotalTraffic *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s TotalStatisticResultForDescribeStatisticsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TotalStatisticResultForDescribeStatisticsOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetAcceleratorId(v string) *TotalStatisticResultForDescribeStatisticsOutput {
	s.AcceleratorId = &v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetListenerId(v string) *TotalStatisticResultForDescribeStatisticsOutput {
	s.ListenerId = &v
	return s
}

// SetMaxBandwidth sets the MaxBandwidth field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetMaxBandwidth(v float64) *TotalStatisticResultForDescribeStatisticsOutput {
	s.MaxBandwidth = &v
	return s
}

// SetMaxBandwidth95 sets the MaxBandwidth95 field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetMaxBandwidth95(v float64) *TotalStatisticResultForDescribeStatisticsOutput {
	s.MaxBandwidth95 = &v
	return s
}

// SetMaxConnectionNum sets the MaxConnectionNum field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetMaxConnectionNum(v float64) *TotalStatisticResultForDescribeStatisticsOutput {
	s.MaxConnectionNum = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetRegion(v string) *TotalStatisticResultForDescribeStatisticsOutput {
	s.Region = &v
	return s
}

// SetTotalTraffic sets the TotalTraffic field's value.
func (s *TotalStatisticResultForDescribeStatisticsOutput) SetTotalTraffic(v float64) *TotalStatisticResultForDescribeStatisticsOutput {
	s.TotalTraffic = &v
	return s
}
