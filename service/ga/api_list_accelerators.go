// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAcceleratorsCommon = "ListAccelerators"

// ListAcceleratorsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAcceleratorsCommon operation. The "output" return
// value will be populated with the ListAcceleratorsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAcceleratorsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAcceleratorsCommon Send returns without error.
//
// See ListAcceleratorsCommon for more information on using the ListAcceleratorsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAcceleratorsCommonRequest method.
//    req, resp := client.ListAcceleratorsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListAcceleratorsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAcceleratorsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAcceleratorsCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListAcceleratorsCommon for usage and error information.
func (c *GA) ListAcceleratorsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAcceleratorsCommonRequest(input)
	return out, req.Send()
}

// ListAcceleratorsCommonWithContext is the same as ListAcceleratorsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAcceleratorsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListAcceleratorsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAcceleratorsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAccelerators = "ListAccelerators"

// ListAcceleratorsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAccelerators operation. The "output" return
// value will be populated with the ListAcceleratorsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAcceleratorsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAcceleratorsCommon Send returns without error.
//
// See ListAccelerators for more information on using the ListAccelerators
// API call, and error handling.
//
//    // Example sending a request using the ListAcceleratorsRequest method.
//    req, resp := client.ListAcceleratorsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListAcceleratorsRequest(input *ListAcceleratorsInput) (req *request.Request, output *ListAcceleratorsOutput) {
	op := &request.Operation{
		Name:       opListAccelerators,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAcceleratorsInput{}
	}

	output = &ListAcceleratorsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAccelerators API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListAccelerators for usage and error information.
func (c *GA) ListAccelerators(input *ListAcceleratorsInput) (*ListAcceleratorsOutput, error) {
	req, out := c.ListAcceleratorsRequest(input)
	return out, req.Send()
}

// ListAcceleratorsWithContext is the same as ListAccelerators with the addition of
// the ability to pass a context and additional request options.
//
// See ListAccelerators for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListAcceleratorsWithContext(ctx volcengine.Context, input *ListAcceleratorsInput, opts ...request.Option) (*ListAcceleratorsOutput, error) {
	req, out := c.ListAcceleratorsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AcceleratorForListAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	BandwidthPackageIds []*string `type:"list" json:",omitempty"`

	BillingSpec *string `type:"string" json:",omitempty"`

	BillingSpecEffectiveTime *int32 `type:"int32" json:",omitempty"`

	BillingType *string `type:"string" json:",omitempty"`

	CNAME *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	CreateTime *int32 `type:"int32" json:",omitempty"`

	CreateTimeStr *string `type:"string" json:",omitempty"`

	CrossDomainBandwidthIds []*string `type:"list" json:",omitempty"`

	ExpiredTime *int32 `type:"int32" json:",omitempty"`

	FullPortSwitch *bool `type:"boolean" json:",omitempty"`

	ListenerCount *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionCount *int32 `type:"int32" json:",omitempty"`

	RenewType *int32 `type:"int32" json:",omitempty"`

	ResourceTags []*ResourceTagForListAcceleratorsOutput `type:"list" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AcceleratorForListAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AcceleratorForListAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetAcceleratorId(v string) *AcceleratorForListAcceleratorsOutput {
	s.AcceleratorId = &v
	return s
}

// SetAccountID sets the AccountID field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetAccountID(v string) *AcceleratorForListAcceleratorsOutput {
	s.AccountID = &v
	return s
}

// SetBandwidthPackageIds sets the BandwidthPackageIds field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetBandwidthPackageIds(v []*string) *AcceleratorForListAcceleratorsOutput {
	s.BandwidthPackageIds = v
	return s
}

// SetBillingSpec sets the BillingSpec field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetBillingSpec(v string) *AcceleratorForListAcceleratorsOutput {
	s.BillingSpec = &v
	return s
}

// SetBillingSpecEffectiveTime sets the BillingSpecEffectiveTime field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetBillingSpecEffectiveTime(v int32) *AcceleratorForListAcceleratorsOutput {
	s.BillingSpecEffectiveTime = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetBillingType(v string) *AcceleratorForListAcceleratorsOutput {
	s.BillingType = &v
	return s
}

// SetCNAME sets the CNAME field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetCNAME(v string) *AcceleratorForListAcceleratorsOutput {
	s.CNAME = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetChargeType(v string) *AcceleratorForListAcceleratorsOutput {
	s.ChargeType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetCreateTime(v int32) *AcceleratorForListAcceleratorsOutput {
	s.CreateTime = &v
	return s
}

// SetCreateTimeStr sets the CreateTimeStr field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetCreateTimeStr(v string) *AcceleratorForListAcceleratorsOutput {
	s.CreateTimeStr = &v
	return s
}

// SetCrossDomainBandwidthIds sets the CrossDomainBandwidthIds field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetCrossDomainBandwidthIds(v []*string) *AcceleratorForListAcceleratorsOutput {
	s.CrossDomainBandwidthIds = v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetExpiredTime(v int32) *AcceleratorForListAcceleratorsOutput {
	s.ExpiredTime = &v
	return s
}

// SetFullPortSwitch sets the FullPortSwitch field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetFullPortSwitch(v bool) *AcceleratorForListAcceleratorsOutput {
	s.FullPortSwitch = &v
	return s
}

// SetListenerCount sets the ListenerCount field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetListenerCount(v int32) *AcceleratorForListAcceleratorsOutput {
	s.ListenerCount = &v
	return s
}

// SetName sets the Name field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetName(v string) *AcceleratorForListAcceleratorsOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetProjectName(v string) *AcceleratorForListAcceleratorsOutput {
	s.ProjectName = &v
	return s
}

// SetRegionCount sets the RegionCount field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetRegionCount(v int32) *AcceleratorForListAcceleratorsOutput {
	s.RegionCount = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetRenewType(v int32) *AcceleratorForListAcceleratorsOutput {
	s.RenewType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetResourceTags(v []*ResourceTagForListAcceleratorsOutput) *AcceleratorForListAcceleratorsOutput {
	s.ResourceTags = v
	return s
}

// SetState sets the State field's value.
func (s *AcceleratorForListAcceleratorsOutput) SetState(v string) *AcceleratorForListAcceleratorsOutput {
	s.State = &v
	return s
}

type ListAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	BillingSpec *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	ResourceTagFilter *ResourceTagFilterForListAcceleratorsInput `type:"structure" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Tags []*TagForListAcceleratorsInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAcceleratorsInput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *ListAcceleratorsInput) SetAcceleratorId(v string) *ListAcceleratorsInput {
	s.AcceleratorId = &v
	return s
}

// SetBillingSpec sets the BillingSpec field's value.
func (s *ListAcceleratorsInput) SetBillingSpec(v string) *ListAcceleratorsInput {
	s.BillingSpec = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ListAcceleratorsInput) SetChargeType(v string) *ListAcceleratorsInput {
	s.ChargeType = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListAcceleratorsInput) SetPageNum(v int32) *ListAcceleratorsInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAcceleratorsInput) SetPageSize(v int32) *ListAcceleratorsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListAcceleratorsInput) SetProjectName(v string) *ListAcceleratorsInput {
	s.ProjectName = &v
	return s
}

// SetResourceTagFilter sets the ResourceTagFilter field's value.
func (s *ListAcceleratorsInput) SetResourceTagFilter(v *ResourceTagFilterForListAcceleratorsInput) *ListAcceleratorsInput {
	s.ResourceTagFilter = v
	return s
}

// SetState sets the State field's value.
func (s *ListAcceleratorsInput) SetState(v string) *ListAcceleratorsInput {
	s.State = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListAcceleratorsInput) SetTags(v []*TagForListAcceleratorsInput) *ListAcceleratorsInput {
	s.Tags = v
	return s
}

type ListAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Accelerators []*AcceleratorForListAcceleratorsOutput `type:"list" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetAccelerators sets the Accelerators field's value.
func (s *ListAcceleratorsOutput) SetAccelerators(v []*AcceleratorForListAcceleratorsOutput) *ListAcceleratorsOutput {
	s.Accelerators = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListAcceleratorsOutput) SetPageNum(v int32) *ListAcceleratorsOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAcceleratorsOutput) SetPageSize(v int32) *ListAcceleratorsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAcceleratorsOutput) SetTotalCount(v int32) *ListAcceleratorsOutput {
	s.TotalCount = &v
	return s
}

type ResourceTagFilterForListAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterType *string `type:"string" json:",omitempty"`

	ResourceTags []*ResourceTagForListAcceleratorsInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagFilterForListAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagFilterForListAcceleratorsInput) GoString() string {
	return s.String()
}

// SetFilterType sets the FilterType field's value.
func (s *ResourceTagFilterForListAcceleratorsInput) SetFilterType(v string) *ResourceTagFilterForListAcceleratorsInput {
	s.FilterType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *ResourceTagFilterForListAcceleratorsInput) SetResourceTags(v []*ResourceTagForListAcceleratorsInput) *ResourceTagFilterForListAcceleratorsInput {
	s.ResourceTags = v
	return s
}

type ResourceTagForListAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForListAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForListAcceleratorsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForListAcceleratorsInput) SetKey(v string) *ResourceTagForListAcceleratorsInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForListAcceleratorsInput) SetValue(v string) *ResourceTagForListAcceleratorsInput {
	s.Value = &v
	return s
}

type ResourceTagForListAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForListAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForListAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForListAcceleratorsOutput) SetKey(v string) *ResourceTagForListAcceleratorsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForListAcceleratorsOutput) SetValue(v string) *ResourceTagForListAcceleratorsOutput {
	s.Value = &v
	return s
}

type TagForListAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagForListAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListAcceleratorsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListAcceleratorsInput) SetKey(v string) *TagForListAcceleratorsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagForListAcceleratorsInput) SetValues(v []*string) *TagForListAcceleratorsInput {
	s.Values = v
	return s
}
