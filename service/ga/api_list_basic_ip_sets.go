// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBasicIPSetsCommon = "ListBasicIPSets"

// ListBasicIPSetsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBasicIPSetsCommon operation. The "output" return
// value will be populated with the ListBasicIPSetsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBasicIPSetsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBasicIPSetsCommon Send returns without error.
//
// See ListBasicIPSetsCommon for more information on using the ListBasicIPSetsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBasicIPSetsCommonRequest method.
//    req, resp := client.ListBasicIPSetsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListBasicIPSetsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBasicIPSetsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBasicIPSetsCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListBasicIPSetsCommon for usage and error information.
func (c *GA) ListBasicIPSetsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBasicIPSetsCommonRequest(input)
	return out, req.Send()
}

// ListBasicIPSetsCommonWithContext is the same as ListBasicIPSetsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBasicIPSetsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListBasicIPSetsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBasicIPSetsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBasicIPSets = "ListBasicIPSets"

// ListBasicIPSetsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBasicIPSets operation. The "output" return
// value will be populated with the ListBasicIPSetsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBasicIPSetsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBasicIPSetsCommon Send returns without error.
//
// See ListBasicIPSets for more information on using the ListBasicIPSets
// API call, and error handling.
//
//    // Example sending a request using the ListBasicIPSetsRequest method.
//    req, resp := client.ListBasicIPSetsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListBasicIPSetsRequest(input *ListBasicIPSetsInput) (req *request.Request, output *ListBasicIPSetsOutput) {
	op := &request.Operation{
		Name:       opListBasicIPSets,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBasicIPSetsInput{}
	}

	output = &ListBasicIPSetsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBasicIPSets API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListBasicIPSets for usage and error information.
func (c *GA) ListBasicIPSets(input *ListBasicIPSetsInput) (*ListBasicIPSetsOutput, error) {
	req, out := c.ListBasicIPSetsRequest(input)
	return out, req.Send()
}

// ListBasicIPSetsWithContext is the same as ListBasicIPSets with the addition of
// the ability to pass a context and additional request options.
//
// See ListBasicIPSets for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListBasicIPSetsWithContext(ctx volcengine.Context, input *ListBasicIPSetsInput, opts ...request.Option) (*ListBasicIPSetsOutput, error) {
	req, out := c.ListBasicIPSetsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EdgeNodeForListBasicIPSetsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Alias *string `type:"string" json:",omitempty"`

	ISP *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EdgeNodeForListBasicIPSetsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EdgeNodeForListBasicIPSetsOutput) GoString() string {
	return s.String()
}

// SetAlias sets the Alias field's value.
func (s *EdgeNodeForListBasicIPSetsOutput) SetAlias(v string) *EdgeNodeForListBasicIPSetsOutput {
	s.Alias = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *EdgeNodeForListBasicIPSetsOutput) SetISP(v string) *EdgeNodeForListBasicIPSetsOutput {
	s.ISP = &v
	return s
}

// SetName sets the Name field's value.
func (s *EdgeNodeForListBasicIPSetsOutput) SetName(v string) *EdgeNodeForListBasicIPSetsOutput {
	s.Name = &v
	return s
}

type IPSetForListBasicIPSetsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccelerateIPs []*string `type:"list" json:"accelerateIPs,omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	EdgeNodes []*EdgeNodeForListBasicIPSetsOutput `type:"list" json:",omitempty"`

	ExistBoundIP *bool `type:"boolean" json:",omitempty"`

	IPSetId *string `type:"string" json:",omitempty"`

	IPVersion *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IPSetForListBasicIPSetsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IPSetForListBasicIPSetsOutput) GoString() string {
	return s.String()
}

// SetAccelerateIPs sets the AccelerateIPs field's value.
func (s *IPSetForListBasicIPSetsOutput) SetAccelerateIPs(v []*string) *IPSetForListBasicIPSetsOutput {
	s.AccelerateIPs = v
	return s
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *IPSetForListBasicIPSetsOutput) SetAcceleratorId(v string) *IPSetForListBasicIPSetsOutput {
	s.AcceleratorId = &v
	return s
}

// SetEdgeNodes sets the EdgeNodes field's value.
func (s *IPSetForListBasicIPSetsOutput) SetEdgeNodes(v []*EdgeNodeForListBasicIPSetsOutput) *IPSetForListBasicIPSetsOutput {
	s.EdgeNodes = v
	return s
}

// SetExistBoundIP sets the ExistBoundIP field's value.
func (s *IPSetForListBasicIPSetsOutput) SetExistBoundIP(v bool) *IPSetForListBasicIPSetsOutput {
	s.ExistBoundIP = &v
	return s
}

// SetIPSetId sets the IPSetId field's value.
func (s *IPSetForListBasicIPSetsOutput) SetIPSetId(v string) *IPSetForListBasicIPSetsOutput {
	s.IPSetId = &v
	return s
}

// SetIPVersion sets the IPVersion field's value.
func (s *IPSetForListBasicIPSetsOutput) SetIPVersion(v string) *IPSetForListBasicIPSetsOutput {
	s.IPVersion = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *IPSetForListBasicIPSetsOutput) SetRegion(v string) *IPSetForListBasicIPSetsOutput {
	s.Region = &v
	return s
}

// SetState sets the State field's value.
func (s *IPSetForListBasicIPSetsOutput) SetState(v string) *IPSetForListBasicIPSetsOutput {
	s.State = &v
	return s
}

type ListBasicIPSetsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBasicIPSetsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBasicIPSetsInput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *ListBasicIPSetsInput) SetAcceleratorId(v string) *ListBasicIPSetsInput {
	s.AcceleratorId = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListBasicIPSetsInput) SetPageNum(v int32) *ListBasicIPSetsInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBasicIPSetsInput) SetPageSize(v int32) *ListBasicIPSetsInput {
	s.PageSize = &v
	return s
}

type ListBasicIPSetsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	IPSets []*IPSetForListBasicIPSetsOutput `type:"list" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBasicIPSetsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBasicIPSetsOutput) GoString() string {
	return s.String()
}

// SetIPSets sets the IPSets field's value.
func (s *ListBasicIPSetsOutput) SetIPSets(v []*IPSetForListBasicIPSetsOutput) *ListBasicIPSetsOutput {
	s.IPSets = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListBasicIPSetsOutput) SetPageNum(v int32) *ListBasicIPSetsOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBasicIPSetsOutput) SetPageSize(v int32) *ListBasicIPSetsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListBasicIPSetsOutput) SetTotalCount(v int32) *ListBasicIPSetsOutput {
	s.TotalCount = &v
	return s
}
