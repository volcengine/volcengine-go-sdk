// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBasicAccelerateIPCommon = "CreateBasicAccelerateIP"

// CreateBasicAccelerateIPCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBasicAccelerateIPCommon operation. The "output" return
// value will be populated with the CreateBasicAccelerateIPCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBasicAccelerateIPCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBasicAccelerateIPCommon Send returns without error.
//
// See CreateBasicAccelerateIPCommon for more information on using the CreateBasicAccelerateIPCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBasicAccelerateIPCommonRequest method.
//    req, resp := client.CreateBasicAccelerateIPCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreateBasicAccelerateIPCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBasicAccelerateIPCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBasicAccelerateIPCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreateBasicAccelerateIPCommon for usage and error information.
func (c *GA) CreateBasicAccelerateIPCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBasicAccelerateIPCommonRequest(input)
	return out, req.Send()
}

// CreateBasicAccelerateIPCommonWithContext is the same as CreateBasicAccelerateIPCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBasicAccelerateIPCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreateBasicAccelerateIPCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBasicAccelerateIPCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBasicAccelerateIP = "CreateBasicAccelerateIP"

// CreateBasicAccelerateIPRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBasicAccelerateIP operation. The "output" return
// value will be populated with the CreateBasicAccelerateIPCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBasicAccelerateIPCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBasicAccelerateIPCommon Send returns without error.
//
// See CreateBasicAccelerateIP for more information on using the CreateBasicAccelerateIP
// API call, and error handling.
//
//    // Example sending a request using the CreateBasicAccelerateIPRequest method.
//    req, resp := client.CreateBasicAccelerateIPRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreateBasicAccelerateIPRequest(input *CreateBasicAccelerateIPInput) (req *request.Request, output *CreateBasicAccelerateIPOutput) {
	op := &request.Operation{
		Name:       opCreateBasicAccelerateIP,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBasicAccelerateIPInput{}
	}

	output = &CreateBasicAccelerateIPOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBasicAccelerateIP API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreateBasicAccelerateIP for usage and error information.
func (c *GA) CreateBasicAccelerateIP(input *CreateBasicAccelerateIPInput) (*CreateBasicAccelerateIPOutput, error) {
	req, out := c.CreateBasicAccelerateIPRequest(input)
	return out, req.Send()
}

// CreateBasicAccelerateIPWithContext is the same as CreateBasicAccelerateIP with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBasicAccelerateIP for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreateBasicAccelerateIPWithContext(ctx volcengine.Context, input *CreateBasicAccelerateIPInput, opts ...request.Option) (*CreateBasicAccelerateIPOutput, error) {
	req, out := c.CreateBasicAccelerateIPRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateBasicAccelerateIPInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AcceleratorId is a required field
	AcceleratorId *string `type:"string" json:",omitempty" required:"true"`

	// EdgeNodeName is a required field
	EdgeNodeName *string `type:"string" json:",omitempty" required:"true"`

	EndpointIds []*string `type:"list" json:",omitempty"`

	// IPSetId is a required field
	IPSetId *string `type:"string" json:",omitempty" required:"true"`

	// ISP is a required field
	ISP *string `type:"string" json:",omitempty" required:"true"`

	// Mode is a required field
	Mode *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateBasicAccelerateIPInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBasicAccelerateIPInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateBasicAccelerateIPInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateBasicAccelerateIPInput"}
	if s.AcceleratorId == nil {
		invalidParams.Add(request.NewErrParamRequired("AcceleratorId"))
	}
	if s.EdgeNodeName == nil {
		invalidParams.Add(request.NewErrParamRequired("EdgeNodeName"))
	}
	if s.IPSetId == nil {
		invalidParams.Add(request.NewErrParamRequired("IPSetId"))
	}
	if s.ISP == nil {
		invalidParams.Add(request.NewErrParamRequired("ISP"))
	}
	if s.Mode == nil {
		invalidParams.Add(request.NewErrParamRequired("Mode"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *CreateBasicAccelerateIPInput) SetAcceleratorId(v string) *CreateBasicAccelerateIPInput {
	s.AcceleratorId = &v
	return s
}

// SetEdgeNodeName sets the EdgeNodeName field's value.
func (s *CreateBasicAccelerateIPInput) SetEdgeNodeName(v string) *CreateBasicAccelerateIPInput {
	s.EdgeNodeName = &v
	return s
}

// SetEndpointIds sets the EndpointIds field's value.
func (s *CreateBasicAccelerateIPInput) SetEndpointIds(v []*string) *CreateBasicAccelerateIPInput {
	s.EndpointIds = v
	return s
}

// SetIPSetId sets the IPSetId field's value.
func (s *CreateBasicAccelerateIPInput) SetIPSetId(v string) *CreateBasicAccelerateIPInput {
	s.IPSetId = &v
	return s
}

// SetISP sets the ISP field's value.
func (s *CreateBasicAccelerateIPInput) SetISP(v string) *CreateBasicAccelerateIPInput {
	s.ISP = &v
	return s
}

// SetMode sets the Mode field's value.
func (s *CreateBasicAccelerateIPInput) SetMode(v string) *CreateBasicAccelerateIPInput {
	s.Mode = &v
	return s
}

type CreateBasicAccelerateIPOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AccelerateIPId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateBasicAccelerateIPOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBasicAccelerateIPOutput) GoString() string {
	return s.String()
}

// SetAccelerateIPId sets the AccelerateIPId field's value.
func (s *CreateBasicAccelerateIPOutput) SetAccelerateIPId(v string) *CreateBasicAccelerateIPOutput {
	s.AccelerateIPId = &v
	return s
}
