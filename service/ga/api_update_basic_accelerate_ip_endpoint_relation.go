// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateBasicAccelerateIPEndpointRelationCommon = "UpdateBasicAccelerateIPEndpointRelation"

// UpdateBasicAccelerateIPEndpointRelationCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBasicAccelerateIPEndpointRelationCommon operation. The "output" return
// value will be populated with the UpdateBasicAccelerateIPEndpointRelationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBasicAccelerateIPEndpointRelationCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBasicAccelerateIPEndpointRelationCommon Send returns without error.
//
// See UpdateBasicAccelerateIPEndpointRelationCommon for more information on using the UpdateBasicAccelerateIPEndpointRelationCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateBasicAccelerateIPEndpointRelationCommonRequest method.
//    req, resp := client.UpdateBasicAccelerateIPEndpointRelationCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) UpdateBasicAccelerateIPEndpointRelationCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateBasicAccelerateIPEndpointRelationCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBasicAccelerateIPEndpointRelationCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation UpdateBasicAccelerateIPEndpointRelationCommon for usage and error information.
func (c *GA) UpdateBasicAccelerateIPEndpointRelationCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateBasicAccelerateIPEndpointRelationCommonRequest(input)
	return out, req.Send()
}

// UpdateBasicAccelerateIPEndpointRelationCommonWithContext is the same as UpdateBasicAccelerateIPEndpointRelationCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBasicAccelerateIPEndpointRelationCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) UpdateBasicAccelerateIPEndpointRelationCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateBasicAccelerateIPEndpointRelationCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateBasicAccelerateIPEndpointRelation = "UpdateBasicAccelerateIPEndpointRelation"

// UpdateBasicAccelerateIPEndpointRelationRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateBasicAccelerateIPEndpointRelation operation. The "output" return
// value will be populated with the UpdateBasicAccelerateIPEndpointRelationCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateBasicAccelerateIPEndpointRelationCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateBasicAccelerateIPEndpointRelationCommon Send returns without error.
//
// See UpdateBasicAccelerateIPEndpointRelation for more information on using the UpdateBasicAccelerateIPEndpointRelation
// API call, and error handling.
//
//    // Example sending a request using the UpdateBasicAccelerateIPEndpointRelationRequest method.
//    req, resp := client.UpdateBasicAccelerateIPEndpointRelationRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) UpdateBasicAccelerateIPEndpointRelationRequest(input *UpdateBasicAccelerateIPEndpointRelationInput) (req *request.Request, output *UpdateBasicAccelerateIPEndpointRelationOutput) {
	op := &request.Operation{
		Name:       opUpdateBasicAccelerateIPEndpointRelation,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateBasicAccelerateIPEndpointRelationInput{}
	}

	output = &UpdateBasicAccelerateIPEndpointRelationOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateBasicAccelerateIPEndpointRelation API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation UpdateBasicAccelerateIPEndpointRelation for usage and error information.
func (c *GA) UpdateBasicAccelerateIPEndpointRelation(input *UpdateBasicAccelerateIPEndpointRelationInput) (*UpdateBasicAccelerateIPEndpointRelationOutput, error) {
	req, out := c.UpdateBasicAccelerateIPEndpointRelationRequest(input)
	return out, req.Send()
}

// UpdateBasicAccelerateIPEndpointRelationWithContext is the same as UpdateBasicAccelerateIPEndpointRelation with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateBasicAccelerateIPEndpointRelation for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) UpdateBasicAccelerateIPEndpointRelationWithContext(ctx volcengine.Context, input *UpdateBasicAccelerateIPEndpointRelationInput, opts ...request.Option) (*UpdateBasicAccelerateIPEndpointRelationOutput, error) {
	req, out := c.UpdateBasicAccelerateIPEndpointRelationRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type EndpointForUpdateBasicAccelerateIPEndpointRelationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndpointAddress *string `type:"string" json:"endpointAddress,omitempty"`

	EndpointID *string `type:"string" json:"endpointID,omitempty"`

	Type *string `type:"string" json:"type,omitempty"`
}

// String returns the string representation
func (s EndpointForUpdateBasicAccelerateIPEndpointRelationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointForUpdateBasicAccelerateIPEndpointRelationInput) GoString() string {
	return s.String()
}

// SetEndpointAddress sets the EndpointAddress field's value.
func (s *EndpointForUpdateBasicAccelerateIPEndpointRelationInput) SetEndpointAddress(v string) *EndpointForUpdateBasicAccelerateIPEndpointRelationInput {
	s.EndpointAddress = &v
	return s
}

// SetEndpointID sets the EndpointID field's value.
func (s *EndpointForUpdateBasicAccelerateIPEndpointRelationInput) SetEndpointID(v string) *EndpointForUpdateBasicAccelerateIPEndpointRelationInput {
	s.EndpointID = &v
	return s
}

// SetType sets the Type field's value.
func (s *EndpointForUpdateBasicAccelerateIPEndpointRelationInput) SetType(v string) *EndpointForUpdateBasicAccelerateIPEndpointRelationInput {
	s.Type = &v
	return s
}

type UpdateBasicAccelerateIPEndpointRelationInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AccelerateIPId is a required field
	AccelerateIPId *string `type:"string" json:"accelerateIPId,omitempty" required:"true"`

	Endpoints []*EndpointForUpdateBasicAccelerateIPEndpointRelationInput `type:"list" json:"endpoints,omitempty"`
}

// String returns the string representation
func (s UpdateBasicAccelerateIPEndpointRelationInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBasicAccelerateIPEndpointRelationInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateBasicAccelerateIPEndpointRelationInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateBasicAccelerateIPEndpointRelationInput"}
	if s.AccelerateIPId == nil {
		invalidParams.Add(request.NewErrParamRequired("AccelerateIPId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAccelerateIPId sets the AccelerateIPId field's value.
func (s *UpdateBasicAccelerateIPEndpointRelationInput) SetAccelerateIPId(v string) *UpdateBasicAccelerateIPEndpointRelationInput {
	s.AccelerateIPId = &v
	return s
}

// SetEndpoints sets the Endpoints field's value.
func (s *UpdateBasicAccelerateIPEndpointRelationInput) SetEndpoints(v []*EndpointForUpdateBasicAccelerateIPEndpointRelationInput) *UpdateBasicAccelerateIPEndpointRelationInput {
	s.Endpoints = v
	return s
}

type UpdateBasicAccelerateIPEndpointRelationOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateBasicAccelerateIPEndpointRelationOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateBasicAccelerateIPEndpointRelationOutput) GoString() string {
	return s.String()
}
