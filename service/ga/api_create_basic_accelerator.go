// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateBasicAcceleratorCommon = "CreateBasicAccelerator"

// CreateBasicAcceleratorCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBasicAcceleratorCommon operation. The "output" return
// value will be populated with the CreateBasicAcceleratorCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBasicAcceleratorCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBasicAcceleratorCommon Send returns without error.
//
// See CreateBasicAcceleratorCommon for more information on using the CreateBasicAcceleratorCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateBasicAcceleratorCommonRequest method.
//    req, resp := client.CreateBasicAcceleratorCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreateBasicAcceleratorCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateBasicAcceleratorCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBasicAcceleratorCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreateBasicAcceleratorCommon for usage and error information.
func (c *GA) CreateBasicAcceleratorCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateBasicAcceleratorCommonRequest(input)
	return out, req.Send()
}

// CreateBasicAcceleratorCommonWithContext is the same as CreateBasicAcceleratorCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBasicAcceleratorCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreateBasicAcceleratorCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateBasicAcceleratorCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateBasicAccelerator = "CreateBasicAccelerator"

// CreateBasicAcceleratorRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateBasicAccelerator operation. The "output" return
// value will be populated with the CreateBasicAcceleratorCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateBasicAcceleratorCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateBasicAcceleratorCommon Send returns without error.
//
// See CreateBasicAccelerator for more information on using the CreateBasicAccelerator
// API call, and error handling.
//
//    // Example sending a request using the CreateBasicAcceleratorRequest method.
//    req, resp := client.CreateBasicAcceleratorRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreateBasicAcceleratorRequest(input *CreateBasicAcceleratorInput) (req *request.Request, output *CreateBasicAcceleratorOutput) {
	op := &request.Operation{
		Name:       opCreateBasicAccelerator,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateBasicAcceleratorInput{}
	}

	output = &CreateBasicAcceleratorOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateBasicAccelerator API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreateBasicAccelerator for usage and error information.
func (c *GA) CreateBasicAccelerator(input *CreateBasicAcceleratorInput) (*CreateBasicAcceleratorOutput, error) {
	req, out := c.CreateBasicAcceleratorRequest(input)
	return out, req.Send()
}

// CreateBasicAcceleratorWithContext is the same as CreateBasicAccelerator with the addition of
// the ability to pass a context and additional request options.
//
// See CreateBasicAccelerator for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreateBasicAcceleratorWithContext(ctx volcengine.Context, input *CreateBasicAcceleratorInput, opts ...request.Option) (*CreateBasicAcceleratorOutput, error) {
	req, out := c.CreateBasicAcceleratorRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateBasicAcceleratorInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Autobound *bool `type:"boolean" json:",omitempty"`

	Bandwidth *int32 `type:"int32" json:",omitempty"`

	BandwidthType *string `type:"string" json:",omitempty"`

	BillingPeriod *int32 `type:"int32" json:",omitempty"`

	BillingType *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	Duration *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RenewType *int32 `type:"int32" json:",omitempty"`

	ResourceTags []*ResourceTagForCreateBasicAcceleratorInput `type:"list" json:",omitempty"`

	Volume *int32 `type:"int32" json:",omitempty"`

	WithBandwidthPackage *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s CreateBasicAcceleratorInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBasicAcceleratorInput) GoString() string {
	return s.String()
}

// SetAutobound sets the Autobound field's value.
func (s *CreateBasicAcceleratorInput) SetAutobound(v bool) *CreateBasicAcceleratorInput {
	s.Autobound = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *CreateBasicAcceleratorInput) SetBandwidth(v int32) *CreateBasicAcceleratorInput {
	s.Bandwidth = &v
	return s
}

// SetBandwidthType sets the BandwidthType field's value.
func (s *CreateBasicAcceleratorInput) SetBandwidthType(v string) *CreateBasicAcceleratorInput {
	s.BandwidthType = &v
	return s
}

// SetBillingPeriod sets the BillingPeriod field's value.
func (s *CreateBasicAcceleratorInput) SetBillingPeriod(v int32) *CreateBasicAcceleratorInput {
	s.BillingPeriod = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *CreateBasicAcceleratorInput) SetBillingType(v string) *CreateBasicAcceleratorInput {
	s.BillingType = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *CreateBasicAcceleratorInput) SetChargeType(v string) *CreateBasicAcceleratorInput {
	s.ChargeType = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *CreateBasicAcceleratorInput) SetDuration(v string) *CreateBasicAcceleratorInput {
	s.Duration = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateBasicAcceleratorInput) SetName(v string) *CreateBasicAcceleratorInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateBasicAcceleratorInput) SetProjectName(v string) *CreateBasicAcceleratorInput {
	s.ProjectName = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *CreateBasicAcceleratorInput) SetRenewType(v int32) *CreateBasicAcceleratorInput {
	s.RenewType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *CreateBasicAcceleratorInput) SetResourceTags(v []*ResourceTagForCreateBasicAcceleratorInput) *CreateBasicAcceleratorInput {
	s.ResourceTags = v
	return s
}

// SetVolume sets the Volume field's value.
func (s *CreateBasicAcceleratorInput) SetVolume(v int32) *CreateBasicAcceleratorInput {
	s.Volume = &v
	return s
}

// SetWithBandwidthPackage sets the WithBandwidthPackage field's value.
func (s *CreateBasicAcceleratorInput) SetWithBandwidthPackage(v bool) *CreateBasicAcceleratorInput {
	s.WithBandwidthPackage = &v
	return s
}

type CreateBasicAcceleratorOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AcceleratorId *string `type:"string" json:",omitempty"`

	BandwidthPackageId *string `type:"string" json:",omitempty"`

	PreorderNumbers []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateBasicAcceleratorOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateBasicAcceleratorOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *CreateBasicAcceleratorOutput) SetAcceleratorId(v string) *CreateBasicAcceleratorOutput {
	s.AcceleratorId = &v
	return s
}

// SetBandwidthPackageId sets the BandwidthPackageId field's value.
func (s *CreateBasicAcceleratorOutput) SetBandwidthPackageId(v string) *CreateBasicAcceleratorOutput {
	s.BandwidthPackageId = &v
	return s
}

// SetPreorderNumbers sets the PreorderNumbers field's value.
func (s *CreateBasicAcceleratorOutput) SetPreorderNumbers(v []*string) *CreateBasicAcceleratorOutput {
	s.PreorderNumbers = v
	return s
}

type ResourceTagForCreateBasicAcceleratorInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForCreateBasicAcceleratorInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForCreateBasicAcceleratorInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForCreateBasicAcceleratorInput) SetKey(v string) *ResourceTagForCreateBasicAcceleratorInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForCreateBasicAcceleratorInput) SetValue(v string) *ResourceTagForCreateBasicAcceleratorInput {
	s.Value = &v
	return s
}
