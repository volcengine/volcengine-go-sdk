// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBasicAcceleratorsCommon = "ListBasicAccelerators"

// ListBasicAcceleratorsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBasicAcceleratorsCommon operation. The "output" return
// value will be populated with the ListBasicAcceleratorsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBasicAcceleratorsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBasicAcceleratorsCommon Send returns without error.
//
// See ListBasicAcceleratorsCommon for more information on using the ListBasicAcceleratorsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBasicAcceleratorsCommonRequest method.
//    req, resp := client.ListBasicAcceleratorsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListBasicAcceleratorsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBasicAcceleratorsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBasicAcceleratorsCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListBasicAcceleratorsCommon for usage and error information.
func (c *GA) ListBasicAcceleratorsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBasicAcceleratorsCommonRequest(input)
	return out, req.Send()
}

// ListBasicAcceleratorsCommonWithContext is the same as ListBasicAcceleratorsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBasicAcceleratorsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListBasicAcceleratorsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBasicAcceleratorsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBasicAccelerators = "ListBasicAccelerators"

// ListBasicAcceleratorsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBasicAccelerators operation. The "output" return
// value will be populated with the ListBasicAcceleratorsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBasicAcceleratorsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBasicAcceleratorsCommon Send returns without error.
//
// See ListBasicAccelerators for more information on using the ListBasicAccelerators
// API call, and error handling.
//
//    // Example sending a request using the ListBasicAcceleratorsRequest method.
//    req, resp := client.ListBasicAcceleratorsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListBasicAcceleratorsRequest(input *ListBasicAcceleratorsInput) (req *request.Request, output *ListBasicAcceleratorsOutput) {
	op := &request.Operation{
		Name:       opListBasicAccelerators,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBasicAcceleratorsInput{}
	}

	output = &ListBasicAcceleratorsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBasicAccelerators API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListBasicAccelerators for usage and error information.
func (c *GA) ListBasicAccelerators(input *ListBasicAcceleratorsInput) (*ListBasicAcceleratorsOutput, error) {
	req, out := c.ListBasicAcceleratorsRequest(input)
	return out, req.Send()
}

// ListBasicAcceleratorsWithContext is the same as ListBasicAccelerators with the addition of
// the ability to pass a context and additional request options.
//
// See ListBasicAccelerators for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListBasicAcceleratorsWithContext(ctx volcengine.Context, input *ListBasicAcceleratorsInput, opts ...request.Option) (*ListBasicAcceleratorsOutput, error) {
	req, out := c.ListBasicAcceleratorsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AcceleratorForListBasicAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	AccountName *string `type:"string" json:",omitempty"`

	BandwidthPackageIds []*string `type:"list" json:",omitempty"`

	BandwidthPackageVolume *int32 `type:"int32" json:",omitempty"`

	BeginTime *int64 `type:"int64" json:",omitempty"`

	BillingType *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	CreateTime *int64 `type:"int64" json:",omitempty"`

	CreateTimeStr *string `type:"string" json:",omitempty"`

	CrossDomainBandwidthIds []*string `type:"list" json:",omitempty"`

	EndPointGroups []*EndPointGroupForListBasicAcceleratorsOutput `type:"list" json:",omitempty"`

	ExpiredTime *int64 `type:"int64" json:",omitempty"`

	IPSets []*IPSetForListBasicAcceleratorsOutput `type:"list" json:",omitempty"`

	Mode *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RenewType *int32 `type:"int32" json:",omitempty"`

	ResourceTags []*ResourceTagForListBasicAcceleratorsOutput `type:"list" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AcceleratorForListBasicAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AcceleratorForListBasicAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetAcceleratorId(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.AcceleratorId = &v
	return s
}

// SetAccountID sets the AccountID field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetAccountID(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.AccountID = &v
	return s
}

// SetAccountName sets the AccountName field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetAccountName(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.AccountName = &v
	return s
}

// SetBandwidthPackageIds sets the BandwidthPackageIds field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetBandwidthPackageIds(v []*string) *AcceleratorForListBasicAcceleratorsOutput {
	s.BandwidthPackageIds = v
	return s
}

// SetBandwidthPackageVolume sets the BandwidthPackageVolume field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetBandwidthPackageVolume(v int32) *AcceleratorForListBasicAcceleratorsOutput {
	s.BandwidthPackageVolume = &v
	return s
}

// SetBeginTime sets the BeginTime field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetBeginTime(v int64) *AcceleratorForListBasicAcceleratorsOutput {
	s.BeginTime = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetBillingType(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.BillingType = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetChargeType(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.ChargeType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetCreateTime(v int64) *AcceleratorForListBasicAcceleratorsOutput {
	s.CreateTime = &v
	return s
}

// SetCreateTimeStr sets the CreateTimeStr field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetCreateTimeStr(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.CreateTimeStr = &v
	return s
}

// SetCrossDomainBandwidthIds sets the CrossDomainBandwidthIds field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetCrossDomainBandwidthIds(v []*string) *AcceleratorForListBasicAcceleratorsOutput {
	s.CrossDomainBandwidthIds = v
	return s
}

// SetEndPointGroups sets the EndPointGroups field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetEndPointGroups(v []*EndPointGroupForListBasicAcceleratorsOutput) *AcceleratorForListBasicAcceleratorsOutput {
	s.EndPointGroups = v
	return s
}

// SetExpiredTime sets the ExpiredTime field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetExpiredTime(v int64) *AcceleratorForListBasicAcceleratorsOutput {
	s.ExpiredTime = &v
	return s
}

// SetIPSets sets the IPSets field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetIPSets(v []*IPSetForListBasicAcceleratorsOutput) *AcceleratorForListBasicAcceleratorsOutput {
	s.IPSets = v
	return s
}

// SetMode sets the Mode field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetMode(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.Mode = &v
	return s
}

// SetName sets the Name field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetName(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetProjectName(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.ProjectName = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetRenewType(v int32) *AcceleratorForListBasicAcceleratorsOutput {
	s.RenewType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetResourceTags(v []*ResourceTagForListBasicAcceleratorsOutput) *AcceleratorForListBasicAcceleratorsOutput {
	s.ResourceTags = v
	return s
}

// SetState sets the State field's value.
func (s *AcceleratorForListBasicAcceleratorsOutput) SetState(v string) *AcceleratorForListBasicAcceleratorsOutput {
	s.State = &v
	return s
}

type EndPointGroupForListBasicAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	EndPointGroupId *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EndPointGroupForListBasicAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndPointGroupForListBasicAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetEndPointGroupId sets the EndPointGroupId field's value.
func (s *EndPointGroupForListBasicAcceleratorsOutput) SetEndPointGroupId(v string) *EndPointGroupForListBasicAcceleratorsOutput {
	s.EndPointGroupId = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *EndPointGroupForListBasicAcceleratorsOutput) SetRegion(v string) *EndPointGroupForListBasicAcceleratorsOutput {
	s.Region = &v
	return s
}

type IPSetForListBasicAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IPSetId *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IPSetForListBasicAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IPSetForListBasicAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetIPSetId sets the IPSetId field's value.
func (s *IPSetForListBasicAcceleratorsOutput) SetIPSetId(v string) *IPSetForListBasicAcceleratorsOutput {
	s.IPSetId = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *IPSetForListBasicAcceleratorsOutput) SetRegion(v string) *IPSetForListBasicAcceleratorsOutput {
	s.Region = &v
	return s
}

type ListBasicAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AcceleratorId is a required field
	AcceleratorId *string `type:"string" json:",omitempty" required:"true"`

	// ChargeType is a required field
	ChargeType *string `type:"string" json:",omitempty" required:"true"`

	// EndPointGroupRegion is a required field
	EndPointGroupRegion *string `type:"string" json:",omitempty" required:"true"`

	// IPSetRegion is a required field
	IPSetRegion *string `type:"string" json:",omitempty" required:"true"`

	Name *string `type:"string" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	ResourceTagFilter *ResourceTagFilterForListBasicAcceleratorsInput `type:"structure" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Tags []*TagForListBasicAcceleratorsInput `type:"list" json:",omitempty"`

	WithBandwidthPackage *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ListBasicAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBasicAcceleratorsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListBasicAcceleratorsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListBasicAcceleratorsInput"}
	if s.AcceleratorId == nil {
		invalidParams.Add(request.NewErrParamRequired("AcceleratorId"))
	}
	if s.ChargeType == nil {
		invalidParams.Add(request.NewErrParamRequired("ChargeType"))
	}
	if s.EndPointGroupRegion == nil {
		invalidParams.Add(request.NewErrParamRequired("EndPointGroupRegion"))
	}
	if s.IPSetRegion == nil {
		invalidParams.Add(request.NewErrParamRequired("IPSetRegion"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *ListBasicAcceleratorsInput) SetAcceleratorId(v string) *ListBasicAcceleratorsInput {
	s.AcceleratorId = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ListBasicAcceleratorsInput) SetChargeType(v string) *ListBasicAcceleratorsInput {
	s.ChargeType = &v
	return s
}

// SetEndPointGroupRegion sets the EndPointGroupRegion field's value.
func (s *ListBasicAcceleratorsInput) SetEndPointGroupRegion(v string) *ListBasicAcceleratorsInput {
	s.EndPointGroupRegion = &v
	return s
}

// SetIPSetRegion sets the IPSetRegion field's value.
func (s *ListBasicAcceleratorsInput) SetIPSetRegion(v string) *ListBasicAcceleratorsInput {
	s.IPSetRegion = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListBasicAcceleratorsInput) SetName(v string) *ListBasicAcceleratorsInput {
	s.Name = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListBasicAcceleratorsInput) SetPageNum(v int32) *ListBasicAcceleratorsInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBasicAcceleratorsInput) SetPageSize(v int32) *ListBasicAcceleratorsInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListBasicAcceleratorsInput) SetProjectName(v string) *ListBasicAcceleratorsInput {
	s.ProjectName = &v
	return s
}

// SetResourceTagFilter sets the ResourceTagFilter field's value.
func (s *ListBasicAcceleratorsInput) SetResourceTagFilter(v *ResourceTagFilterForListBasicAcceleratorsInput) *ListBasicAcceleratorsInput {
	s.ResourceTagFilter = v
	return s
}

// SetState sets the State field's value.
func (s *ListBasicAcceleratorsInput) SetState(v string) *ListBasicAcceleratorsInput {
	s.State = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListBasicAcceleratorsInput) SetTags(v []*TagForListBasicAcceleratorsInput) *ListBasicAcceleratorsInput {
	s.Tags = v
	return s
}

// SetWithBandwidthPackage sets the WithBandwidthPackage field's value.
func (s *ListBasicAcceleratorsInput) SetWithBandwidthPackage(v bool) *ListBasicAcceleratorsInput {
	s.WithBandwidthPackage = &v
	return s
}

type ListBasicAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Accelerators []*AcceleratorForListBasicAcceleratorsOutput `type:"list" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListBasicAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBasicAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetAccelerators sets the Accelerators field's value.
func (s *ListBasicAcceleratorsOutput) SetAccelerators(v []*AcceleratorForListBasicAcceleratorsOutput) *ListBasicAcceleratorsOutput {
	s.Accelerators = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListBasicAcceleratorsOutput) SetPageNum(v int32) *ListBasicAcceleratorsOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListBasicAcceleratorsOutput) SetPageSize(v int32) *ListBasicAcceleratorsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListBasicAcceleratorsOutput) SetTotalCount(v int32) *ListBasicAcceleratorsOutput {
	s.TotalCount = &v
	return s
}

type ResourceTagFilterForListBasicAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FilterType *string `type:"string" json:",omitempty"`

	ResourceTags []*ResourceTagForListBasicAcceleratorsInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagFilterForListBasicAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagFilterForListBasicAcceleratorsInput) GoString() string {
	return s.String()
}

// SetFilterType sets the FilterType field's value.
func (s *ResourceTagFilterForListBasicAcceleratorsInput) SetFilterType(v string) *ResourceTagFilterForListBasicAcceleratorsInput {
	s.FilterType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *ResourceTagFilterForListBasicAcceleratorsInput) SetResourceTags(v []*ResourceTagForListBasicAcceleratorsInput) *ResourceTagFilterForListBasicAcceleratorsInput {
	s.ResourceTags = v
	return s
}

type ResourceTagForListBasicAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForListBasicAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForListBasicAcceleratorsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForListBasicAcceleratorsInput) SetKey(v string) *ResourceTagForListBasicAcceleratorsInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForListBasicAcceleratorsInput) SetValue(v string) *ResourceTagForListBasicAcceleratorsInput {
	s.Value = &v
	return s
}

type ResourceTagForListBasicAcceleratorsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForListBasicAcceleratorsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForListBasicAcceleratorsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForListBasicAcceleratorsOutput) SetKey(v string) *ResourceTagForListBasicAcceleratorsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForListBasicAcceleratorsOutput) SetValue(v string) *ResourceTagForListBasicAcceleratorsOutput {
	s.Value = &v
	return s
}

type TagForListBasicAcceleratorsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagForListBasicAcceleratorsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForListBasicAcceleratorsInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForListBasicAcceleratorsInput) SetKey(v string) *TagForListBasicAcceleratorsInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagForListBasicAcceleratorsInput) SetValues(v []*string) *TagForListBasicAcceleratorsInput {
	s.Values = v
	return s
}
