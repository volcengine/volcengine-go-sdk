// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreatePublicBandwidthPackageCommon = "CreatePublicBandwidthPackage"

// CreatePublicBandwidthPackageCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePublicBandwidthPackageCommon operation. The "output" return
// value will be populated with the CreatePublicBandwidthPackageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePublicBandwidthPackageCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePublicBandwidthPackageCommon Send returns without error.
//
// See CreatePublicBandwidthPackageCommon for more information on using the CreatePublicBandwidthPackageCommon
// API call, and error handling.
//
//    // Example sending a request using the CreatePublicBandwidthPackageCommonRequest method.
//    req, resp := client.CreatePublicBandwidthPackageCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreatePublicBandwidthPackageCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreatePublicBandwidthPackageCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePublicBandwidthPackageCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreatePublicBandwidthPackageCommon for usage and error information.
func (c *GA) CreatePublicBandwidthPackageCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreatePublicBandwidthPackageCommonRequest(input)
	return out, req.Send()
}

// CreatePublicBandwidthPackageCommonWithContext is the same as CreatePublicBandwidthPackageCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePublicBandwidthPackageCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreatePublicBandwidthPackageCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreatePublicBandwidthPackageCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreatePublicBandwidthPackage = "CreatePublicBandwidthPackage"

// CreatePublicBandwidthPackageRequest generates a "volcengine/request.Request" representing the
// client's request for the CreatePublicBandwidthPackage operation. The "output" return
// value will be populated with the CreatePublicBandwidthPackageCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreatePublicBandwidthPackageCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreatePublicBandwidthPackageCommon Send returns without error.
//
// See CreatePublicBandwidthPackage for more information on using the CreatePublicBandwidthPackage
// API call, and error handling.
//
//    // Example sending a request using the CreatePublicBandwidthPackageRequest method.
//    req, resp := client.CreatePublicBandwidthPackageRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) CreatePublicBandwidthPackageRequest(input *CreatePublicBandwidthPackageInput) (req *request.Request, output *CreatePublicBandwidthPackageOutput) {
	op := &request.Operation{
		Name:       opCreatePublicBandwidthPackage,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreatePublicBandwidthPackageInput{}
	}

	output = &CreatePublicBandwidthPackageOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreatePublicBandwidthPackage API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation CreatePublicBandwidthPackage for usage and error information.
func (c *GA) CreatePublicBandwidthPackage(input *CreatePublicBandwidthPackageInput) (*CreatePublicBandwidthPackageOutput, error) {
	req, out := c.CreatePublicBandwidthPackageRequest(input)
	return out, req.Send()
}

// CreatePublicBandwidthPackageWithContext is the same as CreatePublicBandwidthPackage with the addition of
// the ability to pass a context and additional request options.
//
// See CreatePublicBandwidthPackage for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) CreatePublicBandwidthPackageWithContext(ctx volcengine.Context, input *CreatePublicBandwidthPackageInput, opts ...request.Option) (*CreatePublicBandwidthPackageOutput, error) {
	req, out := c.CreatePublicBandwidthPackageRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatePublicBandwidthPackageInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Bandwidth is a required field
	Bandwidth *int32 `type:"int32" json:",omitempty" required:"true"`

	// BandwidthType is a required field
	BandwidthType *string `type:"string" json:",omitempty" required:"true"`

	// ChargeType is a required field
	ChargeType *string `type:"string" json:",omitempty" required:"true"`

	// Duration is a required field
	Duration *int32 `type:"int32" json:",omitempty" required:"true"`

	ProjectName *string `type:"string" json:",omitempty"`

	RenewType *int32 `type:"int32" json:",omitempty"`

	ResourceTags []*ResourceTagForCreatePublicBandwidthPackageInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreatePublicBandwidthPackageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePublicBandwidthPackageInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreatePublicBandwidthPackageInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreatePublicBandwidthPackageInput"}
	if s.Bandwidth == nil {
		invalidParams.Add(request.NewErrParamRequired("Bandwidth"))
	}
	if s.BandwidthType == nil {
		invalidParams.Add(request.NewErrParamRequired("BandwidthType"))
	}
	if s.ChargeType == nil {
		invalidParams.Add(request.NewErrParamRequired("ChargeType"))
	}
	if s.Duration == nil {
		invalidParams.Add(request.NewErrParamRequired("Duration"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBandwidth sets the Bandwidth field's value.
func (s *CreatePublicBandwidthPackageInput) SetBandwidth(v int32) *CreatePublicBandwidthPackageInput {
	s.Bandwidth = &v
	return s
}

// SetBandwidthType sets the BandwidthType field's value.
func (s *CreatePublicBandwidthPackageInput) SetBandwidthType(v string) *CreatePublicBandwidthPackageInput {
	s.BandwidthType = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *CreatePublicBandwidthPackageInput) SetChargeType(v string) *CreatePublicBandwidthPackageInput {
	s.ChargeType = &v
	return s
}

// SetDuration sets the Duration field's value.
func (s *CreatePublicBandwidthPackageInput) SetDuration(v int32) *CreatePublicBandwidthPackageInput {
	s.Duration = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreatePublicBandwidthPackageInput) SetProjectName(v string) *CreatePublicBandwidthPackageInput {
	s.ProjectName = &v
	return s
}

// SetRenewType sets the RenewType field's value.
func (s *CreatePublicBandwidthPackageInput) SetRenewType(v int32) *CreatePublicBandwidthPackageInput {
	s.RenewType = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *CreatePublicBandwidthPackageInput) SetResourceTags(v []*ResourceTagForCreatePublicBandwidthPackageInput) *CreatePublicBandwidthPackageInput {
	s.ResourceTags = v
	return s
}

type CreatePublicBandwidthPackageOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BandwidthPackageId *string `type:"string" json:",omitempty"`

	PreorderNumbers []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreatePublicBandwidthPackageOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatePublicBandwidthPackageOutput) GoString() string {
	return s.String()
}

// SetBandwidthPackageId sets the BandwidthPackageId field's value.
func (s *CreatePublicBandwidthPackageOutput) SetBandwidthPackageId(v string) *CreatePublicBandwidthPackageOutput {
	s.BandwidthPackageId = &v
	return s
}

// SetPreorderNumbers sets the PreorderNumbers field's value.
func (s *CreatePublicBandwidthPackageOutput) SetPreorderNumbers(v []*string) *CreatePublicBandwidthPackageOutput {
	s.PreorderNumbers = v
	return s
}

type ResourceTagForCreatePublicBandwidthPackageInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceTagForCreatePublicBandwidthPackageInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForCreatePublicBandwidthPackageInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *ResourceTagForCreatePublicBandwidthPackageInput) SetKey(v string) *ResourceTagForCreatePublicBandwidthPackageInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ResourceTagForCreatePublicBandwidthPackageInput) SetValue(v string) *ResourceTagForCreatePublicBandwidthPackageInput {
	s.Value = &v
	return s
}
