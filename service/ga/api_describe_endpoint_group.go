// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeEndpointGroupCommon = "DescribeEndpointGroup"

// DescribeEndpointGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeEndpointGroupCommon operation. The "output" return
// value will be populated with the DescribeEndpointGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEndpointGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEndpointGroupCommon Send returns without error.
//
// See DescribeEndpointGroupCommon for more information on using the DescribeEndpointGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeEndpointGroupCommonRequest method.
//    req, resp := client.DescribeEndpointGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) DescribeEndpointGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeEndpointGroupCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEndpointGroupCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation DescribeEndpointGroupCommon for usage and error information.
func (c *GA) DescribeEndpointGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeEndpointGroupCommonRequest(input)
	return out, req.Send()
}

// DescribeEndpointGroupCommonWithContext is the same as DescribeEndpointGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEndpointGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) DescribeEndpointGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeEndpointGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeEndpointGroup = "DescribeEndpointGroup"

// DescribeEndpointGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeEndpointGroup operation. The "output" return
// value will be populated with the DescribeEndpointGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeEndpointGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeEndpointGroupCommon Send returns without error.
//
// See DescribeEndpointGroup for more information on using the DescribeEndpointGroup
// API call, and error handling.
//
//    // Example sending a request using the DescribeEndpointGroupRequest method.
//    req, resp := client.DescribeEndpointGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) DescribeEndpointGroupRequest(input *DescribeEndpointGroupInput) (req *request.Request, output *DescribeEndpointGroupOutput) {
	op := &request.Operation{
		Name:       opDescribeEndpointGroup,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeEndpointGroupInput{}
	}

	output = &DescribeEndpointGroupOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeEndpointGroup API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation DescribeEndpointGroup for usage and error information.
func (c *GA) DescribeEndpointGroup(input *DescribeEndpointGroupInput) (*DescribeEndpointGroupOutput, error) {
	req, out := c.DescribeEndpointGroupRequest(input)
	return out, req.Send()
}

// DescribeEndpointGroupWithContext is the same as DescribeEndpointGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeEndpointGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) DescribeEndpointGroupWithContext(ctx volcengine.Context, input *DescribeEndpointGroupInput, opts ...request.Option) (*DescribeEndpointGroupOutput, error) {
	req, out := c.DescribeEndpointGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeEndpointGroupInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// EndpointGroupId is a required field
	EndpointGroupId *string `type:"string" json:",omitempty" required:"true"`

	// ListenerId is a required field
	ListenerId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeEndpointGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEndpointGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeEndpointGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeEndpointGroupInput"}
	if s.EndpointGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("EndpointGroupId"))
	}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEndpointGroupId sets the EndpointGroupId field's value.
func (s *DescribeEndpointGroupInput) SetEndpointGroupId(v string) *DescribeEndpointGroupInput {
	s.EndpointGroupId = &v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *DescribeEndpointGroupInput) SetListenerId(v string) *DescribeEndpointGroupInput {
	s.ListenerId = &v
	return s
}

type DescribeEndpointGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AcceleratorId *string `type:"string" json:",omitempty"`

	EndpointConfigurations []*EndpointConfigurationForDescribeEndpointGroupOutput `type:"list" json:",omitempty"`

	EndpointGroupId *string `type:"string" json:",omitempty"`

	EndpointType *string `type:"string" json:",omitempty"`

	HealthCheckStatus *string `type:"string" json:",omitempty"`

	HealthyConfig *HealthyConfigForDescribeEndpointGroupOutput `type:"structure" json:",omitempty"`

	KeepClientIP *bool `type:"boolean" json:",omitempty"`

	KeepClientIPMethod *string `type:"string" json:",omitempty"`

	ListenerId *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	SourceIP []*SourceIPForDescribeEndpointGroupOutput `type:"list" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	TrafficPercentage *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeEndpointGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeEndpointGroupOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *DescribeEndpointGroupOutput) SetAcceleratorId(v string) *DescribeEndpointGroupOutput {
	s.AcceleratorId = &v
	return s
}

// SetEndpointConfigurations sets the EndpointConfigurations field's value.
func (s *DescribeEndpointGroupOutput) SetEndpointConfigurations(v []*EndpointConfigurationForDescribeEndpointGroupOutput) *DescribeEndpointGroupOutput {
	s.EndpointConfigurations = v
	return s
}

// SetEndpointGroupId sets the EndpointGroupId field's value.
func (s *DescribeEndpointGroupOutput) SetEndpointGroupId(v string) *DescribeEndpointGroupOutput {
	s.EndpointGroupId = &v
	return s
}

// SetEndpointType sets the EndpointType field's value.
func (s *DescribeEndpointGroupOutput) SetEndpointType(v string) *DescribeEndpointGroupOutput {
	s.EndpointType = &v
	return s
}

// SetHealthCheckStatus sets the HealthCheckStatus field's value.
func (s *DescribeEndpointGroupOutput) SetHealthCheckStatus(v string) *DescribeEndpointGroupOutput {
	s.HealthCheckStatus = &v
	return s
}

// SetHealthyConfig sets the HealthyConfig field's value.
func (s *DescribeEndpointGroupOutput) SetHealthyConfig(v *HealthyConfigForDescribeEndpointGroupOutput) *DescribeEndpointGroupOutput {
	s.HealthyConfig = v
	return s
}

// SetKeepClientIP sets the KeepClientIP field's value.
func (s *DescribeEndpointGroupOutput) SetKeepClientIP(v bool) *DescribeEndpointGroupOutput {
	s.KeepClientIP = &v
	return s
}

// SetKeepClientIPMethod sets the KeepClientIPMethod field's value.
func (s *DescribeEndpointGroupOutput) SetKeepClientIPMethod(v string) *DescribeEndpointGroupOutput {
	s.KeepClientIPMethod = &v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *DescribeEndpointGroupOutput) SetListenerId(v string) *DescribeEndpointGroupOutput {
	s.ListenerId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeEndpointGroupOutput) SetName(v string) *DescribeEndpointGroupOutput {
	s.Name = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *DescribeEndpointGroupOutput) SetRegion(v string) *DescribeEndpointGroupOutput {
	s.Region = &v
	return s
}

// SetSourceIP sets the SourceIP field's value.
func (s *DescribeEndpointGroupOutput) SetSourceIP(v []*SourceIPForDescribeEndpointGroupOutput) *DescribeEndpointGroupOutput {
	s.SourceIP = v
	return s
}

// SetState sets the State field's value.
func (s *DescribeEndpointGroupOutput) SetState(v string) *DescribeEndpointGroupOutput {
	s.State = &v
	return s
}

// SetTrafficPercentage sets the TrafficPercentage field's value.
func (s *DescribeEndpointGroupOutput) SetTrafficPercentage(v int32) *DescribeEndpointGroupOutput {
	s.TrafficPercentage = &v
	return s
}

type EndpointConfigurationForDescribeEndpointGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Endpoint *string `type:"string" json:",omitempty"`

	PrivateInstanceID *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s EndpointConfigurationForDescribeEndpointGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointConfigurationForDescribeEndpointGroupOutput) GoString() string {
	return s.String()
}

// SetEndpoint sets the Endpoint field's value.
func (s *EndpointConfigurationForDescribeEndpointGroupOutput) SetEndpoint(v string) *EndpointConfigurationForDescribeEndpointGroupOutput {
	s.Endpoint = &v
	return s
}

// SetPrivateInstanceID sets the PrivateInstanceID field's value.
func (s *EndpointConfigurationForDescribeEndpointGroupOutput) SetPrivateInstanceID(v string) *EndpointConfigurationForDescribeEndpointGroupOutput {
	s.PrivateInstanceID = &v
	return s
}

// SetType sets the Type field's value.
func (s *EndpointConfigurationForDescribeEndpointGroupOutput) SetType(v string) *EndpointConfigurationForDescribeEndpointGroupOutput {
	s.Type = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *EndpointConfigurationForDescribeEndpointGroupOutput) SetWeight(v int32) *EndpointConfigurationForDescribeEndpointGroupOutput {
	s.Weight = &v
	return s
}

type HealthyConfigForDescribeEndpointGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	HealthCheckEnable *bool `type:"boolean" json:",omitempty"`

	HealthCheckInterval *int32 `type:"int32" json:",omitempty"`

	HealthCheckPort *int32 `type:"int32" json:",omitempty"`

	HealthCheckProtocol *string `type:"string" json:",omitempty"`

	HealthResponseTimeOut *int32 `type:"int32" json:",omitempty"`

	HealthyThreshold *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s HealthyConfigForDescribeEndpointGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthyConfigForDescribeEndpointGroupOutput) GoString() string {
	return s.String()
}

// SetHealthCheckEnable sets the HealthCheckEnable field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthCheckEnable(v bool) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthCheckEnable = &v
	return s
}

// SetHealthCheckInterval sets the HealthCheckInterval field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthCheckInterval(v int32) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthCheckInterval = &v
	return s
}

// SetHealthCheckPort sets the HealthCheckPort field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthCheckPort(v int32) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthCheckPort = &v
	return s
}

// SetHealthCheckProtocol sets the HealthCheckProtocol field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthCheckProtocol(v string) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthCheckProtocol = &v
	return s
}

// SetHealthResponseTimeOut sets the HealthResponseTimeOut field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthResponseTimeOut(v int32) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthResponseTimeOut = &v
	return s
}

// SetHealthyThreshold sets the HealthyThreshold field's value.
func (s *HealthyConfigForDescribeEndpointGroupOutput) SetHealthyThreshold(v int32) *HealthyConfigForDescribeEndpointGroupOutput {
	s.HealthyThreshold = &v
	return s
}

type SourceIPForDescribeEndpointGroupOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IPRange *string `type:"string" json:",omitempty"`

	IPRangeId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SourceIPForDescribeEndpointGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SourceIPForDescribeEndpointGroupOutput) GoString() string {
	return s.String()
}

// SetIPRange sets the IPRange field's value.
func (s *SourceIPForDescribeEndpointGroupOutput) SetIPRange(v string) *SourceIPForDescribeEndpointGroupOutput {
	s.IPRange = &v
	return s
}

// SetIPRangeId sets the IPRangeId field's value.
func (s *SourceIPForDescribeEndpointGroupOutput) SetIPRangeId(v string) *SourceIPForDescribeEndpointGroupOutput {
	s.IPRangeId = &v
	return s
}
