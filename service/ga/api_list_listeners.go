// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ga

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListListenersCommon = "ListListeners"

// ListListenersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListListenersCommon operation. The "output" return
// value will be populated with the ListListenersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListListenersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListListenersCommon Send returns without error.
//
// See ListListenersCommon for more information on using the ListListenersCommon
// API call, and error handling.
//
//    // Example sending a request using the ListListenersCommonRequest method.
//    req, resp := client.ListListenersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListListenersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListListenersCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListListenersCommon API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListListenersCommon for usage and error information.
func (c *GA) ListListenersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListListenersCommonRequest(input)
	return out, req.Send()
}

// ListListenersCommonWithContext is the same as ListListenersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListListenersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListListenersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListListenersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListListeners = "ListListeners"

// ListListenersRequest generates a "volcengine/request.Request" representing the
// client's request for the ListListeners operation. The "output" return
// value will be populated with the ListListenersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListListenersCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListListenersCommon Send returns without error.
//
// See ListListeners for more information on using the ListListeners
// API call, and error handling.
//
//    // Example sending a request using the ListListenersRequest method.
//    req, resp := client.ListListenersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *GA) ListListenersRequest(input *ListListenersInput) (req *request.Request, output *ListListenersOutput) {
	op := &request.Operation{
		Name:       opListListeners,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListListenersInput{}
	}

	output = &ListListenersOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListListeners API operation for GA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for GA's
// API operation ListListeners for usage and error information.
func (c *GA) ListListeners(input *ListListenersInput) (*ListListenersOutput, error) {
	req, out := c.ListListenersRequest(input)
	return out, req.Send()
}

// ListListenersWithContext is the same as ListListeners with the addition of
// the ability to pass a context and additional request options.
//
// See ListListeners for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *GA) ListListenersWithContext(ctx volcengine.Context, input *ListListenersInput, opts ...request.Option) (*ListListenersOutput, error) {
	req, out := c.ListListenersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type FixedSourceReturnForListListenersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s FixedSourceReturnForListListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FixedSourceReturnForListListenersOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *FixedSourceReturnForListListenersOutput) SetEnable(v bool) *FixedSourceReturnForListListenersOutput {
	s.Enable = &v
	return s
}

type IPAccessForListListenersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	FilterList []*string `type:"list" json:",omitempty"`

	FilterType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IPAccessForListListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IPAccessForListListenersOutput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *IPAccessForListListenersOutput) SetEnable(v bool) *IPAccessForListListenersOutput {
	s.Enable = &v
	return s
}

// SetFilterList sets the FilterList field's value.
func (s *IPAccessForListListenersOutput) SetFilterList(v []*string) *IPAccessForListListenersOutput {
	s.FilterList = v
	return s
}

// SetFilterType sets the FilterType field's value.
func (s *IPAccessForListListenersOutput) SetFilterType(v string) *IPAccessForListListenersOutput {
	s.FilterType = &v
	return s
}

type ListListenersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AcceleratorId is a required field
	AcceleratorId *string `type:"string" json:",omitempty" required:"true"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListListenersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListListenersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListListenersInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListListenersInput"}
	if s.AcceleratorId == nil {
		invalidParams.Add(request.NewErrParamRequired("AcceleratorId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *ListListenersInput) SetAcceleratorId(v string) *ListListenersInput {
	s.AcceleratorId = &v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListListenersInput) SetPageNum(v int32) *ListListenersInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListListenersInput) SetPageSize(v int32) *ListListenersInput {
	s.PageSize = &v
	return s
}

// SetState sets the State field's value.
func (s *ListListenersInput) SetState(v string) *ListListenersInput {
	s.State = &v
	return s
}

type ListListenersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Listeners []*ListenerForListListenersOutput `type:"list" json:",omitempty"`

	PageNum *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListListenersOutput) GoString() string {
	return s.String()
}

// SetListeners sets the Listeners field's value.
func (s *ListListenersOutput) SetListeners(v []*ListenerForListListenersOutput) *ListListenersOutput {
	s.Listeners = v
	return s
}

// SetPageNum sets the PageNum field's value.
func (s *ListListenersOutput) SetPageNum(v int32) *ListListenersOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListListenersOutput) SetPageSize(v int32) *ListListenersOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListListenersOutput) SetTotalCount(v int32) *ListListenersOutput {
	s.TotalCount = &v
	return s
}

type ListenerForListListenersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AcceleratorId *string `type:"string" json:",omitempty"`

	AccountID *string `type:"string" json:",omitempty"`

	BackupEndpointGroupIds []*string `type:"list" json:",omitempty"`

	CreateTime *int32 `type:"int32" json:",omitempty"`

	DisableIsolateTCPNullConn *bool `type:"boolean" json:",omitempty"`

	DisablePreConnect *bool `type:"boolean" json:",omitempty"`

	EnableAffinity *bool `type:"boolean" json:",omitempty"`

	EndpointGroupIds []*string `type:"list" json:",omitempty"`

	FixedSourceReturn *FixedSourceReturnForListListenersOutput `type:"structure" json:",omitempty"`

	IPAccess *IPAccessForListListenersOutput `type:"structure" json:",omitempty"`

	ListenerId *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PortRanges []*PortRangeForListListenersOutput `type:"list" json:",omitempty"`

	Protocol *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListenerForListListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListenerForListListenersOutput) GoString() string {
	return s.String()
}

// SetAcceleratorId sets the AcceleratorId field's value.
func (s *ListenerForListListenersOutput) SetAcceleratorId(v string) *ListenerForListListenersOutput {
	s.AcceleratorId = &v
	return s
}

// SetAccountID sets the AccountID field's value.
func (s *ListenerForListListenersOutput) SetAccountID(v string) *ListenerForListListenersOutput {
	s.AccountID = &v
	return s
}

// SetBackupEndpointGroupIds sets the BackupEndpointGroupIds field's value.
func (s *ListenerForListListenersOutput) SetBackupEndpointGroupIds(v []*string) *ListenerForListListenersOutput {
	s.BackupEndpointGroupIds = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ListenerForListListenersOutput) SetCreateTime(v int32) *ListenerForListListenersOutput {
	s.CreateTime = &v
	return s
}

// SetDisableIsolateTCPNullConn sets the DisableIsolateTCPNullConn field's value.
func (s *ListenerForListListenersOutput) SetDisableIsolateTCPNullConn(v bool) *ListenerForListListenersOutput {
	s.DisableIsolateTCPNullConn = &v
	return s
}

// SetDisablePreConnect sets the DisablePreConnect field's value.
func (s *ListenerForListListenersOutput) SetDisablePreConnect(v bool) *ListenerForListListenersOutput {
	s.DisablePreConnect = &v
	return s
}

// SetEnableAffinity sets the EnableAffinity field's value.
func (s *ListenerForListListenersOutput) SetEnableAffinity(v bool) *ListenerForListListenersOutput {
	s.EnableAffinity = &v
	return s
}

// SetEndpointGroupIds sets the EndpointGroupIds field's value.
func (s *ListenerForListListenersOutput) SetEndpointGroupIds(v []*string) *ListenerForListListenersOutput {
	s.EndpointGroupIds = v
	return s
}

// SetFixedSourceReturn sets the FixedSourceReturn field's value.
func (s *ListenerForListListenersOutput) SetFixedSourceReturn(v *FixedSourceReturnForListListenersOutput) *ListenerForListListenersOutput {
	s.FixedSourceReturn = v
	return s
}

// SetIPAccess sets the IPAccess field's value.
func (s *ListenerForListListenersOutput) SetIPAccess(v *IPAccessForListListenersOutput) *ListenerForListListenersOutput {
	s.IPAccess = v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *ListenerForListListenersOutput) SetListenerId(v string) *ListenerForListListenersOutput {
	s.ListenerId = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListenerForListListenersOutput) SetName(v string) *ListenerForListListenersOutput {
	s.Name = &v
	return s
}

// SetPortRanges sets the PortRanges field's value.
func (s *ListenerForListListenersOutput) SetPortRanges(v []*PortRangeForListListenersOutput) *ListenerForListListenersOutput {
	s.PortRanges = v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ListenerForListListenersOutput) SetProtocol(v string) *ListenerForListListenersOutput {
	s.Protocol = &v
	return s
}

// SetState sets the State field's value.
func (s *ListenerForListListenersOutput) SetState(v string) *ListenerForListListenersOutput {
	s.State = &v
	return s
}

type PortRangeForListListenersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FromPort *int32 `type:"int32" json:",omitempty"`

	ToPort *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s PortRangeForListListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PortRangeForListListenersOutput) GoString() string {
	return s.String()
}

// SetFromPort sets the FromPort field's value.
func (s *PortRangeForListListenersOutput) SetFromPort(v int32) *PortRangeForListListenersOutput {
	s.FromPort = &v
	return s
}

// SetToPort sets the ToPort field's value.
func (s *PortRangeForListListenersOutput) SetToPort(v int32) *PortRangeForListListenersOutput {
	s.ToPort = &v
	return s
}
