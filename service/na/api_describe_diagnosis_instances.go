// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package na

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDiagnosisInstancesCommon = "DescribeDiagnosisInstances"

// DescribeDiagnosisInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDiagnosisInstancesCommon operation. The "output" return
// value will be populated with the DescribeDiagnosisInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDiagnosisInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDiagnosisInstancesCommon Send returns without error.
//
// See DescribeDiagnosisInstancesCommon for more information on using the DescribeDiagnosisInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDiagnosisInstancesCommonRequest method.
//    req, resp := client.DescribeDiagnosisInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NA) DescribeDiagnosisInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDiagnosisInstancesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDiagnosisInstancesCommon API operation for NA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NA's
// API operation DescribeDiagnosisInstancesCommon for usage and error information.
func (c *NA) DescribeDiagnosisInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDiagnosisInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeDiagnosisInstancesCommonWithContext is the same as DescribeDiagnosisInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDiagnosisInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NA) DescribeDiagnosisInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDiagnosisInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDiagnosisInstances = "DescribeDiagnosisInstances"

// DescribeDiagnosisInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDiagnosisInstances operation. The "output" return
// value will be populated with the DescribeDiagnosisInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDiagnosisInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDiagnosisInstancesCommon Send returns without error.
//
// See DescribeDiagnosisInstances for more information on using the DescribeDiagnosisInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeDiagnosisInstancesRequest method.
//    req, resp := client.DescribeDiagnosisInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NA) DescribeDiagnosisInstancesRequest(input *DescribeDiagnosisInstancesInput) (req *request.Request, output *DescribeDiagnosisInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeDiagnosisInstances,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDiagnosisInstancesInput{}
	}

	output = &DescribeDiagnosisInstancesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeDiagnosisInstances API operation for NA.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NA's
// API operation DescribeDiagnosisInstances for usage and error information.
func (c *NA) DescribeDiagnosisInstances(input *DescribeDiagnosisInstancesInput) (*DescribeDiagnosisInstancesOutput, error) {
	req, out := c.DescribeDiagnosisInstancesRequest(input)
	return out, req.Send()
}

// DescribeDiagnosisInstancesWithContext is the same as DescribeDiagnosisInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDiagnosisInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NA) DescribeDiagnosisInstancesWithContext(ctx volcengine.Context, input *DescribeDiagnosisInstancesInput, opts ...request.Option) (*DescribeDiagnosisInstancesOutput, error) {
	req, out := c.DescribeDiagnosisInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeDiagnosisInstancesInput struct {
	_ struct{} `type:"structure"`

	ResourceInstanceId *string `type:"string"`

	ResourceType *string `type:"string"`
}

// String returns the string representation
func (s DescribeDiagnosisInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDiagnosisInstancesInput) GoString() string {
	return s.String()
}

// SetResourceInstanceId sets the ResourceInstanceId field's value.
func (s *DescribeDiagnosisInstancesInput) SetResourceInstanceId(v string) *DescribeDiagnosisInstancesInput {
	s.ResourceInstanceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *DescribeDiagnosisInstancesInput) SetResourceType(v string) *DescribeDiagnosisInstancesInput {
	s.ResourceType = &v
	return s
}

type DescribeDiagnosisInstancesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DiagnosisInstances []*DiagnosisInstanceForDescribeDiagnosisInstancesOutput `type:"list"`

	PageNumber *int32 `type:"int32"`

	PageSize *int32 `type:"int32"`

	RequestId *string `type:"string"`

	TotalCount *int32 `type:"int32"`
}

// String returns the string representation
func (s DescribeDiagnosisInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDiagnosisInstancesOutput) GoString() string {
	return s.String()
}

// SetDiagnosisInstances sets the DiagnosisInstances field's value.
func (s *DescribeDiagnosisInstancesOutput) SetDiagnosisInstances(v []*DiagnosisInstanceForDescribeDiagnosisInstancesOutput) *DescribeDiagnosisInstancesOutput {
	s.DiagnosisInstances = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeDiagnosisInstancesOutput) SetPageNumber(v int32) *DescribeDiagnosisInstancesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeDiagnosisInstancesOutput) SetPageSize(v int32) *DescribeDiagnosisInstancesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeDiagnosisInstancesOutput) SetRequestId(v string) *DescribeDiagnosisInstancesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeDiagnosisInstancesOutput) SetTotalCount(v int32) *DescribeDiagnosisInstancesOutput {
	s.TotalCount = &v
	return s
}

type DiagnosisInstanceForDescribeDiagnosisInstancesOutput struct {
	_ struct{} `type:"structure"`

	Count *int32 `type:"int32"`

	CreationTime *string `type:"string"`

	DiagnosisInstanceId *string `type:"string"`

	DiagnosisInstanceStatus *string `type:"string"`

	EipAddress *string `type:"string"`

	ResourceDeleted *bool `type:"boolean"`

	ResourceInstanceId *string `type:"string"`

	ResourceInstanceName *string `type:"string"`

	ResourceRegion *string `type:"string"`

	ResourceType *string `type:"string"`
}

// String returns the string representation
func (s DiagnosisInstanceForDescribeDiagnosisInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DiagnosisInstanceForDescribeDiagnosisInstancesOutput) GoString() string {
	return s.String()
}

// SetCount sets the Count field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetCount(v int32) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.Count = &v
	return s
}

// SetCreationTime sets the CreationTime field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetCreationTime(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.CreationTime = &v
	return s
}

// SetDiagnosisInstanceId sets the DiagnosisInstanceId field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetDiagnosisInstanceId(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.DiagnosisInstanceId = &v
	return s
}

// SetDiagnosisInstanceStatus sets the DiagnosisInstanceStatus field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetDiagnosisInstanceStatus(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.DiagnosisInstanceStatus = &v
	return s
}

// SetEipAddress sets the EipAddress field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetEipAddress(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.EipAddress = &v
	return s
}

// SetResourceDeleted sets the ResourceDeleted field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetResourceDeleted(v bool) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.ResourceDeleted = &v
	return s
}

// SetResourceInstanceId sets the ResourceInstanceId field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetResourceInstanceId(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.ResourceInstanceId = &v
	return s
}

// SetResourceInstanceName sets the ResourceInstanceName field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetResourceInstanceName(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.ResourceInstanceName = &v
	return s
}

// SetResourceRegion sets the ResourceRegion field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetResourceRegion(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.ResourceRegion = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *DiagnosisInstanceForDescribeDiagnosisInstancesOutput) SetResourceType(v string) *DiagnosisInstanceForDescribeDiagnosisInstancesOutput {
	s.ResourceType = &v
	return s
}
