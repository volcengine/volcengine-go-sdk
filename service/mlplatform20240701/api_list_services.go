// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListServicesCommon = "ListServices"

// ListServicesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListServicesCommon operation. The "output" return
// value will be populated with the ListServicesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListServicesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListServicesCommon Send returns without error.
//
// See ListServicesCommon for more information on using the ListServicesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListServicesCommonRequest method.
//    req, resp := client.ListServicesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) ListServicesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListServicesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListServicesCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation ListServicesCommon for usage and error information.
func (c *MLPLATFORM20240701) ListServicesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListServicesCommonRequest(input)
	return out, req.Send()
}

// ListServicesCommonWithContext is the same as ListServicesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListServicesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) ListServicesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListServicesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListServices = "ListServices"

// ListServicesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListServices operation. The "output" return
// value will be populated with the ListServicesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListServicesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListServicesCommon Send returns without error.
//
// See ListServices for more information on using the ListServices
// API call, and error handling.
//
//    // Example sending a request using the ListServicesRequest method.
//    req, resp := client.ListServicesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) ListServicesRequest(input *ListServicesInput) (req *request.Request, output *ListServicesOutput) {
	op := &request.Operation{
		Name:       opListServices,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListServicesInput{}
	}

	output = &ListServicesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListServices API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation ListServices for usage and error information.
func (c *MLPLATFORM20240701) ListServices(input *ListServicesInput) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	return out, req.Send()
}

// ListServicesWithContext is the same as ListServices with the addition of
// the ability to pass a context and additional request options.
//
// See ListServices for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) ListServicesWithContext(ctx volcengine.Context, input *ListServicesInput, opts ...request.Option) (*ListServicesOutput, error) {
	req, out := c.ListServicesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListServicesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	CreatedBy *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Status *StatusForListServicesOutput `type:"structure" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListServicesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListServicesOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListServicesOutput) SetCreateTime(v string) *ItemForListServicesOutput {
	s.CreateTime = &v
	return s
}

// SetCreatedBy sets the CreatedBy field's value.
func (s *ItemForListServicesOutput) SetCreatedBy(v string) *ItemForListServicesOutput {
	s.CreatedBy = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListServicesOutput) SetDescription(v string) *ItemForListServicesOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListServicesOutput) SetId(v string) *ItemForListServicesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListServicesOutput) SetName(v string) *ItemForListServicesOutput {
	s.Name = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForListServicesOutput) SetStatus(v *StatusForListServicesOutput) *ItemForListServicesOutput {
	s.Status = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListServicesOutput) SetUpdateTime(v string) *ItemForListServicesOutput {
	s.UpdateTime = &v
	return s
}

type ListServicesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTimeAfter *string `type:"string" json:",omitempty"`

	CreateTimeBefore *string `type:"string" json:",omitempty"`

	NameContains *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `min:"10" max:"100" type:"int32" json:",omitempty"`

	ProjectName *string `min:"1" max:"64" type:"string" json:",omitempty"`

	SortBy *string `type:"string" json:",omitempty" enum:"EnumOfSortByForListServicesInput"`

	SortOrder *string `type:"string" json:",omitempty" enum:"EnumOfSortOrderForListServicesInput"`

	State *string `type:"string" json:",omitempty" enum:"EnumOfStateForListServicesInput"`

	UpdateTimeAfter *string `type:"string" json:",omitempty"`

	UpdateTimeBefore *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListServicesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListServicesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListServicesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListServicesInput"}
	if s.PageSize != nil && *s.PageSize < 10 {
		invalidParams.Add(request.NewErrParamMinValue("PageSize", 10))
	}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}
	if s.ProjectName != nil && len(*s.ProjectName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("ProjectName", 1))
	}
	if s.ProjectName != nil && len(*s.ProjectName) > 64 {
		invalidParams.Add(request.NewErrParamMaxLen("ProjectName", 64, *s.ProjectName))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCreateTimeAfter sets the CreateTimeAfter field's value.
func (s *ListServicesInput) SetCreateTimeAfter(v string) *ListServicesInput {
	s.CreateTimeAfter = &v
	return s
}

// SetCreateTimeBefore sets the CreateTimeBefore field's value.
func (s *ListServicesInput) SetCreateTimeBefore(v string) *ListServicesInput {
	s.CreateTimeBefore = &v
	return s
}

// SetNameContains sets the NameContains field's value.
func (s *ListServicesInput) SetNameContains(v string) *ListServicesInput {
	s.NameContains = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListServicesInput) SetPageNumber(v int32) *ListServicesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListServicesInput) SetPageSize(v int32) *ListServicesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListServicesInput) SetProjectName(v string) *ListServicesInput {
	s.ProjectName = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *ListServicesInput) SetSortBy(v string) *ListServicesInput {
	s.SortBy = &v
	return s
}

// SetSortOrder sets the SortOrder field's value.
func (s *ListServicesInput) SetSortOrder(v string) *ListServicesInput {
	s.SortOrder = &v
	return s
}

// SetState sets the State field's value.
func (s *ListServicesInput) SetState(v string) *ListServicesInput {
	s.State = &v
	return s
}

// SetUpdateTimeAfter sets the UpdateTimeAfter field's value.
func (s *ListServicesInput) SetUpdateTimeAfter(v string) *ListServicesInput {
	s.UpdateTimeAfter = &v
	return s
}

// SetUpdateTimeBefore sets the UpdateTimeBefore field's value.
func (s *ListServicesInput) SetUpdateTimeBefore(v string) *ListServicesInput {
	s.UpdateTimeBefore = &v
	return s
}

type ListServicesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListServicesOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListServicesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListServicesOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListServicesOutput) SetItems(v []*ItemForListServicesOutput) *ListServicesOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListServicesOutput) SetPageNumber(v int32) *ListServicesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListServicesOutput) SetPageSize(v int32) *ListServicesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListServicesOutput) SetTotalCount(v int32) *ListServicesOutput {
	s.TotalCount = &v
	return s
}

type StatusForListServicesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`

	SecondaryState *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StatusForListServicesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StatusForListServicesOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *StatusForListServicesOutput) SetMessage(v string) *StatusForListServicesOutput {
	s.Message = &v
	return s
}

// SetSecondaryState sets the SecondaryState field's value.
func (s *StatusForListServicesOutput) SetSecondaryState(v string) *StatusForListServicesOutput {
	s.SecondaryState = &v
	return s
}

// SetState sets the State field's value.
func (s *StatusForListServicesOutput) SetState(v string) *StatusForListServicesOutput {
	s.State = &v
	return s
}

const (
	// EnumOfSortByForListServicesInputCreateTime is a EnumOfSortByForListServicesInput enum value
	EnumOfSortByForListServicesInputCreateTime = "CreateTime"
)

const (
	// EnumOfSortOrderForListServicesInputAscend is a EnumOfSortOrderForListServicesInput enum value
	EnumOfSortOrderForListServicesInputAscend = "Ascend"

	// EnumOfSortOrderForListServicesInputDescend is a EnumOfSortOrderForListServicesInput enum value
	EnumOfSortOrderForListServicesInputDescend = "Descend"
)

const (
	// EnumOfStateForListServicesInputNone is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputNone = "None"

	// EnumOfStateForListServicesInputCreating is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputCreating = "Creating"

	// EnumOfStateForListServicesInputInservice is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputInservice = "Inservice"

	// EnumOfStateForListServicesInputStopping is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputStopping = "Stopping"

	// EnumOfStateForListServicesInputStopped is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputStopped = "Stopped"

	// EnumOfStateForListServicesInputDeleting is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputDeleting = "Deleting"

	// EnumOfStateForListServicesInputAbnormal is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputAbnormal = "Abnormal"

	// EnumOfStateForListServicesInputStaging is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputStaging = "Staging"

	// EnumOfStateForListServicesInputDeleted is a EnumOfStateForListServicesInput enum value
	EnumOfStateForListServicesInputDeleted = "Deleted"
)
