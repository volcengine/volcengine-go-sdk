// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mlplatform20240701

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCancelResourceReservationPlanCommon = "CancelResourceReservationPlan"

// CancelResourceReservationPlanCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CancelResourceReservationPlanCommon operation. The "output" return
// value will be populated with the CancelResourceReservationPlanCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CancelResourceReservationPlanCommon Request to send the API call to the service.
// the "output" return value is not valid until after CancelResourceReservationPlanCommon Send returns without error.
//
// See CancelResourceReservationPlanCommon for more information on using the CancelResourceReservationPlanCommon
// API call, and error handling.
//
//    // Example sending a request using the CancelResourceReservationPlanCommonRequest method.
//    req, resp := client.CancelResourceReservationPlanCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) CancelResourceReservationPlanCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCancelResourceReservationPlanCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CancelResourceReservationPlanCommon API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation CancelResourceReservationPlanCommon for usage and error information.
func (c *MLPLATFORM20240701) CancelResourceReservationPlanCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CancelResourceReservationPlanCommonRequest(input)
	return out, req.Send()
}

// CancelResourceReservationPlanCommonWithContext is the same as CancelResourceReservationPlanCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CancelResourceReservationPlanCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) CancelResourceReservationPlanCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CancelResourceReservationPlanCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCancelResourceReservationPlan = "CancelResourceReservationPlan"

// CancelResourceReservationPlanRequest generates a "volcengine/request.Request" representing the
// client's request for the CancelResourceReservationPlan operation. The "output" return
// value will be populated with the CancelResourceReservationPlanCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CancelResourceReservationPlanCommon Request to send the API call to the service.
// the "output" return value is not valid until after CancelResourceReservationPlanCommon Send returns without error.
//
// See CancelResourceReservationPlan for more information on using the CancelResourceReservationPlan
// API call, and error handling.
//
//    // Example sending a request using the CancelResourceReservationPlanRequest method.
//    req, resp := client.CancelResourceReservationPlanRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MLPLATFORM20240701) CancelResourceReservationPlanRequest(input *CancelResourceReservationPlanInput) (req *request.Request, output *CancelResourceReservationPlanOutput) {
	op := &request.Operation{
		Name:       opCancelResourceReservationPlan,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CancelResourceReservationPlanInput{}
	}

	output = &CancelResourceReservationPlanOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CancelResourceReservationPlan API operation for ML_PLATFORM20240701.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ML_PLATFORM20240701's
// API operation CancelResourceReservationPlan for usage and error information.
func (c *MLPLATFORM20240701) CancelResourceReservationPlan(input *CancelResourceReservationPlanInput) (*CancelResourceReservationPlanOutput, error) {
	req, out := c.CancelResourceReservationPlanRequest(input)
	return out, req.Send()
}

// CancelResourceReservationPlanWithContext is the same as CancelResourceReservationPlan with the addition of
// the ability to pass a context and additional request options.
//
// See CancelResourceReservationPlan for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MLPLATFORM20240701) CancelResourceReservationPlanWithContext(ctx volcengine.Context, input *CancelResourceReservationPlanInput, opts ...request.Option) (*CancelResourceReservationPlanOutput, error) {
	req, out := c.CancelResourceReservationPlanRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CancelResourceReservationPlanInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DryRun *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CancelResourceReservationPlanInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelResourceReservationPlanInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CancelResourceReservationPlanInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CancelResourceReservationPlanInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDryRun sets the DryRun field's value.
func (s *CancelResourceReservationPlanInput) SetDryRun(v bool) *CancelResourceReservationPlanInput {
	s.DryRun = &v
	return s
}

// SetId sets the Id field's value.
func (s *CancelResourceReservationPlanInput) SetId(v string) *CancelResourceReservationPlanInput {
	s.Id = &v
	return s
}

type CancelResourceReservationPlanOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CancelResourceReservationPlanOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CancelResourceReservationPlanOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *CancelResourceReservationPlanOutput) SetId(v string) *CancelResourceReservationPlanOutput {
	s.Id = &v
	return s
}
