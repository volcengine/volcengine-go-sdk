// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package milvus

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeAvailableSpecCommon = "DescribeAvailableSpec"

// DescribeAvailableSpecCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAvailableSpecCommon operation. The "output" return
// value will be populated with the DescribeAvailableSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAvailableSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAvailableSpecCommon Send returns without error.
//
// See DescribeAvailableSpecCommon for more information on using the DescribeAvailableSpecCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeAvailableSpecCommonRequest method.
//    req, resp := client.DescribeAvailableSpecCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribeAvailableSpecCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeAvailableSpecCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAvailableSpecCommon API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribeAvailableSpecCommon for usage and error information.
func (c *MILVUS) DescribeAvailableSpecCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeAvailableSpecCommonRequest(input)
	return out, req.Send()
}

// DescribeAvailableSpecCommonWithContext is the same as DescribeAvailableSpecCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAvailableSpecCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribeAvailableSpecCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeAvailableSpecCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeAvailableSpec = "DescribeAvailableSpec"

// DescribeAvailableSpecRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeAvailableSpec operation. The "output" return
// value will be populated with the DescribeAvailableSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeAvailableSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeAvailableSpecCommon Send returns without error.
//
// See DescribeAvailableSpec for more information on using the DescribeAvailableSpec
// API call, and error handling.
//
//    // Example sending a request using the DescribeAvailableSpecRequest method.
//    req, resp := client.DescribeAvailableSpecRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribeAvailableSpecRequest(input *DescribeAvailableSpecInput) (req *request.Request, output *DescribeAvailableSpecOutput) {
	op := &request.Operation{
		Name:       opDescribeAvailableSpec,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeAvailableSpecInput{}
	}

	output = &DescribeAvailableSpecOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeAvailableSpec API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribeAvailableSpec for usage and error information.
func (c *MILVUS) DescribeAvailableSpec(input *DescribeAvailableSpecInput) (*DescribeAvailableSpecOutput, error) {
	req, out := c.DescribeAvailableSpecRequest(input)
	return out, req.Send()
}

// DescribeAvailableSpecWithContext is the same as DescribeAvailableSpec with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeAvailableSpec for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribeAvailableSpecWithContext(ctx volcengine.Context, input *DescribeAvailableSpecInput, opts ...request.Option) (*DescribeAvailableSpecOutput, error) {
	req, out := c.DescribeAvailableSpecRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeAvailableSpecInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAvailableSpecInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAvailableSpecInput) GoString() string {
	return s.String()
}

type DescribeAvailableSpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NodeCuTypeSupportSpecList []*NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput `type:"list" json:",omitempty"`

	NodeSupportSpecList []*NodeSupportSpecListForDescribeAvailableSpecOutput `type:"list" json:",omitempty"`

	SpecList []*SpecListForDescribeAvailableSpecOutput `type:"list" json:",omitempty"`

	ZoneSupportSpecList []*ZoneSupportSpecListForDescribeAvailableSpecOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeAvailableSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeAvailableSpecOutput) GoString() string {
	return s.String()
}

// SetNodeCuTypeSupportSpecList sets the NodeCuTypeSupportSpecList field's value.
func (s *DescribeAvailableSpecOutput) SetNodeCuTypeSupportSpecList(v []*NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) *DescribeAvailableSpecOutput {
	s.NodeCuTypeSupportSpecList = v
	return s
}

// SetNodeSupportSpecList sets the NodeSupportSpecList field's value.
func (s *DescribeAvailableSpecOutput) SetNodeSupportSpecList(v []*NodeSupportSpecListForDescribeAvailableSpecOutput) *DescribeAvailableSpecOutput {
	s.NodeSupportSpecList = v
	return s
}

// SetSpecList sets the SpecList field's value.
func (s *DescribeAvailableSpecOutput) SetSpecList(v []*SpecListForDescribeAvailableSpecOutput) *DescribeAvailableSpecOutput {
	s.SpecList = v
	return s
}

// SetZoneSupportSpecList sets the ZoneSupportSpecList field's value.
func (s *DescribeAvailableSpecOutput) SetZoneSupportSpecList(v []*ZoneSupportSpecListForDescribeAvailableSpecOutput) *DescribeAvailableSpecOutput {
	s.ZoneSupportSpecList = v
	return s
}

type NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MaxNodeNum *float64 `type:"float" json:",omitempty"`

	NodeCUType *string `type:"string" json:",omitempty"`

	SpecName []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) GoString() string {
	return s.String()
}

// SetMaxNodeNum sets the MaxNodeNum field's value.
func (s *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) SetMaxNodeNum(v float64) *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput {
	s.MaxNodeNum = &v
	return s
}

// SetNodeCUType sets the NodeCUType field's value.
func (s *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) SetNodeCUType(v string) *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput {
	s.NodeCUType = &v
	return s
}

// SetSpecName sets the SpecName field's value.
func (s *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput) SetSpecName(v []*string) *NodeCuTypeSupportSpecListForDescribeAvailableSpecOutput {
	s.SpecName = v
	return s
}

type NodeSupportSpecListForDescribeAvailableSpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MaxNodeNum *float64 `type:"float" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty"`

	SpecName []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s NodeSupportSpecListForDescribeAvailableSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodeSupportSpecListForDescribeAvailableSpecOutput) GoString() string {
	return s.String()
}

// SetMaxNodeNum sets the MaxNodeNum field's value.
func (s *NodeSupportSpecListForDescribeAvailableSpecOutput) SetMaxNodeNum(v float64) *NodeSupportSpecListForDescribeAvailableSpecOutput {
	s.MaxNodeNum = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodeSupportSpecListForDescribeAvailableSpecOutput) SetNodeType(v string) *NodeSupportSpecListForDescribeAvailableSpecOutput {
	s.NodeType = &v
	return s
}

// SetSpecName sets the SpecName field's value.
func (s *NodeSupportSpecListForDescribeAvailableSpecOutput) SetSpecName(v []*string) *NodeSupportSpecListForDescribeAvailableSpecOutput {
	s.SpecName = v
	return s
}

type SpecListForDescribeAvailableSpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cpu *float64 `type:"float" json:",omitempty"`

	DisplayName *string `type:"string" json:",omitempty"`

	Memory *float64 `type:"float" json:",omitempty"`

	SpecName *string `type:"string" json:",omitempty"`

	SpecType *string `type:"string" json:",omitempty"`

	TradeCode *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SpecListForDescribeAvailableSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SpecListForDescribeAvailableSpecOutput) GoString() string {
	return s.String()
}

// SetCpu sets the Cpu field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetCpu(v float64) *SpecListForDescribeAvailableSpecOutput {
	s.Cpu = &v
	return s
}

// SetDisplayName sets the DisplayName field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetDisplayName(v string) *SpecListForDescribeAvailableSpecOutput {
	s.DisplayName = &v
	return s
}

// SetMemory sets the Memory field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetMemory(v float64) *SpecListForDescribeAvailableSpecOutput {
	s.Memory = &v
	return s
}

// SetSpecName sets the SpecName field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetSpecName(v string) *SpecListForDescribeAvailableSpecOutput {
	s.SpecName = &v
	return s
}

// SetSpecType sets the SpecType field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetSpecType(v string) *SpecListForDescribeAvailableSpecOutput {
	s.SpecType = &v
	return s
}

// SetTradeCode sets the TradeCode field's value.
func (s *SpecListForDescribeAvailableSpecOutput) SetTradeCode(v string) *SpecListForDescribeAvailableSpecOutput {
	s.TradeCode = &v
	return s
}

type ZoneSupportSpecListForDescribeAvailableSpecOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SpecName []*string `type:"list" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ZoneSupportSpecListForDescribeAvailableSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ZoneSupportSpecListForDescribeAvailableSpecOutput) GoString() string {
	return s.String()
}

// SetSpecName sets the SpecName field's value.
func (s *ZoneSupportSpecListForDescribeAvailableSpecOutput) SetSpecName(v []*string) *ZoneSupportSpecListForDescribeAvailableSpecOutput {
	s.SpecName = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ZoneSupportSpecListForDescribeAvailableSpecOutput) SetZoneId(v string) *ZoneSupportSpecListForDescribeAvailableSpecOutput {
	s.ZoneId = &v
	return s
}
