// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package milvus

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateInstanceCommon = "CreateInstance"

// CreateInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateInstanceCommon operation. The "output" return
// value will be populated with the CreateInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateInstanceCommon Send returns without error.
//
// See CreateInstanceCommon for more information on using the CreateInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateInstanceCommonRequest method.
//    req, resp := client.CreateInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) CreateInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateInstanceCommon API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation CreateInstanceCommon for usage and error information.
func (c *MILVUS) CreateInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateInstanceCommonRequest(input)
	return out, req.Send()
}

// CreateInstanceCommonWithContext is the same as CreateInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) CreateInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateInstance = "CreateInstance"

// CreateInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateInstance operation. The "output" return
// value will be populated with the CreateInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateInstanceCommon Send returns without error.
//
// See CreateInstance for more information on using the CreateInstance
// API call, and error handling.
//
//    // Example sending a request using the CreateInstanceRequest method.
//    req, resp := client.CreateInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) CreateInstanceRequest(input *CreateInstanceInput) (req *request.Request, output *CreateInstanceOutput) {
	op := &request.Operation{
		Name:       opCreateInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateInstanceInput{}
	}

	output = &CreateInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateInstance API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation CreateInstance for usage and error information.
func (c *MILVUS) CreateInstance(input *CreateInstanceInput) (*CreateInstanceOutput, error) {
	req, out := c.CreateInstanceRequest(input)
	return out, req.Send()
}

// CreateInstanceWithContext is the same as CreateInstance with the addition of
// the ability to pass a context and additional request options.
//
// See CreateInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) CreateInstanceWithContext(ctx volcengine.Context, input *CreateInstanceInput, opts ...request.Option) (*CreateInstanceOutput, error) {
	req, out := c.CreateInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeConfigForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ExpireDate *string `type:"string" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ChargeConfigForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeConfigForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeConfigForCreateInstanceInput) SetAutoRenew(v bool) *ChargeConfigForCreateInstanceInput {
	s.AutoRenew = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeConfigForCreateInstanceInput) SetChargeType(v string) *ChargeConfigForCreateInstanceInput {
	s.ChargeType = &v
	return s
}

// SetExpireDate sets the ExpireDate field's value.
func (s *ChargeConfigForCreateInstanceInput) SetExpireDate(v string) *ChargeConfigForCreateInstanceInput {
	s.ExpireDate = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeConfigForCreateInstanceInput) SetPeriod(v int32) *ChargeConfigForCreateInstanceInput {
	s.Period = &v
	return s
}

type ComponentSpecListForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CpuNum *float64 `type:"float" json:",omitempty"`

	MemSize *float64 `type:"float" json:",omitempty"`

	NodeCUType *string `type:"string" json:",omitempty"`

	NodeNum *float64 `type:"float" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty"`

	ResourceSpecName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ComponentSpecListForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ComponentSpecListForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetCpuNum sets the CpuNum field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetCpuNum(v float64) *ComponentSpecListForCreateInstanceInput {
	s.CpuNum = &v
	return s
}

// SetMemSize sets the MemSize field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetMemSize(v float64) *ComponentSpecListForCreateInstanceInput {
	s.MemSize = &v
	return s
}

// SetNodeCUType sets the NodeCUType field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetNodeCUType(v string) *ComponentSpecListForCreateInstanceInput {
	s.NodeCUType = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetNodeNum(v float64) *ComponentSpecListForCreateInstanceInput {
	s.NodeNum = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetNodeType(v string) *ComponentSpecListForCreateInstanceInput {
	s.NodeType = &v
	return s
}

// SetResourceSpecName sets the ResourceSpecName field's value.
func (s *ComponentSpecListForCreateInstanceInput) SetResourceSpecName(v string) *ComponentSpecListForCreateInstanceInput {
	s.ResourceSpecName = &v
	return s
}

type CreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeConfig *ChargeConfigForCreateInstanceInput `type:"structure" json:",omitempty"`

	DeleteProtectEnabled *bool `type:"boolean" json:",omitempty"`

	InstanceConfiguration *InstanceConfigurationForCreateInstanceInput `type:"structure" json:",omitempty"`

	NetworkConfig *NetworkConfigForCreateInstanceInput `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	// Region is a required field
	Region *string `type:"string" json:",omitempty" required:"true"`

	Tags []*TagForCreateInstanceInput `type:"list" json:",omitempty"`

	Zones []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateInstanceInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateInstanceInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateInstanceInput"}
	if s.Region == nil {
		invalidParams.Add(request.NewErrParamRequired("Region"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetChargeConfig sets the ChargeConfig field's value.
func (s *CreateInstanceInput) SetChargeConfig(v *ChargeConfigForCreateInstanceInput) *CreateInstanceInput {
	s.ChargeConfig = v
	return s
}

// SetDeleteProtectEnabled sets the DeleteProtectEnabled field's value.
func (s *CreateInstanceInput) SetDeleteProtectEnabled(v bool) *CreateInstanceInput {
	s.DeleteProtectEnabled = &v
	return s
}

// SetInstanceConfiguration sets the InstanceConfiguration field's value.
func (s *CreateInstanceInput) SetInstanceConfiguration(v *InstanceConfigurationForCreateInstanceInput) *CreateInstanceInput {
	s.InstanceConfiguration = v
	return s
}

// SetNetworkConfig sets the NetworkConfig field's value.
func (s *CreateInstanceInput) SetNetworkConfig(v *NetworkConfigForCreateInstanceInput) *CreateInstanceInput {
	s.NetworkConfig = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateInstanceInput) SetProjectName(v string) *CreateInstanceInput {
	s.ProjectName = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *CreateInstanceInput) SetRegion(v string) *CreateInstanceInput {
	s.Region = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateInstanceInput) SetTags(v []*TagForCreateInstanceInput) *CreateInstanceInput {
	s.Tags = v
	return s
}

// SetZones sets the Zones field's value.
func (s *CreateInstanceInput) SetZones(v []*string) *CreateInstanceInput {
	s.Zones = v
	return s
}

type CreateInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	OrderID *string `type:"string" json:",omitempty"`

	OrderNO *string `type:"string" json:",omitempty"`

	TradeConfigId *string `type:"string" json:",omitempty"`

	TradeEnabled *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s CreateInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateInstanceOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *CreateInstanceOutput) SetInstanceId(v string) *CreateInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetOrderID sets the OrderID field's value.
func (s *CreateInstanceOutput) SetOrderID(v string) *CreateInstanceOutput {
	s.OrderID = &v
	return s
}

// SetOrderNO sets the OrderNO field's value.
func (s *CreateInstanceOutput) SetOrderNO(v string) *CreateInstanceOutput {
	s.OrderNO = &v
	return s
}

// SetTradeConfigId sets the TradeConfigId field's value.
func (s *CreateInstanceOutput) SetTradeConfigId(v string) *CreateInstanceOutput {
	s.TradeConfigId = &v
	return s
}

// SetTradeEnabled sets the TradeEnabled field's value.
func (s *CreateInstanceOutput) SetTradeEnabled(v bool) *CreateInstanceOutput {
	s.TradeEnabled = &v
	return s
}

type InstanceConfigurationForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdminPassword *string `type:"string" json:",omitempty"`

	ComponentSpecList []*ComponentSpecListForCreateInstanceInput `type:"list" json:",omitempty"`

	HaEnabled *bool `type:"boolean" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceVersion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InstanceConfigurationForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceConfigurationForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetAdminPassword sets the AdminPassword field's value.
func (s *InstanceConfigurationForCreateInstanceInput) SetAdminPassword(v string) *InstanceConfigurationForCreateInstanceInput {
	s.AdminPassword = &v
	return s
}

// SetComponentSpecList sets the ComponentSpecList field's value.
func (s *InstanceConfigurationForCreateInstanceInput) SetComponentSpecList(v []*ComponentSpecListForCreateInstanceInput) *InstanceConfigurationForCreateInstanceInput {
	s.ComponentSpecList = v
	return s
}

// SetHaEnabled sets the HaEnabled field's value.
func (s *InstanceConfigurationForCreateInstanceInput) SetHaEnabled(v bool) *InstanceConfigurationForCreateInstanceInput {
	s.HaEnabled = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceConfigurationForCreateInstanceInput) SetInstanceName(v string) *InstanceConfigurationForCreateInstanceInput {
	s.InstanceName = &v
	return s
}

// SetInstanceVersion sets the InstanceVersion field's value.
func (s *InstanceConfigurationForCreateInstanceInput) SetInstanceVersion(v string) *InstanceConfigurationForCreateInstanceInput {
	s.InstanceVersion = &v
	return s
}

type NetworkConfigForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InnerEndpointEnabled *bool `type:"boolean" json:",omitempty"`

	SubnetInfo *SubnetInfoForCreateInstanceInput `type:"structure" json:",omitempty"`

	VpcInfo *VpcInfoForCreateInstanceInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s NetworkConfigForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkConfigForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetInnerEndpointEnabled sets the InnerEndpointEnabled field's value.
func (s *NetworkConfigForCreateInstanceInput) SetInnerEndpointEnabled(v bool) *NetworkConfigForCreateInstanceInput {
	s.InnerEndpointEnabled = &v
	return s
}

// SetSubnetInfo sets the SubnetInfo field's value.
func (s *NetworkConfigForCreateInstanceInput) SetSubnetInfo(v *SubnetInfoForCreateInstanceInput) *NetworkConfigForCreateInstanceInput {
	s.SubnetInfo = v
	return s
}

// SetVpcInfo sets the VpcInfo field's value.
func (s *NetworkConfigForCreateInstanceInput) SetVpcInfo(v *VpcInfoForCreateInstanceInput) *NetworkConfigForCreateInstanceInput {
	s.VpcInfo = v
	return s
}

type SubnetInfoForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	SubnetName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SubnetInfoForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubnetInfoForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetSubnetId sets the SubnetId field's value.
func (s *SubnetInfoForCreateInstanceInput) SetSubnetId(v string) *SubnetInfoForCreateInstanceInput {
	s.SubnetId = &v
	return s
}

// SetSubnetName sets the SubnetName field's value.
func (s *SubnetInfoForCreateInstanceInput) SetSubnetName(v string) *SubnetInfoForCreateInstanceInput {
	s.SubnetName = &v
	return s
}

type TagForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateInstanceInput) SetKey(v string) *TagForCreateInstanceInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateInstanceInput) SetValue(v string) *TagForCreateInstanceInput {
	s.Value = &v
	return s
}

type VpcInfoForCreateInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VpcInfoForCreateInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VpcInfoForCreateInstanceInput) GoString() string {
	return s.String()
}

// SetVpcId sets the VpcId field's value.
func (s *VpcInfoForCreateInstanceInput) SetVpcId(v string) *VpcInfoForCreateInstanceInput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *VpcInfoForCreateInstanceInput) SetVpcName(v string) *VpcInfoForCreateInstanceInput {
	s.VpcName = &v
	return s
}
