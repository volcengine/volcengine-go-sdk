// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package milvus

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribePriceCommon = "DescribePrice"

// DescribePriceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribePriceCommon operation. The "output" return
// value will be populated with the DescribePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePriceCommon Send returns without error.
//
// See DescribePriceCommon for more information on using the DescribePriceCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribePriceCommonRequest method.
//    req, resp := client.DescribePriceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribePriceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribePriceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribePriceCommon API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribePriceCommon for usage and error information.
func (c *MILVUS) DescribePriceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribePriceCommonRequest(input)
	return out, req.Send()
}

// DescribePriceCommonWithContext is the same as DescribePriceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePriceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribePriceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribePriceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribePrice = "DescribePrice"

// DescribePriceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribePrice operation. The "output" return
// value will be populated with the DescribePriceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribePriceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribePriceCommon Send returns without error.
//
// See DescribePrice for more information on using the DescribePrice
// API call, and error handling.
//
//    // Example sending a request using the DescribePriceRequest method.
//    req, resp := client.DescribePriceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribePriceRequest(input *DescribePriceInput) (req *request.Request, output *DescribePriceOutput) {
	op := &request.Operation{
		Name:       opDescribePrice,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribePriceInput{}
	}

	output = &DescribePriceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribePrice API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribePrice for usage and error information.
func (c *MILVUS) DescribePrice(input *DescribePriceInput) (*DescribePriceOutput, error) {
	req, out := c.DescribePriceRequest(input)
	return out, req.Send()
}

// DescribePriceWithContext is the same as DescribePrice with the addition of
// the ability to pass a context and additional request options.
//
// See DescribePrice for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribePriceWithContext(ctx volcengine.Context, input *DescribePriceInput, opts ...request.Option) (*DescribePriceOutput, error) {
	req, out := c.DescribePriceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeConfigForDescribePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ExpireDate *string `type:"string" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ChargeConfigForDescribePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeConfigForDescribePriceInput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeConfigForDescribePriceInput) SetAutoRenew(v bool) *ChargeConfigForDescribePriceInput {
	s.AutoRenew = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeConfigForDescribePriceInput) SetChargeType(v string) *ChargeConfigForDescribePriceInput {
	s.ChargeType = &v
	return s
}

// SetExpireDate sets the ExpireDate field's value.
func (s *ChargeConfigForDescribePriceInput) SetExpireDate(v string) *ChargeConfigForDescribePriceInput {
	s.ExpireDate = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeConfigForDescribePriceInput) SetPeriod(v int32) *ChargeConfigForDescribePriceInput {
	s.Period = &v
	return s
}

type ComponentSpecListForDescribePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CpuNum *float64 `type:"float" json:",omitempty"`

	MemSize *float64 `type:"float" json:",omitempty"`

	NodeCUType *string `type:"string" json:",omitempty"`

	NodeNum *float64 `type:"float" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ComponentSpecListForDescribePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ComponentSpecListForDescribePriceInput) GoString() string {
	return s.String()
}

// SetCpuNum sets the CpuNum field's value.
func (s *ComponentSpecListForDescribePriceInput) SetCpuNum(v float64) *ComponentSpecListForDescribePriceInput {
	s.CpuNum = &v
	return s
}

// SetMemSize sets the MemSize field's value.
func (s *ComponentSpecListForDescribePriceInput) SetMemSize(v float64) *ComponentSpecListForDescribePriceInput {
	s.MemSize = &v
	return s
}

// SetNodeCUType sets the NodeCUType field's value.
func (s *ComponentSpecListForDescribePriceInput) SetNodeCUType(v string) *ComponentSpecListForDescribePriceInput {
	s.NodeCUType = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *ComponentSpecListForDescribePriceInput) SetNodeNum(v float64) *ComponentSpecListForDescribePriceInput {
	s.NodeNum = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *ComponentSpecListForDescribePriceInput) SetNodeType(v string) *ComponentSpecListForDescribePriceInput {
	s.NodeType = &v
	return s
}

type DescribePriceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeConfig *ChargeConfigForDescribePriceInput `type:"structure" json:",omitempty"`

	ComponentSpecList []*ComponentSpecListForDescribePriceInput `type:"list" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribePriceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePriceInput) GoString() string {
	return s.String()
}

// SetChargeConfig sets the ChargeConfig field's value.
func (s *DescribePriceInput) SetChargeConfig(v *ChargeConfigForDescribePriceInput) *DescribePriceInput {
	s.ChargeConfig = v
	return s
}

// SetComponentSpecList sets the ComponentSpecList field's value.
func (s *DescribePriceInput) SetComponentSpecList(v []*ComponentSpecListForDescribePriceInput) *DescribePriceInput {
	s.ComponentSpecList = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribePriceInput) SetInstanceId(v string) *DescribePriceInput {
	s.InstanceId = &v
	return s
}

type DescribePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Currency *string `type:"string" json:",omitempty"`

	DiscountAmount *float64 `type:"float" json:",omitempty"`

	NodePriceList []*NodePriceListForDescribePriceOutput `type:"list" json:",omitempty"`

	OriginalAmount *float64 `type:"float" json:",omitempty"`

	PayableAmount *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s DescribePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribePriceOutput) GoString() string {
	return s.String()
}

// SetCurrency sets the Currency field's value.
func (s *DescribePriceOutput) SetCurrency(v string) *DescribePriceOutput {
	s.Currency = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *DescribePriceOutput) SetDiscountAmount(v float64) *DescribePriceOutput {
	s.DiscountAmount = &v
	return s
}

// SetNodePriceList sets the NodePriceList field's value.
func (s *DescribePriceOutput) SetNodePriceList(v []*NodePriceListForDescribePriceOutput) *DescribePriceOutput {
	s.NodePriceList = v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *DescribePriceOutput) SetOriginalAmount(v float64) *DescribePriceOutput {
	s.OriginalAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *DescribePriceOutput) SetPayableAmount(v float64) *DescribePriceOutput {
	s.PayableAmount = &v
	return s
}

type NodePriceListForDescribePriceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeItemCode *string `type:"string" json:",omitempty"`

	ChargeItemNum *float64 `type:"float" json:",omitempty"`

	DiscountAmount *float64 `type:"float" json:",omitempty"`

	NodeCUType *string `type:"string" json:",omitempty"`

	NodeNum *float64 `type:"float" json:",omitempty"`

	NodeType *string `type:"string" json:",omitempty"`

	OriginalAmount *float64 `type:"float" json:",omitempty"`

	PayableAmount *float64 `type:"float" json:",omitempty"`
}

// String returns the string representation
func (s NodePriceListForDescribePriceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NodePriceListForDescribePriceOutput) GoString() string {
	return s.String()
}

// SetChargeItemCode sets the ChargeItemCode field's value.
func (s *NodePriceListForDescribePriceOutput) SetChargeItemCode(v string) *NodePriceListForDescribePriceOutput {
	s.ChargeItemCode = &v
	return s
}

// SetChargeItemNum sets the ChargeItemNum field's value.
func (s *NodePriceListForDescribePriceOutput) SetChargeItemNum(v float64) *NodePriceListForDescribePriceOutput {
	s.ChargeItemNum = &v
	return s
}

// SetDiscountAmount sets the DiscountAmount field's value.
func (s *NodePriceListForDescribePriceOutput) SetDiscountAmount(v float64) *NodePriceListForDescribePriceOutput {
	s.DiscountAmount = &v
	return s
}

// SetNodeCUType sets the NodeCUType field's value.
func (s *NodePriceListForDescribePriceOutput) SetNodeCUType(v string) *NodePriceListForDescribePriceOutput {
	s.NodeCUType = &v
	return s
}

// SetNodeNum sets the NodeNum field's value.
func (s *NodePriceListForDescribePriceOutput) SetNodeNum(v float64) *NodePriceListForDescribePriceOutput {
	s.NodeNum = &v
	return s
}

// SetNodeType sets the NodeType field's value.
func (s *NodePriceListForDescribePriceOutput) SetNodeType(v string) *NodePriceListForDescribePriceOutput {
	s.NodeType = &v
	return s
}

// SetOriginalAmount sets the OriginalAmount field's value.
func (s *NodePriceListForDescribePriceOutput) SetOriginalAmount(v float64) *NodePriceListForDescribePriceOutput {
	s.OriginalAmount = &v
	return s
}

// SetPayableAmount sets the PayableAmount field's value.
func (s *NodePriceListForDescribePriceOutput) SetPayableAmount(v float64) *NodePriceListForDescribePriceOutput {
	s.PayableAmount = &v
	return s
}
