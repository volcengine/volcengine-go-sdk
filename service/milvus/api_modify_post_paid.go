// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package milvus

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyPostPaidCommon = "ModifyPostPaid"

// ModifyPostPaidCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyPostPaidCommon operation. The "output" return
// value will be populated with the ModifyPostPaidCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyPostPaidCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyPostPaidCommon Send returns without error.
//
// See ModifyPostPaidCommon for more information on using the ModifyPostPaidCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyPostPaidCommonRequest method.
//    req, resp := client.ModifyPostPaidCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) ModifyPostPaidCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyPostPaidCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyPostPaidCommon API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation ModifyPostPaidCommon for usage and error information.
func (c *MILVUS) ModifyPostPaidCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyPostPaidCommonRequest(input)
	return out, req.Send()
}

// ModifyPostPaidCommonWithContext is the same as ModifyPostPaidCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyPostPaidCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) ModifyPostPaidCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyPostPaidCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyPostPaid = "ModifyPostPaid"

// ModifyPostPaidRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyPostPaid operation. The "output" return
// value will be populated with the ModifyPostPaidCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyPostPaidCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyPostPaidCommon Send returns without error.
//
// See ModifyPostPaid for more information on using the ModifyPostPaid
// API call, and error handling.
//
//    // Example sending a request using the ModifyPostPaidRequest method.
//    req, resp := client.ModifyPostPaidRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) ModifyPostPaidRequest(input *ModifyPostPaidInput) (req *request.Request, output *ModifyPostPaidOutput) {
	op := &request.Operation{
		Name:       opModifyPostPaid,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyPostPaidInput{}
	}

	output = &ModifyPostPaidOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyPostPaid API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation ModifyPostPaid for usage and error information.
func (c *MILVUS) ModifyPostPaid(input *ModifyPostPaidInput) (*ModifyPostPaidOutput, error) {
	req, out := c.ModifyPostPaidRequest(input)
	return out, req.Send()
}

// ModifyPostPaidWithContext is the same as ModifyPostPaid with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyPostPaid for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) ModifyPostPaidWithContext(ctx volcengine.Context, input *ModifyPostPaidInput, opts ...request.Option) (*ModifyPostPaidOutput, error) {
	req, out := c.ModifyPostPaidRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyPostPaidInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AutoRenew is a required field
	AutoRenew *bool `type:"boolean" json:",omitempty" required:"true"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	// Period is a required field
	Period *int32 `type:"int32" json:",omitempty" required:"true"`

	// Times is a required field
	Times *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ModifyPostPaidInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyPostPaidInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyPostPaidInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyPostPaidInput"}
	if s.AutoRenew == nil {
		invalidParams.Add(request.NewErrParamRequired("AutoRenew"))
	}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}
	if s.Period == nil {
		invalidParams.Add(request.NewErrParamRequired("Period"))
	}
	if s.Times == nil {
		invalidParams.Add(request.NewErrParamRequired("Times"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ModifyPostPaidInput) SetAutoRenew(v bool) *ModifyPostPaidInput {
	s.AutoRenew = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyPostPaidInput) SetInstanceId(v string) *ModifyPostPaidInput {
	s.InstanceId = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ModifyPostPaidInput) SetPeriod(v int32) *ModifyPostPaidInput {
	s.Period = &v
	return s
}

// SetTimes sets the Times field's value.
func (s *ModifyPostPaidInput) SetTimes(v int32) *ModifyPostPaidInput {
	s.Times = &v
	return s
}

type ModifyPostPaidOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceId *string `type:"string" json:",omitempty"`

	OrderID *string `type:"string" json:",omitempty"`

	OrderNO *string `type:"string" json:",omitempty"`

	ParentInstanceId *string `type:"string" json:",omitempty"`

	TradeConfigId *string `type:"string" json:",omitempty"`

	TradeEnabled *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ModifyPostPaidOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyPostPaidOutput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyPostPaidOutput) SetInstanceId(v string) *ModifyPostPaidOutput {
	s.InstanceId = &v
	return s
}

// SetOrderID sets the OrderID field's value.
func (s *ModifyPostPaidOutput) SetOrderID(v string) *ModifyPostPaidOutput {
	s.OrderID = &v
	return s
}

// SetOrderNO sets the OrderNO field's value.
func (s *ModifyPostPaidOutput) SetOrderNO(v string) *ModifyPostPaidOutput {
	s.OrderNO = &v
	return s
}

// SetParentInstanceId sets the ParentInstanceId field's value.
func (s *ModifyPostPaidOutput) SetParentInstanceId(v string) *ModifyPostPaidOutput {
	s.ParentInstanceId = &v
	return s
}

// SetTradeConfigId sets the TradeConfigId field's value.
func (s *ModifyPostPaidOutput) SetTradeConfigId(v string) *ModifyPostPaidOutput {
	s.TradeConfigId = &v
	return s
}

// SetTradeEnabled sets the TradeEnabled field's value.
func (s *ModifyPostPaidOutput) SetTradeEnabled(v bool) *ModifyPostPaidOutput {
	s.TradeEnabled = &v
	return s
}
