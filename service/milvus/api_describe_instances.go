// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package milvus

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeInstancesCommon = "DescribeInstances"

// DescribeInstancesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstancesCommon operation. The "output" return
// value will be populated with the DescribeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesCommon Send returns without error.
//
// See DescribeInstancesCommon for more information on using the DescribeInstancesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstancesCommonRequest method.
//    req, resp := client.DescribeInstancesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribeInstancesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeInstancesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstancesCommon API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribeInstancesCommon for usage and error information.
func (c *MILVUS) DescribeInstancesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesCommonRequest(input)
	return out, req.Send()
}

// DescribeInstancesCommonWithContext is the same as DescribeInstancesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstancesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribeInstancesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeInstancesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstances = "DescribeInstances"

// DescribeInstancesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstances operation. The "output" return
// value will be populated with the DescribeInstancesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstancesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstancesCommon Send returns without error.
//
// See DescribeInstances for more information on using the DescribeInstances
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstancesRequest method.
//    req, resp := client.DescribeInstancesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MILVUS) DescribeInstancesRequest(input *DescribeInstancesInput) (req *request.Request, output *DescribeInstancesOutput) {
	op := &request.Operation{
		Name:       opDescribeInstances,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstancesInput{}
	}

	output = &DescribeInstancesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstances API operation for MILVUS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MILVUS's
// API operation DescribeInstances for usage and error information.
func (c *MILVUS) DescribeInstances(input *DescribeInstancesInput) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	return out, req.Send()
}

// DescribeInstancesWithContext is the same as DescribeInstances with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstances for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MILVUS) DescribeInstancesWithContext(ctx volcengine.Context, input *DescribeInstancesInput, opts ...request.Option) (*DescribeInstancesOutput, error) {
	req, out := c.DescribeInstancesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ChargeConfigForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ExpireDate *string `type:"string" json:",omitempty"`

	Period *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ChargeConfigForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ChargeConfigForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *ChargeConfigForDescribeInstancesOutput) SetAutoRenew(v bool) *ChargeConfigForDescribeInstancesOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *ChargeConfigForDescribeInstancesOutput) SetChargeType(v string) *ChargeConfigForDescribeInstancesOutput {
	s.ChargeType = &v
	return s
}

// SetExpireDate sets the ExpireDate field's value.
func (s *ChargeConfigForDescribeInstancesOutput) SetExpireDate(v string) *ChargeConfigForDescribeInstancesOutput {
	s.ExpireDate = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ChargeConfigForDescribeInstancesOutput) SetPeriod(v int32) *ChargeConfigForDescribeInstancesOutput {
	s.Period = &v
	return s
}

type DescribeInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	TagFilters []*TagFilterForDescribeInstancesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstancesInput) SetInstanceId(v string) *DescribeInstancesInput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeInstancesInput) SetInstanceName(v string) *DescribeInstancesInput {
	s.InstanceName = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeInstancesInput) SetPageNumber(v int32) *DescribeInstancesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeInstancesInput) SetPageSize(v int32) *DescribeInstancesInput {
	s.PageSize = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeInstancesInput) SetProjectName(v string) *DescribeInstancesInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeInstancesInput) SetTagFilters(v []*TagFilterForDescribeInstancesInput) *DescribeInstancesInput {
	s.TagFilters = v
	return s
}

type DescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InstanceInfos []*InstanceInfoForDescribeInstancesOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	Size *int32 `type:"int32" json:",omitempty"`

	Total *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetInstanceInfos sets the InstanceInfos field's value.
func (s *DescribeInstancesOutput) SetInstanceInfos(v []*InstanceInfoForDescribeInstancesOutput) *DescribeInstancesOutput {
	s.InstanceInfos = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeInstancesOutput) SetPageNumber(v int32) *DescribeInstancesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeInstancesOutput) SetPageSize(v int32) *DescribeInstancesOutput {
	s.PageSize = &v
	return s
}

// SetSize sets the Size field's value.
func (s *DescribeInstancesOutput) SetSize(v int32) *DescribeInstancesOutput {
	s.Size = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *DescribeInstancesOutput) SetTotal(v int32) *DescribeInstancesOutput {
	s.Total = &v
	return s
}

type InstanceInfoForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ChargeConfig *ChargeConfigForDescribeInstancesOutput `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DeleteProtectEnabled *bool `type:"boolean" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceVersion *string `type:"string" json:",omitempty"`

	NetworkConfig *NetworkConfigForDescribeInstancesOutput `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Region *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeInstancesOutput `type:"list" json:",omitempty"`

	Zones []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s InstanceInfoForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InstanceInfoForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetChargeConfig sets the ChargeConfig field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetChargeConfig(v *ChargeConfigForDescribeInstancesOutput) *InstanceInfoForDescribeInstancesOutput {
	s.ChargeConfig = v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetCreateTime(v string) *InstanceInfoForDescribeInstancesOutput {
	s.CreateTime = &v
	return s
}

// SetDeleteProtectEnabled sets the DeleteProtectEnabled field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetDeleteProtectEnabled(v bool) *InstanceInfoForDescribeInstancesOutput {
	s.DeleteProtectEnabled = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetInstanceId(v string) *InstanceInfoForDescribeInstancesOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetInstanceName(v string) *InstanceInfoForDescribeInstancesOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceVersion sets the InstanceVersion field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetInstanceVersion(v string) *InstanceInfoForDescribeInstancesOutput {
	s.InstanceVersion = &v
	return s
}

// SetNetworkConfig sets the NetworkConfig field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetNetworkConfig(v *NetworkConfigForDescribeInstancesOutput) *InstanceInfoForDescribeInstancesOutput {
	s.NetworkConfig = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetProjectName(v string) *InstanceInfoForDescribeInstancesOutput {
	s.ProjectName = &v
	return s
}

// SetRegion sets the Region field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetRegion(v string) *InstanceInfoForDescribeInstancesOutput {
	s.Region = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetStatus(v string) *InstanceInfoForDescribeInstancesOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetTags(v []*TagForDescribeInstancesOutput) *InstanceInfoForDescribeInstancesOutput {
	s.Tags = v
	return s
}

// SetZones sets the Zones field's value.
func (s *InstanceInfoForDescribeInstancesOutput) SetZones(v []*string) *InstanceInfoForDescribeInstancesOutput {
	s.Zones = v
	return s
}

type NetworkConfigForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InnerEndpointEnabled *bool `type:"boolean" json:",omitempty"`

	SubnetInfo *SubnetInfoForDescribeInstancesOutput `type:"structure" json:",omitempty"`

	VpcInfo *VpcInfoForDescribeInstancesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s NetworkConfigForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NetworkConfigForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetInnerEndpointEnabled sets the InnerEndpointEnabled field's value.
func (s *NetworkConfigForDescribeInstancesOutput) SetInnerEndpointEnabled(v bool) *NetworkConfigForDescribeInstancesOutput {
	s.InnerEndpointEnabled = &v
	return s
}

// SetSubnetInfo sets the SubnetInfo field's value.
func (s *NetworkConfigForDescribeInstancesOutput) SetSubnetInfo(v *SubnetInfoForDescribeInstancesOutput) *NetworkConfigForDescribeInstancesOutput {
	s.SubnetInfo = v
	return s
}

// SetVpcInfo sets the VpcInfo field's value.
func (s *NetworkConfigForDescribeInstancesOutput) SetVpcInfo(v *VpcInfoForDescribeInstancesOutput) *NetworkConfigForDescribeInstancesOutput {
	s.VpcInfo = v
	return s
}

type SubnetInfoForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	SubnetName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SubnetInfoForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubnetInfoForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetSubnetId sets the SubnetId field's value.
func (s *SubnetInfoForDescribeInstancesOutput) SetSubnetId(v string) *SubnetInfoForDescribeInstancesOutput {
	s.SubnetId = &v
	return s
}

// SetSubnetName sets the SubnetName field's value.
func (s *SubnetInfoForDescribeInstancesOutput) SetSubnetName(v string) *SubnetInfoForDescribeInstancesOutput {
	s.SubnetName = &v
	return s
}

type TagFilterForDescribeInstancesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Values []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TagFilterForDescribeInstancesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeInstancesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeInstancesInput) SetKey(v string) *TagFilterForDescribeInstancesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeInstancesInput) SetValues(v []*string) *TagFilterForDescribeInstancesInput {
	s.Values = v
	return s
}

type TagForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeInstancesOutput) SetKey(v string) *TagForDescribeInstancesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeInstancesOutput) SetValue(v string) *TagForDescribeInstancesOutput {
	s.Value = &v
	return s
}

type VpcInfoForDescribeInstancesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VpcInfoForDescribeInstancesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VpcInfoForDescribeInstancesOutput) GoString() string {
	return s.String()
}

// SetVpcId sets the VpcId field's value.
func (s *VpcInfoForDescribeInstancesOutput) SetVpcId(v string) *VpcInfoForDescribeInstancesOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *VpcInfoForDescribeInstancesOutput) SetVpcName(v string) *VpcInfoForDescribeInstancesOutput {
	s.VpcName = &v
	return s
}
