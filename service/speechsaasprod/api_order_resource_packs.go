// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opOrderResourcePacksCommon = "OrderResourcePacks"

// OrderResourcePacksCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the OrderResourcePacksCommon operation. The "output" return
// value will be populated with the OrderResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned OrderResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after OrderResourcePacksCommon Send returns without error.
//
// See OrderResourcePacksCommon for more information on using the OrderResourcePacksCommon
// API call, and error handling.
//
//    // Example sending a request using the OrderResourcePacksCommonRequest method.
//    req, resp := client.OrderResourcePacksCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) OrderResourcePacksCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opOrderResourcePacksCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// OrderResourcePacksCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation OrderResourcePacksCommon for usage and error information.
func (c *SPEECHSAASPROD) OrderResourcePacksCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.OrderResourcePacksCommonRequest(input)
	return out, req.Send()
}

// OrderResourcePacksCommonWithContext is the same as OrderResourcePacksCommon with the addition of
// the ability to pass a context and additional request options.
//
// See OrderResourcePacksCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) OrderResourcePacksCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.OrderResourcePacksCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opOrderResourcePacks = "OrderResourcePacks"

// OrderResourcePacksRequest generates a "volcengine/request.Request" representing the
// client's request for the OrderResourcePacks operation. The "output" return
// value will be populated with the OrderResourcePacksCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned OrderResourcePacksCommon Request to send the API call to the service.
// the "output" return value is not valid until after OrderResourcePacksCommon Send returns without error.
//
// See OrderResourcePacks for more information on using the OrderResourcePacks
// API call, and error handling.
//
//    // Example sending a request using the OrderResourcePacksRequest method.
//    req, resp := client.OrderResourcePacksRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) OrderResourcePacksRequest(input *OrderResourcePacksInput) (req *request.Request, output *OrderResourcePacksOutput) {
	op := &request.Operation{
		Name:       opOrderResourcePacks,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &OrderResourcePacksInput{}
	}

	output = &OrderResourcePacksOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// OrderResourcePacks API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation OrderResourcePacks for usage and error information.
func (c *SPEECHSAASPROD) OrderResourcePacks(input *OrderResourcePacksInput) (*OrderResourcePacksOutput, error) {
	req, out := c.OrderResourcePacksRequest(input)
	return out, req.Send()
}

// OrderResourcePacksWithContext is the same as OrderResourcePacks with the addition of
// the ability to pass a context and additional request options.
//
// See OrderResourcePacks for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) OrderResourcePacksWithContext(ctx volcengine.Context, input *OrderResourcePacksInput, opts ...request.Option) (*OrderResourcePacksOutput, error) {
	req, out := c.OrderResourcePacksRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CodeAttributeForOrderResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CodeAttributeForOrderResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CodeAttributeForOrderResourcePacksInput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *CodeAttributeForOrderResourcePacksInput) SetName(v string) *CodeAttributeForOrderResourcePacksInput {
	s.Name = &v
	return s
}

type ConfigurationForOrderResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	CodeAttribute *CodeAttributeForOrderResourcePacksInput `type:"structure" json:",omitempty"`

	Quantity *int32 `type:"int32" json:",omitempty"`

	Tags []*TagForOrderResourcePacksInput `type:"list" json:",omitempty"`

	Times *int32 `type:"int32" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ConfigurationForOrderResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigurationForOrderResourcePacksInput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetCode(v string) *ConfigurationForOrderResourcePacksInput {
	s.Code = &v
	return s
}

// SetCodeAttribute sets the CodeAttribute field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetCodeAttribute(v *CodeAttributeForOrderResourcePacksInput) *ConfigurationForOrderResourcePacksInput {
	s.CodeAttribute = v
	return s
}

// SetQuantity sets the Quantity field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetQuantity(v int32) *ConfigurationForOrderResourcePacksInput {
	s.Quantity = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetTags(v []*TagForOrderResourcePacksInput) *ConfigurationForOrderResourcePacksInput {
	s.Tags = v
	return s
}

// SetTimes sets the Times field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetTimes(v int32) *ConfigurationForOrderResourcePacksInput {
	s.Times = &v
	return s
}

// SetType sets the Type field's value.
func (s *ConfigurationForOrderResourcePacksInput) SetType(v string) *ConfigurationForOrderResourcePacksInput {
	s.Type = &v
	return s
}

type OrderResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BlueprintID *int32 `type:"int32" json:",omitempty"`

	Configurations []*ConfigurationForOrderResourcePacksInput `type:"list" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	ResourceID *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OrderResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderResourcePacksInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *OrderResourcePacksInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "OrderResourcePacksInput"}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBlueprintID sets the BlueprintID field's value.
func (s *OrderResourcePacksInput) SetBlueprintID(v int32) *OrderResourcePacksInput {
	s.BlueprintID = &v
	return s
}

// SetConfigurations sets the Configurations field's value.
func (s *OrderResourcePacksInput) SetConfigurations(v []*ConfigurationForOrderResourcePacksInput) *OrderResourcePacksInput {
	s.Configurations = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *OrderResourcePacksInput) SetProjectName(v string) *OrderResourcePacksInput {
	s.ProjectName = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *OrderResourcePacksInput) SetResourceID(v string) *OrderResourcePacksInput {
	s.ResourceID = &v
	return s
}

type OrderResourcePacksOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	OrderIDs []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s OrderResourcePacksOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OrderResourcePacksOutput) GoString() string {
	return s.String()
}

// SetOrderIDs sets the OrderIDs field's value.
func (s *OrderResourcePacksOutput) SetOrderIDs(v []*string) *OrderResourcePacksOutput {
	s.OrderIDs = v
	return s
}

type TagForOrderResourcePacksInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForOrderResourcePacksInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForOrderResourcePacksInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForOrderResourcePacksInput) SetKey(v string) *TagForOrderResourcePacksInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForOrderResourcePacksInput) SetValue(v string) *TagForOrderResourcePacksInput {
	s.Value = &v
	return s
}
