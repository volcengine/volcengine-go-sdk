// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opServiceStatusCommon = "ServiceStatus"

// ServiceStatusCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ServiceStatusCommon operation. The "output" return
// value will be populated with the ServiceStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ServiceStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ServiceStatusCommon Send returns without error.
//
// See ServiceStatusCommon for more information on using the ServiceStatusCommon
// API call, and error handling.
//
//    // Example sending a request using the ServiceStatusCommonRequest method.
//    req, resp := client.ServiceStatusCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ServiceStatusCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opServiceStatusCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ServiceStatusCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ServiceStatusCommon for usage and error information.
func (c *SPEECHSAASPROD) ServiceStatusCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ServiceStatusCommonRequest(input)
	return out, req.Send()
}

// ServiceStatusCommonWithContext is the same as ServiceStatusCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ServiceStatusCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ServiceStatusCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ServiceStatusCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opServiceStatus = "ServiceStatus"

// ServiceStatusRequest generates a "volcengine/request.Request" representing the
// client's request for the ServiceStatus operation. The "output" return
// value will be populated with the ServiceStatusCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ServiceStatusCommon Request to send the API call to the service.
// the "output" return value is not valid until after ServiceStatusCommon Send returns without error.
//
// See ServiceStatus for more information on using the ServiceStatus
// API call, and error handling.
//
//    // Example sending a request using the ServiceStatusRequest method.
//    req, resp := client.ServiceStatusRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ServiceStatusRequest(input *ServiceStatusInput) (req *request.Request, output *ServiceStatusOutput) {
	op := &request.Operation{
		Name:       opServiceStatus,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ServiceStatusInput{}
	}

	output = &ServiceStatusOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ServiceStatus API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ServiceStatus for usage and error information.
func (c *SPEECHSAASPROD) ServiceStatus(input *ServiceStatusInput) (*ServiceStatusOutput, error) {
	req, out := c.ServiceStatusRequest(input)
	return out, req.Send()
}

// ServiceStatusWithContext is the same as ServiceStatus with the addition of
// the ability to pass a context and additional request options.
//
// See ServiceStatus for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ServiceStatusWithContext(ctx volcengine.Context, input *ServiceStatusInput, opts ...request.Option) (*ServiceStatusOutput, error) {
	req, out := c.ServiceStatusRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BillingResourceForServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Limit *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PrepaidPurchaseColumn *string `type:"string" json:",omitempty"`

	QuotaPurchaseButtonName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BillingResourceForServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BillingResourceForServiceStatusOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *BillingResourceForServiceStatusOutput) SetLimit(v string) *BillingResourceForServiceStatusOutput {
	s.Limit = &v
	return s
}

// SetName sets the Name field's value.
func (s *BillingResourceForServiceStatusOutput) SetName(v string) *BillingResourceForServiceStatusOutput {
	s.Name = &v
	return s
}

// SetPrepaidPurchaseColumn sets the PrepaidPurchaseColumn field's value.
func (s *BillingResourceForServiceStatusOutput) SetPrepaidPurchaseColumn(v string) *BillingResourceForServiceStatusOutput {
	s.PrepaidPurchaseColumn = &v
	return s
}

// SetQuotaPurchaseButtonName sets the QuotaPurchaseButtonName field's value.
func (s *BillingResourceForServiceStatusOutput) SetQuotaPurchaseButtonName(v string) *BillingResourceForServiceStatusOutput {
	s.QuotaPurchaseButtonName = &v
	return s
}

type QuotaResourceForServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Limit *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PrepaidPurchaseColumn *string `type:"string" json:",omitempty"`

	QuotaPurchaseButtonName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s QuotaResourceForServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QuotaResourceForServiceStatusOutput) GoString() string {
	return s.String()
}

// SetLimit sets the Limit field's value.
func (s *QuotaResourceForServiceStatusOutput) SetLimit(v string) *QuotaResourceForServiceStatusOutput {
	s.Limit = &v
	return s
}

// SetName sets the Name field's value.
func (s *QuotaResourceForServiceStatusOutput) SetName(v string) *QuotaResourceForServiceStatusOutput {
	s.Name = &v
	return s
}

// SetPrepaidPurchaseColumn sets the PrepaidPurchaseColumn field's value.
func (s *QuotaResourceForServiceStatusOutput) SetPrepaidPurchaseColumn(v string) *QuotaResourceForServiceStatusOutput {
	s.PrepaidPurchaseColumn = &v
	return s
}

// SetQuotaPurchaseButtonName sets the QuotaPurchaseButtonName field's value.
func (s *QuotaResourceForServiceStatusOutput) SetQuotaPurchaseButtonName(v string) *QuotaResourceForServiceStatusOutput {
	s.QuotaPurchaseButtonName = &v
	return s
}

type ServiceStatusInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// BlueprintID is a required field
	BlueprintID *int32 `type:"int32" json:",omitempty" required:"true"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	// ResourceID is a required field
	ResourceID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ServiceStatusInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceStatusInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ServiceStatusInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ServiceStatusInput"}
	if s.BlueprintID == nil {
		invalidParams.Add(request.NewErrParamRequired("BlueprintID"))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}
	if s.ResourceID == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetBlueprintID sets the BlueprintID field's value.
func (s *ServiceStatusInput) SetBlueprintID(v int32) *ServiceStatusInput {
	s.BlueprintID = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ServiceStatusInput) SetProjectName(v string) *ServiceStatusInput {
	s.ProjectName = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *ServiceStatusInput) SetResourceID(v string) *ServiceStatusInput {
	s.ResourceID = &v
	return s
}

type ServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BillingResource *BillingResourceForServiceStatusOutput `type:"structure" json:",omitempty"`

	BillingResources []*BillingResourceForServiceStatusOutput `type:"list" json:",omitempty"`

	BillingRules *string `type:"string" json:",omitempty"`

	Clusters []*string `type:"list" json:",omitempty"`

	InstanceNumber *string `type:"string" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	ProductDoc *string `type:"string" json:",omitempty"`

	QuotaResource *QuotaResourceForServiceStatusOutput `type:"structure" json:",omitempty"`

	QuotaResources []*QuotaResourceForServiceStatusOutput `type:"list" json:",omitempty"`

	ResourceID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	Tags []*TagForServiceStatusOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServiceStatusOutput) GoString() string {
	return s.String()
}

// SetBillingResource sets the BillingResource field's value.
func (s *ServiceStatusOutput) SetBillingResource(v *BillingResourceForServiceStatusOutput) *ServiceStatusOutput {
	s.BillingResource = v
	return s
}

// SetBillingResources sets the BillingResources field's value.
func (s *ServiceStatusOutput) SetBillingResources(v []*BillingResourceForServiceStatusOutput) *ServiceStatusOutput {
	s.BillingResources = v
	return s
}

// SetBillingRules sets the BillingRules field's value.
func (s *ServiceStatusOutput) SetBillingRules(v string) *ServiceStatusOutput {
	s.BillingRules = &v
	return s
}

// SetClusters sets the Clusters field's value.
func (s *ServiceStatusOutput) SetClusters(v []*string) *ServiceStatusOutput {
	s.Clusters = v
	return s
}

// SetInstanceNumber sets the InstanceNumber field's value.
func (s *ServiceStatusOutput) SetInstanceNumber(v string) *ServiceStatusOutput {
	s.InstanceNumber = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *ServiceStatusOutput) SetLevel(v string) *ServiceStatusOutput {
	s.Level = &v
	return s
}

// SetProductDoc sets the ProductDoc field's value.
func (s *ServiceStatusOutput) SetProductDoc(v string) *ServiceStatusOutput {
	s.ProductDoc = &v
	return s
}

// SetQuotaResource sets the QuotaResource field's value.
func (s *ServiceStatusOutput) SetQuotaResource(v *QuotaResourceForServiceStatusOutput) *ServiceStatusOutput {
	s.QuotaResource = v
	return s
}

// SetQuotaResources sets the QuotaResources field's value.
func (s *ServiceStatusOutput) SetQuotaResources(v []*QuotaResourceForServiceStatusOutput) *ServiceStatusOutput {
	s.QuotaResources = v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *ServiceStatusOutput) SetResourceID(v string) *ServiceStatusOutput {
	s.ResourceID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ServiceStatusOutput) SetStatus(v string) *ServiceStatusOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ServiceStatusOutput) SetTags(v []*TagForServiceStatusOutput) *ServiceStatusOutput {
	s.Tags = v
	return s
}

type TagForServiceStatusOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForServiceStatusOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForServiceStatusOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForServiceStatusOutput) SetKey(v string) *TagForServiceStatusOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForServiceStatusOutput) SetValue(v string) *TagForServiceStatusOutput {
	s.Value = &v
	return s
}
