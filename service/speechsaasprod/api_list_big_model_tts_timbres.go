// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListBigModelTTSTimbresCommon = "ListBigModelTTSTimbres"

// ListBigModelTTSTimbresCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBigModelTTSTimbresCommon operation. The "output" return
// value will be populated with the ListBigModelTTSTimbresCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBigModelTTSTimbresCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBigModelTTSTimbresCommon Send returns without error.
//
// See ListBigModelTTSTimbresCommon for more information on using the ListBigModelTTSTimbresCommon
// API call, and error handling.
//
//    // Example sending a request using the ListBigModelTTSTimbresCommonRequest method.
//    req, resp := client.ListBigModelTTSTimbresCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ListBigModelTTSTimbresCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListBigModelTTSTimbresCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBigModelTTSTimbresCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ListBigModelTTSTimbresCommon for usage and error information.
func (c *SPEECHSAASPROD) ListBigModelTTSTimbresCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListBigModelTTSTimbresCommonRequest(input)
	return out, req.Send()
}

// ListBigModelTTSTimbresCommonWithContext is the same as ListBigModelTTSTimbresCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListBigModelTTSTimbresCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ListBigModelTTSTimbresCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListBigModelTTSTimbresCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListBigModelTTSTimbres = "ListBigModelTTSTimbres"

// ListBigModelTTSTimbresRequest generates a "volcengine/request.Request" representing the
// client's request for the ListBigModelTTSTimbres operation. The "output" return
// value will be populated with the ListBigModelTTSTimbresCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListBigModelTTSTimbresCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListBigModelTTSTimbresCommon Send returns without error.
//
// See ListBigModelTTSTimbres for more information on using the ListBigModelTTSTimbres
// API call, and error handling.
//
//    // Example sending a request using the ListBigModelTTSTimbresRequest method.
//    req, resp := client.ListBigModelTTSTimbresRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ListBigModelTTSTimbresRequest(input *ListBigModelTTSTimbresInput) (req *request.Request, output *ListBigModelTTSTimbresOutput) {
	op := &request.Operation{
		Name:       opListBigModelTTSTimbres,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListBigModelTTSTimbresInput{}
	}

	output = &ListBigModelTTSTimbresOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListBigModelTTSTimbres API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ListBigModelTTSTimbres for usage and error information.
func (c *SPEECHSAASPROD) ListBigModelTTSTimbres(input *ListBigModelTTSTimbresInput) (*ListBigModelTTSTimbresOutput, error) {
	req, out := c.ListBigModelTTSTimbresRequest(input)
	return out, req.Send()
}

// ListBigModelTTSTimbresWithContext is the same as ListBigModelTTSTimbres with the addition of
// the ability to pass a context and additional request options.
//
// See ListBigModelTTSTimbres for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ListBigModelTTSTimbresWithContext(ctx volcengine.Context, input *ListBigModelTTSTimbresInput, opts ...request.Option) (*ListBigModelTTSTimbresOutput, error) {
	req, out := c.ListBigModelTTSTimbresRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CategoryForListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	NextCategory *NextCategoryForListBigModelTTSTimbresOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CategoryForListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CategoryForListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *CategoryForListBigModelTTSTimbresOutput) SetCategory(v string) *CategoryForListBigModelTTSTimbresOutput {
	s.Category = &v
	return s
}

// SetNextCategory sets the NextCategory field's value.
func (s *CategoryForListBigModelTTSTimbresOutput) SetNextCategory(v *NextCategoryForListBigModelTTSTimbresOutput) *CategoryForListBigModelTTSTimbresOutput {
	s.NextCategory = v
	return s
}

type EmotionForListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DemoText *string `type:"string" json:",omitempty"`

	DemoURL *string `type:"string" json:",omitempty"`

	Emotion *string `type:"string" json:",omitempty"`

	EmotionType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EmotionForListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EmotionForListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetDemoText sets the DemoText field's value.
func (s *EmotionForListBigModelTTSTimbresOutput) SetDemoText(v string) *EmotionForListBigModelTTSTimbresOutput {
	s.DemoText = &v
	return s
}

// SetDemoURL sets the DemoURL field's value.
func (s *EmotionForListBigModelTTSTimbresOutput) SetDemoURL(v string) *EmotionForListBigModelTTSTimbresOutput {
	s.DemoURL = &v
	return s
}

// SetEmotion sets the Emotion field's value.
func (s *EmotionForListBigModelTTSTimbresOutput) SetEmotion(v string) *EmotionForListBigModelTTSTimbresOutput {
	s.Emotion = &v
	return s
}

// SetEmotionType sets the EmotionType field's value.
func (s *EmotionForListBigModelTTSTimbresOutput) SetEmotionType(v string) *EmotionForListBigModelTTSTimbresOutput {
	s.EmotionType = &v
	return s
}

type ListBigModelTTSTimbresInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListBigModelTTSTimbresInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBigModelTTSTimbresInput) GoString() string {
	return s.String()
}

type ListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Timbres []*TimbreForListBigModelTTSTimbresOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetTimbres sets the Timbres field's value.
func (s *ListBigModelTTSTimbresOutput) SetTimbres(v []*TimbreForListBigModelTTSTimbresOutput) *ListBigModelTTSTimbresOutput {
	s.Timbres = v
	return s
}

type NextCategoryForListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s NextCategoryForListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NextCategoryForListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *NextCategoryForListBigModelTTSTimbresOutput) SetCategory(v string) *NextCategoryForListBigModelTTSTimbresOutput {
	s.Category = &v
	return s
}

type TimbreForListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SpeakerID *string `type:"string" json:",omitempty"`

	TimbreInfos []*TimbreInfoForListBigModelTTSTimbresOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TimbreForListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TimbreForListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetSpeakerID sets the SpeakerID field's value.
func (s *TimbreForListBigModelTTSTimbresOutput) SetSpeakerID(v string) *TimbreForListBigModelTTSTimbresOutput {
	s.SpeakerID = &v
	return s
}

// SetTimbreInfos sets the TimbreInfos field's value.
func (s *TimbreForListBigModelTTSTimbresOutput) SetTimbreInfos(v []*TimbreInfoForListBigModelTTSTimbresOutput) *TimbreForListBigModelTTSTimbresOutput {
	s.TimbreInfos = v
	return s
}

type TimbreInfoForListBigModelTTSTimbresOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Age *string `type:"string" json:",omitempty"`

	Categories []*CategoryForListBigModelTTSTimbresOutput `type:"list" json:",omitempty"`

	Emotions []*EmotionForListBigModelTTSTimbresOutput `type:"list" json:",omitempty"`

	Gender *string `type:"string" json:",omitempty"`

	SpeakerName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TimbreInfoForListBigModelTTSTimbresOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TimbreInfoForListBigModelTTSTimbresOutput) GoString() string {
	return s.String()
}

// SetAge sets the Age field's value.
func (s *TimbreInfoForListBigModelTTSTimbresOutput) SetAge(v string) *TimbreInfoForListBigModelTTSTimbresOutput {
	s.Age = &v
	return s
}

// SetCategories sets the Categories field's value.
func (s *TimbreInfoForListBigModelTTSTimbresOutput) SetCategories(v []*CategoryForListBigModelTTSTimbresOutput) *TimbreInfoForListBigModelTTSTimbresOutput {
	s.Categories = v
	return s
}

// SetEmotions sets the Emotions field's value.
func (s *TimbreInfoForListBigModelTTSTimbresOutput) SetEmotions(v []*EmotionForListBigModelTTSTimbresOutput) *TimbreInfoForListBigModelTTSTimbresOutput {
	s.Emotions = v
	return s
}

// SetGender sets the Gender field's value.
func (s *TimbreInfoForListBigModelTTSTimbresOutput) SetGender(v string) *TimbreInfoForListBigModelTTSTimbresOutput {
	s.Gender = &v
	return s
}

// SetSpeakerName sets the SpeakerName field's value.
func (s *TimbreInfoForListBigModelTTSTimbresOutput) SetSpeakerName(v string) *TimbreInfoForListBigModelTTSTimbresOutput {
	s.SpeakerName = &v
	return s
}
