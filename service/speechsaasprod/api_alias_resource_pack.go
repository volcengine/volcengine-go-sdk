// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opAliasResourcePackCommon = "AliasResourcePack"

// AliasResourcePackCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the AliasResourcePackCommon operation. The "output" return
// value will be populated with the AliasResourcePackCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AliasResourcePackCommon Request to send the API call to the service.
// the "output" return value is not valid until after AliasResourcePackCommon Send returns without error.
//
// See AliasResourcePackCommon for more information on using the AliasResourcePackCommon
// API call, and error handling.
//
//    // Example sending a request using the AliasResourcePackCommonRequest method.
//    req, resp := client.AliasResourcePackCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) AliasResourcePackCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opAliasResourcePackCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AliasResourcePackCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation AliasResourcePackCommon for usage and error information.
func (c *SPEECHSAASPROD) AliasResourcePackCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.AliasResourcePackCommonRequest(input)
	return out, req.Send()
}

// AliasResourcePackCommonWithContext is the same as AliasResourcePackCommon with the addition of
// the ability to pass a context and additional request options.
//
// See AliasResourcePackCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) AliasResourcePackCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.AliasResourcePackCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opAliasResourcePack = "AliasResourcePack"

// AliasResourcePackRequest generates a "volcengine/request.Request" representing the
// client's request for the AliasResourcePack operation. The "output" return
// value will be populated with the AliasResourcePackCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned AliasResourcePackCommon Request to send the API call to the service.
// the "output" return value is not valid until after AliasResourcePackCommon Send returns without error.
//
// See AliasResourcePack for more information on using the AliasResourcePack
// API call, and error handling.
//
//    // Example sending a request using the AliasResourcePackRequest method.
//    req, resp := client.AliasResourcePackRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) AliasResourcePackRequest(input *AliasResourcePackInput) (req *request.Request, output *AliasResourcePackOutput) {
	op := &request.Operation{
		Name:       opAliasResourcePack,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &AliasResourcePackInput{}
	}

	output = &AliasResourcePackOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// AliasResourcePack API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation AliasResourcePack for usage and error information.
func (c *SPEECHSAASPROD) AliasResourcePack(input *AliasResourcePackInput) (*AliasResourcePackOutput, error) {
	req, out := c.AliasResourcePackRequest(input)
	return out, req.Send()
}

// AliasResourcePackWithContext is the same as AliasResourcePack with the addition of
// the ability to pass a context and additional request options.
//
// See AliasResourcePack for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) AliasResourcePackWithContext(ctx volcengine.Context, input *AliasResourcePackInput, opts ...request.Option) (*AliasResourcePackOutput, error) {
	req, out := c.AliasResourcePackRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AliasResourcePackInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Alias is a required field
	Alias *string `type:"string" json:",omitempty" required:"true"`

	// InstanceNumber is a required field
	InstanceNumber *string `type:"string" json:",omitempty" required:"true"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`

	// TrainID is a required field
	TrainID *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s AliasResourcePackInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AliasResourcePackInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *AliasResourcePackInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "AliasResourcePackInput"}
	if s.Alias == nil {
		invalidParams.Add(request.NewErrParamRequired("Alias"))
	}
	if s.InstanceNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceNumber"))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}
	if s.TrainID == nil {
		invalidParams.Add(request.NewErrParamRequired("TrainID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAlias sets the Alias field's value.
func (s *AliasResourcePackInput) SetAlias(v string) *AliasResourcePackInput {
	s.Alias = &v
	return s
}

// SetInstanceNumber sets the InstanceNumber field's value.
func (s *AliasResourcePackInput) SetInstanceNumber(v string) *AliasResourcePackInput {
	s.InstanceNumber = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *AliasResourcePackInput) SetProjectName(v string) *AliasResourcePackInput {
	s.ProjectName = &v
	return s
}

// SetTrainID sets the TrainID field's value.
func (s *AliasResourcePackInput) SetTrainID(v string) *AliasResourcePackInput {
	s.TrainID = &v
	return s
}

type AliasResourcePackOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Alias *string `type:"string" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	ConfigurationCode *string `type:"string" json:",omitempty"`

	CurrentUsage *string `type:"string" json:",omitempty"`

	Details *DetailsForAliasResourcePackOutput `type:"structure" json:",omitempty"`

	Expires *string `type:"string" json:",omitempty"`

	GroupName *string `type:"string" json:",omitempty"`

	Harvest *HarvestForAliasResourcePackOutput `type:"structure" json:",omitempty"`

	InstanceNumber *string `type:"string" json:",omitempty"`

	IsShareable *bool `type:"boolean" json:",omitempty"`

	PackType *string `type:"string" json:",omitempty"`

	PurchasedAmount *string `type:"string" json:",omitempty"`

	RawType *string `type:"string" json:",omitempty"`

	ResourceDisplay *string `type:"string" json:",omitempty"`

	ResourceID *string `type:"string" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	TrainID *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AliasResourcePackOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AliasResourcePackOutput) GoString() string {
	return s.String()
}

// SetAlias sets the Alias field's value.
func (s *AliasResourcePackOutput) SetAlias(v string) *AliasResourcePackOutput {
	s.Alias = &v
	return s
}

// SetCode sets the Code field's value.
func (s *AliasResourcePackOutput) SetCode(v string) *AliasResourcePackOutput {
	s.Code = &v
	return s
}

// SetConfigurationCode sets the ConfigurationCode field's value.
func (s *AliasResourcePackOutput) SetConfigurationCode(v string) *AliasResourcePackOutput {
	s.ConfigurationCode = &v
	return s
}

// SetCurrentUsage sets the CurrentUsage field's value.
func (s *AliasResourcePackOutput) SetCurrentUsage(v string) *AliasResourcePackOutput {
	s.CurrentUsage = &v
	return s
}

// SetDetails sets the Details field's value.
func (s *AliasResourcePackOutput) SetDetails(v *DetailsForAliasResourcePackOutput) *AliasResourcePackOutput {
	s.Details = v
	return s
}

// SetExpires sets the Expires field's value.
func (s *AliasResourcePackOutput) SetExpires(v string) *AliasResourcePackOutput {
	s.Expires = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *AliasResourcePackOutput) SetGroupName(v string) *AliasResourcePackOutput {
	s.GroupName = &v
	return s
}

// SetHarvest sets the Harvest field's value.
func (s *AliasResourcePackOutput) SetHarvest(v *HarvestForAliasResourcePackOutput) *AliasResourcePackOutput {
	s.Harvest = v
	return s
}

// SetInstanceNumber sets the InstanceNumber field's value.
func (s *AliasResourcePackOutput) SetInstanceNumber(v string) *AliasResourcePackOutput {
	s.InstanceNumber = &v
	return s
}

// SetIsShareable sets the IsShareable field's value.
func (s *AliasResourcePackOutput) SetIsShareable(v bool) *AliasResourcePackOutput {
	s.IsShareable = &v
	return s
}

// SetPackType sets the PackType field's value.
func (s *AliasResourcePackOutput) SetPackType(v string) *AliasResourcePackOutput {
	s.PackType = &v
	return s
}

// SetPurchasedAmount sets the PurchasedAmount field's value.
func (s *AliasResourcePackOutput) SetPurchasedAmount(v string) *AliasResourcePackOutput {
	s.PurchasedAmount = &v
	return s
}

// SetRawType sets the RawType field's value.
func (s *AliasResourcePackOutput) SetRawType(v string) *AliasResourcePackOutput {
	s.RawType = &v
	return s
}

// SetResourceDisplay sets the ResourceDisplay field's value.
func (s *AliasResourcePackOutput) SetResourceDisplay(v string) *AliasResourcePackOutput {
	s.ResourceDisplay = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *AliasResourcePackOutput) SetResourceID(v string) *AliasResourcePackOutput {
	s.ResourceID = &v
	return s
}

// SetState sets the State field's value.
func (s *AliasResourcePackOutput) SetState(v string) *AliasResourcePackOutput {
	s.State = &v
	return s
}

// SetTrainID sets the TrainID field's value.
func (s *AliasResourcePackOutput) SetTrainID(v string) *AliasResourcePackOutput {
	s.TrainID = &v
	return s
}

// SetType sets the Type field's value.
func (s *AliasResourcePackOutput) SetType(v string) *AliasResourcePackOutput {
	s.Type = &v
	return s
}

type DetailsForAliasResourcePackOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Aliasable *bool `type:"boolean" json:",omitempty"`

	DemoLink *string `type:"string" json:",omitempty"`

	ExtraApiAllowed *bool `type:"boolean" json:",omitempty"`

	Formalizable *bool `type:"boolean" json:",omitempty"`

	Language *string `type:"string" json:",omitempty"`

	MegattsTraining *MegattsTrainingForAliasResourcePackOutput `type:"structure" json:",omitempty"`

	RecommendedScenario *string `type:"string" json:",omitempty"`

	ToneNumber *string `type:"string" json:",omitempty"`

	VoiceType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DetailsForAliasResourcePackOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DetailsForAliasResourcePackOutput) GoString() string {
	return s.String()
}

// SetAliasable sets the Aliasable field's value.
func (s *DetailsForAliasResourcePackOutput) SetAliasable(v bool) *DetailsForAliasResourcePackOutput {
	s.Aliasable = &v
	return s
}

// SetDemoLink sets the DemoLink field's value.
func (s *DetailsForAliasResourcePackOutput) SetDemoLink(v string) *DetailsForAliasResourcePackOutput {
	s.DemoLink = &v
	return s
}

// SetExtraApiAllowed sets the ExtraApiAllowed field's value.
func (s *DetailsForAliasResourcePackOutput) SetExtraApiAllowed(v bool) *DetailsForAliasResourcePackOutput {
	s.ExtraApiAllowed = &v
	return s
}

// SetFormalizable sets the Formalizable field's value.
func (s *DetailsForAliasResourcePackOutput) SetFormalizable(v bool) *DetailsForAliasResourcePackOutput {
	s.Formalizable = &v
	return s
}

// SetLanguage sets the Language field's value.
func (s *DetailsForAliasResourcePackOutput) SetLanguage(v string) *DetailsForAliasResourcePackOutput {
	s.Language = &v
	return s
}

// SetMegattsTraining sets the MegattsTraining field's value.
func (s *DetailsForAliasResourcePackOutput) SetMegattsTraining(v *MegattsTrainingForAliasResourcePackOutput) *DetailsForAliasResourcePackOutput {
	s.MegattsTraining = v
	return s
}

// SetRecommendedScenario sets the RecommendedScenario field's value.
func (s *DetailsForAliasResourcePackOutput) SetRecommendedScenario(v string) *DetailsForAliasResourcePackOutput {
	s.RecommendedScenario = &v
	return s
}

// SetToneNumber sets the ToneNumber field's value.
func (s *DetailsForAliasResourcePackOutput) SetToneNumber(v string) *DetailsForAliasResourcePackOutput {
	s.ToneNumber = &v
	return s
}

// SetVoiceType sets the VoiceType field's value.
func (s *DetailsForAliasResourcePackOutput) SetVoiceType(v string) *DetailsForAliasResourcePackOutput {
	s.VoiceType = &v
	return s
}

type HarvestForAliasResourcePackOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CropType *string `type:"string" json:",omitempty"`

	CurrentUsage *float64 `type:"float" json:",omitempty"`

	PurchasedAmount *float64 `type:"float" json:",omitempty"`

	ResourceID *string `type:"string" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s HarvestForAliasResourcePackOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HarvestForAliasResourcePackOutput) GoString() string {
	return s.String()
}

// SetCropType sets the CropType field's value.
func (s *HarvestForAliasResourcePackOutput) SetCropType(v string) *HarvestForAliasResourcePackOutput {
	s.CropType = &v
	return s
}

// SetCurrentUsage sets the CurrentUsage field's value.
func (s *HarvestForAliasResourcePackOutput) SetCurrentUsage(v float64) *HarvestForAliasResourcePackOutput {
	s.CurrentUsage = &v
	return s
}

// SetPurchasedAmount sets the PurchasedAmount field's value.
func (s *HarvestForAliasResourcePackOutput) SetPurchasedAmount(v float64) *HarvestForAliasResourcePackOutput {
	s.PurchasedAmount = &v
	return s
}

// SetResourceID sets the ResourceID field's value.
func (s *HarvestForAliasResourcePackOutput) SetResourceID(v string) *HarvestForAliasResourcePackOutput {
	s.ResourceID = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *HarvestForAliasResourcePackOutput) SetUnit(v string) *HarvestForAliasResourcePackOutput {
	s.Unit = &v
	return s
}

type MegattsTrainingForAliasResourcePackOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AvailableTrainingTimes *int32 `type:"int32" json:",omitempty"`

	CreateTime *int32 `type:"int32" json:",omitempty"`

	IsActivatable *bool `type:"boolean" json:",omitempty"`

	State *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MegattsTrainingForAliasResourcePackOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MegattsTrainingForAliasResourcePackOutput) GoString() string {
	return s.String()
}

// SetAvailableTrainingTimes sets the AvailableTrainingTimes field's value.
func (s *MegattsTrainingForAliasResourcePackOutput) SetAvailableTrainingTimes(v int32) *MegattsTrainingForAliasResourcePackOutput {
	s.AvailableTrainingTimes = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *MegattsTrainingForAliasResourcePackOutput) SetCreateTime(v int32) *MegattsTrainingForAliasResourcePackOutput {
	s.CreateTime = &v
	return s
}

// SetIsActivatable sets the IsActivatable field's value.
func (s *MegattsTrainingForAliasResourcePackOutput) SetIsActivatable(v bool) *MegattsTrainingForAliasResourcePackOutput {
	s.IsActivatable = &v
	return s
}

// SetState sets the State field's value.
func (s *MegattsTrainingForAliasResourcePackOutput) SetState(v string) *MegattsTrainingForAliasResourcePackOutput {
	s.State = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *MegattsTrainingForAliasResourcePackOutput) SetVersion(v string) *MegattsTrainingForAliasResourcePackOutput {
	s.Version = &v
	return s
}
