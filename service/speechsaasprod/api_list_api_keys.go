// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAPIKeysCommon = "ListAPIKeys"

// ListAPIKeysCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAPIKeysCommon operation. The "output" return
// value will be populated with the ListAPIKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAPIKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAPIKeysCommon Send returns without error.
//
// See ListAPIKeysCommon for more information on using the ListAPIKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAPIKeysCommonRequest method.
//    req, resp := client.ListAPIKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ListAPIKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAPIKeysCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAPIKeysCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ListAPIKeysCommon for usage and error information.
func (c *SPEECHSAASPROD) ListAPIKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAPIKeysCommonRequest(input)
	return out, req.Send()
}

// ListAPIKeysCommonWithContext is the same as ListAPIKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAPIKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ListAPIKeysCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAPIKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAPIKeys = "ListAPIKeys"

// ListAPIKeysRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAPIKeys operation. The "output" return
// value will be populated with the ListAPIKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAPIKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAPIKeysCommon Send returns without error.
//
// See ListAPIKeys for more information on using the ListAPIKeys
// API call, and error handling.
//
//    // Example sending a request using the ListAPIKeysRequest method.
//    req, resp := client.ListAPIKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) ListAPIKeysRequest(input *ListAPIKeysInput) (req *request.Request, output *ListAPIKeysOutput) {
	op := &request.Operation{
		Name:       opListAPIKeys,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAPIKeysInput{}
	}

	output = &ListAPIKeysOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAPIKeys API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation ListAPIKeys for usage and error information.
func (c *SPEECHSAASPROD) ListAPIKeys(input *ListAPIKeysInput) (*ListAPIKeysOutput, error) {
	req, out := c.ListAPIKeysRequest(input)
	return out, req.Send()
}

// ListAPIKeysWithContext is the same as ListAPIKeys with the addition of
// the ability to pass a context and additional request options.
//
// See ListAPIKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) ListAPIKeysWithContext(ctx volcengine.Context, input *ListAPIKeysInput, opts ...request.Option) (*ListAPIKeysOutput, error) {
	req, out := c.ListAPIKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type APIKeyForListAPIKeysOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	APIKey *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Disable *bool `type:"boolean" json:",omitempty"`

	ID *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s APIKeyForListAPIKeysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s APIKeyForListAPIKeysOutput) GoString() string {
	return s.String()
}

// SetAPIKey sets the APIKey field's value.
func (s *APIKeyForListAPIKeysOutput) SetAPIKey(v string) *APIKeyForListAPIKeysOutput {
	s.APIKey = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *APIKeyForListAPIKeysOutput) SetCreateTime(v string) *APIKeyForListAPIKeysOutput {
	s.CreateTime = &v
	return s
}

// SetDisable sets the Disable field's value.
func (s *APIKeyForListAPIKeysOutput) SetDisable(v bool) *APIKeyForListAPIKeysOutput {
	s.Disable = &v
	return s
}

// SetID sets the ID field's value.
func (s *APIKeyForListAPIKeysOutput) SetID(v int32) *APIKeyForListAPIKeysOutput {
	s.ID = &v
	return s
}

// SetName sets the Name field's value.
func (s *APIKeyForListAPIKeysOutput) SetName(v string) *APIKeyForListAPIKeysOutput {
	s.Name = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *APIKeyForListAPIKeysOutput) SetUpdateTime(v string) *APIKeyForListAPIKeysOutput {
	s.UpdateTime = &v
	return s
}

type ListAPIKeysInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	OnlyAvailable *bool `type:"boolean" json:",omitempty"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListAPIKeysInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAPIKeysInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAPIKeysInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAPIKeysInput"}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOnlyAvailable sets the OnlyAvailable field's value.
func (s *ListAPIKeysInput) SetOnlyAvailable(v bool) *ListAPIKeysInput {
	s.OnlyAvailable = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListAPIKeysInput) SetProjectName(v string) *ListAPIKeysInput {
	s.ProjectName = &v
	return s
}

type ListAPIKeysOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	APIKeys []*APIKeyForListAPIKeysOutput `type:"list" json:",omitempty"`

	MaxResults *int32 `type:"int32" json:",omitempty"`

	NextToken *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListAPIKeysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAPIKeysOutput) GoString() string {
	return s.String()
}

// SetAPIKeys sets the APIKeys field's value.
func (s *ListAPIKeysOutput) SetAPIKeys(v []*APIKeyForListAPIKeysOutput) *ListAPIKeysOutput {
	s.APIKeys = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListAPIKeysOutput) SetMaxResults(v int32) *ListAPIKeysOutput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListAPIKeysOutput) SetNextToken(v string) *ListAPIKeysOutput {
	s.NextToken = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListAPIKeysOutput) SetPageNumber(v int32) *ListAPIKeysOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListAPIKeysOutput) SetPageSize(v int32) *ListAPIKeysOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListAPIKeysOutput) SetTotalCount(v int32) *ListAPIKeysOutput {
	s.TotalCount = &v
	return s
}
