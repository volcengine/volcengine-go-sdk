// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package speechsaasprod

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateAPIKeyCommon = "CreateAPIKey"

// CreateAPIKeyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAPIKeyCommon operation. The "output" return
// value will be populated with the CreateAPIKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAPIKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAPIKeyCommon Send returns without error.
//
// See CreateAPIKeyCommon for more information on using the CreateAPIKeyCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateAPIKeyCommonRequest method.
//    req, resp := client.CreateAPIKeyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) CreateAPIKeyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateAPIKeyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAPIKeyCommon API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation CreateAPIKeyCommon for usage and error information.
func (c *SPEECHSAASPROD) CreateAPIKeyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateAPIKeyCommonRequest(input)
	return out, req.Send()
}

// CreateAPIKeyCommonWithContext is the same as CreateAPIKeyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAPIKeyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) CreateAPIKeyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateAPIKeyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateAPIKey = "CreateAPIKey"

// CreateAPIKeyRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAPIKey operation. The "output" return
// value will be populated with the CreateAPIKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAPIKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAPIKeyCommon Send returns without error.
//
// See CreateAPIKey for more information on using the CreateAPIKey
// API call, and error handling.
//
//    // Example sending a request using the CreateAPIKeyRequest method.
//    req, resp := client.CreateAPIKeyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *SPEECHSAASPROD) CreateAPIKeyRequest(input *CreateAPIKeyInput) (req *request.Request, output *CreateAPIKeyOutput) {
	op := &request.Operation{
		Name:       opCreateAPIKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAPIKeyInput{}
	}

	output = &CreateAPIKeyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAPIKey API operation for SPEECH_SAAS_PROD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for SPEECH_SAAS_PROD's
// API operation CreateAPIKey for usage and error information.
func (c *SPEECHSAASPROD) CreateAPIKey(input *CreateAPIKeyInput) (*CreateAPIKeyOutput, error) {
	req, out := c.CreateAPIKeyRequest(input)
	return out, req.Send()
}

// CreateAPIKeyWithContext is the same as CreateAPIKey with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAPIKey for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *SPEECHSAASPROD) CreateAPIKeyWithContext(ctx volcengine.Context, input *CreateAPIKeyInput, opts ...request.Option) (*CreateAPIKeyOutput, error) {
	req, out := c.CreateAPIKeyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateAPIKeyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// ProjectName is a required field
	ProjectName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateAPIKeyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAPIKeyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAPIKeyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateAPIKeyInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.ProjectName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetName sets the Name field's value.
func (s *CreateAPIKeyInput) SetName(v string) *CreateAPIKeyInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateAPIKeyInput) SetProjectName(v string) *CreateAPIKeyInput {
	s.ProjectName = &v
	return s
}

type CreateAPIKeyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s CreateAPIKeyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAPIKeyOutput) GoString() string {
	return s.String()
}
