// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opShowRolesForUserCommon = "ShowRolesForUser"

// ShowRolesForUserCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ShowRolesForUserCommon operation. The "output" return
// value will be populated with the ShowRolesForUserCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ShowRolesForUserCommon Request to send the API call to the service.
// the "output" return value is not valid until after ShowRolesForUserCommon Send returns without error.
//
// See ShowRolesForUserCommon for more information on using the ShowRolesForUserCommon
// API call, and error handling.
//
//    // Example sending a request using the ShowRolesForUserCommonRequest method.
//    req, resp := client.ShowRolesForUserCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) ShowRolesForUserCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opShowRolesForUserCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ShowRolesForUserCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation ShowRolesForUserCommon for usage and error information.
func (c *BYTEHOUSECE20240831) ShowRolesForUserCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ShowRolesForUserCommonRequest(input)
	return out, req.Send()
}

// ShowRolesForUserCommonWithContext is the same as ShowRolesForUserCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ShowRolesForUserCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) ShowRolesForUserCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ShowRolesForUserCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opShowRolesForUser = "ShowRolesForUser"

// ShowRolesForUserRequest generates a "volcengine/request.Request" representing the
// client's request for the ShowRolesForUser operation. The "output" return
// value will be populated with the ShowRolesForUserCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ShowRolesForUserCommon Request to send the API call to the service.
// the "output" return value is not valid until after ShowRolesForUserCommon Send returns without error.
//
// See ShowRolesForUser for more information on using the ShowRolesForUser
// API call, and error handling.
//
//    // Example sending a request using the ShowRolesForUserRequest method.
//    req, resp := client.ShowRolesForUserRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) ShowRolesForUserRequest(input *ShowRolesForUserInput) (req *request.Request, output *ShowRolesForUserOutput) {
	op := &request.Operation{
		Name:       opShowRolesForUser,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ShowRolesForUserInput{}
	}

	output = &ShowRolesForUserOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ShowRolesForUser API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation ShowRolesForUser for usage and error information.
func (c *BYTEHOUSECE20240831) ShowRolesForUser(input *ShowRolesForUserInput) (*ShowRolesForUserOutput, error) {
	req, out := c.ShowRolesForUserRequest(input)
	return out, req.Send()
}

// ShowRolesForUserWithContext is the same as ShowRolesForUser with the addition of
// the ability to pass a context and additional request options.
//
// See ShowRolesForUser for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) ShowRolesForUserWithContext(ctx volcengine.Context, input *ShowRolesForUserInput, opts ...request.Option) (*ShowRolesForUserOutput, error) {
	req, out := c.ShowRolesForUserRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForShowRolesForUserOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Roles []*RoleForShowRolesForUserOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DataForShowRolesForUserOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForShowRolesForUserOutput) GoString() string {
	return s.String()
}

// SetRoles sets the Roles field's value.
func (s *DataForShowRolesForUserOutput) SetRoles(v []*RoleForShowRolesForUserOutput) *DataForShowRolesForUserOutput {
	s.Roles = v
	return s
}

type RoleForShowRolesForUserOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdminOption *bool `type:"boolean" json:",omitempty"`

	ClusterID *int64 `type:"int64" json:",omitempty"`

	GrantTo *string `type:"string" json:",omitempty"`

	Immutable *bool `type:"boolean" json:",omitempty"`

	ImmutableReason *string `type:"string" json:",omitempty"`

	OnCluster *string `type:"string" json:",omitempty"`

	RawSql *string `type:"string" json:",omitempty"`

	RoleID *int32 `type:"int32" json:",omitempty"`

	RoleIsDefault *bool `type:"boolean" json:",omitempty"`

	RoleName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RoleForShowRolesForUserOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RoleForShowRolesForUserOutput) GoString() string {
	return s.String()
}

// SetAdminOption sets the AdminOption field's value.
func (s *RoleForShowRolesForUserOutput) SetAdminOption(v bool) *RoleForShowRolesForUserOutput {
	s.AdminOption = &v
	return s
}

// SetClusterID sets the ClusterID field's value.
func (s *RoleForShowRolesForUserOutput) SetClusterID(v int64) *RoleForShowRolesForUserOutput {
	s.ClusterID = &v
	return s
}

// SetGrantTo sets the GrantTo field's value.
func (s *RoleForShowRolesForUserOutput) SetGrantTo(v string) *RoleForShowRolesForUserOutput {
	s.GrantTo = &v
	return s
}

// SetImmutable sets the Immutable field's value.
func (s *RoleForShowRolesForUserOutput) SetImmutable(v bool) *RoleForShowRolesForUserOutput {
	s.Immutable = &v
	return s
}

// SetImmutableReason sets the ImmutableReason field's value.
func (s *RoleForShowRolesForUserOutput) SetImmutableReason(v string) *RoleForShowRolesForUserOutput {
	s.ImmutableReason = &v
	return s
}

// SetOnCluster sets the OnCluster field's value.
func (s *RoleForShowRolesForUserOutput) SetOnCluster(v string) *RoleForShowRolesForUserOutput {
	s.OnCluster = &v
	return s
}

// SetRawSql sets the RawSql field's value.
func (s *RoleForShowRolesForUserOutput) SetRawSql(v string) *RoleForShowRolesForUserOutput {
	s.RawSql = &v
	return s
}

// SetRoleID sets the RoleID field's value.
func (s *RoleForShowRolesForUserOutput) SetRoleID(v int32) *RoleForShowRolesForUserOutput {
	s.RoleID = &v
	return s
}

// SetRoleIsDefault sets the RoleIsDefault field's value.
func (s *RoleForShowRolesForUserOutput) SetRoleIsDefault(v bool) *RoleForShowRolesForUserOutput {
	s.RoleIsDefault = &v
	return s
}

// SetRoleName sets the RoleName field's value.
func (s *RoleForShowRolesForUserOutput) SetRoleName(v string) *RoleForShowRolesForUserOutput {
	s.RoleName = &v
	return s
}

type ShowRolesForUserInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Username is a required field
	Username *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ShowRolesForUserInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ShowRolesForUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ShowRolesForUserInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ShowRolesForUserInput"}
	if s.Username == nil {
		invalidParams.Add(request.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUsername sets the Username field's value.
func (s *ShowRolesForUserInput) SetUsername(v string) *ShowRolesForUserInput {
	s.Username = &v
	return s
}

type ShowRolesForUserOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForShowRolesForUserOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ShowRolesForUserOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ShowRolesForUserOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ShowRolesForUserOutput) SetData(v *DataForShowRolesForUserOutput) *ShowRolesForUserOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ShowRolesForUserOutput) SetMessage(v string) *ShowRolesForUserOutput {
	s.Message = &v
	return s
}
