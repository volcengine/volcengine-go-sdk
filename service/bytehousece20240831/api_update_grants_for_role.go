// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateGrantsForRoleCommon = "UpdateGrantsForRole"

// UpdateGrantsForRoleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGrantsForRoleCommon operation. The "output" return
// value will be populated with the UpdateGrantsForRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGrantsForRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGrantsForRoleCommon Send returns without error.
//
// See UpdateGrantsForRoleCommon for more information on using the UpdateGrantsForRoleCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateGrantsForRoleCommonRequest method.
//    req, resp := client.UpdateGrantsForRoleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) UpdateGrantsForRoleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateGrantsForRoleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGrantsForRoleCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation UpdateGrantsForRoleCommon for usage and error information.
func (c *BYTEHOUSECE20240831) UpdateGrantsForRoleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateGrantsForRoleCommonRequest(input)
	return out, req.Send()
}

// UpdateGrantsForRoleCommonWithContext is the same as UpdateGrantsForRoleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGrantsForRoleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) UpdateGrantsForRoleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateGrantsForRoleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateGrantsForRole = "UpdateGrantsForRole"

// UpdateGrantsForRoleRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateGrantsForRole operation. The "output" return
// value will be populated with the UpdateGrantsForRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateGrantsForRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateGrantsForRoleCommon Send returns without error.
//
// See UpdateGrantsForRole for more information on using the UpdateGrantsForRole
// API call, and error handling.
//
//    // Example sending a request using the UpdateGrantsForRoleRequest method.
//    req, resp := client.UpdateGrantsForRoleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) UpdateGrantsForRoleRequest(input *UpdateGrantsForRoleInput) (req *request.Request, output *UpdateGrantsForRoleOutput) {
	op := &request.Operation{
		Name:       opUpdateGrantsForRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateGrantsForRoleInput{}
	}

	output = &UpdateGrantsForRoleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateGrantsForRole API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation UpdateGrantsForRole for usage and error information.
func (c *BYTEHOUSECE20240831) UpdateGrantsForRole(input *UpdateGrantsForRoleInput) (*UpdateGrantsForRoleOutput, error) {
	req, out := c.UpdateGrantsForRoleRequest(input)
	return out, req.Send()
}

// UpdateGrantsForRoleWithContext is the same as UpdateGrantsForRole with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateGrantsForRole for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) UpdateGrantsForRoleWithContext(ctx volcengine.Context, input *UpdateGrantsForRoleInput, opts ...request.Option) (*UpdateGrantsForRoleOutput, error) {
	req, out := c.UpdateGrantsForRoleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForUpdateGrantsForRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForUpdateGrantsForRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForUpdateGrantsForRoleOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *DataForUpdateGrantsForRoleOutput) SetMessage(v string) *DataForUpdateGrantsForRoleOutput {
	s.Message = &v
	return s
}

type GrantForUpdateGrantsForRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *int32 `type:"int32" json:",omitempty"`

	GrantOption *bool `type:"boolean" json:",omitempty"`

	GrantTo *string `type:"string" json:",omitempty"`

	OnCluster *string `type:"string" json:",omitempty"`

	Privileges []*PrivilegeForUpdateGrantsForRoleInput `type:"list" json:",omitempty"`

	RawSql *string `type:"string" json:",omitempty"`

	Targets []*TargetForUpdateGrantsForRoleInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GrantForUpdateGrantsForRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantForUpdateGrantsForRoleInput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetClusterID(v int32) *GrantForUpdateGrantsForRoleInput {
	s.ClusterID = &v
	return s
}

// SetGrantOption sets the GrantOption field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetGrantOption(v bool) *GrantForUpdateGrantsForRoleInput {
	s.GrantOption = &v
	return s
}

// SetGrantTo sets the GrantTo field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetGrantTo(v string) *GrantForUpdateGrantsForRoleInput {
	s.GrantTo = &v
	return s
}

// SetOnCluster sets the OnCluster field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetOnCluster(v string) *GrantForUpdateGrantsForRoleInput {
	s.OnCluster = &v
	return s
}

// SetPrivileges sets the Privileges field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetPrivileges(v []*PrivilegeForUpdateGrantsForRoleInput) *GrantForUpdateGrantsForRoleInput {
	s.Privileges = v
	return s
}

// SetRawSql sets the RawSql field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetRawSql(v string) *GrantForUpdateGrantsForRoleInput {
	s.RawSql = &v
	return s
}

// SetTargets sets the Targets field's value.
func (s *GrantForUpdateGrantsForRoleInput) SetTargets(v []*TargetForUpdateGrantsForRoleInput) *GrantForUpdateGrantsForRoleInput {
	s.Targets = v
	return s
}

type PrivilegeForUpdateGrantsForRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PrivilegeForUpdateGrantsForRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivilegeForUpdateGrantsForRoleInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *PrivilegeForUpdateGrantsForRoleInput) SetColumns(v []*string) *PrivilegeForUpdateGrantsForRoleInput {
	s.Columns = v
	return s
}

// SetName sets the Name field's value.
func (s *PrivilegeForUpdateGrantsForRoleInput) SetName(v string) *PrivilegeForUpdateGrantsForRoleInput {
	s.Name = &v
	return s
}

type TargetForUpdateGrantsForRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Database *string `type:"string" json:",omitempty"`

	Table *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TargetForUpdateGrantsForRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetForUpdateGrantsForRoleInput) GoString() string {
	return s.String()
}

// SetDatabase sets the Database field's value.
func (s *TargetForUpdateGrantsForRoleInput) SetDatabase(v string) *TargetForUpdateGrantsForRoleInput {
	s.Database = &v
	return s
}

// SetTable sets the Table field's value.
func (s *TargetForUpdateGrantsForRoleInput) SetTable(v string) *TargetForUpdateGrantsForRoleInput {
	s.Table = &v
	return s
}

type UpdateGrantsForRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ActionType is a required field
	ActionType *string `type:"string" json:",omitempty" required:"true" enum:"EnumOfActionTypeForUpdateGrantsForRoleInput"`

	Grants []*GrantForUpdateGrantsForRoleInput `type:"list" json:",omitempty"`

	// RoleID is a required field
	RoleID *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateGrantsForRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGrantsForRoleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateGrantsForRoleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateGrantsForRoleInput"}
	if s.ActionType == nil {
		invalidParams.Add(request.NewErrParamRequired("ActionType"))
	}
	if s.RoleID == nil {
		invalidParams.Add(request.NewErrParamRequired("RoleID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetActionType sets the ActionType field's value.
func (s *UpdateGrantsForRoleInput) SetActionType(v string) *UpdateGrantsForRoleInput {
	s.ActionType = &v
	return s
}

// SetGrants sets the Grants field's value.
func (s *UpdateGrantsForRoleInput) SetGrants(v []*GrantForUpdateGrantsForRoleInput) *UpdateGrantsForRoleInput {
	s.Grants = v
	return s
}

// SetRoleID sets the RoleID field's value.
func (s *UpdateGrantsForRoleInput) SetRoleID(v int32) *UpdateGrantsForRoleInput {
	s.RoleID = &v
	return s
}

type UpdateGrantsForRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForUpdateGrantsForRoleOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateGrantsForRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateGrantsForRoleOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *UpdateGrantsForRoleOutput) SetData(v *DataForUpdateGrantsForRoleOutput) *UpdateGrantsForRoleOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *UpdateGrantsForRoleOutput) SetMessage(v string) *UpdateGrantsForRoleOutput {
	s.Message = &v
	return s
}

const (
	// EnumOfActionTypeForUpdateGrantsForRoleInputGrant is a EnumOfActionTypeForUpdateGrantsForRoleInput enum value
	EnumOfActionTypeForUpdateGrantsForRoleInputGrant = "GRANT"

	// EnumOfActionTypeForUpdateGrantsForRoleInputRevoke is a EnumOfActionTypeForUpdateGrantsForRoleInput enum value
	EnumOfActionTypeForUpdateGrantsForRoleInputRevoke = "REVOKE"
)
