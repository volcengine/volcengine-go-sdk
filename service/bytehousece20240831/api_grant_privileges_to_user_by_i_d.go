// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGrantPrivilegesToUserByIDCommon = "GrantPrivilegesToUserByID"

// GrantPrivilegesToUserByIDCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GrantPrivilegesToUserByIDCommon operation. The "output" return
// value will be populated with the GrantPrivilegesToUserByIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GrantPrivilegesToUserByIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after GrantPrivilegesToUserByIDCommon Send returns without error.
//
// See GrantPrivilegesToUserByIDCommon for more information on using the GrantPrivilegesToUserByIDCommon
// API call, and error handling.
//
//    // Example sending a request using the GrantPrivilegesToUserByIDCommonRequest method.
//    req, resp := client.GrantPrivilegesToUserByIDCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByIDCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGrantPrivilegesToUserByIDCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GrantPrivilegesToUserByIDCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation GrantPrivilegesToUserByIDCommon for usage and error information.
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByIDCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GrantPrivilegesToUserByIDCommonRequest(input)
	return out, req.Send()
}

// GrantPrivilegesToUserByIDCommonWithContext is the same as GrantPrivilegesToUserByIDCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GrantPrivilegesToUserByIDCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByIDCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GrantPrivilegesToUserByIDCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGrantPrivilegesToUserByID = "GrantPrivilegesToUserByID"

// GrantPrivilegesToUserByIDRequest generates a "volcengine/request.Request" representing the
// client's request for the GrantPrivilegesToUserByID operation. The "output" return
// value will be populated with the GrantPrivilegesToUserByIDCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GrantPrivilegesToUserByIDCommon Request to send the API call to the service.
// the "output" return value is not valid until after GrantPrivilegesToUserByIDCommon Send returns without error.
//
// See GrantPrivilegesToUserByID for more information on using the GrantPrivilegesToUserByID
// API call, and error handling.
//
//    // Example sending a request using the GrantPrivilegesToUserByIDRequest method.
//    req, resp := client.GrantPrivilegesToUserByIDRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByIDRequest(input *GrantPrivilegesToUserByIDInput) (req *request.Request, output *GrantPrivilegesToUserByIDOutput) {
	op := &request.Operation{
		Name:       opGrantPrivilegesToUserByID,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GrantPrivilegesToUserByIDInput{}
	}

	output = &GrantPrivilegesToUserByIDOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GrantPrivilegesToUserByID API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation GrantPrivilegesToUserByID for usage and error information.
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByID(input *GrantPrivilegesToUserByIDInput) (*GrantPrivilegesToUserByIDOutput, error) {
	req, out := c.GrantPrivilegesToUserByIDRequest(input)
	return out, req.Send()
}

// GrantPrivilegesToUserByIDWithContext is the same as GrantPrivilegesToUserByID with the addition of
// the ability to pass a context and additional request options.
//
// See GrantPrivilegesToUserByID for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) GrantPrivilegesToUserByIDWithContext(ctx volcengine.Context, input *GrantPrivilegesToUserByIDInput, opts ...request.Option) (*GrantPrivilegesToUserByIDOutput, error) {
	req, out := c.GrantPrivilegesToUserByIDRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForGrantPrivilegesToUserByIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForGrantPrivilegesToUserByIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForGrantPrivilegesToUserByIDOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *DataForGrantPrivilegesToUserByIDOutput) SetMessage(v string) *DataForGrantPrivilegesToUserByIDOutput {
	s.Message = &v
	return s
}

type GrantForGrantPrivilegesToUserByIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *int32 `type:"int32" json:",omitempty"`

	GrantOption *bool `type:"boolean" json:",omitempty"`

	GrantTo *string `type:"string" json:",omitempty"`

	OnCluster *string `type:"string" json:",omitempty"`

	Privileges []*PrivilegeForGrantPrivilegesToUserByIDInput `type:"list" json:",omitempty"`

	RawSql *string `type:"string" json:",omitempty"`

	Targets []*TargetForGrantPrivilegesToUserByIDInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GrantForGrantPrivilegesToUserByIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantForGrantPrivilegesToUserByIDInput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetClusterID(v int32) *GrantForGrantPrivilegesToUserByIDInput {
	s.ClusterID = &v
	return s
}

// SetGrantOption sets the GrantOption field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetGrantOption(v bool) *GrantForGrantPrivilegesToUserByIDInput {
	s.GrantOption = &v
	return s
}

// SetGrantTo sets the GrantTo field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetGrantTo(v string) *GrantForGrantPrivilegesToUserByIDInput {
	s.GrantTo = &v
	return s
}

// SetOnCluster sets the OnCluster field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetOnCluster(v string) *GrantForGrantPrivilegesToUserByIDInput {
	s.OnCluster = &v
	return s
}

// SetPrivileges sets the Privileges field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetPrivileges(v []*PrivilegeForGrantPrivilegesToUserByIDInput) *GrantForGrantPrivilegesToUserByIDInput {
	s.Privileges = v
	return s
}

// SetRawSql sets the RawSql field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetRawSql(v string) *GrantForGrantPrivilegesToUserByIDInput {
	s.RawSql = &v
	return s
}

// SetTargets sets the Targets field's value.
func (s *GrantForGrantPrivilegesToUserByIDInput) SetTargets(v []*TargetForGrantPrivilegesToUserByIDInput) *GrantForGrantPrivilegesToUserByIDInput {
	s.Targets = v
	return s
}

type GrantPrivilegesToUserByIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Grants []*GrantForGrantPrivilegesToUserByIDInput `type:"list" json:",omitempty"`

	// UserID is a required field
	UserID *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GrantPrivilegesToUserByIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantPrivilegesToUserByIDInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GrantPrivilegesToUserByIDInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GrantPrivilegesToUserByIDInput"}
	if s.UserID == nil {
		invalidParams.Add(request.NewErrParamRequired("UserID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGrants sets the Grants field's value.
func (s *GrantPrivilegesToUserByIDInput) SetGrants(v []*GrantForGrantPrivilegesToUserByIDInput) *GrantPrivilegesToUserByIDInput {
	s.Grants = v
	return s
}

// SetUserID sets the UserID field's value.
func (s *GrantPrivilegesToUserByIDInput) SetUserID(v int32) *GrantPrivilegesToUserByIDInput {
	s.UserID = &v
	return s
}

type GrantPrivilegesToUserByIDOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForGrantPrivilegesToUserByIDOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GrantPrivilegesToUserByIDOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantPrivilegesToUserByIDOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *GrantPrivilegesToUserByIDOutput) SetData(v *DataForGrantPrivilegesToUserByIDOutput) *GrantPrivilegesToUserByIDOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *GrantPrivilegesToUserByIDOutput) SetMessage(v string) *GrantPrivilegesToUserByIDOutput {
	s.Message = &v
	return s
}

type PrivilegeForGrantPrivilegesToUserByIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PrivilegeForGrantPrivilegesToUserByIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivilegeForGrantPrivilegesToUserByIDInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *PrivilegeForGrantPrivilegesToUserByIDInput) SetColumns(v []*string) *PrivilegeForGrantPrivilegesToUserByIDInput {
	s.Columns = v
	return s
}

// SetName sets the Name field's value.
func (s *PrivilegeForGrantPrivilegesToUserByIDInput) SetName(v string) *PrivilegeForGrantPrivilegesToUserByIDInput {
	s.Name = &v
	return s
}

type TargetForGrantPrivilegesToUserByIDInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Database *string `type:"string" json:",omitempty"`

	Table *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TargetForGrantPrivilegesToUserByIDInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetForGrantPrivilegesToUserByIDInput) GoString() string {
	return s.String()
}

// SetDatabase sets the Database field's value.
func (s *TargetForGrantPrivilegesToUserByIDInput) SetDatabase(v string) *TargetForGrantPrivilegesToUserByIDInput {
	s.Database = &v
	return s
}

// SetTable sets the Table field's value.
func (s *TargetForGrantPrivilegesToUserByIDInput) SetTable(v string) *TargetForGrantPrivilegesToUserByIDInput {
	s.Table = &v
	return s
}
