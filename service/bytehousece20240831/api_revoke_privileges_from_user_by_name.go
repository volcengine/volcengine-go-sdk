// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opRevokePrivilegesFromUserByNameCommon = "RevokePrivilegesFromUserByName"

// RevokePrivilegesFromUserByNameCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the RevokePrivilegesFromUserByNameCommon operation. The "output" return
// value will be populated with the RevokePrivilegesFromUserByNameCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RevokePrivilegesFromUserByNameCommon Request to send the API call to the service.
// the "output" return value is not valid until after RevokePrivilegesFromUserByNameCommon Send returns without error.
//
// See RevokePrivilegesFromUserByNameCommon for more information on using the RevokePrivilegesFromUserByNameCommon
// API call, and error handling.
//
//    // Example sending a request using the RevokePrivilegesFromUserByNameCommonRequest method.
//    req, resp := client.RevokePrivilegesFromUserByNameCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByNameCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRevokePrivilegesFromUserByNameCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RevokePrivilegesFromUserByNameCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation RevokePrivilegesFromUserByNameCommon for usage and error information.
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByNameCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RevokePrivilegesFromUserByNameCommonRequest(input)
	return out, req.Send()
}

// RevokePrivilegesFromUserByNameCommonWithContext is the same as RevokePrivilegesFromUserByNameCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RevokePrivilegesFromUserByNameCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByNameCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RevokePrivilegesFromUserByNameCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRevokePrivilegesFromUserByName = "RevokePrivilegesFromUserByName"

// RevokePrivilegesFromUserByNameRequest generates a "volcengine/request.Request" representing the
// client's request for the RevokePrivilegesFromUserByName operation. The "output" return
// value will be populated with the RevokePrivilegesFromUserByNameCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RevokePrivilegesFromUserByNameCommon Request to send the API call to the service.
// the "output" return value is not valid until after RevokePrivilegesFromUserByNameCommon Send returns without error.
//
// See RevokePrivilegesFromUserByName for more information on using the RevokePrivilegesFromUserByName
// API call, and error handling.
//
//    // Example sending a request using the RevokePrivilegesFromUserByNameRequest method.
//    req, resp := client.RevokePrivilegesFromUserByNameRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByNameRequest(input *RevokePrivilegesFromUserByNameInput) (req *request.Request, output *RevokePrivilegesFromUserByNameOutput) {
	op := &request.Operation{
		Name:       opRevokePrivilegesFromUserByName,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RevokePrivilegesFromUserByNameInput{}
	}

	output = &RevokePrivilegesFromUserByNameOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// RevokePrivilegesFromUserByName API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation RevokePrivilegesFromUserByName for usage and error information.
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByName(input *RevokePrivilegesFromUserByNameInput) (*RevokePrivilegesFromUserByNameOutput, error) {
	req, out := c.RevokePrivilegesFromUserByNameRequest(input)
	return out, req.Send()
}

// RevokePrivilegesFromUserByNameWithContext is the same as RevokePrivilegesFromUserByName with the addition of
// the ability to pass a context and additional request options.
//
// See RevokePrivilegesFromUserByName for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) RevokePrivilegesFromUserByNameWithContext(ctx volcengine.Context, input *RevokePrivilegesFromUserByNameInput, opts ...request.Option) (*RevokePrivilegesFromUserByNameOutput, error) {
	req, out := c.RevokePrivilegesFromUserByNameRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForRevokePrivilegesFromUserByNameOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForRevokePrivilegesFromUserByNameOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForRevokePrivilegesFromUserByNameOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *DataForRevokePrivilegesFromUserByNameOutput) SetMessage(v string) *DataForRevokePrivilegesFromUserByNameOutput {
	s.Message = &v
	return s
}

type GrantForRevokePrivilegesFromUserByNameInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterID *int32 `type:"int32" json:",omitempty"`

	GrantOption *bool `type:"boolean" json:",omitempty"`

	GrantTo *string `type:"string" json:",omitempty"`

	OnCluster *string `type:"string" json:",omitempty"`

	Privileges []*PrivilegeForRevokePrivilegesFromUserByNameInput `type:"list" json:",omitempty"`

	RawSql *string `type:"string" json:",omitempty"`

	Targets []*TargetForRevokePrivilegesFromUserByNameInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GrantForRevokePrivilegesFromUserByNameInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantForRevokePrivilegesFromUserByNameInput) GoString() string {
	return s.String()
}

// SetClusterID sets the ClusterID field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetClusterID(v int32) *GrantForRevokePrivilegesFromUserByNameInput {
	s.ClusterID = &v
	return s
}

// SetGrantOption sets the GrantOption field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetGrantOption(v bool) *GrantForRevokePrivilegesFromUserByNameInput {
	s.GrantOption = &v
	return s
}

// SetGrantTo sets the GrantTo field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetGrantTo(v string) *GrantForRevokePrivilegesFromUserByNameInput {
	s.GrantTo = &v
	return s
}

// SetOnCluster sets the OnCluster field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetOnCluster(v string) *GrantForRevokePrivilegesFromUserByNameInput {
	s.OnCluster = &v
	return s
}

// SetPrivileges sets the Privileges field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetPrivileges(v []*PrivilegeForRevokePrivilegesFromUserByNameInput) *GrantForRevokePrivilegesFromUserByNameInput {
	s.Privileges = v
	return s
}

// SetRawSql sets the RawSql field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetRawSql(v string) *GrantForRevokePrivilegesFromUserByNameInput {
	s.RawSql = &v
	return s
}

// SetTargets sets the Targets field's value.
func (s *GrantForRevokePrivilegesFromUserByNameInput) SetTargets(v []*TargetForRevokePrivilegesFromUserByNameInput) *GrantForRevokePrivilegesFromUserByNameInput {
	s.Targets = v
	return s
}

type PrivilegeForRevokePrivilegesFromUserByNameInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Columns []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PrivilegeForRevokePrivilegesFromUserByNameInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PrivilegeForRevokePrivilegesFromUserByNameInput) GoString() string {
	return s.String()
}

// SetColumns sets the Columns field's value.
func (s *PrivilegeForRevokePrivilegesFromUserByNameInput) SetColumns(v []*string) *PrivilegeForRevokePrivilegesFromUserByNameInput {
	s.Columns = v
	return s
}

// SetName sets the Name field's value.
func (s *PrivilegeForRevokePrivilegesFromUserByNameInput) SetName(v string) *PrivilegeForRevokePrivilegesFromUserByNameInput {
	s.Name = &v
	return s
}

type RevokePrivilegesFromUserByNameInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Grants []*GrantForRevokePrivilegesFromUserByNameInput `type:"list" json:",omitempty"`

	// Username is a required field
	Username *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s RevokePrivilegesFromUserByNameInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokePrivilegesFromUserByNameInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RevokePrivilegesFromUserByNameInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RevokePrivilegesFromUserByNameInput"}
	if s.Username == nil {
		invalidParams.Add(request.NewErrParamRequired("Username"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetGrants sets the Grants field's value.
func (s *RevokePrivilegesFromUserByNameInput) SetGrants(v []*GrantForRevokePrivilegesFromUserByNameInput) *RevokePrivilegesFromUserByNameInput {
	s.Grants = v
	return s
}

// SetUsername sets the Username field's value.
func (s *RevokePrivilegesFromUserByNameInput) SetUsername(v string) *RevokePrivilegesFromUserByNameInput {
	s.Username = &v
	return s
}

type RevokePrivilegesFromUserByNameOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForRevokePrivilegesFromUserByNameOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RevokePrivilegesFromUserByNameOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RevokePrivilegesFromUserByNameOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *RevokePrivilegesFromUserByNameOutput) SetData(v *DataForRevokePrivilegesFromUserByNameOutput) *RevokePrivilegesFromUserByNameOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *RevokePrivilegesFromUserByNameOutput) SetMessage(v string) *RevokePrivilegesFromUserByNameOutput {
	s.Message = &v
	return s
}

type TargetForRevokePrivilegesFromUserByNameInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Database *string `type:"string" json:",omitempty"`

	Table *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TargetForRevokePrivilegesFromUserByNameInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TargetForRevokePrivilegesFromUserByNameInput) GoString() string {
	return s.String()
}

// SetDatabase sets the Database field's value.
func (s *TargetForRevokePrivilegesFromUserByNameInput) SetDatabase(v string) *TargetForRevokePrivilegesFromUserByNameInput {
	s.Database = &v
	return s
}

// SetTable sets the Table field's value.
func (s *TargetForRevokePrivilegesFromUserByNameInput) SetTable(v string) *TargetForRevokePrivilegesFromUserByNameInput {
	s.Table = &v
	return s
}
