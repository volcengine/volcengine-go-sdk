// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateRoleCommon = "CreateRole"

// CreateRoleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRoleCommon operation. The "output" return
// value will be populated with the CreateRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRoleCommon Send returns without error.
//
// See CreateRoleCommon for more information on using the CreateRoleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateRoleCommonRequest method.
//    req, resp := client.CreateRoleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) CreateRoleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateRoleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRoleCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation CreateRoleCommon for usage and error information.
func (c *BYTEHOUSECE20240831) CreateRoleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateRoleCommonRequest(input)
	return out, req.Send()
}

// CreateRoleCommonWithContext is the same as CreateRoleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRoleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) CreateRoleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateRoleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRole = "CreateRole"

// CreateRoleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRole operation. The "output" return
// value will be populated with the CreateRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRoleCommon Send returns without error.
//
// See CreateRole for more information on using the CreateRole
// API call, and error handling.
//
//    // Example sending a request using the CreateRoleRequest method.
//    req, resp := client.CreateRoleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) CreateRoleRequest(input *CreateRoleInput) (req *request.Request, output *CreateRoleOutput) {
	op := &request.Operation{
		Name:       opCreateRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateRoleInput{}
	}

	output = &CreateRoleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateRole API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation CreateRole for usage and error information.
func (c *BYTEHOUSECE20240831) CreateRole(input *CreateRoleInput) (*CreateRoleOutput, error) {
	req, out := c.CreateRoleRequest(input)
	return out, req.Send()
}

// CreateRoleWithContext is the same as CreateRole with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRole for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) CreateRoleWithContext(ctx volcengine.Context, input *CreateRoleInput, opts ...request.Option) (*CreateRoleOutput, error) {
	req, out := c.CreateRoleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClusterID is a required field
	ClusterID *int32 `type:"int32" json:",omitempty" required:"true"`

	Description *string `type:"string" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	Users []*UserForCreateRoleInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CreateRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRoleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateRoleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateRoleInput"}
	if s.ClusterID == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterID"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClusterID sets the ClusterID field's value.
func (s *CreateRoleInput) SetClusterID(v int32) *CreateRoleInput {
	s.ClusterID = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateRoleInput) SetDescription(v string) *CreateRoleInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateRoleInput) SetName(v string) *CreateRoleInput {
	s.Name = &v
	return s
}

// SetUsers sets the Users field's value.
func (s *CreateRoleInput) SetUsers(v []*UserForCreateRoleInput) *CreateRoleInput {
	s.Users = v
	return s
}

type CreateRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForCreateRoleOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRoleOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *CreateRoleOutput) SetData(v *DataForCreateRoleOutput) *CreateRoleOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *CreateRoleOutput) SetMessage(v string) *CreateRoleOutput {
	s.Message = &v
	return s
}

type DataForCreateRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`

	Role *RoleForCreateRoleOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s DataForCreateRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForCreateRoleOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *DataForCreateRoleOutput) SetMessage(v string) *DataForCreateRoleOutput {
	s.Message = &v
	return s
}

// SetRole sets the Role field's value.
func (s *DataForCreateRoleOutput) SetRole(v *RoleForCreateRoleOutput) *DataForCreateRoleOutput {
	s.Role = v
	return s
}

type RoleForCreateRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountID *int64 `type:"int64" json:",omitempty"`

	ClusterID *int64 `type:"int64" json:",omitempty"`

	ClusterName *string `type:"string" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:",omitempty"`

	CreatedBy *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	GrantUsers []*string `type:"list" json:",omitempty"`

	ID *int64 `type:"int64" json:",omitempty"`

	IsDefault *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UpdatedAt *int64 `type:"int64" json:",omitempty"`

	UpdatedBy *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RoleForCreateRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RoleForCreateRoleOutput) GoString() string {
	return s.String()
}

// SetAccountID sets the AccountID field's value.
func (s *RoleForCreateRoleOutput) SetAccountID(v int64) *RoleForCreateRoleOutput {
	s.AccountID = &v
	return s
}

// SetClusterID sets the ClusterID field's value.
func (s *RoleForCreateRoleOutput) SetClusterID(v int64) *RoleForCreateRoleOutput {
	s.ClusterID = &v
	return s
}

// SetClusterName sets the ClusterName field's value.
func (s *RoleForCreateRoleOutput) SetClusterName(v string) *RoleForCreateRoleOutput {
	s.ClusterName = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *RoleForCreateRoleOutput) SetCreatedAt(v int64) *RoleForCreateRoleOutput {
	s.CreatedAt = &v
	return s
}

// SetCreatedBy sets the CreatedBy field's value.
func (s *RoleForCreateRoleOutput) SetCreatedBy(v string) *RoleForCreateRoleOutput {
	s.CreatedBy = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *RoleForCreateRoleOutput) SetDescription(v string) *RoleForCreateRoleOutput {
	s.Description = &v
	return s
}

// SetGrantUsers sets the GrantUsers field's value.
func (s *RoleForCreateRoleOutput) SetGrantUsers(v []*string) *RoleForCreateRoleOutput {
	s.GrantUsers = v
	return s
}

// SetID sets the ID field's value.
func (s *RoleForCreateRoleOutput) SetID(v int64) *RoleForCreateRoleOutput {
	s.ID = &v
	return s
}

// SetIsDefault sets the IsDefault field's value.
func (s *RoleForCreateRoleOutput) SetIsDefault(v bool) *RoleForCreateRoleOutput {
	s.IsDefault = &v
	return s
}

// SetName sets the Name field's value.
func (s *RoleForCreateRoleOutput) SetName(v string) *RoleForCreateRoleOutput {
	s.Name = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *RoleForCreateRoleOutput) SetUpdatedAt(v int64) *RoleForCreateRoleOutput {
	s.UpdatedAt = &v
	return s
}

// SetUpdatedBy sets the UpdatedBy field's value.
func (s *RoleForCreateRoleOutput) SetUpdatedBy(v string) *RoleForCreateRoleOutput {
	s.UpdatedBy = &v
	return s
}

type UserForCreateRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdminOption *bool `type:"boolean" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UserForCreateRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UserForCreateRoleInput) GoString() string {
	return s.String()
}

// SetAdminOption sets the AdminOption field's value.
func (s *UserForCreateRoleInput) SetAdminOption(v bool) *UserForCreateRoleInput {
	s.AdminOption = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *UserForCreateRoleInput) SetCreatedAt(v int64) *UserForCreateRoleInput {
	s.CreatedAt = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *UserForCreateRoleInput) SetUsername(v string) *UserForCreateRoleInput {
	s.Username = &v
	return s
}
