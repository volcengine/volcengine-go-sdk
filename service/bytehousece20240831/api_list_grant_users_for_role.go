// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bytehousece20240831

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListGrantUsersForRoleCommon = "ListGrantUsersForRole"

// ListGrantUsersForRoleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListGrantUsersForRoleCommon operation. The "output" return
// value will be populated with the ListGrantUsersForRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListGrantUsersForRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListGrantUsersForRoleCommon Send returns without error.
//
// See ListGrantUsersForRoleCommon for more information on using the ListGrantUsersForRoleCommon
// API call, and error handling.
//
//    // Example sending a request using the ListGrantUsersForRoleCommonRequest method.
//    req, resp := client.ListGrantUsersForRoleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) ListGrantUsersForRoleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListGrantUsersForRoleCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListGrantUsersForRoleCommon API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation ListGrantUsersForRoleCommon for usage and error information.
func (c *BYTEHOUSECE20240831) ListGrantUsersForRoleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListGrantUsersForRoleCommonRequest(input)
	return out, req.Send()
}

// ListGrantUsersForRoleCommonWithContext is the same as ListGrantUsersForRoleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListGrantUsersForRoleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) ListGrantUsersForRoleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListGrantUsersForRoleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListGrantUsersForRole = "ListGrantUsersForRole"

// ListGrantUsersForRoleRequest generates a "volcengine/request.Request" representing the
// client's request for the ListGrantUsersForRole operation. The "output" return
// value will be populated with the ListGrantUsersForRoleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListGrantUsersForRoleCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListGrantUsersForRoleCommon Send returns without error.
//
// See ListGrantUsersForRole for more information on using the ListGrantUsersForRole
// API call, and error handling.
//
//    // Example sending a request using the ListGrantUsersForRoleRequest method.
//    req, resp := client.ListGrantUsersForRoleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BYTEHOUSECE20240831) ListGrantUsersForRoleRequest(input *ListGrantUsersForRoleInput) (req *request.Request, output *ListGrantUsersForRoleOutput) {
	op := &request.Operation{
		Name:       opListGrantUsersForRole,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListGrantUsersForRoleInput{}
	}

	output = &ListGrantUsersForRoleOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListGrantUsersForRole API operation for BYTEHOUSE_CE20240831.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BYTEHOUSE_CE20240831's
// API operation ListGrantUsersForRole for usage and error information.
func (c *BYTEHOUSECE20240831) ListGrantUsersForRole(input *ListGrantUsersForRoleInput) (*ListGrantUsersForRoleOutput, error) {
	req, out := c.ListGrantUsersForRoleRequest(input)
	return out, req.Send()
}

// ListGrantUsersForRoleWithContext is the same as ListGrantUsersForRole with the addition of
// the ability to pass a context and additional request options.
//
// See ListGrantUsersForRole for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BYTEHOUSECE20240831) ListGrantUsersForRoleWithContext(ctx volcengine.Context, input *ListGrantUsersForRoleInput, opts ...request.Option) (*ListGrantUsersForRoleOutput, error) {
	req, out := c.ListGrantUsersForRoleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListGrantUsersForRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Grants []*GrantForListGrantUsersForRoleOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DataForListGrantUsersForRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListGrantUsersForRoleOutput) GoString() string {
	return s.String()
}

// SetGrants sets the Grants field's value.
func (s *DataForListGrantUsersForRoleOutput) SetGrants(v []*GrantForListGrantUsersForRoleOutput) *DataForListGrantUsersForRoleOutput {
	s.Grants = v
	return s
}

type GrantForListGrantUsersForRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdminOption *bool `type:"boolean" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GrantForListGrantUsersForRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantForListGrantUsersForRoleOutput) GoString() string {
	return s.String()
}

// SetAdminOption sets the AdminOption field's value.
func (s *GrantForListGrantUsersForRoleOutput) SetAdminOption(v bool) *GrantForListGrantUsersForRoleOutput {
	s.AdminOption = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *GrantForListGrantUsersForRoleOutput) SetCreatedAt(v int64) *GrantForListGrantUsersForRoleOutput {
	s.CreatedAt = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *GrantForListGrantUsersForRoleOutput) SetUsername(v string) *GrantForListGrantUsersForRoleOutput {
	s.Username = &v
	return s
}

type ListGrantUsersForRoleInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// RoleID is a required field
	RoleID *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListGrantUsersForRoleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListGrantUsersForRoleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListGrantUsersForRoleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListGrantUsersForRoleInput"}
	if s.RoleID == nil {
		invalidParams.Add(request.NewErrParamRequired("RoleID"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRoleID sets the RoleID field's value.
func (s *ListGrantUsersForRoleInput) SetRoleID(v int32) *ListGrantUsersForRoleInput {
	s.RoleID = &v
	return s
}

type ListGrantUsersForRoleOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data *DataForListGrantUsersForRoleOutput `type:"structure" json:",omitempty"`

	Message *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListGrantUsersForRoleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListGrantUsersForRoleOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListGrantUsersForRoleOutput) SetData(v *DataForListGrantUsersForRoleOutput) *ListGrantUsersForRoleOutput {
	s.Data = v
	return s
}

// SetMessage sets the Message field's value.
func (s *ListGrantUsersForRoleOutput) SetMessage(v string) *ListGrantUsersForRoleOutput {
	s.Message = &v
	return s
}
