// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSearchGroupsCommon = "SearchGroups"

// SearchGroupsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SearchGroupsCommon operation. The "output" return
// value will be populated with the SearchGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SearchGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after SearchGroupsCommon Send returns without error.
//
// See SearchGroupsCommon for more information on using the SearchGroupsCommon
// API call, and error handling.
//
//    // Example sending a request using the SearchGroupsCommonRequest method.
//    req, resp := client.SearchGroupsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) SearchGroupsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSearchGroupsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SearchGroupsCommon API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation SearchGroupsCommon for usage and error information.
func (c *BMQ) SearchGroupsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SearchGroupsCommonRequest(input)
	return out, req.Send()
}

// SearchGroupsCommonWithContext is the same as SearchGroupsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SearchGroupsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) SearchGroupsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SearchGroupsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSearchGroups = "SearchGroups"

// SearchGroupsRequest generates a "volcengine/request.Request" representing the
// client's request for the SearchGroups operation. The "output" return
// value will be populated with the SearchGroupsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SearchGroupsCommon Request to send the API call to the service.
// the "output" return value is not valid until after SearchGroupsCommon Send returns without error.
//
// See SearchGroups for more information on using the SearchGroups
// API call, and error handling.
//
//    // Example sending a request using the SearchGroupsRequest method.
//    req, resp := client.SearchGroupsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) SearchGroupsRequest(input *SearchGroupsInput) (req *request.Request, output *SearchGroupsOutput) {
	op := &request.Operation{
		Name:       opSearchGroups,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SearchGroupsInput{}
	}

	output = &SearchGroupsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SearchGroups API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation SearchGroups for usage and error information.
func (c *BMQ) SearchGroups(input *SearchGroupsInput) (*SearchGroupsOutput, error) {
	req, out := c.SearchGroupsRequest(input)
	return out, req.Send()
}

// SearchGroupsWithContext is the same as SearchGroups with the addition of
// the ability to pass a context and additional request options.
//
// See SearchGroups for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) SearchGroupsWithContext(ctx volcengine.Context, input *SearchGroupsInput, opts ...request.Option) (*SearchGroupsOutput, error) {
	req, out := c.SearchGroupsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForSearchGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	GroupId *string `type:"string" json:",omitempty"`

	GroupName *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	OwnerId *string `type:"string" json:",omitempty"`

	OwnerName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty" enum:"EnumOfStatusForSearchGroupsOutput"`
}

// String returns the string representation
func (s ItemForSearchGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForSearchGroupsOutput) GoString() string {
	return s.String()
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForSearchGroupsOutput) SetCreateTime(v string) *ItemForSearchGroupsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForSearchGroupsOutput) SetDescription(v string) *ItemForSearchGroupsOutput {
	s.Description = &v
	return s
}

// SetGroupId sets the GroupId field's value.
func (s *ItemForSearchGroupsOutput) SetGroupId(v string) *ItemForSearchGroupsOutput {
	s.GroupId = &v
	return s
}

// SetGroupName sets the GroupName field's value.
func (s *ItemForSearchGroupsOutput) SetGroupName(v string) *ItemForSearchGroupsOutput {
	s.GroupName = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ItemForSearchGroupsOutput) SetInstanceId(v string) *ItemForSearchGroupsOutput {
	s.InstanceId = &v
	return s
}

// SetOwnerId sets the OwnerId field's value.
func (s *ItemForSearchGroupsOutput) SetOwnerId(v string) *ItemForSearchGroupsOutput {
	s.OwnerId = &v
	return s
}

// SetOwnerName sets the OwnerName field's value.
func (s *ItemForSearchGroupsOutput) SetOwnerName(v string) *ItemForSearchGroupsOutput {
	s.OwnerName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ItemForSearchGroupsOutput) SetStatus(v string) *ItemForSearchGroupsOutput {
	s.Status = &v
	return s
}

type SearchGroupsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreateTimeOrder *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	SearchKey *string `type:"string" json:",omitempty"`

	Status []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SearchGroupsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SearchGroupsInput) GoString() string {
	return s.String()
}

// SetCreateTimeOrder sets the CreateTimeOrder field's value.
func (s *SearchGroupsInput) SetCreateTimeOrder(v string) *SearchGroupsInput {
	s.CreateTimeOrder = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *SearchGroupsInput) SetInstanceId(v string) *SearchGroupsInput {
	s.InstanceId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *SearchGroupsInput) SetPageNumber(v int32) *SearchGroupsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *SearchGroupsInput) SetPageSize(v int32) *SearchGroupsInput {
	s.PageSize = &v
	return s
}

// SetSearchKey sets the SearchKey field's value.
func (s *SearchGroupsInput) SetSearchKey(v string) *SearchGroupsInput {
	s.SearchKey = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SearchGroupsInput) SetStatus(v []*string) *SearchGroupsInput {
	s.Status = v
	return s
}

type SearchGroupsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForSearchGroupsOutput `type:"list" json:",omitempty"`

	PageCount *int32 `type:"int32" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s SearchGroupsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SearchGroupsOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *SearchGroupsOutput) SetItems(v []*ItemForSearchGroupsOutput) *SearchGroupsOutput {
	s.Items = v
	return s
}

// SetPageCount sets the PageCount field's value.
func (s *SearchGroupsOutput) SetPageCount(v int32) *SearchGroupsOutput {
	s.PageCount = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *SearchGroupsOutput) SetPageNumber(v int32) *SearchGroupsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *SearchGroupsOutput) SetPageSize(v int32) *SearchGroupsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *SearchGroupsOutput) SetTotalCount(v int64) *SearchGroupsOutput {
	s.TotalCount = &v
	return s
}

const (
	// EnumOfStatusForSearchGroupsOutputCreating is a EnumOfStatusForSearchGroupsOutput enum value
	EnumOfStatusForSearchGroupsOutputCreating = "CREATING"

	// EnumOfStatusForSearchGroupsOutputRunning is a EnumOfStatusForSearchGroupsOutput enum value
	EnumOfStatusForSearchGroupsOutputRunning = "RUNNING"

	// EnumOfStatusForSearchGroupsOutputDeleting is a EnumOfStatusForSearchGroupsOutput enum value
	EnumOfStatusForSearchGroupsOutputDeleting = "DELETING"
)
