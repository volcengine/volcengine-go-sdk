// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyOverlayAccessCommon = "ModifyOverlayAccess"

// ModifyOverlayAccessCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyOverlayAccessCommon operation. The "output" return
// value will be populated with the ModifyOverlayAccessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyOverlayAccessCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyOverlayAccessCommon Send returns without error.
//
// See ModifyOverlayAccessCommon for more information on using the ModifyOverlayAccessCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyOverlayAccessCommonRequest method.
//    req, resp := client.ModifyOverlayAccessCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ModifyOverlayAccessCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyOverlayAccessCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyOverlayAccessCommon API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ModifyOverlayAccessCommon for usage and error information.
func (c *BMQ) ModifyOverlayAccessCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyOverlayAccessCommonRequest(input)
	return out, req.Send()
}

// ModifyOverlayAccessCommonWithContext is the same as ModifyOverlayAccessCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyOverlayAccessCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ModifyOverlayAccessCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyOverlayAccessCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyOverlayAccess = "ModifyOverlayAccess"

// ModifyOverlayAccessRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyOverlayAccess operation. The "output" return
// value will be populated with the ModifyOverlayAccessCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyOverlayAccessCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyOverlayAccessCommon Send returns without error.
//
// See ModifyOverlayAccess for more information on using the ModifyOverlayAccess
// API call, and error handling.
//
//    // Example sending a request using the ModifyOverlayAccessRequest method.
//    req, resp := client.ModifyOverlayAccessRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ModifyOverlayAccessRequest(input *ModifyOverlayAccessInput) (req *request.Request, output *ModifyOverlayAccessOutput) {
	op := &request.Operation{
		Name:       opModifyOverlayAccess,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyOverlayAccessInput{}
	}

	output = &ModifyOverlayAccessOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyOverlayAccess API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ModifyOverlayAccess for usage and error information.
func (c *BMQ) ModifyOverlayAccess(input *ModifyOverlayAccessInput) (*ModifyOverlayAccessOutput, error) {
	req, out := c.ModifyOverlayAccessRequest(input)
	return out, req.Send()
}

// ModifyOverlayAccessWithContext is the same as ModifyOverlayAccess with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyOverlayAccess for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ModifyOverlayAccessWithContext(ctx volcengine.Context, input *ModifyOverlayAccessInput, opts ...request.Option) (*ModifyOverlayAccessOutput, error) {
	req, out := c.ModifyOverlayAccessRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyOverlayAccessInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AddVpcs []*string `type:"list" json:",omitempty"`

	DelVpcs []*string `type:"list" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	Protocols []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ModifyOverlayAccessInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyOverlayAccessInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyOverlayAccessInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyOverlayAccessInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAddVpcs sets the AddVpcs field's value.
func (s *ModifyOverlayAccessInput) SetAddVpcs(v []*string) *ModifyOverlayAccessInput {
	s.AddVpcs = v
	return s
}

// SetDelVpcs sets the DelVpcs field's value.
func (s *ModifyOverlayAccessInput) SetDelVpcs(v []*string) *ModifyOverlayAccessInput {
	s.DelVpcs = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyOverlayAccessInput) SetInstanceId(v string) *ModifyOverlayAccessInput {
	s.InstanceId = &v
	return s
}

// SetProtocols sets the Protocols field's value.
func (s *ModifyOverlayAccessInput) SetProtocols(v []*string) *ModifyOverlayAccessInput {
	s.Protocols = v
	return s
}

type ModifyOverlayAccessOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Message *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyOverlayAccessOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyOverlayAccessOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *ModifyOverlayAccessOutput) SetMessage(v string) *ModifyOverlayAccessOutput {
	s.Message = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModifyOverlayAccessOutput) SetStatus(v string) *ModifyOverlayAccessOutput {
	s.Status = &v
	return s
}

const (
	// EnumOfProtocolListForModifyOverlayAccessInputPlaintext is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputPlaintext = "PLAINTEXT"

	// EnumOfProtocolListForModifyOverlayAccessInputSaslPlaintext is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputSaslPlaintext = "SASL_PLAINTEXT"

	// EnumOfProtocolListForModifyOverlayAccessInputSsl is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputSsl = "SSL"

	// EnumOfProtocolListForModifyOverlayAccessInputWs is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputWs = "WS"

	// EnumOfProtocolListForModifyOverlayAccessInputWss is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputWss = "WSS"

	// EnumOfProtocolListForModifyOverlayAccessInputTcp is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputTcp = "TCP"

	// EnumOfProtocolListForModifyOverlayAccessInputSslTcp is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputSslTcp = "SSL_TCP"

	// EnumOfProtocolListForModifyOverlayAccessInputHttp is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputHttp = "HTTP"

	// EnumOfProtocolListForModifyOverlayAccessInputHttps is a EnumOfProtocolListForModifyOverlayAccessInput enum value
	EnumOfProtocolListForModifyOverlayAccessInputHttps = "HTTPS"
)
