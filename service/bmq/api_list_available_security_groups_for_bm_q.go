// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAvailableSecurityGroupsForBMQCommon = "ListAvailableSecurityGroupsForBMQ"

// ListAvailableSecurityGroupsForBMQCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAvailableSecurityGroupsForBMQCommon operation. The "output" return
// value will be populated with the ListAvailableSecurityGroupsForBMQCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAvailableSecurityGroupsForBMQCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAvailableSecurityGroupsForBMQCommon Send returns without error.
//
// See ListAvailableSecurityGroupsForBMQCommon for more information on using the ListAvailableSecurityGroupsForBMQCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAvailableSecurityGroupsForBMQCommonRequest method.
//    req, resp := client.ListAvailableSecurityGroupsForBMQCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ListAvailableSecurityGroupsForBMQCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAvailableSecurityGroupsForBMQCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAvailableSecurityGroupsForBMQCommon API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ListAvailableSecurityGroupsForBMQCommon for usage and error information.
func (c *BMQ) ListAvailableSecurityGroupsForBMQCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAvailableSecurityGroupsForBMQCommonRequest(input)
	return out, req.Send()
}

// ListAvailableSecurityGroupsForBMQCommonWithContext is the same as ListAvailableSecurityGroupsForBMQCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAvailableSecurityGroupsForBMQCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ListAvailableSecurityGroupsForBMQCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAvailableSecurityGroupsForBMQCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAvailableSecurityGroupsForBMQ = "ListAvailableSecurityGroupsForBMQ"

// ListAvailableSecurityGroupsForBMQRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAvailableSecurityGroupsForBMQ operation. The "output" return
// value will be populated with the ListAvailableSecurityGroupsForBMQCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAvailableSecurityGroupsForBMQCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAvailableSecurityGroupsForBMQCommon Send returns without error.
//
// See ListAvailableSecurityGroupsForBMQ for more information on using the ListAvailableSecurityGroupsForBMQ
// API call, and error handling.
//
//    // Example sending a request using the ListAvailableSecurityGroupsForBMQRequest method.
//    req, resp := client.ListAvailableSecurityGroupsForBMQRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ListAvailableSecurityGroupsForBMQRequest(input *ListAvailableSecurityGroupsForBMQInput) (req *request.Request, output *ListAvailableSecurityGroupsForBMQOutput) {
	op := &request.Operation{
		Name:       opListAvailableSecurityGroupsForBMQ,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAvailableSecurityGroupsForBMQInput{}
	}

	output = &ListAvailableSecurityGroupsForBMQOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAvailableSecurityGroupsForBMQ API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ListAvailableSecurityGroupsForBMQ for usage and error information.
func (c *BMQ) ListAvailableSecurityGroupsForBMQ(input *ListAvailableSecurityGroupsForBMQInput) (*ListAvailableSecurityGroupsForBMQOutput, error) {
	req, out := c.ListAvailableSecurityGroupsForBMQRequest(input)
	return out, req.Send()
}

// ListAvailableSecurityGroupsForBMQWithContext is the same as ListAvailableSecurityGroupsForBMQ with the addition of
// the ability to pass a context and additional request options.
//
// See ListAvailableSecurityGroupsForBMQ for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ListAvailableSecurityGroupsForBMQWithContext(ctx volcengine.Context, input *ListAvailableSecurityGroupsForBMQInput, opts ...request.Option) (*ListAvailableSecurityGroupsForBMQOutput, error) {
	req, out := c.ListAvailableSecurityGroupsForBMQRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ItemForListAvailableSecurityGroupsForBMQOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreationTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	SecurityGroupId *string `type:"string" json:",omitempty"`

	SecurityGroupName *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListAvailableSecurityGroupsForBMQOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListAvailableSecurityGroupsForBMQOutput) GoString() string {
	return s.String()
}

// SetCreationTime sets the CreationTime field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetCreationTime(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.CreationTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetDescription(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.Description = &v
	return s
}

// SetSecurityGroupId sets the SecurityGroupId field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetSecurityGroupId(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.SecurityGroupId = &v
	return s
}

// SetSecurityGroupName sets the SecurityGroupName field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetSecurityGroupName(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.SecurityGroupName = &v
	return s
}

// SetType sets the Type field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetType(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.Type = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *ItemForListAvailableSecurityGroupsForBMQOutput) SetVpcId(v string) *ItemForListAvailableSecurityGroupsForBMQOutput {
	s.VpcId = &v
	return s
}

type ListAvailableSecurityGroupsForBMQInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAvailableSecurityGroupsForBMQInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAvailableSecurityGroupsForBMQInput) GoString() string {
	return s.String()
}

// SetVpcId sets the VpcId field's value.
func (s *ListAvailableSecurityGroupsForBMQInput) SetVpcId(v string) *ListAvailableSecurityGroupsForBMQInput {
	s.VpcId = &v
	return s
}

type ListAvailableSecurityGroupsForBMQOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListAvailableSecurityGroupsForBMQOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListAvailableSecurityGroupsForBMQOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAvailableSecurityGroupsForBMQOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListAvailableSecurityGroupsForBMQOutput) SetItems(v []*ItemForListAvailableSecurityGroupsForBMQOutput) *ListAvailableSecurityGroupsForBMQOutput {
	s.Items = v
	return s
}
