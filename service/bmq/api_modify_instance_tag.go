// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstanceTagCommon = "ModifyInstanceTag"

// ModifyInstanceTagCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceTagCommon operation. The "output" return
// value will be populated with the ModifyInstanceTagCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceTagCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceTagCommon Send returns without error.
//
// See ModifyInstanceTagCommon for more information on using the ModifyInstanceTagCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceTagCommonRequest method.
//    req, resp := client.ModifyInstanceTagCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ModifyInstanceTagCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstanceTagCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceTagCommon API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ModifyInstanceTagCommon for usage and error information.
func (c *BMQ) ModifyInstanceTagCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceTagCommonRequest(input)
	return out, req.Send()
}

// ModifyInstanceTagCommonWithContext is the same as ModifyInstanceTagCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceTagCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ModifyInstanceTagCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstanceTagCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstanceTag = "ModifyInstanceTag"

// ModifyInstanceTagRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstanceTag operation. The "output" return
// value will be populated with the ModifyInstanceTagCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstanceTagCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstanceTagCommon Send returns without error.
//
// See ModifyInstanceTag for more information on using the ModifyInstanceTag
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstanceTagRequest method.
//    req, resp := client.ModifyInstanceTagRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) ModifyInstanceTagRequest(input *ModifyInstanceTagInput) (req *request.Request, output *ModifyInstanceTagOutput) {
	op := &request.Operation{
		Name:       opModifyInstanceTag,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstanceTagInput{}
	}

	output = &ModifyInstanceTagOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ModifyInstanceTag API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation ModifyInstanceTag for usage and error information.
func (c *BMQ) ModifyInstanceTag(input *ModifyInstanceTagInput) (*ModifyInstanceTagOutput, error) {
	req, out := c.ModifyInstanceTagRequest(input)
	return out, req.Send()
}

// ModifyInstanceTagWithContext is the same as ModifyInstanceTag with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstanceTag for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) ModifyInstanceTagWithContext(ctx volcengine.Context, input *ModifyInstanceTagInput, opts ...request.Option) (*ModifyInstanceTagOutput, error) {
	req, out := c.ModifyInstanceTagRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteTagForModifyInstanceTagInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Keys []*string `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteTagForModifyInstanceTagInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteTagForModifyInstanceTagInput) GoString() string {
	return s.String()
}

// SetKeys sets the Keys field's value.
func (s *DeleteTagForModifyInstanceTagInput) SetKeys(v []*string) *DeleteTagForModifyInstanceTagInput {
	s.Keys = v
	return s
}

// SetType sets the Type field's value.
func (s *DeleteTagForModifyInstanceTagInput) SetType(v string) *DeleteTagForModifyInstanceTagInput {
	s.Type = &v
	return s
}

type ModifyInstanceTagInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DeleteTags []*DeleteTagForModifyInstanceTagInput `type:"list" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	UpdateTags []*UpdateTagForModifyInstanceTagInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ModifyInstanceTagInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceTagInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyInstanceTagInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyInstanceTagInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDeleteTags sets the DeleteTags field's value.
func (s *ModifyInstanceTagInput) SetDeleteTags(v []*DeleteTagForModifyInstanceTagInput) *ModifyInstanceTagInput {
	s.DeleteTags = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ModifyInstanceTagInput) SetInstanceId(v string) *ModifyInstanceTagInput {
	s.InstanceId = &v
	return s
}

// SetUpdateTags sets the UpdateTags field's value.
func (s *ModifyInstanceTagInput) SetUpdateTags(v []*UpdateTagForModifyInstanceTagInput) *ModifyInstanceTagInput {
	s.UpdateTags = v
	return s
}

type ModifyInstanceTagOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Message *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ModifyInstanceTagOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstanceTagOutput) GoString() string {
	return s.String()
}

// SetMessage sets the Message field's value.
func (s *ModifyInstanceTagOutput) SetMessage(v string) *ModifyInstanceTagOutput {
	s.Message = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ModifyInstanceTagOutput) SetStatus(v string) *ModifyInstanceTagOutput {
	s.Status = &v
	return s
}

type UpdateTagForModifyInstanceTagInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Kvs map[string]*string `type:"map" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateTagForModifyInstanceTagInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateTagForModifyInstanceTagInput) GoString() string {
	return s.String()
}

// SetKvs sets the Kvs field's value.
func (s *UpdateTagForModifyInstanceTagInput) SetKvs(v map[string]*string) *UpdateTagForModifyInstanceTagInput {
	s.Kvs = v
	return s
}

// SetType sets the Type field's value.
func (s *UpdateTagForModifyInstanceTagInput) SetType(v string) *UpdateTagForModifyInstanceTagInput {
	s.Type = &v
	return s
}
