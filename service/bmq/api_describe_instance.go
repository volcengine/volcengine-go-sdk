// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package bmq

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeInstanceCommon = "DescribeInstance"

// DescribeInstanceCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstanceCommon operation. The "output" return
// value will be populated with the DescribeInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstanceCommon Send returns without error.
//
// See DescribeInstanceCommon for more information on using the DescribeInstanceCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstanceCommonRequest method.
//    req, resp := client.DescribeInstanceCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) DescribeInstanceCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeInstanceCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstanceCommon API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation DescribeInstanceCommon for usage and error information.
func (c *BMQ) DescribeInstanceCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeInstanceCommonRequest(input)
	return out, req.Send()
}

// DescribeInstanceCommonWithContext is the same as DescribeInstanceCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstanceCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) DescribeInstanceCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeInstanceCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeInstance = "DescribeInstance"

// DescribeInstanceRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeInstance operation. The "output" return
// value will be populated with the DescribeInstanceCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeInstanceCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeInstanceCommon Send returns without error.
//
// See DescribeInstance for more information on using the DescribeInstance
// API call, and error handling.
//
//    // Example sending a request using the DescribeInstanceRequest method.
//    req, resp := client.DescribeInstanceRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *BMQ) DescribeInstanceRequest(input *DescribeInstanceInput) (req *request.Request, output *DescribeInstanceOutput) {
	op := &request.Operation{
		Name:       opDescribeInstance,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeInstanceInput{}
	}

	output = &DescribeInstanceOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeInstance API operation for BMQ.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for BMQ's
// API operation DescribeInstance for usage and error information.
func (c *BMQ) DescribeInstance(input *DescribeInstanceInput) (*DescribeInstanceOutput, error) {
	req, out := c.DescribeInstanceRequest(input)
	return out, req.Send()
}

// DescribeInstanceWithContext is the same as DescribeInstance with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeInstance for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *BMQ) DescribeInstanceWithContext(ctx volcengine.Context, input *DescribeInstanceInput, opts ...request.Option) (*DescribeInstanceOutput, error) {
	req, out := c.DescribeInstanceRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeInstanceInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstanceInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceInput) GoString() string {
	return s.String()
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstanceInput) SetInstanceId(v string) *DescribeInstanceInput {
	s.InstanceId = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeInstanceInput) SetName(v string) *DescribeInstanceInput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeInstanceInput) SetProjectName(v string) *DescribeInstanceInput {
	s.ProjectName = &v
	return s
}

type DescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	BillingType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Endpoints *EndpointsForDescribeInstanceOutput `type:"structure" json:",omitempty"`

	ExpirationTime *string `type:"string" json:",omitempty"`

	GroupLimit *int32 `type:"int32" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	MessageRetention *int32 `type:"int32" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PartitionLimit *int32 `type:"int32" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	ResourceTags []*ResourceTagForDescribeInstanceOutput `type:"list" json:",omitempty"`

	Resources *ResourcesForDescribeInstanceOutput `type:"structure" json:",omitempty"`

	SecurityGroupIdList []*string `type:"list" json:",omitempty"`

	Specification *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubnetIdList []*string `type:"list" json:",omitempty"`

	Tags []*TagForDescribeInstanceOutput `type:"list" json:",omitempty"`

	TopicLimit *int32 `type:"int32" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	ZoneIdList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetBillingType sets the BillingType field's value.
func (s *DescribeInstanceOutput) SetBillingType(v string) *DescribeInstanceOutput {
	s.BillingType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeInstanceOutput) SetCreateTime(v string) *DescribeInstanceOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeInstanceOutput) SetDescription(v string) *DescribeInstanceOutput {
	s.Description = &v
	return s
}

// SetEndpoints sets the Endpoints field's value.
func (s *DescribeInstanceOutput) SetEndpoints(v *EndpointsForDescribeInstanceOutput) *DescribeInstanceOutput {
	s.Endpoints = v
	return s
}

// SetExpirationTime sets the ExpirationTime field's value.
func (s *DescribeInstanceOutput) SetExpirationTime(v string) *DescribeInstanceOutput {
	s.ExpirationTime = &v
	return s
}

// SetGroupLimit sets the GroupLimit field's value.
func (s *DescribeInstanceOutput) SetGroupLimit(v int32) *DescribeInstanceOutput {
	s.GroupLimit = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeInstanceOutput) SetInstanceId(v string) *DescribeInstanceOutput {
	s.InstanceId = &v
	return s
}

// SetMessageRetention sets the MessageRetention field's value.
func (s *DescribeInstanceOutput) SetMessageRetention(v int32) *DescribeInstanceOutput {
	s.MessageRetention = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeInstanceOutput) SetName(v string) *DescribeInstanceOutput {
	s.Name = &v
	return s
}

// SetPartitionLimit sets the PartitionLimit field's value.
func (s *DescribeInstanceOutput) SetPartitionLimit(v int32) *DescribeInstanceOutput {
	s.PartitionLimit = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeInstanceOutput) SetProjectName(v string) *DescribeInstanceOutput {
	s.ProjectName = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeInstanceOutput) SetRegionId(v string) *DescribeInstanceOutput {
	s.RegionId = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *DescribeInstanceOutput) SetResourceTags(v []*ResourceTagForDescribeInstanceOutput) *DescribeInstanceOutput {
	s.ResourceTags = v
	return s
}

// SetResources sets the Resources field's value.
func (s *DescribeInstanceOutput) SetResources(v *ResourcesForDescribeInstanceOutput) *DescribeInstanceOutput {
	s.Resources = v
	return s
}

// SetSecurityGroupIdList sets the SecurityGroupIdList field's value.
func (s *DescribeInstanceOutput) SetSecurityGroupIdList(v []*string) *DescribeInstanceOutput {
	s.SecurityGroupIdList = v
	return s
}

// SetSpecification sets the Specification field's value.
func (s *DescribeInstanceOutput) SetSpecification(v string) *DescribeInstanceOutput {
	s.Specification = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeInstanceOutput) SetStatus(v string) *DescribeInstanceOutput {
	s.Status = &v
	return s
}

// SetSubnetIdList sets the SubnetIdList field's value.
func (s *DescribeInstanceOutput) SetSubnetIdList(v []*string) *DescribeInstanceOutput {
	s.SubnetIdList = v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeInstanceOutput) SetTags(v []*TagForDescribeInstanceOutput) *DescribeInstanceOutput {
	s.Tags = v
	return s
}

// SetTopicLimit sets the TopicLimit field's value.
func (s *DescribeInstanceOutput) SetTopicLimit(v int32) *DescribeInstanceOutput {
	s.TopicLimit = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeInstanceOutput) SetVpcId(v string) *DescribeInstanceOutput {
	s.VpcId = &v
	return s
}

// SetZoneIdList sets the ZoneIdList field's value.
func (s *DescribeInstanceOutput) SetZoneIdList(v []*string) *DescribeInstanceOutput {
	s.ZoneIdList = v
	return s
}

type EndpointsForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Overlay *OverlayForDescribeInstanceOutput `type:"structure" json:",omitempty"`

	Public *PublicForDescribeInstanceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s EndpointsForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EndpointsForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetOverlay sets the Overlay field's value.
func (s *EndpointsForDescribeInstanceOutput) SetOverlay(v *OverlayForDescribeInstanceOutput) *EndpointsForDescribeInstanceOutput {
	s.Overlay = v
	return s
}

// SetPublic sets the Public field's value.
func (s *EndpointsForDescribeInstanceOutput) SetPublic(v *PublicForDescribeInstanceOutput) *EndpointsForDescribeInstanceOutput {
	s.Public = v
	return s
}

type OverlayForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	Plain *string `type:"string" json:",omitempty"`

	PlainPort *int32 `type:"int32" json:",omitempty"`

	Sasl *string `type:"string" json:",omitempty"`

	SaslPort *int32 `type:"int32" json:",omitempty"`

	Ssl *string `type:"string" json:",omitempty"`

	SslPort *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	VpcIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s OverlayForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OverlayForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *OverlayForDescribeInstanceOutput) SetAddress(v string) *OverlayForDescribeInstanceOutput {
	s.Address = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *OverlayForDescribeInstanceOutput) SetEipId(v string) *OverlayForDescribeInstanceOutput {
	s.EipId = &v
	return s
}

// SetPlain sets the Plain field's value.
func (s *OverlayForDescribeInstanceOutput) SetPlain(v string) *OverlayForDescribeInstanceOutput {
	s.Plain = &v
	return s
}

// SetPlainPort sets the PlainPort field's value.
func (s *OverlayForDescribeInstanceOutput) SetPlainPort(v int32) *OverlayForDescribeInstanceOutput {
	s.PlainPort = &v
	return s
}

// SetSasl sets the Sasl field's value.
func (s *OverlayForDescribeInstanceOutput) SetSasl(v string) *OverlayForDescribeInstanceOutput {
	s.Sasl = &v
	return s
}

// SetSaslPort sets the SaslPort field's value.
func (s *OverlayForDescribeInstanceOutput) SetSaslPort(v int32) *OverlayForDescribeInstanceOutput {
	s.SaslPort = &v
	return s
}

// SetSsl sets the Ssl field's value.
func (s *OverlayForDescribeInstanceOutput) SetSsl(v string) *OverlayForDescribeInstanceOutput {
	s.Ssl = &v
	return s
}

// SetSslPort sets the SslPort field's value.
func (s *OverlayForDescribeInstanceOutput) SetSslPort(v int32) *OverlayForDescribeInstanceOutput {
	s.SslPort = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *OverlayForDescribeInstanceOutput) SetStatus(v string) *OverlayForDescribeInstanceOutput {
	s.Status = &v
	return s
}

// SetVpcIds sets the VpcIds field's value.
func (s *OverlayForDescribeInstanceOutput) SetVpcIds(v []*string) *OverlayForDescribeInstanceOutput {
	s.VpcIds = v
	return s
}

type PublicForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Address *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	Plain *string `type:"string" json:",omitempty"`

	PlainPort *int32 `type:"int32" json:",omitempty"`

	Sasl *string `type:"string" json:",omitempty"`

	SaslPort *int32 `type:"int32" json:",omitempty"`

	Ssl *string `type:"string" json:",omitempty"`

	SslPort *int32 `type:"int32" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	VpcIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s PublicForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PublicForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetAddress sets the Address field's value.
func (s *PublicForDescribeInstanceOutput) SetAddress(v string) *PublicForDescribeInstanceOutput {
	s.Address = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *PublicForDescribeInstanceOutput) SetEipId(v string) *PublicForDescribeInstanceOutput {
	s.EipId = &v
	return s
}

// SetPlain sets the Plain field's value.
func (s *PublicForDescribeInstanceOutput) SetPlain(v string) *PublicForDescribeInstanceOutput {
	s.Plain = &v
	return s
}

// SetPlainPort sets the PlainPort field's value.
func (s *PublicForDescribeInstanceOutput) SetPlainPort(v int32) *PublicForDescribeInstanceOutput {
	s.PlainPort = &v
	return s
}

// SetSasl sets the Sasl field's value.
func (s *PublicForDescribeInstanceOutput) SetSasl(v string) *PublicForDescribeInstanceOutput {
	s.Sasl = &v
	return s
}

// SetSaslPort sets the SaslPort field's value.
func (s *PublicForDescribeInstanceOutput) SetSaslPort(v int32) *PublicForDescribeInstanceOutput {
	s.SaslPort = &v
	return s
}

// SetSsl sets the Ssl field's value.
func (s *PublicForDescribeInstanceOutput) SetSsl(v string) *PublicForDescribeInstanceOutput {
	s.Ssl = &v
	return s
}

// SetSslPort sets the SslPort field's value.
func (s *PublicForDescribeInstanceOutput) SetSslPort(v int32) *PublicForDescribeInstanceOutput {
	s.SslPort = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *PublicForDescribeInstanceOutput) SetStatus(v string) *PublicForDescribeInstanceOutput {
	s.Status = &v
	return s
}

// SetVpcIds sets the VpcIds field's value.
func (s *PublicForDescribeInstanceOutput) SetVpcIds(v []*string) *PublicForDescribeInstanceOutput {
	s.VpcIds = v
	return s
}

type ResourceTagForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TagKvs *TagKvsForDescribeInstanceOutput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForDescribeInstanceOutput"`
}

// String returns the string representation
func (s ResourceTagForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetTagKvs sets the TagKvs field's value.
func (s *ResourceTagForDescribeInstanceOutput) SetTagKvs(v *TagKvsForDescribeInstanceOutput) *ResourceTagForDescribeInstanceOutput {
	s.TagKvs = v
	return s
}

// SetType sets the Type field's value.
func (s *ResourceTagForDescribeInstanceOutput) SetType(v string) *ResourceTagForDescribeInstanceOutput {
	s.Type = &v
	return s
}

type ResourcesForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Storage *StorageForDescribeInstanceOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ResourcesForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourcesForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetStorage sets the Storage field's value.
func (s *ResourcesForDescribeInstanceOutput) SetStorage(v *StorageForDescribeInstanceOutput) *ResourcesForDescribeInstanceOutput {
	s.Storage = v
	return s
}

type StorageForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Size *int64 `type:"int64" json:",omitempty"`

	Unit *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s StorageForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StorageForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetSize sets the Size field's value.
func (s *StorageForDescribeInstanceOutput) SetSize(v int64) *StorageForDescribeInstanceOutput {
	s.Size = &v
	return s
}

// SetUnit sets the Unit field's value.
func (s *StorageForDescribeInstanceOutput) SetUnit(v string) *StorageForDescribeInstanceOutput {
	s.Unit = &v
	return s
}

type TagForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForDescribeInstanceOutput"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeInstanceOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeInstanceOutput) SetKey(v string) *TagForDescribeInstanceOutput {
	s.Key = &v
	return s
}

// SetType sets the Type field's value.
func (s *TagForDescribeInstanceOutput) SetType(v string) *TagForDescribeInstanceOutput {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeInstanceOutput) SetValue(v string) *TagForDescribeInstanceOutput {
	s.Value = &v
	return s
}

type TagKvsForDescribeInstanceOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s TagKvsForDescribeInstanceOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagKvsForDescribeInstanceOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfTypeForDescribeInstanceOutputSystem is a EnumOfTypeForDescribeInstanceOutput enum value
	EnumOfTypeForDescribeInstanceOutputSystem = "SYSTEM"

	// EnumOfTypeForDescribeInstanceOutputCustom is a EnumOfTypeForDescribeInstanceOutput enum value
	EnumOfTypeForDescribeInstanceOutputCustom = "CUSTOM"
)
