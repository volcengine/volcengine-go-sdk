// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeNatIpLimitRulesCommon = "DescribeNatIpLimitRules"

// DescribeNatIpLimitRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNatIpLimitRulesCommon operation. The "output" return
// value will be populated with the DescribeNatIpLimitRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNatIpLimitRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNatIpLimitRulesCommon Send returns without error.
//
// See DescribeNatIpLimitRulesCommon for more information on using the DescribeNatIpLimitRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeNatIpLimitRulesCommonRequest method.
//    req, resp := client.DescribeNatIpLimitRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) DescribeNatIpLimitRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeNatIpLimitRulesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNatIpLimitRulesCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeNatIpLimitRulesCommon for usage and error information.
func (c *NATGATEWAY) DescribeNatIpLimitRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeNatIpLimitRulesCommonRequest(input)
	return out, req.Send()
}

// DescribeNatIpLimitRulesCommonWithContext is the same as DescribeNatIpLimitRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNatIpLimitRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeNatIpLimitRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeNatIpLimitRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeNatIpLimitRules = "DescribeNatIpLimitRules"

// DescribeNatIpLimitRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNatIpLimitRules operation. The "output" return
// value will be populated with the DescribeNatIpLimitRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNatIpLimitRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNatIpLimitRulesCommon Send returns without error.
//
// See DescribeNatIpLimitRules for more information on using the DescribeNatIpLimitRules
// API call, and error handling.
//
//    // Example sending a request using the DescribeNatIpLimitRulesRequest method.
//    req, resp := client.DescribeNatIpLimitRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) DescribeNatIpLimitRulesRequest(input *DescribeNatIpLimitRulesInput) (req *request.Request, output *DescribeNatIpLimitRulesOutput) {
	op := &request.Operation{
		Name:       opDescribeNatIpLimitRules,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNatIpLimitRulesInput{}
	}

	output = &DescribeNatIpLimitRulesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNatIpLimitRules API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation DescribeNatIpLimitRules for usage and error information.
func (c *NATGATEWAY) DescribeNatIpLimitRules(input *DescribeNatIpLimitRulesInput) (*DescribeNatIpLimitRulesOutput, error) {
	req, out := c.DescribeNatIpLimitRulesRequest(input)
	return out, req.Send()
}

// DescribeNatIpLimitRulesWithContext is the same as DescribeNatIpLimitRules with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNatIpLimitRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) DescribeNatIpLimitRulesWithContext(ctx volcengine.Context, input *DescribeNatIpLimitRulesInput, opts ...request.Option) (*DescribeNatIpLimitRulesOutput, error) {
	req, out := c.DescribeNatIpLimitRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeNatIpLimitRulesInput struct {
	_ struct{} `type:"structure"`

	LimitRuleIds []*string `type:"list"`

	// NatGatewayId is a required field
	NatGatewayId *string `type:"string" required:"true"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `max:"100" type:"integer"`
}

// String returns the string representation
func (s DescribeNatIpLimitRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNatIpLimitRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeNatIpLimitRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeNatIpLimitRulesInput"}
	if s.NatGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("NatGatewayId"))
	}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLimitRuleIds sets the LimitRuleIds field's value.
func (s *DescribeNatIpLimitRulesInput) SetLimitRuleIds(v []*string) *DescribeNatIpLimitRulesInput {
	s.LimitRuleIds = v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *DescribeNatIpLimitRulesInput) SetNatGatewayId(v string) *DescribeNatIpLimitRulesInput {
	s.NatGatewayId = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeNatIpLimitRulesInput) SetPageNumber(v int64) *DescribeNatIpLimitRulesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeNatIpLimitRulesInput) SetPageSize(v int64) *DescribeNatIpLimitRulesInput {
	s.PageSize = &v
	return s
}

type DescribeNatIpLimitRulesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NatIpLimitRules []*NatIpLimitRuleForDescribeNatIpLimitRulesOutput `type:"list"`

	PageNumber *int64 `type:"integer"`

	PageSize *int64 `type:"integer"`

	RequestId *string `type:"string"`

	TotalCount *int64 `type:"integer"`
}

// String returns the string representation
func (s DescribeNatIpLimitRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNatIpLimitRulesOutput) GoString() string {
	return s.String()
}

// SetNatIpLimitRules sets the NatIpLimitRules field's value.
func (s *DescribeNatIpLimitRulesOutput) SetNatIpLimitRules(v []*NatIpLimitRuleForDescribeNatIpLimitRulesOutput) *DescribeNatIpLimitRulesOutput {
	s.NatIpLimitRules = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *DescribeNatIpLimitRulesOutput) SetPageNumber(v int64) *DescribeNatIpLimitRulesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *DescribeNatIpLimitRulesOutput) SetPageSize(v int64) *DescribeNatIpLimitRulesOutput {
	s.PageSize = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeNatIpLimitRulesOutput) SetRequestId(v string) *DescribeNatIpLimitRulesOutput {
	s.RequestId = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *DescribeNatIpLimitRulesOutput) SetTotalCount(v int64) *DescribeNatIpLimitRulesOutput {
	s.TotalCount = &v
	return s
}

type NatIpLimitRuleForDescribeNatIpLimitRulesOutput struct {
	_ struct{} `type:"structure"`

	InboundMbpsLimit *string `type:"string"`

	InternalIp *string `type:"string"`

	LimitRuleId *string `type:"string"`

	NatGatewayId *string `type:"string"`

	OutboundMbpsLimit *string `type:"string"`
}

// String returns the string representation
func (s NatIpLimitRuleForDescribeNatIpLimitRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NatIpLimitRuleForDescribeNatIpLimitRulesOutput) GoString() string {
	return s.String()
}

// SetInboundMbpsLimit sets the InboundMbpsLimit field's value.
func (s *NatIpLimitRuleForDescribeNatIpLimitRulesOutput) SetInboundMbpsLimit(v string) *NatIpLimitRuleForDescribeNatIpLimitRulesOutput {
	s.InboundMbpsLimit = &v
	return s
}

// SetInternalIp sets the InternalIp field's value.
func (s *NatIpLimitRuleForDescribeNatIpLimitRulesOutput) SetInternalIp(v string) *NatIpLimitRuleForDescribeNatIpLimitRulesOutput {
	s.InternalIp = &v
	return s
}

// SetLimitRuleId sets the LimitRuleId field's value.
func (s *NatIpLimitRuleForDescribeNatIpLimitRulesOutput) SetLimitRuleId(v string) *NatIpLimitRuleForDescribeNatIpLimitRulesOutput {
	s.LimitRuleId = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *NatIpLimitRuleForDescribeNatIpLimitRulesOutput) SetNatGatewayId(v string) *NatIpLimitRuleForDescribeNatIpLimitRulesOutput {
	s.NatGatewayId = &v
	return s
}

// SetOutboundMbpsLimit sets the OutboundMbpsLimit field's value.
func (s *NatIpLimitRuleForDescribeNatIpLimitRulesOutput) SetOutboundMbpsLimit(v string) *NatIpLimitRuleForDescribeNatIpLimitRulesOutput {
	s.OutboundMbpsLimit = &v
	return s
}
