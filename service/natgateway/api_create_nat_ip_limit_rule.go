// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateNatIpLimitRuleCommon = "CreateNatIpLimitRule"

// CreateNatIpLimitRuleCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateNatIpLimitRuleCommon operation. The "output" return
// value will be populated with the CreateNatIpLimitRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateNatIpLimitRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateNatIpLimitRuleCommon Send returns without error.
//
// See CreateNatIpLimitRuleCommon for more information on using the CreateNatIpLimitRuleCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateNatIpLimitRuleCommonRequest method.
//    req, resp := client.CreateNatIpLimitRuleCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) CreateNatIpLimitRuleCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateNatIpLimitRuleCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateNatIpLimitRuleCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation CreateNatIpLimitRuleCommon for usage and error information.
func (c *NATGATEWAY) CreateNatIpLimitRuleCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateNatIpLimitRuleCommonRequest(input)
	return out, req.Send()
}

// CreateNatIpLimitRuleCommonWithContext is the same as CreateNatIpLimitRuleCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateNatIpLimitRuleCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) CreateNatIpLimitRuleCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateNatIpLimitRuleCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateNatIpLimitRule = "CreateNatIpLimitRule"

// CreateNatIpLimitRuleRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateNatIpLimitRule operation. The "output" return
// value will be populated with the CreateNatIpLimitRuleCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateNatIpLimitRuleCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateNatIpLimitRuleCommon Send returns without error.
//
// See CreateNatIpLimitRule for more information on using the CreateNatIpLimitRule
// API call, and error handling.
//
//    // Example sending a request using the CreateNatIpLimitRuleRequest method.
//    req, resp := client.CreateNatIpLimitRuleRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) CreateNatIpLimitRuleRequest(input *CreateNatIpLimitRuleInput) (req *request.Request, output *CreateNatIpLimitRuleOutput) {
	op := &request.Operation{
		Name:       opCreateNatIpLimitRule,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateNatIpLimitRuleInput{}
	}

	output = &CreateNatIpLimitRuleOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateNatIpLimitRule API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation CreateNatIpLimitRule for usage and error information.
func (c *NATGATEWAY) CreateNatIpLimitRule(input *CreateNatIpLimitRuleInput) (*CreateNatIpLimitRuleOutput, error) {
	req, out := c.CreateNatIpLimitRuleRequest(input)
	return out, req.Send()
}

// CreateNatIpLimitRuleWithContext is the same as CreateNatIpLimitRule with the addition of
// the ability to pass a context and additional request options.
//
// See CreateNatIpLimitRule for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) CreateNatIpLimitRuleWithContext(ctx volcengine.Context, input *CreateNatIpLimitRuleInput, opts ...request.Option) (*CreateNatIpLimitRuleOutput, error) {
	req, out := c.CreateNatIpLimitRuleRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateNatIpLimitRuleInput struct {
	_ struct{} `type:"structure"`

	// InboundMbpsLimit is a required field
	InboundMbpsLimit *int64 `type:"integer" required:"true"`

	// InternalIp is a required field
	InternalIp *string `type:"string" required:"true"`

	// NatGatewayId is a required field
	NatGatewayId *string `type:"string" required:"true"`

	// OutboundMbpsLimit is a required field
	OutboundMbpsLimit *int64 `type:"integer" required:"true"`
}

// String returns the string representation
func (s CreateNatIpLimitRuleInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNatIpLimitRuleInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateNatIpLimitRuleInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateNatIpLimitRuleInput"}
	if s.InboundMbpsLimit == nil {
		invalidParams.Add(request.NewErrParamRequired("InboundMbpsLimit"))
	}
	if s.InternalIp == nil {
		invalidParams.Add(request.NewErrParamRequired("InternalIp"))
	}
	if s.NatGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("NatGatewayId"))
	}
	if s.OutboundMbpsLimit == nil {
		invalidParams.Add(request.NewErrParamRequired("OutboundMbpsLimit"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInboundMbpsLimit sets the InboundMbpsLimit field's value.
func (s *CreateNatIpLimitRuleInput) SetInboundMbpsLimit(v int64) *CreateNatIpLimitRuleInput {
	s.InboundMbpsLimit = &v
	return s
}

// SetInternalIp sets the InternalIp field's value.
func (s *CreateNatIpLimitRuleInput) SetInternalIp(v string) *CreateNatIpLimitRuleInput {
	s.InternalIp = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *CreateNatIpLimitRuleInput) SetNatGatewayId(v string) *CreateNatIpLimitRuleInput {
	s.NatGatewayId = &v
	return s
}

// SetOutboundMbpsLimit sets the OutboundMbpsLimit field's value.
func (s *CreateNatIpLimitRuleInput) SetOutboundMbpsLimit(v int64) *CreateNatIpLimitRuleInput {
	s.OutboundMbpsLimit = &v
	return s
}

type CreateNatIpLimitRuleOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LimitRuleId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateNatIpLimitRuleOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNatIpLimitRuleOutput) GoString() string {
	return s.String()
}

// SetLimitRuleId sets the LimitRuleId field's value.
func (s *CreateNatIpLimitRuleOutput) SetLimitRuleId(v string) *CreateNatIpLimitRuleOutput {
	s.LimitRuleId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateNatIpLimitRuleOutput) SetRequestId(v string) *CreateNatIpLimitRuleOutput {
	s.RequestId = &v
	return s
}
