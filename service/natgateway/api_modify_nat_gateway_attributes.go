// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNatGatewayAttributesCommon = "ModifyNatGatewayAttributes"

// ModifyNatGatewayAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNatGatewayAttributesCommon operation. The "output" return
// value will be populated with the ModifyNatGatewayAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNatGatewayAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNatGatewayAttributesCommon Send returns without error.
//
// See ModifyNatGatewayAttributesCommon for more information on using the ModifyNatGatewayAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNatGatewayAttributesCommonRequest method.
//    req, resp := client.ModifyNatGatewayAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) ModifyNatGatewayAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNatGatewayAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNatGatewayAttributesCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation ModifyNatGatewayAttributesCommon for usage and error information.
func (c *NATGATEWAY) ModifyNatGatewayAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNatGatewayAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyNatGatewayAttributesCommonWithContext is the same as ModifyNatGatewayAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNatGatewayAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) ModifyNatGatewayAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNatGatewayAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNatGatewayAttributes = "ModifyNatGatewayAttributes"

// ModifyNatGatewayAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNatGatewayAttributes operation. The "output" return
// value will be populated with the ModifyNatGatewayAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNatGatewayAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNatGatewayAttributesCommon Send returns without error.
//
// See ModifyNatGatewayAttributes for more information on using the ModifyNatGatewayAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyNatGatewayAttributesRequest method.
//    req, resp := client.ModifyNatGatewayAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) ModifyNatGatewayAttributesRequest(input *ModifyNatGatewayAttributesInput) (req *request.Request, output *ModifyNatGatewayAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyNatGatewayAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNatGatewayAttributesInput{}
	}

	output = &ModifyNatGatewayAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNatGatewayAttributes API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation ModifyNatGatewayAttributes for usage and error information.
func (c *NATGATEWAY) ModifyNatGatewayAttributes(input *ModifyNatGatewayAttributesInput) (*ModifyNatGatewayAttributesOutput, error) {
	req, out := c.ModifyNatGatewayAttributesRequest(input)
	return out, req.Send()
}

// ModifyNatGatewayAttributesWithContext is the same as ModifyNatGatewayAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNatGatewayAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) ModifyNatGatewayAttributesWithContext(ctx volcengine.Context, input *ModifyNatGatewayAttributesInput, opts ...request.Option) (*ModifyNatGatewayAttributesOutput, error) {
	req, out := c.ModifyNatGatewayAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyNatGatewayAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `min:"1" max:"255" type:"string"`

	DirectMode *bool `type:"boolean"`

	// NatGatewayId is a required field
	NatGatewayId *string `type:"string" required:"true"`

	NatGatewayName *string `min:"1" max:"128" type:"string"`

	SmartScheduleEnabled *bool `type:"boolean"`

	SmartScheduleRule *string `type:"string"`

	Spec *string `type:"string"`
}

// String returns the string representation
func (s ModifyNatGatewayAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNatGatewayAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNatGatewayAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNatGatewayAttributesInput"}
	if s.Description != nil && len(*s.Description) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("Description", 1))
	}
	if s.Description != nil && len(*s.Description) > 255 {
		invalidParams.Add(request.NewErrParamMaxLen("Description", 255, *s.Description))
	}
	if s.NatGatewayId == nil {
		invalidParams.Add(request.NewErrParamRequired("NatGatewayId"))
	}
	if s.NatGatewayName != nil && len(*s.NatGatewayName) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("NatGatewayName", 1))
	}
	if s.NatGatewayName != nil && len(*s.NatGatewayName) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("NatGatewayName", 128, *s.NatGatewayName))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ModifyNatGatewayAttributesInput) SetDescription(v string) *ModifyNatGatewayAttributesInput {
	s.Description = &v
	return s
}

// SetDirectMode sets the DirectMode field's value.
func (s *ModifyNatGatewayAttributesInput) SetDirectMode(v bool) *ModifyNatGatewayAttributesInput {
	s.DirectMode = &v
	return s
}

// SetNatGatewayId sets the NatGatewayId field's value.
func (s *ModifyNatGatewayAttributesInput) SetNatGatewayId(v string) *ModifyNatGatewayAttributesInput {
	s.NatGatewayId = &v
	return s
}

// SetNatGatewayName sets the NatGatewayName field's value.
func (s *ModifyNatGatewayAttributesInput) SetNatGatewayName(v string) *ModifyNatGatewayAttributesInput {
	s.NatGatewayName = &v
	return s
}

// SetSmartScheduleEnabled sets the SmartScheduleEnabled field's value.
func (s *ModifyNatGatewayAttributesInput) SetSmartScheduleEnabled(v bool) *ModifyNatGatewayAttributesInput {
	s.SmartScheduleEnabled = &v
	return s
}

// SetSmartScheduleRule sets the SmartScheduleRule field's value.
func (s *ModifyNatGatewayAttributesInput) SetSmartScheduleRule(v string) *ModifyNatGatewayAttributesInput {
	s.SmartScheduleRule = &v
	return s
}

// SetSpec sets the Spec field's value.
func (s *ModifyNatGatewayAttributesInput) SetSpec(v string) *ModifyNatGatewayAttributesInput {
	s.Spec = &v
	return s
}

type ModifyNatGatewayAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNatGatewayAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNatGatewayAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNatGatewayAttributesOutput) SetRequestId(v string) *ModifyNatGatewayAttributesOutput {
	s.RequestId = &v
	return s
}
