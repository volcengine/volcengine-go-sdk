// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package natgateway

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNatIpLimitRuleAttributesCommon = "ModifyNatIpLimitRuleAttributes"

// ModifyNatIpLimitRuleAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNatIpLimitRuleAttributesCommon operation. The "output" return
// value will be populated with the ModifyNatIpLimitRuleAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNatIpLimitRuleAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNatIpLimitRuleAttributesCommon Send returns without error.
//
// See ModifyNatIpLimitRuleAttributesCommon for more information on using the ModifyNatIpLimitRuleAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNatIpLimitRuleAttributesCommonRequest method.
//    req, resp := client.ModifyNatIpLimitRuleAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNatIpLimitRuleAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNatIpLimitRuleAttributesCommon API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation ModifyNatIpLimitRuleAttributesCommon for usage and error information.
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNatIpLimitRuleAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyNatIpLimitRuleAttributesCommonWithContext is the same as ModifyNatIpLimitRuleAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNatIpLimitRuleAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNatIpLimitRuleAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNatIpLimitRuleAttributes = "ModifyNatIpLimitRuleAttributes"

// ModifyNatIpLimitRuleAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNatIpLimitRuleAttributes operation. The "output" return
// value will be populated with the ModifyNatIpLimitRuleAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNatIpLimitRuleAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNatIpLimitRuleAttributesCommon Send returns without error.
//
// See ModifyNatIpLimitRuleAttributes for more information on using the ModifyNatIpLimitRuleAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyNatIpLimitRuleAttributesRequest method.
//    req, resp := client.ModifyNatIpLimitRuleAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributesRequest(input *ModifyNatIpLimitRuleAttributesInput) (req *request.Request, output *ModifyNatIpLimitRuleAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyNatIpLimitRuleAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNatIpLimitRuleAttributesInput{}
	}

	output = &ModifyNatIpLimitRuleAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNatIpLimitRuleAttributes API operation for NATGATEWAY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for NATGATEWAY's
// API operation ModifyNatIpLimitRuleAttributes for usage and error information.
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributes(input *ModifyNatIpLimitRuleAttributesInput) (*ModifyNatIpLimitRuleAttributesOutput, error) {
	req, out := c.ModifyNatIpLimitRuleAttributesRequest(input)
	return out, req.Send()
}

// ModifyNatIpLimitRuleAttributesWithContext is the same as ModifyNatIpLimitRuleAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNatIpLimitRuleAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *NATGATEWAY) ModifyNatIpLimitRuleAttributesWithContext(ctx volcengine.Context, input *ModifyNatIpLimitRuleAttributesInput, opts ...request.Option) (*ModifyNatIpLimitRuleAttributesOutput, error) {
	req, out := c.ModifyNatIpLimitRuleAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyNatIpLimitRuleAttributesInput struct {
	_ struct{} `type:"structure"`

	InboundMbpsLimit *int64 `type:"integer"`

	// LimitRuleId is a required field
	LimitRuleId *string `type:"string" required:"true"`

	OutboundMbpsLimit *int64 `type:"integer"`
}

// String returns the string representation
func (s ModifyNatIpLimitRuleAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNatIpLimitRuleAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNatIpLimitRuleAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNatIpLimitRuleAttributesInput"}
	if s.LimitRuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("LimitRuleId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInboundMbpsLimit sets the InboundMbpsLimit field's value.
func (s *ModifyNatIpLimitRuleAttributesInput) SetInboundMbpsLimit(v int64) *ModifyNatIpLimitRuleAttributesInput {
	s.InboundMbpsLimit = &v
	return s
}

// SetLimitRuleId sets the LimitRuleId field's value.
func (s *ModifyNatIpLimitRuleAttributesInput) SetLimitRuleId(v string) *ModifyNatIpLimitRuleAttributesInput {
	s.LimitRuleId = &v
	return s
}

// SetOutboundMbpsLimit sets the OutboundMbpsLimit field's value.
func (s *ModifyNatIpLimitRuleAttributesInput) SetOutboundMbpsLimit(v int64) *ModifyNatIpLimitRuleAttributesInput {
	s.OutboundMbpsLimit = &v
	return s
}

type ModifyNatIpLimitRuleAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNatIpLimitRuleAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNatIpLimitRuleAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNatIpLimitRuleAttributesOutput) SetRequestId(v string) *ModifyNatIpLimitRuleAttributesOutput {
	s.RequestId = &v
	return s
}
