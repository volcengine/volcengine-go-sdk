// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyInstancesSpecCommon = "ModifyInstancesSpec"

// ModifyInstancesSpecCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstancesSpecCommon operation. The "output" return
// value will be populated with the ModifyInstancesSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstancesSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstancesSpecCommon Send returns without error.
//
// See ModifyInstancesSpecCommon for more information on using the ModifyInstancesSpecCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstancesSpecCommonRequest method.
//    req, resp := client.ModifyInstancesSpecCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyInstancesSpecCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyInstancesSpecCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstancesSpecCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstancesSpecCommon for usage and error information.
func (c *ECS) ModifyInstancesSpecCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyInstancesSpecCommonRequest(input)
	return out, req.Send()
}

// ModifyInstancesSpecCommonWithContext is the same as ModifyInstancesSpecCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstancesSpecCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstancesSpecCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyInstancesSpecCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyInstancesSpec = "ModifyInstancesSpec"

// ModifyInstancesSpecRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyInstancesSpec operation. The "output" return
// value will be populated with the ModifyInstancesSpecCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyInstancesSpecCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyInstancesSpecCommon Send returns without error.
//
// See ModifyInstancesSpec for more information on using the ModifyInstancesSpec
// API call, and error handling.
//
//    // Example sending a request using the ModifyInstancesSpecRequest method.
//    req, resp := client.ModifyInstancesSpecRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyInstancesSpecRequest(input *ModifyInstancesSpecInput) (req *request.Request, output *ModifyInstancesSpecOutput) {
	op := &request.Operation{
		Name:       opModifyInstancesSpec,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyInstancesSpecInput{}
	}

	output = &ModifyInstancesSpecOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyInstancesSpec API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyInstancesSpec for usage and error information.
func (c *ECS) ModifyInstancesSpec(input *ModifyInstancesSpecInput) (*ModifyInstancesSpecOutput, error) {
	req, out := c.ModifyInstancesSpecRequest(input)
	return out, req.Send()
}

// ModifyInstancesSpecWithContext is the same as ModifyInstancesSpec with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyInstancesSpec for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyInstancesSpecWithContext(ctx volcengine.Context, input *ModifyInstancesSpecInput, opts ...request.Option) (*ModifyInstancesSpecOutput, error) {
	req, out := c.ModifyInstancesSpecRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ErrorForModifyInstancesSpecOutput struct {
	_ struct{} `type:"structure"`

	Code *string `type:"string"`

	Message *string `type:"string"`
}

// String returns the string representation
func (s ErrorForModifyInstancesSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForModifyInstancesSpecOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForModifyInstancesSpecOutput) SetCode(v string) *ErrorForModifyInstancesSpecOutput {
	s.Code = &v
	return s
}

// SetMessage sets the Message field's value.
func (s *ErrorForModifyInstancesSpecOutput) SetMessage(v string) *ErrorForModifyInstancesSpecOutput {
	s.Message = &v
	return s
}

type ModifyInstancesSpecInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	// InstanceIds is a required field
	InstanceIds []*string `type:"list" required:"true"`

	// InstanceTypeId is a required field
	InstanceTypeId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyInstancesSpecInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstancesSpecInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyInstancesSpecInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyInstancesSpecInput"}
	if s.InstanceIds == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceIds"))
	}
	if s.InstanceTypeId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceTypeId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *ModifyInstancesSpecInput) SetClientToken(v string) *ModifyInstancesSpecInput {
	s.ClientToken = &v
	return s
}

// SetInstanceIds sets the InstanceIds field's value.
func (s *ModifyInstancesSpecInput) SetInstanceIds(v []*string) *ModifyInstancesSpecInput {
	s.InstanceIds = v
	return s
}

// SetInstanceTypeId sets the InstanceTypeId field's value.
func (s *ModifyInstancesSpecInput) SetInstanceTypeId(v string) *ModifyInstancesSpecInput {
	s.InstanceTypeId = &v
	return s
}

type ModifyInstancesSpecOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	OperationDetails []*OperationDetailForModifyInstancesSpecOutput `type:"list"`

	OrderId *string `type:"string"`
}

// String returns the string representation
func (s ModifyInstancesSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyInstancesSpecOutput) GoString() string {
	return s.String()
}

// SetOperationDetails sets the OperationDetails field's value.
func (s *ModifyInstancesSpecOutput) SetOperationDetails(v []*OperationDetailForModifyInstancesSpecOutput) *ModifyInstancesSpecOutput {
	s.OperationDetails = v
	return s
}

// SetOrderId sets the OrderId field's value.
func (s *ModifyInstancesSpecOutput) SetOrderId(v string) *ModifyInstancesSpecOutput {
	s.OrderId = &v
	return s
}

type OperationDetailForModifyInstancesSpecOutput struct {
	_ struct{} `type:"structure"`

	Error *ErrorForModifyInstancesSpecOutput `type:"structure"`

	InstanceId *string `type:"string"`
}

// String returns the string representation
func (s OperationDetailForModifyInstancesSpecOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationDetailForModifyInstancesSpecOutput) GoString() string {
	return s.String()
}

// SetError sets the Error field's value.
func (s *OperationDetailForModifyInstancesSpecOutput) SetError(v *ErrorForModifyInstancesSpecOutput) *OperationDetailForModifyInstancesSpecOutput {
	s.Error = v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *OperationDetailForModifyInstancesSpecOutput) SetInstanceId(v string) *OperationDetailForModifyInstancesSpecOutput {
	s.InstanceId = &v
	return s
}
