// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeLaunchTemplatesCommon = "DescribeLaunchTemplates"

// DescribeLaunchTemplatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeLaunchTemplatesCommon operation. The "output" return
// value will be populated with the DescribeLaunchTemplatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeLaunchTemplatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeLaunchTemplatesCommon Send returns without error.
//
// See DescribeLaunchTemplatesCommon for more information on using the DescribeLaunchTemplatesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeLaunchTemplatesCommonRequest method.
//    req, resp := client.DescribeLaunchTemplatesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeLaunchTemplatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeLaunchTemplatesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeLaunchTemplatesCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeLaunchTemplatesCommon for usage and error information.
func (c *ECS) DescribeLaunchTemplatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeLaunchTemplatesCommonRequest(input)
	return out, req.Send()
}

// DescribeLaunchTemplatesCommonWithContext is the same as DescribeLaunchTemplatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeLaunchTemplatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeLaunchTemplatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeLaunchTemplatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeLaunchTemplates = "DescribeLaunchTemplates"

// DescribeLaunchTemplatesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeLaunchTemplates operation. The "output" return
// value will be populated with the DescribeLaunchTemplatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeLaunchTemplatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeLaunchTemplatesCommon Send returns without error.
//
// See DescribeLaunchTemplates for more information on using the DescribeLaunchTemplates
// API call, and error handling.
//
//    // Example sending a request using the DescribeLaunchTemplatesRequest method.
//    req, resp := client.DescribeLaunchTemplatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeLaunchTemplatesRequest(input *DescribeLaunchTemplatesInput) (req *request.Request, output *DescribeLaunchTemplatesOutput) {
	op := &request.Operation{
		Name:       opDescribeLaunchTemplates,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeLaunchTemplatesInput{}
	}

	output = &DescribeLaunchTemplatesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeLaunchTemplates API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeLaunchTemplates for usage and error information.
func (c *ECS) DescribeLaunchTemplates(input *DescribeLaunchTemplatesInput) (*DescribeLaunchTemplatesOutput, error) {
	req, out := c.DescribeLaunchTemplatesRequest(input)
	return out, req.Send()
}

// DescribeLaunchTemplatesWithContext is the same as DescribeLaunchTemplates with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeLaunchTemplates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeLaunchTemplatesWithContext(ctx volcengine.Context, input *DescribeLaunchTemplatesInput, opts ...request.Option) (*DescribeLaunchTemplatesOutput, error) {
	req, out := c.DescribeLaunchTemplatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeLaunchTemplatesInput struct {
	_ struct{} `type:"structure"`

	LaunchTemplateIds []*string `type:"list"`

	LaunchTemplateNames []*string `type:"list"`

	LaunchTemplateProjectName *string `type:"string"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	TagFilters []*TagFilterForDescribeLaunchTemplatesInput `type:"list"`
}

// String returns the string representation
func (s DescribeLaunchTemplatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLaunchTemplatesInput) GoString() string {
	return s.String()
}

// SetLaunchTemplateIds sets the LaunchTemplateIds field's value.
func (s *DescribeLaunchTemplatesInput) SetLaunchTemplateIds(v []*string) *DescribeLaunchTemplatesInput {
	s.LaunchTemplateIds = v
	return s
}

// SetLaunchTemplateNames sets the LaunchTemplateNames field's value.
func (s *DescribeLaunchTemplatesInput) SetLaunchTemplateNames(v []*string) *DescribeLaunchTemplatesInput {
	s.LaunchTemplateNames = v
	return s
}

// SetLaunchTemplateProjectName sets the LaunchTemplateProjectName field's value.
func (s *DescribeLaunchTemplatesInput) SetLaunchTemplateProjectName(v string) *DescribeLaunchTemplatesInput {
	s.LaunchTemplateProjectName = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeLaunchTemplatesInput) SetMaxResults(v int32) *DescribeLaunchTemplatesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeLaunchTemplatesInput) SetNextToken(v string) *DescribeLaunchTemplatesInput {
	s.NextToken = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeLaunchTemplatesInput) SetTagFilters(v []*TagFilterForDescribeLaunchTemplatesInput) *DescribeLaunchTemplatesInput {
	s.TagFilters = v
	return s
}

type DescribeLaunchTemplatesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LaunchTemplates []*LaunchTemplateForDescribeLaunchTemplatesOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeLaunchTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeLaunchTemplatesOutput) GoString() string {
	return s.String()
}

// SetLaunchTemplates sets the LaunchTemplates field's value.
func (s *DescribeLaunchTemplatesOutput) SetLaunchTemplates(v []*LaunchTemplateForDescribeLaunchTemplatesOutput) *DescribeLaunchTemplatesOutput {
	s.LaunchTemplates = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeLaunchTemplatesOutput) SetNextToken(v string) *DescribeLaunchTemplatesOutput {
	s.NextToken = &v
	return s
}

type LaunchTemplateForDescribeLaunchTemplatesOutput struct {
	_ struct{} `type:"structure"`

	CreatedAt *string `type:"string"`

	DefaultVersionNumber *int32 `type:"int32"`

	LatestVersionNumber *int32 `type:"int32"`

	LaunchTemplateId *string `type:"string"`

	LaunchTemplateName *string `type:"string"`

	LaunchTemplateProjectName *string `type:"string"`

	LaunchTemplateTags []*LaunchTemplateTagForDescribeLaunchTemplatesOutput `type:"list"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s LaunchTemplateForDescribeLaunchTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LaunchTemplateForDescribeLaunchTemplatesOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetCreatedAt(v string) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.CreatedAt = &v
	return s
}

// SetDefaultVersionNumber sets the DefaultVersionNumber field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetDefaultVersionNumber(v int32) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.DefaultVersionNumber = &v
	return s
}

// SetLatestVersionNumber sets the LatestVersionNumber field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetLatestVersionNumber(v int32) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.LatestVersionNumber = &v
	return s
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetLaunchTemplateId(v string) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.LaunchTemplateId = &v
	return s
}

// SetLaunchTemplateName sets the LaunchTemplateName field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetLaunchTemplateName(v string) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.LaunchTemplateName = &v
	return s
}

// SetLaunchTemplateProjectName sets the LaunchTemplateProjectName field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetLaunchTemplateProjectName(v string) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.LaunchTemplateProjectName = &v
	return s
}

// SetLaunchTemplateTags sets the LaunchTemplateTags field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetLaunchTemplateTags(v []*LaunchTemplateTagForDescribeLaunchTemplatesOutput) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.LaunchTemplateTags = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *LaunchTemplateForDescribeLaunchTemplatesOutput) SetUpdatedAt(v string) *LaunchTemplateForDescribeLaunchTemplatesOutput {
	s.UpdatedAt = &v
	return s
}

type LaunchTemplateTagForDescribeLaunchTemplatesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s LaunchTemplateTagForDescribeLaunchTemplatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LaunchTemplateTagForDescribeLaunchTemplatesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *LaunchTemplateTagForDescribeLaunchTemplatesOutput) SetKey(v string) *LaunchTemplateTagForDescribeLaunchTemplatesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LaunchTemplateTagForDescribeLaunchTemplatesOutput) SetValue(v string) *LaunchTemplateTagForDescribeLaunchTemplatesOutput {
	s.Value = &v
	return s
}

type TagFilterForDescribeLaunchTemplatesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeLaunchTemplatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeLaunchTemplatesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeLaunchTemplatesInput) SetKey(v string) *TagFilterForDescribeLaunchTemplatesInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagFilterForDescribeLaunchTemplatesInput) SetValue(v []*string) *TagFilterForDescribeLaunchTemplatesInput {
	s.Value = v
	return s
}
