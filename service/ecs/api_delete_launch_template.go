// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteLaunchTemplateCommon = "DeleteLaunchTemplate"

// DeleteLaunchTemplateCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteLaunchTemplateCommon operation. The "output" return
// value will be populated with the DeleteLaunchTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteLaunchTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteLaunchTemplateCommon Send returns without error.
//
// See DeleteLaunchTemplateCommon for more information on using the DeleteLaunchTemplateCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteLaunchTemplateCommonRequest method.
//    req, resp := client.DeleteLaunchTemplateCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DeleteLaunchTemplateCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteLaunchTemplateCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteLaunchTemplateCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteLaunchTemplateCommon for usage and error information.
func (c *ECS) DeleteLaunchTemplateCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteLaunchTemplateCommonRequest(input)
	return out, req.Send()
}

// DeleteLaunchTemplateCommonWithContext is the same as DeleteLaunchTemplateCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteLaunchTemplateCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteLaunchTemplateCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteLaunchTemplateCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteLaunchTemplate = "DeleteLaunchTemplate"

// DeleteLaunchTemplateRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteLaunchTemplate operation. The "output" return
// value will be populated with the DeleteLaunchTemplateCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteLaunchTemplateCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteLaunchTemplateCommon Send returns without error.
//
// See DeleteLaunchTemplate for more information on using the DeleteLaunchTemplate
// API call, and error handling.
//
//    // Example sending a request using the DeleteLaunchTemplateRequest method.
//    req, resp := client.DeleteLaunchTemplateRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DeleteLaunchTemplateRequest(input *DeleteLaunchTemplateInput) (req *request.Request, output *DeleteLaunchTemplateOutput) {
	op := &request.Operation{
		Name:       opDeleteLaunchTemplate,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteLaunchTemplateInput{}
	}

	output = &DeleteLaunchTemplateOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteLaunchTemplate API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DeleteLaunchTemplate for usage and error information.
func (c *ECS) DeleteLaunchTemplate(input *DeleteLaunchTemplateInput) (*DeleteLaunchTemplateOutput, error) {
	req, out := c.DeleteLaunchTemplateRequest(input)
	return out, req.Send()
}

// DeleteLaunchTemplateWithContext is the same as DeleteLaunchTemplate with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteLaunchTemplate for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DeleteLaunchTemplateWithContext(ctx volcengine.Context, input *DeleteLaunchTemplateInput, opts ...request.Option) (*DeleteLaunchTemplateOutput, error) {
	req, out := c.DeleteLaunchTemplateRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteLaunchTemplateInput struct {
	_ struct{} `type:"structure"`

	LaunchTemplateId *string `type:"string"`

	LaunchTemplateName *string `type:"string"`
}

// String returns the string representation
func (s DeleteLaunchTemplateInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteLaunchTemplateInput) GoString() string {
	return s.String()
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *DeleteLaunchTemplateInput) SetLaunchTemplateId(v string) *DeleteLaunchTemplateInput {
	s.LaunchTemplateId = &v
	return s
}

// SetLaunchTemplateName sets the LaunchTemplateName field's value.
func (s *DeleteLaunchTemplateInput) SetLaunchTemplateName(v string) *DeleteLaunchTemplateInput {
	s.LaunchTemplateName = &v
	return s
}

type DeleteLaunchTemplateOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	LaunchTemplateId *string `type:"string"`
}

// String returns the string representation
func (s DeleteLaunchTemplateOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteLaunchTemplateOutput) GoString() string {
	return s.String()
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *DeleteLaunchTemplateOutput) SetLaunchTemplateId(v string) *DeleteLaunchTemplateOutput {
	s.LaunchTemplateId = &v
	return s
}
