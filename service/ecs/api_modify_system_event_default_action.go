// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifySystemEventDefaultActionCommon = "ModifySystemEventDefaultAction"

// ModifySystemEventDefaultActionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifySystemEventDefaultActionCommon operation. The "output" return
// value will be populated with the ModifySystemEventDefaultActionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifySystemEventDefaultActionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifySystemEventDefaultActionCommon Send returns without error.
//
// See ModifySystemEventDefaultActionCommon for more information on using the ModifySystemEventDefaultActionCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifySystemEventDefaultActionCommonRequest method.
//    req, resp := client.ModifySystemEventDefaultActionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifySystemEventDefaultActionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifySystemEventDefaultActionCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifySystemEventDefaultActionCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifySystemEventDefaultActionCommon for usage and error information.
func (c *ECS) ModifySystemEventDefaultActionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifySystemEventDefaultActionCommonRequest(input)
	return out, req.Send()
}

// ModifySystemEventDefaultActionCommonWithContext is the same as ModifySystemEventDefaultActionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifySystemEventDefaultActionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifySystemEventDefaultActionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifySystemEventDefaultActionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifySystemEventDefaultAction = "ModifySystemEventDefaultAction"

// ModifySystemEventDefaultActionRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifySystemEventDefaultAction operation. The "output" return
// value will be populated with the ModifySystemEventDefaultActionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifySystemEventDefaultActionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifySystemEventDefaultActionCommon Send returns without error.
//
// See ModifySystemEventDefaultAction for more information on using the ModifySystemEventDefaultAction
// API call, and error handling.
//
//    // Example sending a request using the ModifySystemEventDefaultActionRequest method.
//    req, resp := client.ModifySystemEventDefaultActionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifySystemEventDefaultActionRequest(input *ModifySystemEventDefaultActionInput) (req *request.Request, output *ModifySystemEventDefaultActionOutput) {
	op := &request.Operation{
		Name:       opModifySystemEventDefaultAction,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifySystemEventDefaultActionInput{}
	}

	output = &ModifySystemEventDefaultActionOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifySystemEventDefaultAction API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifySystemEventDefaultAction for usage and error information.
func (c *ECS) ModifySystemEventDefaultAction(input *ModifySystemEventDefaultActionInput) (*ModifySystemEventDefaultActionOutput, error) {
	req, out := c.ModifySystemEventDefaultActionRequest(input)
	return out, req.Send()
}

// ModifySystemEventDefaultActionWithContext is the same as ModifySystemEventDefaultAction with the addition of
// the ability to pass a context and additional request options.
//
// See ModifySystemEventDefaultAction for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifySystemEventDefaultActionWithContext(ctx volcengine.Context, input *ModifySystemEventDefaultActionInput, opts ...request.Option) (*ModifySystemEventDefaultActionOutput, error) {
	req, out := c.ModifySystemEventDefaultActionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifySystemEventDefaultActionInput struct {
	_ struct{} `type:"structure"`

	// DefaultAction is a required field
	DefaultAction *string `type:"string" required:"true" enum:"DefaultActionForModifySystemEventDefaultActionInput"`

	// EventId is a required field
	EventId *string `type:"string" required:"true"`

	OperatedEndAt *string `type:"string"`

	OperatedStartAt *string `type:"string"`
}

// String returns the string representation
func (s ModifySystemEventDefaultActionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifySystemEventDefaultActionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifySystemEventDefaultActionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifySystemEventDefaultActionInput"}
	if s.DefaultAction == nil {
		invalidParams.Add(request.NewErrParamRequired("DefaultAction"))
	}
	if s.EventId == nil {
		invalidParams.Add(request.NewErrParamRequired("EventId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDefaultAction sets the DefaultAction field's value.
func (s *ModifySystemEventDefaultActionInput) SetDefaultAction(v string) *ModifySystemEventDefaultActionInput {
	s.DefaultAction = &v
	return s
}

// SetEventId sets the EventId field's value.
func (s *ModifySystemEventDefaultActionInput) SetEventId(v string) *ModifySystemEventDefaultActionInput {
	s.EventId = &v
	return s
}

// SetOperatedEndAt sets the OperatedEndAt field's value.
func (s *ModifySystemEventDefaultActionInput) SetOperatedEndAt(v string) *ModifySystemEventDefaultActionInput {
	s.OperatedEndAt = &v
	return s
}

// SetOperatedStartAt sets the OperatedStartAt field's value.
func (s *ModifySystemEventDefaultActionInput) SetOperatedStartAt(v string) *ModifySystemEventDefaultActionInput {
	s.OperatedStartAt = &v
	return s
}

type ModifySystemEventDefaultActionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	EventId *string `type:"string"`

	RelatedEventId *string `type:"string"`
}

// String returns the string representation
func (s ModifySystemEventDefaultActionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifySystemEventDefaultActionOutput) GoString() string {
	return s.String()
}

// SetEventId sets the EventId field's value.
func (s *ModifySystemEventDefaultActionOutput) SetEventId(v string) *ModifySystemEventDefaultActionOutput {
	s.EventId = &v
	return s
}

// SetRelatedEventId sets the RelatedEventId field's value.
func (s *ModifySystemEventDefaultActionOutput) SetRelatedEventId(v string) *ModifySystemEventDefaultActionOutput {
	s.RelatedEventId = &v
	return s
}

const (
	// DefaultActionForModifySystemEventDefaultActionInputColdMigrate is a DefaultActionForModifySystemEventDefaultActionInput enum value
	DefaultActionForModifySystemEventDefaultActionInputColdMigrate = "ColdMigrate"

	// DefaultActionForModifySystemEventDefaultActionInputReplaceDisk is a DefaultActionForModifySystemEventDefaultActionInput enum value
	DefaultActionForModifySystemEventDefaultActionInputReplaceDisk = "ReplaceDisk"
)
