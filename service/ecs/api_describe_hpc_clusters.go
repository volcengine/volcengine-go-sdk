// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeHpcClustersCommon = "DescribeHpcClusters"

// DescribeHpcClustersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeHpcClustersCommon operation. The "output" return
// value will be populated with the DescribeHpcClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeHpcClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeHpcClustersCommon Send returns without error.
//
// See DescribeHpcClustersCommon for more information on using the DescribeHpcClustersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeHpcClustersCommonRequest method.
//    req, resp := client.DescribeHpcClustersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeHpcClustersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeHpcClustersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeHpcClustersCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeHpcClustersCommon for usage and error information.
func (c *ECS) DescribeHpcClustersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeHpcClustersCommonRequest(input)
	return out, req.Send()
}

// DescribeHpcClustersCommonWithContext is the same as DescribeHpcClustersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeHpcClustersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeHpcClustersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeHpcClustersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeHpcClusters = "DescribeHpcClusters"

// DescribeHpcClustersRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeHpcClusters operation. The "output" return
// value will be populated with the DescribeHpcClustersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeHpcClustersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeHpcClustersCommon Send returns without error.
//
// See DescribeHpcClusters for more information on using the DescribeHpcClusters
// API call, and error handling.
//
//    // Example sending a request using the DescribeHpcClustersRequest method.
//    req, resp := client.DescribeHpcClustersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeHpcClustersRequest(input *DescribeHpcClustersInput) (req *request.Request, output *DescribeHpcClustersOutput) {
	op := &request.Operation{
		Name:       opDescribeHpcClusters,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeHpcClustersInput{}
	}

	output = &DescribeHpcClustersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeHpcClusters API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeHpcClusters for usage and error information.
func (c *ECS) DescribeHpcClusters(input *DescribeHpcClustersInput) (*DescribeHpcClustersOutput, error) {
	req, out := c.DescribeHpcClustersRequest(input)
	return out, req.Send()
}

// DescribeHpcClustersWithContext is the same as DescribeHpcClusters with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeHpcClusters for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeHpcClustersWithContext(ctx volcengine.Context, input *DescribeHpcClustersInput, opts ...request.Option) (*DescribeHpcClustersOutput, error) {
	req, out := c.DescribeHpcClustersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeHpcClustersInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	HpcClusterIds []*string `type:"list"`

	MaxResults *int32 `type:"int32"`

	Name *string `type:"string"`

	NextToken *string `type:"string"`

	ProjectName *string `type:"string"`

	TagFilters []*TagFilterForDescribeHpcClustersInput `type:"list"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s DescribeHpcClustersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeHpcClustersInput) GoString() string {
	return s.String()
}

// SetClientToken sets the ClientToken field's value.
func (s *DescribeHpcClustersInput) SetClientToken(v string) *DescribeHpcClustersInput {
	s.ClientToken = &v
	return s
}

// SetHpcClusterIds sets the HpcClusterIds field's value.
func (s *DescribeHpcClustersInput) SetHpcClusterIds(v []*string) *DescribeHpcClustersInput {
	s.HpcClusterIds = v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeHpcClustersInput) SetMaxResults(v int32) *DescribeHpcClustersInput {
	s.MaxResults = &v
	return s
}

// SetName sets the Name field's value.
func (s *DescribeHpcClustersInput) SetName(v string) *DescribeHpcClustersInput {
	s.Name = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeHpcClustersInput) SetNextToken(v string) *DescribeHpcClustersInput {
	s.NextToken = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeHpcClustersInput) SetProjectName(v string) *DescribeHpcClustersInput {
	s.ProjectName = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeHpcClustersInput) SetTagFilters(v []*TagFilterForDescribeHpcClustersInput) *DescribeHpcClustersInput {
	s.TagFilters = v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeHpcClustersInput) SetZoneId(v string) *DescribeHpcClustersInput {
	s.ZoneId = &v
	return s
}

type DescribeHpcClustersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	HpcClusters []*HpcClusterForDescribeHpcClustersOutput `type:"list"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeHpcClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeHpcClustersOutput) GoString() string {
	return s.String()
}

// SetHpcClusters sets the HpcClusters field's value.
func (s *DescribeHpcClustersOutput) SetHpcClusters(v []*HpcClusterForDescribeHpcClustersOutput) *DescribeHpcClustersOutput {
	s.HpcClusters = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeHpcClustersOutput) SetNextToken(v string) *DescribeHpcClustersOutput {
	s.NextToken = &v
	return s
}

type HpcClusterForDescribeHpcClustersOutput struct {
	_ struct{} `type:"structure"`

	CreatedAt *string `type:"string"`

	Description *string `type:"string"`

	HpcClusterId *string `type:"string"`

	Name *string `type:"string"`

	ProjectName *string `type:"string"`

	Tags []*TagForDescribeHpcClustersOutput `type:"list"`

	UpdatedAt *string `type:"string"`

	VpcId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s HpcClusterForDescribeHpcClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HpcClusterForDescribeHpcClustersOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetCreatedAt(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetDescription(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.Description = &v
	return s
}

// SetHpcClusterId sets the HpcClusterId field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetHpcClusterId(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.HpcClusterId = &v
	return s
}

// SetName sets the Name field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetName(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.Name = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetProjectName(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.ProjectName = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetTags(v []*TagForDescribeHpcClustersOutput) *HpcClusterForDescribeHpcClustersOutput {
	s.Tags = v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetUpdatedAt(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.UpdatedAt = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetVpcId(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.VpcId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *HpcClusterForDescribeHpcClustersOutput) SetZoneId(v string) *HpcClusterForDescribeHpcClustersOutput {
	s.ZoneId = &v
	return s
}

type TagFilterForDescribeHpcClustersInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeHpcClustersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeHpcClustersInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeHpcClustersInput) SetKey(v string) *TagFilterForDescribeHpcClustersInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeHpcClustersInput) SetValues(v []*string) *TagFilterForDescribeHpcClustersInput {
	s.Values = v
	return s
}

type TagForDescribeHpcClustersOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeHpcClustersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeHpcClustersOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeHpcClustersOutput) SetKey(v string) *TagForDescribeHpcClustersOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeHpcClustersOutput) SetValue(v string) *TagForDescribeHpcClustersOutput {
	s.Value = &v
	return s
}
