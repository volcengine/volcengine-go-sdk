// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyTemplateDefaultVersionCommon = "ModifyTemplateDefaultVersion"

// ModifyTemplateDefaultVersionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyTemplateDefaultVersionCommon operation. The "output" return
// value will be populated with the ModifyTemplateDefaultVersionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTemplateDefaultVersionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTemplateDefaultVersionCommon Send returns without error.
//
// See ModifyTemplateDefaultVersionCommon for more information on using the ModifyTemplateDefaultVersionCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyTemplateDefaultVersionCommonRequest method.
//    req, resp := client.ModifyTemplateDefaultVersionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyTemplateDefaultVersionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyTemplateDefaultVersionCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTemplateDefaultVersionCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyTemplateDefaultVersionCommon for usage and error information.
func (c *ECS) ModifyTemplateDefaultVersionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyTemplateDefaultVersionCommonRequest(input)
	return out, req.Send()
}

// ModifyTemplateDefaultVersionCommonWithContext is the same as ModifyTemplateDefaultVersionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTemplateDefaultVersionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyTemplateDefaultVersionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyTemplateDefaultVersionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyTemplateDefaultVersion = "ModifyTemplateDefaultVersion"

// ModifyTemplateDefaultVersionRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyTemplateDefaultVersion operation. The "output" return
// value will be populated with the ModifyTemplateDefaultVersionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyTemplateDefaultVersionCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyTemplateDefaultVersionCommon Send returns without error.
//
// See ModifyTemplateDefaultVersion for more information on using the ModifyTemplateDefaultVersion
// API call, and error handling.
//
//    // Example sending a request using the ModifyTemplateDefaultVersionRequest method.
//    req, resp := client.ModifyTemplateDefaultVersionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) ModifyTemplateDefaultVersionRequest(input *ModifyTemplateDefaultVersionInput) (req *request.Request, output *ModifyTemplateDefaultVersionOutput) {
	op := &request.Operation{
		Name:       opModifyTemplateDefaultVersion,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyTemplateDefaultVersionInput{}
	}

	output = &ModifyTemplateDefaultVersionOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyTemplateDefaultVersion API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation ModifyTemplateDefaultVersion for usage and error information.
func (c *ECS) ModifyTemplateDefaultVersion(input *ModifyTemplateDefaultVersionInput) (*ModifyTemplateDefaultVersionOutput, error) {
	req, out := c.ModifyTemplateDefaultVersionRequest(input)
	return out, req.Send()
}

// ModifyTemplateDefaultVersionWithContext is the same as ModifyTemplateDefaultVersion with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyTemplateDefaultVersion for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) ModifyTemplateDefaultVersionWithContext(ctx volcengine.Context, input *ModifyTemplateDefaultVersionInput, opts ...request.Option) (*ModifyTemplateDefaultVersionOutput, error) {
	req, out := c.ModifyTemplateDefaultVersionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyTemplateDefaultVersionInput struct {
	_ struct{} `type:"structure"`

	// DefaultVersionNumber is a required field
	DefaultVersionNumber *int32 `type:"int32" required:"true"`

	LaunchTemplateId *string `type:"string"`

	LaunchTemplateName *string `type:"string"`
}

// String returns the string representation
func (s ModifyTemplateDefaultVersionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTemplateDefaultVersionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyTemplateDefaultVersionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyTemplateDefaultVersionInput"}
	if s.DefaultVersionNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("DefaultVersionNumber"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDefaultVersionNumber sets the DefaultVersionNumber field's value.
func (s *ModifyTemplateDefaultVersionInput) SetDefaultVersionNumber(v int32) *ModifyTemplateDefaultVersionInput {
	s.DefaultVersionNumber = &v
	return s
}

// SetLaunchTemplateId sets the LaunchTemplateId field's value.
func (s *ModifyTemplateDefaultVersionInput) SetLaunchTemplateId(v string) *ModifyTemplateDefaultVersionInput {
	s.LaunchTemplateId = &v
	return s
}

// SetLaunchTemplateName sets the LaunchTemplateName field's value.
func (s *ModifyTemplateDefaultVersionInput) SetLaunchTemplateName(v string) *ModifyTemplateDefaultVersionInput {
	s.LaunchTemplateName = &v
	return s
}

type ModifyTemplateDefaultVersionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s ModifyTemplateDefaultVersionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyTemplateDefaultVersionOutput) GoString() string {
	return s.String()
}
