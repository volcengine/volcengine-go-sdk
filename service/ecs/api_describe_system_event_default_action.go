// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package ecs

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeSystemEventDefaultActionCommon = "DescribeSystemEventDefaultAction"

// DescribeSystemEventDefaultActionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSystemEventDefaultActionCommon operation. The "output" return
// value will be populated with the DescribeSystemEventDefaultActionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSystemEventDefaultActionCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSystemEventDefaultActionCommon Send returns without error.
//
// See DescribeSystemEventDefaultActionCommon for more information on using the DescribeSystemEventDefaultActionCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeSystemEventDefaultActionCommonRequest method.
//    req, resp := client.DescribeSystemEventDefaultActionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeSystemEventDefaultActionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeSystemEventDefaultActionCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSystemEventDefaultActionCommon API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeSystemEventDefaultActionCommon for usage and error information.
func (c *ECS) DescribeSystemEventDefaultActionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeSystemEventDefaultActionCommonRequest(input)
	return out, req.Send()
}

// DescribeSystemEventDefaultActionCommonWithContext is the same as DescribeSystemEventDefaultActionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSystemEventDefaultActionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeSystemEventDefaultActionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeSystemEventDefaultActionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeSystemEventDefaultAction = "DescribeSystemEventDefaultAction"

// DescribeSystemEventDefaultActionRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeSystemEventDefaultAction operation. The "output" return
// value will be populated with the DescribeSystemEventDefaultActionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeSystemEventDefaultActionCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeSystemEventDefaultActionCommon Send returns without error.
//
// See DescribeSystemEventDefaultAction for more information on using the DescribeSystemEventDefaultAction
// API call, and error handling.
//
//    // Example sending a request using the DescribeSystemEventDefaultActionRequest method.
//    req, resp := client.DescribeSystemEventDefaultActionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ECS) DescribeSystemEventDefaultActionRequest(input *DescribeSystemEventDefaultActionInput) (req *request.Request, output *DescribeSystemEventDefaultActionOutput) {
	op := &request.Operation{
		Name:       opDescribeSystemEventDefaultAction,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeSystemEventDefaultActionInput{}
	}

	output = &DescribeSystemEventDefaultActionOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeSystemEventDefaultAction API operation for ECS.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ECS's
// API operation DescribeSystemEventDefaultAction for usage and error information.
func (c *ECS) DescribeSystemEventDefaultAction(input *DescribeSystemEventDefaultActionInput) (*DescribeSystemEventDefaultActionOutput, error) {
	req, out := c.DescribeSystemEventDefaultActionRequest(input)
	return out, req.Send()
}

// DescribeSystemEventDefaultActionWithContext is the same as DescribeSystemEventDefaultAction with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeSystemEventDefaultAction for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ECS) DescribeSystemEventDefaultActionWithContext(ctx volcengine.Context, input *DescribeSystemEventDefaultActionInput, opts ...request.Option) (*DescribeSystemEventDefaultActionOutput, error) {
	req, out := c.DescribeSystemEventDefaultActionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeSystemEventDefaultActionInput struct {
	_ struct{} `type:"structure"`

	// EventId is a required field
	EventId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeSystemEventDefaultActionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSystemEventDefaultActionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeSystemEventDefaultActionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeSystemEventDefaultActionInput"}
	if s.EventId == nil {
		invalidParams.Add(request.NewErrParamRequired("EventId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetEventId sets the EventId field's value.
func (s *DescribeSystemEventDefaultActionInput) SetEventId(v string) *DescribeSystemEventDefaultActionInput {
	s.EventId = &v
	return s
}

type DescribeSystemEventDefaultActionOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	DefaultAction *string `type:"string"`

	EventId *string `type:"string"`

	RelatedSystemEvent *RelatedSystemEventForDescribeSystemEventDefaultActionOutput `type:"structure"`
}

// String returns the string representation
func (s DescribeSystemEventDefaultActionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeSystemEventDefaultActionOutput) GoString() string {
	return s.String()
}

// SetDefaultAction sets the DefaultAction field's value.
func (s *DescribeSystemEventDefaultActionOutput) SetDefaultAction(v string) *DescribeSystemEventDefaultActionOutput {
	s.DefaultAction = &v
	return s
}

// SetEventId sets the EventId field's value.
func (s *DescribeSystemEventDefaultActionOutput) SetEventId(v string) *DescribeSystemEventDefaultActionOutput {
	s.EventId = &v
	return s
}

// SetRelatedSystemEvent sets the RelatedSystemEvent field's value.
func (s *DescribeSystemEventDefaultActionOutput) SetRelatedSystemEvent(v *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) *DescribeSystemEventDefaultActionOutput {
	s.RelatedSystemEvent = v
	return s
}

type ExtraInfoForDescribeSystemEventDefaultActionOutput struct {
	_ struct{} `type:"structure"`
}

// String returns the string representation
func (s ExtraInfoForDescribeSystemEventDefaultActionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ExtraInfoForDescribeSystemEventDefaultActionOutput) GoString() string {
	return s.String()
}

type RelatedSystemEventForDescribeSystemEventDefaultActionOutput struct {
	_ struct{} `type:"structure"`

	Category *string `type:"string"`

	CreatedAt *string `type:"string"`

	ExtraInfo *ExtraInfoForDescribeSystemEventDefaultActionOutput `type:"structure"`

	Id *string `type:"string"`

	ImpactLevel *string `type:"string"`

	OperatedEndAt *string `type:"string"`

	OperatedStartAt *string `type:"string"`

	ResourceId *string `type:"string"`

	Status *string `type:"string"`

	Type *string `type:"string"`

	UpdatedAt *string `type:"string"`
}

// String returns the string representation
func (s RelatedSystemEventForDescribeSystemEventDefaultActionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RelatedSystemEventForDescribeSystemEventDefaultActionOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetCategory(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.Category = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetCreatedAt(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.CreatedAt = &v
	return s
}

// SetExtraInfo sets the ExtraInfo field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetExtraInfo(v *ExtraInfoForDescribeSystemEventDefaultActionOutput) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.ExtraInfo = v
	return s
}

// SetId sets the Id field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetId(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.Id = &v
	return s
}

// SetImpactLevel sets the ImpactLevel field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetImpactLevel(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.ImpactLevel = &v
	return s
}

// SetOperatedEndAt sets the OperatedEndAt field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetOperatedEndAt(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.OperatedEndAt = &v
	return s
}

// SetOperatedStartAt sets the OperatedStartAt field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetOperatedStartAt(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.OperatedStartAt = &v
	return s
}

// SetResourceId sets the ResourceId field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetResourceId(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.ResourceId = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetStatus(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.Status = &v
	return s
}

// SetType sets the Type field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetType(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.Type = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *RelatedSystemEventForDescribeSystemEventDefaultActionOutput) SetUpdatedAt(v string) *RelatedSystemEventForDescribeSystemEventDefaultActionOutput {
	s.UpdatedAt = &v
	return s
}
