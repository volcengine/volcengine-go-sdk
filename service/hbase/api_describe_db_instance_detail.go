// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package hbase

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeDBInstanceDetailCommon = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetailCommon operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetailCommon for more information on using the DescribeDBInstanceDetailCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailCommonRequest method.
//    req, resp := client.DescribeDBInstanceDetailCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *HBASE) DescribeDBInstanceDetailCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetailCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetailCommon API operation for HBASE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for HBASE's
// API operation DescribeDBInstanceDetailCommon for usage and error information.
func (c *HBASE) DescribeDBInstanceDetailCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailCommonWithContext is the same as DescribeDBInstanceDetailCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetailCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *HBASE) DescribeDBInstanceDetailCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeDBInstanceDetailCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeDBInstanceDetail = "DescribeDBInstanceDetail"

// DescribeDBInstanceDetailRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeDBInstanceDetail operation. The "output" return
// value will be populated with the DescribeDBInstanceDetailCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeDBInstanceDetailCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeDBInstanceDetailCommon Send returns without error.
//
// See DescribeDBInstanceDetail for more information on using the DescribeDBInstanceDetail
// API call, and error handling.
//
//    // Example sending a request using the DescribeDBInstanceDetailRequest method.
//    req, resp := client.DescribeDBInstanceDetailRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *HBASE) DescribeDBInstanceDetailRequest(input *DescribeDBInstanceDetailInput) (req *request.Request, output *DescribeDBInstanceDetailOutput) {
	op := &request.Operation{
		Name:       opDescribeDBInstanceDetail,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeDBInstanceDetailInput{}
	}

	output = &DescribeDBInstanceDetailOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeDBInstanceDetail API operation for HBASE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for HBASE's
// API operation DescribeDBInstanceDetail for usage and error information.
func (c *HBASE) DescribeDBInstanceDetail(input *DescribeDBInstanceDetailInput) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	return out, req.Send()
}

// DescribeDBInstanceDetailWithContext is the same as DescribeDBInstanceDetail with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeDBInstanceDetail for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *HBASE) DescribeDBInstanceDetailWithContext(ctx volcengine.Context, input *DescribeDBInstanceDetailInput, opts ...request.Option) (*DescribeDBInstanceDetailOutput, error) {
	req, out := c.DescribeDBInstanceDetailRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DBInstanceEndpointForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AddressType *string `type:"string" json:",omitempty"`

	EipId *string `type:"string" json:",omitempty"`

	EndpointId *string `type:"string" json:",omitempty"`

	EndpointStr *string `type:"string" json:",omitempty"`

	NetworkType *string `type:"string" json:",omitempty"`

	PrivateDNSVisibility *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s DBInstanceEndpointForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DBInstanceEndpointForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAddressType sets the AddressType field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetAddressType(v string) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.AddressType = &v
	return s
}

// SetEipId sets the EipId field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetEipId(v string) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.EipId = &v
	return s
}

// SetEndpointId sets the EndpointId field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetEndpointId(v string) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.EndpointId = &v
	return s
}

// SetEndpointStr sets the EndpointStr field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetEndpointStr(v string) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.EndpointStr = &v
	return s
}

// SetNetworkType sets the NetworkType field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetNetworkType(v string) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.NetworkType = &v
	return s
}

// SetPrivateDNSVisibility sets the PrivateDNSVisibility field's value.
func (s *DBInstanceEndpointForDescribeDBInstanceDetailOutput) SetPrivateDNSVisibility(v bool) *DBInstanceEndpointForDescribeDBInstanceDetailOutput {
	s.PrivateDNSVisibility = &v
	return s
}

type DescribeDBInstanceDetailInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeDBInstanceDetailInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeDBInstanceDetailInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceDetailInput) SetInstanceId(v string) *DescribeDBInstanceDetailInput {
	s.InstanceId = &v
	return s
}

type DescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AutoRenew *bool `type:"boolean" json:",omitempty"`

	ChargeStatus *string `type:"string" json:",omitempty"`

	ChargeType *string `type:"string" json:",omitempty"`

	ColdStorage *int64 `type:"int64" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	DBInstanceEndpoint []*DBInstanceEndpointForDescribeDBInstanceDetailOutput `type:"list" json:",omitempty"`

	DeletionProtection *string `type:"string" json:",omitempty"`

	EnableAuth *bool `type:"boolean" json:",omitempty"`

	EngineVersion *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	InstanceName *string `type:"string" json:",omitempty"`

	InstanceType *string `type:"string" json:",omitempty"`

	MasterCount *int32 `type:"int32" json:",omitempty"`

	MasterSpec *string `type:"string" json:",omitempty"`

	MultiAZ *bool `type:"boolean" json:",omitempty"`

	PrimarySubnetID *string `type:"string" json:",omitempty"`

	PrimaryZoneID *string `type:"string" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	RSCount *int32 `type:"int32" json:",omitempty"`

	RSSpec *string `type:"string" json:",omitempty"`

	RegionId *string `type:"string" json:",omitempty"`

	StandbySubnetID *string `type:"string" json:",omitempty"`

	StandbyUsedStorage *float64 `type:"double" json:",omitempty"`

	StandbyZoneID *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	StorageCapacity *int32 `type:"int32" json:",omitempty"`

	StorageType *string `type:"string" json:",omitempty"`

	SubnetId *string `type:"string" json:",omitempty"`

	Tags []*TagForDescribeDBInstanceDetailOutput `type:"list" json:",omitempty"`

	UsedColdStorage *int64 `type:"int64" json:",omitempty"`

	UsedStorage *float64 `type:"double" json:",omitempty"`

	VpcId *string `type:"string" json:",omitempty"`

	VpcName *string `type:"string" json:",omitempty"`

	ZoneId *string `type:"string" json:",omitempty"`

	ZoneName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetAutoRenew sets the AutoRenew field's value.
func (s *DescribeDBInstanceDetailOutput) SetAutoRenew(v bool) *DescribeDBInstanceDetailOutput {
	s.AutoRenew = &v
	return s
}

// SetChargeStatus sets the ChargeStatus field's value.
func (s *DescribeDBInstanceDetailOutput) SetChargeStatus(v string) *DescribeDBInstanceDetailOutput {
	s.ChargeStatus = &v
	return s
}

// SetChargeType sets the ChargeType field's value.
func (s *DescribeDBInstanceDetailOutput) SetChargeType(v string) *DescribeDBInstanceDetailOutput {
	s.ChargeType = &v
	return s
}

// SetColdStorage sets the ColdStorage field's value.
func (s *DescribeDBInstanceDetailOutput) SetColdStorage(v int64) *DescribeDBInstanceDetailOutput {
	s.ColdStorage = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DescribeDBInstanceDetailOutput) SetCreateTime(v string) *DescribeDBInstanceDetailOutput {
	s.CreateTime = &v
	return s
}

// SetDBInstanceEndpoint sets the DBInstanceEndpoint field's value.
func (s *DescribeDBInstanceDetailOutput) SetDBInstanceEndpoint(v []*DBInstanceEndpointForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.DBInstanceEndpoint = v
	return s
}

// SetDeletionProtection sets the DeletionProtection field's value.
func (s *DescribeDBInstanceDetailOutput) SetDeletionProtection(v string) *DescribeDBInstanceDetailOutput {
	s.DeletionProtection = &v
	return s
}

// SetEnableAuth sets the EnableAuth field's value.
func (s *DescribeDBInstanceDetailOutput) SetEnableAuth(v bool) *DescribeDBInstanceDetailOutput {
	s.EnableAuth = &v
	return s
}

// SetEngineVersion sets the EngineVersion field's value.
func (s *DescribeDBInstanceDetailOutput) SetEngineVersion(v string) *DescribeDBInstanceDetailOutput {
	s.EngineVersion = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeDBInstanceDetailOutput) SetInstanceId(v string) *DescribeDBInstanceDetailOutput {
	s.InstanceId = &v
	return s
}

// SetInstanceName sets the InstanceName field's value.
func (s *DescribeDBInstanceDetailOutput) SetInstanceName(v string) *DescribeDBInstanceDetailOutput {
	s.InstanceName = &v
	return s
}

// SetInstanceType sets the InstanceType field's value.
func (s *DescribeDBInstanceDetailOutput) SetInstanceType(v string) *DescribeDBInstanceDetailOutput {
	s.InstanceType = &v
	return s
}

// SetMasterCount sets the MasterCount field's value.
func (s *DescribeDBInstanceDetailOutput) SetMasterCount(v int32) *DescribeDBInstanceDetailOutput {
	s.MasterCount = &v
	return s
}

// SetMasterSpec sets the MasterSpec field's value.
func (s *DescribeDBInstanceDetailOutput) SetMasterSpec(v string) *DescribeDBInstanceDetailOutput {
	s.MasterSpec = &v
	return s
}

// SetMultiAZ sets the MultiAZ field's value.
func (s *DescribeDBInstanceDetailOutput) SetMultiAZ(v bool) *DescribeDBInstanceDetailOutput {
	s.MultiAZ = &v
	return s
}

// SetPrimarySubnetID sets the PrimarySubnetID field's value.
func (s *DescribeDBInstanceDetailOutput) SetPrimarySubnetID(v string) *DescribeDBInstanceDetailOutput {
	s.PrimarySubnetID = &v
	return s
}

// SetPrimaryZoneID sets the PrimaryZoneID field's value.
func (s *DescribeDBInstanceDetailOutput) SetPrimaryZoneID(v string) *DescribeDBInstanceDetailOutput {
	s.PrimaryZoneID = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeDBInstanceDetailOutput) SetProjectName(v string) *DescribeDBInstanceDetailOutput {
	s.ProjectName = &v
	return s
}

// SetRSCount sets the RSCount field's value.
func (s *DescribeDBInstanceDetailOutput) SetRSCount(v int32) *DescribeDBInstanceDetailOutput {
	s.RSCount = &v
	return s
}

// SetRSSpec sets the RSSpec field's value.
func (s *DescribeDBInstanceDetailOutput) SetRSSpec(v string) *DescribeDBInstanceDetailOutput {
	s.RSSpec = &v
	return s
}

// SetRegionId sets the RegionId field's value.
func (s *DescribeDBInstanceDetailOutput) SetRegionId(v string) *DescribeDBInstanceDetailOutput {
	s.RegionId = &v
	return s
}

// SetStandbySubnetID sets the StandbySubnetID field's value.
func (s *DescribeDBInstanceDetailOutput) SetStandbySubnetID(v string) *DescribeDBInstanceDetailOutput {
	s.StandbySubnetID = &v
	return s
}

// SetStandbyUsedStorage sets the StandbyUsedStorage field's value.
func (s *DescribeDBInstanceDetailOutput) SetStandbyUsedStorage(v float64) *DescribeDBInstanceDetailOutput {
	s.StandbyUsedStorage = &v
	return s
}

// SetStandbyZoneID sets the StandbyZoneID field's value.
func (s *DescribeDBInstanceDetailOutput) SetStandbyZoneID(v string) *DescribeDBInstanceDetailOutput {
	s.StandbyZoneID = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeDBInstanceDetailOutput) SetStatus(v string) *DescribeDBInstanceDetailOutput {
	s.Status = &v
	return s
}

// SetStorageCapacity sets the StorageCapacity field's value.
func (s *DescribeDBInstanceDetailOutput) SetStorageCapacity(v int32) *DescribeDBInstanceDetailOutput {
	s.StorageCapacity = &v
	return s
}

// SetStorageType sets the StorageType field's value.
func (s *DescribeDBInstanceDetailOutput) SetStorageType(v string) *DescribeDBInstanceDetailOutput {
	s.StorageType = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *DescribeDBInstanceDetailOutput) SetSubnetId(v string) *DescribeDBInstanceDetailOutput {
	s.SubnetId = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeDBInstanceDetailOutput) SetTags(v []*TagForDescribeDBInstanceDetailOutput) *DescribeDBInstanceDetailOutput {
	s.Tags = v
	return s
}

// SetUsedColdStorage sets the UsedColdStorage field's value.
func (s *DescribeDBInstanceDetailOutput) SetUsedColdStorage(v int64) *DescribeDBInstanceDetailOutput {
	s.UsedColdStorage = &v
	return s
}

// SetUsedStorage sets the UsedStorage field's value.
func (s *DescribeDBInstanceDetailOutput) SetUsedStorage(v float64) *DescribeDBInstanceDetailOutput {
	s.UsedStorage = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeDBInstanceDetailOutput) SetVpcId(v string) *DescribeDBInstanceDetailOutput {
	s.VpcId = &v
	return s
}

// SetVpcName sets the VpcName field's value.
func (s *DescribeDBInstanceDetailOutput) SetVpcName(v string) *DescribeDBInstanceDetailOutput {
	s.VpcName = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *DescribeDBInstanceDetailOutput) SetZoneId(v string) *DescribeDBInstanceDetailOutput {
	s.ZoneId = &v
	return s
}

// SetZoneName sets the ZoneName field's value.
func (s *DescribeDBInstanceDetailOutput) SetZoneName(v string) *DescribeDBInstanceDetailOutput {
	s.ZoneName = &v
	return s
}

type TagForDescribeDBInstanceDetailOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s TagForDescribeDBInstanceDetailOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeDBInstanceDetailOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeDBInstanceDetailOutput) SetKey(v string) *TagForDescribeDBInstanceDetailOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeDBInstanceDetailOutput) SetValue(v string) *TagForDescribeDBInstanceDetailOutput {
	s.Value = &v
	return s
}
