// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCdnTopIpCommon = "DescribeCdnTopIp"

// DescribeCdnTopIpCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnTopIpCommon operation. The "output" return
// value will be populated with the DescribeCdnTopIpCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnTopIpCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnTopIpCommon Send returns without error.
//
// See DescribeCdnTopIpCommon for more information on using the DescribeCdnTopIpCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnTopIpCommonRequest method.
//    req, resp := client.DescribeCdnTopIpCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnTopIpCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCdnTopIpCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnTopIpCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnTopIpCommon for usage and error information.
func (c *MCDN) DescribeCdnTopIpCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnTopIpCommonRequest(input)
	return out, req.Send()
}

// DescribeCdnTopIpCommonWithContext is the same as DescribeCdnTopIpCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnTopIpCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnTopIpCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnTopIpCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCdnTopIp = "DescribeCdnTopIp"

// DescribeCdnTopIpRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnTopIp operation. The "output" return
// value will be populated with the DescribeCdnTopIpCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnTopIpCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnTopIpCommon Send returns without error.
//
// See DescribeCdnTopIp for more information on using the DescribeCdnTopIp
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnTopIpRequest method.
//    req, resp := client.DescribeCdnTopIpRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnTopIpRequest(input *DescribeCdnTopIpInput) (req *request.Request, output *DescribeCdnTopIpOutput) {
	op := &request.Operation{
		Name:       opDescribeCdnTopIp,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCdnTopIpInput{}
	}

	output = &DescribeCdnTopIpOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnTopIp API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnTopIp for usage and error information.
func (c *MCDN) DescribeCdnTopIp(input *DescribeCdnTopIpInput) (*DescribeCdnTopIpOutput, error) {
	req, out := c.DescribeCdnTopIpRequest(input)
	return out, req.Send()
}

// DescribeCdnTopIpWithContext is the same as DescribeCdnTopIp with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnTopIp for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnTopIpWithContext(ctx volcengine.Context, input *DescribeCdnTopIpInput, opts ...request.Option) (*DescribeCdnTopIpOutput, error) {
	req, out := c.DescribeCdnTopIpRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCdnTopIpInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	DomainId *string `type:"string" json:",omitempty"`

	// EndTime is a required field
	EndTime *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *int64 `type:"int64" json:",omitempty" required:"true"`

	SubProduct *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnTopIpInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnTopIpInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCdnTopIpInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCdnTopIpInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomain sets the Domain field's value.
func (s *DescribeCdnTopIpInput) SetDomain(v string) *DescribeCdnTopIpInput {
	s.Domain = &v
	return s
}

// SetDomainId sets the DomainId field's value.
func (s *DescribeCdnTopIpInput) SetDomainId(v string) *DescribeCdnTopIpInput {
	s.DomainId = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeCdnTopIpInput) SetEndTime(v int64) *DescribeCdnTopIpInput {
	s.EndTime = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *DescribeCdnTopIpInput) SetSortBy(v string) *DescribeCdnTopIpInput {
	s.SortBy = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeCdnTopIpInput) SetStartTime(v int64) *DescribeCdnTopIpInput {
	s.StartTime = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *DescribeCdnTopIpInput) SetSubProduct(v string) *DescribeCdnTopIpInput {
	s.SubProduct = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *DescribeCdnTopIpInput) SetVendor(v string) *DescribeCdnTopIpInput {
	s.Vendor = &v
	return s
}

type DescribeCdnTopIpOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Ips []*IpForDescribeCdnTopIpOutput `type:"list" json:",omitempty"`

	VendorsMetaData []*VendorsMetaDataForDescribeCdnTopIpOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnTopIpOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnTopIpOutput) GoString() string {
	return s.String()
}

// SetIps sets the Ips field's value.
func (s *DescribeCdnTopIpOutput) SetIps(v []*IpForDescribeCdnTopIpOutput) *DescribeCdnTopIpOutput {
	s.Ips = v
	return s
}

// SetVendorsMetaData sets the VendorsMetaData field's value.
func (s *DescribeCdnTopIpOutput) SetVendorsMetaData(v []*VendorsMetaDataForDescribeCdnTopIpOutput) *DescribeCdnTopIpOutput {
	s.VendorsMetaData = v
	return s
}

type ErrorForDescribeCdnTopIpOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Detail *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDescribeCdnTopIpOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDescribeCdnTopIpOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDescribeCdnTopIpOutput) SetCode(v string) *ErrorForDescribeCdnTopIpOutput {
	s.Code = &v
	return s
}

// SetDetail sets the Detail field's value.
func (s *ErrorForDescribeCdnTopIpOutput) SetDetail(v string) *ErrorForDescribeCdnTopIpOutput {
	s.Detail = &v
	return s
}

type IpForDescribeCdnTopIpOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Flux *int64 `type:"int64" json:",omitempty"`

	Ip *string `type:"string" json:",omitempty"`

	Request *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s IpForDescribeCdnTopIpOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpForDescribeCdnTopIpOutput) GoString() string {
	return s.String()
}

// SetFlux sets the Flux field's value.
func (s *IpForDescribeCdnTopIpOutput) SetFlux(v int64) *IpForDescribeCdnTopIpOutput {
	s.Flux = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *IpForDescribeCdnTopIpOutput) SetIp(v string) *IpForDescribeCdnTopIpOutput {
	s.Ip = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *IpForDescribeCdnTopIpOutput) SetRequest(v int64) *IpForDescribeCdnTopIpOutput {
	s.Request = &v
	return s
}

type VendorsMetaDataForDescribeCdnTopIpOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cost *float64 `type:"double" json:",omitempty"`

	Error *ErrorForDescribeCdnTopIpOutput `type:"structure" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	SubProduct *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VendorsMetaDataForDescribeCdnTopIpOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VendorsMetaDataForDescribeCdnTopIpOutput) GoString() string {
	return s.String()
}

// SetCost sets the Cost field's value.
func (s *VendorsMetaDataForDescribeCdnTopIpOutput) SetCost(v float64) *VendorsMetaDataForDescribeCdnTopIpOutput {
	s.Cost = &v
	return s
}

// SetError sets the Error field's value.
func (s *VendorsMetaDataForDescribeCdnTopIpOutput) SetError(v *ErrorForDescribeCdnTopIpOutput) *VendorsMetaDataForDescribeCdnTopIpOutput {
	s.Error = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *VendorsMetaDataForDescribeCdnTopIpOutput) SetRequestId(v string) *VendorsMetaDataForDescribeCdnTopIpOutput {
	s.RequestId = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *VendorsMetaDataForDescribeCdnTopIpOutput) SetSubProduct(v string) *VendorsMetaDataForDescribeCdnTopIpOutput {
	s.SubProduct = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *VendorsMetaDataForDescribeCdnTopIpOutput) SetVendor(v string) *VendorsMetaDataForDescribeCdnTopIpOutput {
	s.Vendor = &v
	return s
}
