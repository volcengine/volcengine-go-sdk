// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCdnOriginDataOfflineCommon = "DescribeCdnOriginDataOffline"

// DescribeCdnOriginDataOfflineCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnOriginDataOfflineCommon operation. The "output" return
// value will be populated with the DescribeCdnOriginDataOfflineCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnOriginDataOfflineCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnOriginDataOfflineCommon Send returns without error.
//
// See DescribeCdnOriginDataOfflineCommon for more information on using the DescribeCdnOriginDataOfflineCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnOriginDataOfflineCommonRequest method.
//    req, resp := client.DescribeCdnOriginDataOfflineCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnOriginDataOfflineCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCdnOriginDataOfflineCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnOriginDataOfflineCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnOriginDataOfflineCommon for usage and error information.
func (c *MCDN) DescribeCdnOriginDataOfflineCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnOriginDataOfflineCommonRequest(input)
	return out, req.Send()
}

// DescribeCdnOriginDataOfflineCommonWithContext is the same as DescribeCdnOriginDataOfflineCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnOriginDataOfflineCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnOriginDataOfflineCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnOriginDataOfflineCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCdnOriginDataOffline = "DescribeCdnOriginDataOffline"

// DescribeCdnOriginDataOfflineRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnOriginDataOffline operation. The "output" return
// value will be populated with the DescribeCdnOriginDataOfflineCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnOriginDataOfflineCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnOriginDataOfflineCommon Send returns without error.
//
// See DescribeCdnOriginDataOffline for more information on using the DescribeCdnOriginDataOffline
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnOriginDataOfflineRequest method.
//    req, resp := client.DescribeCdnOriginDataOfflineRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnOriginDataOfflineRequest(input *DescribeCdnOriginDataOfflineInput) (req *request.Request, output *DescribeCdnOriginDataOfflineOutput) {
	op := &request.Operation{
		Name:       opDescribeCdnOriginDataOffline,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCdnOriginDataOfflineInput{}
	}

	output = &DescribeCdnOriginDataOfflineOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnOriginDataOffline API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnOriginDataOffline for usage and error information.
func (c *MCDN) DescribeCdnOriginDataOffline(input *DescribeCdnOriginDataOfflineInput) (*DescribeCdnOriginDataOfflineOutput, error) {
	req, out := c.DescribeCdnOriginDataOfflineRequest(input)
	return out, req.Send()
}

// DescribeCdnOriginDataOfflineWithContext is the same as DescribeCdnOriginDataOffline with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnOriginDataOffline for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnOriginDataOfflineWithContext(ctx volcengine.Context, input *DescribeCdnOriginDataOfflineInput, opts ...request.Option) (*DescribeCdnOriginDataOfflineOutput, error) {
	req, out := c.DescribeCdnOriginDataOfflineRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCdnOriginDataOfflineInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CdnTypes []*string `type:"list" json:",omitempty"`

	CloudAccountIds []*string `type:"list" json:",omitempty"`

	DomainIds []*string `type:"list" json:",omitempty"`

	Domains []*string `type:"list" json:",omitempty"`

	// EndTime is a required field
	EndTime *int64 `type:"int64" json:",omitempty" required:"true"`

	GroupBy *string `type:"string" json:",omitempty"`

	// Interval is a required field
	Interval *string `type:"string" json:",omitempty" required:"true"`

	IsTrimLatestData *bool `type:"boolean" json:",omitempty"`

	// Metric is a required field
	Metric *string `type:"string" json:",omitempty" required:"true"`

	ProjectNames []*string `type:"list" json:",omitempty"`

	// StartTime is a required field
	StartTime *int64 `type:"int64" json:",omitempty" required:"true"`

	SubProducts []*string `type:"list" json:",omitempty"`

	Vendors []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnOriginDataOfflineInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnOriginDataOfflineInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCdnOriginDataOfflineInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCdnOriginDataOfflineInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.Interval == nil {
		invalidParams.Add(request.NewErrParamRequired("Interval"))
	}
	if s.Metric == nil {
		invalidParams.Add(request.NewErrParamRequired("Metric"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCdnTypes sets the CdnTypes field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetCdnTypes(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.CdnTypes = v
	return s
}

// SetCloudAccountIds sets the CloudAccountIds field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetCloudAccountIds(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.CloudAccountIds = v
	return s
}

// SetDomainIds sets the DomainIds field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetDomainIds(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.DomainIds = v
	return s
}

// SetDomains sets the Domains field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetDomains(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.Domains = v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetEndTime(v int64) *DescribeCdnOriginDataOfflineInput {
	s.EndTime = &v
	return s
}

// SetGroupBy sets the GroupBy field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetGroupBy(v string) *DescribeCdnOriginDataOfflineInput {
	s.GroupBy = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetInterval(v string) *DescribeCdnOriginDataOfflineInput {
	s.Interval = &v
	return s
}

// SetIsTrimLatestData sets the IsTrimLatestData field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetIsTrimLatestData(v bool) *DescribeCdnOriginDataOfflineInput {
	s.IsTrimLatestData = &v
	return s
}

// SetMetric sets the Metric field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetMetric(v string) *DescribeCdnOriginDataOfflineInput {
	s.Metric = &v
	return s
}

// SetProjectNames sets the ProjectNames field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetProjectNames(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.ProjectNames = v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetStartTime(v int64) *DescribeCdnOriginDataOfflineInput {
	s.StartTime = &v
	return s
}

// SetSubProducts sets the SubProducts field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetSubProducts(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.SubProducts = v
	return s
}

// SetVendors sets the Vendors field's value.
func (s *DescribeCdnOriginDataOfflineInput) SetVendors(v []*string) *DescribeCdnOriginDataOfflineInput {
	s.Vendors = v
	return s
}

type DescribeCdnOriginDataOfflineOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Resources []*ResourceForDescribeCdnOriginDataOfflineOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnOriginDataOfflineOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnOriginDataOfflineOutput) GoString() string {
	return s.String()
}

// SetResources sets the Resources field's value.
func (s *DescribeCdnOriginDataOfflineOutput) SetResources(v []*ResourceForDescribeCdnOriginDataOfflineOutput) *DescribeCdnOriginDataOfflineOutput {
	s.Resources = v
	return s
}

type MetricForDescribeCdnOriginDataOfflineOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metric *string `type:"string" json:",omitempty"`

	Values []*ValueForDescribeCdnOriginDataOfflineOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s MetricForDescribeCdnOriginDataOfflineOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MetricForDescribeCdnOriginDataOfflineOutput) GoString() string {
	return s.String()
}

// SetMetric sets the Metric field's value.
func (s *MetricForDescribeCdnOriginDataOfflineOutput) SetMetric(v string) *MetricForDescribeCdnOriginDataOfflineOutput {
	s.Metric = &v
	return s
}

// SetValues sets the Values field's value.
func (s *MetricForDescribeCdnOriginDataOfflineOutput) SetValues(v []*ValueForDescribeCdnOriginDataOfflineOutput) *MetricForDescribeCdnOriginDataOfflineOutput {
	s.Values = v
	return s
}

type ResourceForDescribeCdnOriginDataOfflineOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metrics []*MetricForDescribeCdnOriginDataOfflineOutput `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceForDescribeCdnOriginDataOfflineOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceForDescribeCdnOriginDataOfflineOutput) GoString() string {
	return s.String()
}

// SetMetrics sets the Metrics field's value.
func (s *ResourceForDescribeCdnOriginDataOfflineOutput) SetMetrics(v []*MetricForDescribeCdnOriginDataOfflineOutput) *ResourceForDescribeCdnOriginDataOfflineOutput {
	s.Metrics = v
	return s
}

// SetName sets the Name field's value.
func (s *ResourceForDescribeCdnOriginDataOfflineOutput) SetName(v string) *ResourceForDescribeCdnOriginDataOfflineOutput {
	s.Name = &v
	return s
}

type ValueForDescribeCdnOriginDataOfflineOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Timestamp *int64 `type:"int64" json:",omitempty"`

	Value *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ValueForDescribeCdnOriginDataOfflineOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ValueForDescribeCdnOriginDataOfflineOutput) GoString() string {
	return s.String()
}

// SetTimestamp sets the Timestamp field's value.
func (s *ValueForDescribeCdnOriginDataOfflineOutput) SetTimestamp(v int64) *ValueForDescribeCdnOriginDataOfflineOutput {
	s.Timestamp = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ValueForDescribeCdnOriginDataOfflineOutput) SetValue(v float64) *ValueForDescribeCdnOriginDataOfflineOutput {
	s.Value = &v
	return s
}
