// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeContentTaskByTaskIdCommon = "DescribeContentTaskByTaskId"

// DescribeContentTaskByTaskIdCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeContentTaskByTaskIdCommon operation. The "output" return
// value will be populated with the DescribeContentTaskByTaskIdCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeContentTaskByTaskIdCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeContentTaskByTaskIdCommon Send returns without error.
//
// See DescribeContentTaskByTaskIdCommon for more information on using the DescribeContentTaskByTaskIdCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeContentTaskByTaskIdCommonRequest method.
//    req, resp := client.DescribeContentTaskByTaskIdCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeContentTaskByTaskIdCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeContentTaskByTaskIdCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeContentTaskByTaskIdCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeContentTaskByTaskIdCommon for usage and error information.
func (c *MCDN) DescribeContentTaskByTaskIdCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeContentTaskByTaskIdCommonRequest(input)
	return out, req.Send()
}

// DescribeContentTaskByTaskIdCommonWithContext is the same as DescribeContentTaskByTaskIdCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeContentTaskByTaskIdCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeContentTaskByTaskIdCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeContentTaskByTaskIdCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeContentTaskByTaskId = "DescribeContentTaskByTaskId"

// DescribeContentTaskByTaskIdRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeContentTaskByTaskId operation. The "output" return
// value will be populated with the DescribeContentTaskByTaskIdCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeContentTaskByTaskIdCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeContentTaskByTaskIdCommon Send returns without error.
//
// See DescribeContentTaskByTaskId for more information on using the DescribeContentTaskByTaskId
// API call, and error handling.
//
//    // Example sending a request using the DescribeContentTaskByTaskIdRequest method.
//    req, resp := client.DescribeContentTaskByTaskIdRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeContentTaskByTaskIdRequest(input *DescribeContentTaskByTaskIdInput) (req *request.Request, output *DescribeContentTaskByTaskIdOutput) {
	op := &request.Operation{
		Name:       opDescribeContentTaskByTaskId,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeContentTaskByTaskIdInput{}
	}

	output = &DescribeContentTaskByTaskIdOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeContentTaskByTaskId API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeContentTaskByTaskId for usage and error information.
func (c *MCDN) DescribeContentTaskByTaskId(input *DescribeContentTaskByTaskIdInput) (*DescribeContentTaskByTaskIdOutput, error) {
	req, out := c.DescribeContentTaskByTaskIdRequest(input)
	return out, req.Send()
}

// DescribeContentTaskByTaskIdWithContext is the same as DescribeContentTaskByTaskId with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeContentTaskByTaskId for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeContentTaskByTaskIdWithContext(ctx volcengine.Context, input *DescribeContentTaskByTaskIdInput, opts ...request.Option) (*DescribeContentTaskByTaskIdOutput, error) {
	req, out := c.DescribeContentTaskByTaskIdRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeContentTaskByTaskIdInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	// TaskId is a required field
	TaskId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DescribeContentTaskByTaskIdInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeContentTaskByTaskIdInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeContentTaskByTaskIdInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeContentTaskByTaskIdInput"}
	if s.TaskId == nil {
		invalidParams.Add(request.NewErrParamRequired("TaskId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeContentTaskByTaskIdInput) SetProjectName(v string) *DescribeContentTaskByTaskIdInput {
	s.ProjectName = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *DescribeContentTaskByTaskIdInput) SetTaskId(v string) *DescribeContentTaskByTaskIdInput {
	s.TaskId = &v
	return s
}

type DescribeContentTaskByTaskIdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SubTasks []*SubTaskForDescribeContentTaskByTaskIdOutput `type:"list" json:",omitempty"`

	VendorsMetaData []*VendorsMetaDataForDescribeContentTaskByTaskIdOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeContentTaskByTaskIdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeContentTaskByTaskIdOutput) GoString() string {
	return s.String()
}

// SetSubTasks sets the SubTasks field's value.
func (s *DescribeContentTaskByTaskIdOutput) SetSubTasks(v []*SubTaskForDescribeContentTaskByTaskIdOutput) *DescribeContentTaskByTaskIdOutput {
	s.SubTasks = v
	return s
}

// SetVendorsMetaData sets the VendorsMetaData field's value.
func (s *DescribeContentTaskByTaskIdOutput) SetVendorsMetaData(v []*VendorsMetaDataForDescribeContentTaskByTaskIdOutput) *DescribeContentTaskByTaskIdOutput {
	s.VendorsMetaData = v
	return s
}

type ErrorForDescribeContentTaskByTaskIdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Detail *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDescribeContentTaskByTaskIdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDescribeContentTaskByTaskIdOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDescribeContentTaskByTaskIdOutput) SetCode(v string) *ErrorForDescribeContentTaskByTaskIdOutput {
	s.Code = &v
	return s
}

// SetDetail sets the Detail field's value.
func (s *ErrorForDescribeContentTaskByTaskIdOutput) SetDetail(v string) *ErrorForDescribeContentTaskByTaskIdOutput {
	s.Detail = &v
	return s
}

type SubTaskForDescribeContentTaskByTaskIdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudAccountId *string `type:"string" json:",omitempty"`

	CloudAccountName *string `type:"string" json:",omitempty"`

	CreatedAt *int64 `type:"int64" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	ProductType *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubProduct *string `type:"string" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`

	TaskType *string `type:"string" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`

	VendorTaskIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s SubTaskForDescribeContentTaskByTaskIdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubTaskForDescribeContentTaskByTaskIdOutput) GoString() string {
	return s.String()
}

// SetCloudAccountId sets the CloudAccountId field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetCloudAccountId(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.CloudAccountId = &v
	return s
}

// SetCloudAccountName sets the CloudAccountName field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetCloudAccountName(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.CloudAccountName = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetCreatedAt(v int64) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetDescription(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.Description = &v
	return s
}

// SetProductType sets the ProductType field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetProductType(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.ProductType = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetStatus(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.Status = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetSubProduct(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.SubProduct = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetTaskId(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.TaskId = &v
	return s
}

// SetTaskType sets the TaskType field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetTaskType(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.TaskType = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetUrl(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.Url = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetVendor(v string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.Vendor = &v
	return s
}

// SetVendorTaskIds sets the VendorTaskIds field's value.
func (s *SubTaskForDescribeContentTaskByTaskIdOutput) SetVendorTaskIds(v []*string) *SubTaskForDescribeContentTaskByTaskIdOutput {
	s.VendorTaskIds = v
	return s
}

type VendorsMetaDataForDescribeContentTaskByTaskIdOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CloudAccountId *string `type:"string" json:",omitempty"`

	Cost *float64 `type:"double" json:",omitempty"`

	Error *ErrorForDescribeContentTaskByTaskIdOutput `type:"structure" json:",omitempty"`

	ProductType *string `type:"string" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VendorsMetaDataForDescribeContentTaskByTaskIdOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VendorsMetaDataForDescribeContentTaskByTaskIdOutput) GoString() string {
	return s.String()
}

// SetCloudAccountId sets the CloudAccountId field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetCloudAccountId(v string) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.CloudAccountId = &v
	return s
}

// SetCost sets the Cost field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetCost(v float64) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.Cost = &v
	return s
}

// SetError sets the Error field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetError(v *ErrorForDescribeContentTaskByTaskIdOutput) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.Error = v
	return s
}

// SetProductType sets the ProductType field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetProductType(v string) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.ProductType = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetRequestId(v string) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.RequestId = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *VendorsMetaDataForDescribeContentTaskByTaskIdOutput) SetVendor(v string) *VendorsMetaDataForDescribeContentTaskByTaskIdOutput {
	s.Vendor = &v
	return s
}
