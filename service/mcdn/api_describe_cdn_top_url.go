// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeCdnTopUrlCommon = "DescribeCdnTopUrl"

// DescribeCdnTopUrlCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnTopUrlCommon operation. The "output" return
// value will be populated with the DescribeCdnTopUrlCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnTopUrlCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnTopUrlCommon Send returns without error.
//
// See DescribeCdnTopUrlCommon for more information on using the DescribeCdnTopUrlCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnTopUrlCommonRequest method.
//    req, resp := client.DescribeCdnTopUrlCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnTopUrlCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeCdnTopUrlCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnTopUrlCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnTopUrlCommon for usage and error information.
func (c *MCDN) DescribeCdnTopUrlCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnTopUrlCommonRequest(input)
	return out, req.Send()
}

// DescribeCdnTopUrlCommonWithContext is the same as DescribeCdnTopUrlCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnTopUrlCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnTopUrlCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeCdnTopUrlCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeCdnTopUrl = "DescribeCdnTopUrl"

// DescribeCdnTopUrlRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeCdnTopUrl operation. The "output" return
// value will be populated with the DescribeCdnTopUrlCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeCdnTopUrlCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeCdnTopUrlCommon Send returns without error.
//
// See DescribeCdnTopUrl for more information on using the DescribeCdnTopUrl
// API call, and error handling.
//
//    // Example sending a request using the DescribeCdnTopUrlRequest method.
//    req, resp := client.DescribeCdnTopUrlRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) DescribeCdnTopUrlRequest(input *DescribeCdnTopUrlInput) (req *request.Request, output *DescribeCdnTopUrlOutput) {
	op := &request.Operation{
		Name:       opDescribeCdnTopUrl,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeCdnTopUrlInput{}
	}

	output = &DescribeCdnTopUrlOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeCdnTopUrl API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation DescribeCdnTopUrl for usage and error information.
func (c *MCDN) DescribeCdnTopUrl(input *DescribeCdnTopUrlInput) (*DescribeCdnTopUrlOutput, error) {
	req, out := c.DescribeCdnTopUrlRequest(input)
	return out, req.Send()
}

// DescribeCdnTopUrlWithContext is the same as DescribeCdnTopUrl with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeCdnTopUrl for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) DescribeCdnTopUrlWithContext(ctx volcengine.Context, input *DescribeCdnTopUrlInput, opts ...request.Option) (*DescribeCdnTopUrlOutput, error) {
	req, out := c.DescribeCdnTopUrlRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeCdnTopUrlInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	DomainId *string `type:"string" json:",omitempty"`

	// EndTime is a required field
	EndTime *int64 `type:"int64" json:",omitempty" required:"true"`

	SortBy *string `type:"string" json:",omitempty"`

	// StartTime is a required field
	StartTime *int64 `type:"int64" json:",omitempty" required:"true"`

	SubProduct *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnTopUrlInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnTopUrlInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeCdnTopUrlInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeCdnTopUrlInput"}
	if s.EndTime == nil {
		invalidParams.Add(request.NewErrParamRequired("EndTime"))
	}
	if s.StartTime == nil {
		invalidParams.Add(request.NewErrParamRequired("StartTime"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDomain sets the Domain field's value.
func (s *DescribeCdnTopUrlInput) SetDomain(v string) *DescribeCdnTopUrlInput {
	s.Domain = &v
	return s
}

// SetDomainId sets the DomainId field's value.
func (s *DescribeCdnTopUrlInput) SetDomainId(v string) *DescribeCdnTopUrlInput {
	s.DomainId = &v
	return s
}

// SetEndTime sets the EndTime field's value.
func (s *DescribeCdnTopUrlInput) SetEndTime(v int64) *DescribeCdnTopUrlInput {
	s.EndTime = &v
	return s
}

// SetSortBy sets the SortBy field's value.
func (s *DescribeCdnTopUrlInput) SetSortBy(v string) *DescribeCdnTopUrlInput {
	s.SortBy = &v
	return s
}

// SetStartTime sets the StartTime field's value.
func (s *DescribeCdnTopUrlInput) SetStartTime(v int64) *DescribeCdnTopUrlInput {
	s.StartTime = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *DescribeCdnTopUrlInput) SetSubProduct(v string) *DescribeCdnTopUrlInput {
	s.SubProduct = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *DescribeCdnTopUrlInput) SetVendor(v string) *DescribeCdnTopUrlInput {
	s.Vendor = &v
	return s
}

type DescribeCdnTopUrlOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Urls []*UrlForDescribeCdnTopUrlOutput `type:"list" json:",omitempty"`

	VendorsMetaData []*VendorsMetaDataForDescribeCdnTopUrlOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeCdnTopUrlOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeCdnTopUrlOutput) GoString() string {
	return s.String()
}

// SetUrls sets the Urls field's value.
func (s *DescribeCdnTopUrlOutput) SetUrls(v []*UrlForDescribeCdnTopUrlOutput) *DescribeCdnTopUrlOutput {
	s.Urls = v
	return s
}

// SetVendorsMetaData sets the VendorsMetaData field's value.
func (s *DescribeCdnTopUrlOutput) SetVendorsMetaData(v []*VendorsMetaDataForDescribeCdnTopUrlOutput) *DescribeCdnTopUrlOutput {
	s.VendorsMetaData = v
	return s
}

type ErrorForDescribeCdnTopUrlOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Code *string `type:"string" json:",omitempty"`

	Detail *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ErrorForDescribeCdnTopUrlOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ErrorForDescribeCdnTopUrlOutput) GoString() string {
	return s.String()
}

// SetCode sets the Code field's value.
func (s *ErrorForDescribeCdnTopUrlOutput) SetCode(v string) *ErrorForDescribeCdnTopUrlOutput {
	s.Code = &v
	return s
}

// SetDetail sets the Detail field's value.
func (s *ErrorForDescribeCdnTopUrlOutput) SetDetail(v string) *ErrorForDescribeCdnTopUrlOutput {
	s.Detail = &v
	return s
}

type UrlForDescribeCdnTopUrlOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Flux *int64 `type:"int64" json:",omitempty"`

	Request *int64 `type:"int64" json:",omitempty"`

	Url *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UrlForDescribeCdnTopUrlOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UrlForDescribeCdnTopUrlOutput) GoString() string {
	return s.String()
}

// SetFlux sets the Flux field's value.
func (s *UrlForDescribeCdnTopUrlOutput) SetFlux(v int64) *UrlForDescribeCdnTopUrlOutput {
	s.Flux = &v
	return s
}

// SetRequest sets the Request field's value.
func (s *UrlForDescribeCdnTopUrlOutput) SetRequest(v int64) *UrlForDescribeCdnTopUrlOutput {
	s.Request = &v
	return s
}

// SetUrl sets the Url field's value.
func (s *UrlForDescribeCdnTopUrlOutput) SetUrl(v string) *UrlForDescribeCdnTopUrlOutput {
	s.Url = &v
	return s
}

type VendorsMetaDataForDescribeCdnTopUrlOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Cost *float64 `type:"double" json:",omitempty"`

	Error *ErrorForDescribeCdnTopUrlOutput `type:"structure" json:",omitempty"`

	RequestId *string `type:"string" json:",omitempty"`

	SubProduct *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s VendorsMetaDataForDescribeCdnTopUrlOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VendorsMetaDataForDescribeCdnTopUrlOutput) GoString() string {
	return s.String()
}

// SetCost sets the Cost field's value.
func (s *VendorsMetaDataForDescribeCdnTopUrlOutput) SetCost(v float64) *VendorsMetaDataForDescribeCdnTopUrlOutput {
	s.Cost = &v
	return s
}

// SetError sets the Error field's value.
func (s *VendorsMetaDataForDescribeCdnTopUrlOutput) SetError(v *ErrorForDescribeCdnTopUrlOutput) *VendorsMetaDataForDescribeCdnTopUrlOutput {
	s.Error = v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *VendorsMetaDataForDescribeCdnTopUrlOutput) SetRequestId(v string) *VendorsMetaDataForDescribeCdnTopUrlOutput {
	s.RequestId = &v
	return s
}

// SetSubProduct sets the SubProduct field's value.
func (s *VendorsMetaDataForDescribeCdnTopUrlOutput) SetSubProduct(v string) *VendorsMetaDataForDescribeCdnTopUrlOutput {
	s.SubProduct = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *VendorsMetaDataForDescribeCdnTopUrlOutput) SetVendor(v string) *VendorsMetaDataForDescribeCdnTopUrlOutput {
	s.Vendor = &v
	return s
}
