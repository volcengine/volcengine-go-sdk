// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package mcdn

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAlertStrategiesCommon = "ListAlertStrategies"

// ListAlertStrategiesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlertStrategiesCommon operation. The "output" return
// value will be populated with the ListAlertStrategiesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlertStrategiesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlertStrategiesCommon Send returns without error.
//
// See ListAlertStrategiesCommon for more information on using the ListAlertStrategiesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAlertStrategiesCommonRequest method.
//    req, resp := client.ListAlertStrategiesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) ListAlertStrategiesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAlertStrategiesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlertStrategiesCommon API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation ListAlertStrategiesCommon for usage and error information.
func (c *MCDN) ListAlertStrategiesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAlertStrategiesCommonRequest(input)
	return out, req.Send()
}

// ListAlertStrategiesCommonWithContext is the same as ListAlertStrategiesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlertStrategiesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) ListAlertStrategiesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAlertStrategiesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAlertStrategies = "ListAlertStrategies"

// ListAlertStrategiesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAlertStrategies operation. The "output" return
// value will be populated with the ListAlertStrategiesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAlertStrategiesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAlertStrategiesCommon Send returns without error.
//
// See ListAlertStrategies for more information on using the ListAlertStrategies
// API call, and error handling.
//
//    // Example sending a request using the ListAlertStrategiesRequest method.
//    req, resp := client.ListAlertStrategiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *MCDN) ListAlertStrategiesRequest(input *ListAlertStrategiesInput) (req *request.Request, output *ListAlertStrategiesOutput) {
	op := &request.Operation{
		Name:       opListAlertStrategies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAlertStrategiesInput{}
	}

	output = &ListAlertStrategiesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListAlertStrategies API operation for MCDN.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for MCDN's
// API operation ListAlertStrategies for usage and error information.
func (c *MCDN) ListAlertStrategies(input *ListAlertStrategiesInput) (*ListAlertStrategiesOutput, error) {
	req, out := c.ListAlertStrategiesRequest(input)
	return out, req.Send()
}

// ListAlertStrategiesWithContext is the same as ListAlertStrategies with the addition of
// the ability to pass a context and additional request options.
//
// See ListAlertStrategies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *MCDN) ListAlertStrategiesWithContext(ctx volcengine.Context, input *ListAlertStrategiesInput, opts ...request.Option) (*ListAlertStrategiesOutput, error) {
	req, out := c.ListAlertStrategiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AlertRuleForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Conditions []*ConditionForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	EnableEndTime *string `type:"string" json:",omitempty"`

	EnableStartTime *string `type:"string" json:",omitempty"`

	Frequency *int64 `type:"int64" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	Logic *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AlertRuleForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AlertRuleForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetConditions sets the Conditions field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetConditions(v []*ConditionForListAlertStrategiesOutput) *AlertRuleForListAlertStrategiesOutput {
	s.Conditions = v
	return s
}

// SetEnableEndTime sets the EnableEndTime field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetEnableEndTime(v string) *AlertRuleForListAlertStrategiesOutput {
	s.EnableEndTime = &v
	return s
}

// SetEnableStartTime sets the EnableStartTime field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetEnableStartTime(v string) *AlertRuleForListAlertStrategiesOutput {
	s.EnableStartTime = &v
	return s
}

// SetFrequency sets the Frequency field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetFrequency(v int64) *AlertRuleForListAlertStrategiesOutput {
	s.Frequency = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetLevel(v string) *AlertRuleForListAlertStrategiesOutput {
	s.Level = &v
	return s
}

// SetLogic sets the Logic field's value.
func (s *AlertRuleForListAlertStrategiesOutput) SetLogic(v string) *AlertRuleForListAlertStrategiesOutput {
	s.Logic = &v
	return s
}

type ConditionForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Format *string `type:"string" json:",omitempty"`

	MetricId *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Period *int64 `type:"int64" json:",omitempty"`

	Sensitivity *string `type:"string" json:",omitempty"`

	ThresholdType *string `type:"string" json:",omitempty"`

	Value *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s ConditionForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConditionForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetFormat sets the Format field's value.
func (s *ConditionForListAlertStrategiesOutput) SetFormat(v string) *ConditionForListAlertStrategiesOutput {
	s.Format = &v
	return s
}

// SetMetricId sets the MetricId field's value.
func (s *ConditionForListAlertStrategiesOutput) SetMetricId(v string) *ConditionForListAlertStrategiesOutput {
	s.MetricId = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *ConditionForListAlertStrategiesOutput) SetOperator(v string) *ConditionForListAlertStrategiesOutput {
	s.Operator = &v
	return s
}

// SetPeriod sets the Period field's value.
func (s *ConditionForListAlertStrategiesOutput) SetPeriod(v int64) *ConditionForListAlertStrategiesOutput {
	s.Period = &v
	return s
}

// SetSensitivity sets the Sensitivity field's value.
func (s *ConditionForListAlertStrategiesOutput) SetSensitivity(v string) *ConditionForListAlertStrategiesOutput {
	s.Sensitivity = &v
	return s
}

// SetThresholdType sets the ThresholdType field's value.
func (s *ConditionForListAlertStrategiesOutput) SetThresholdType(v string) *ConditionForListAlertStrategiesOutput {
	s.ThresholdType = &v
	return s
}

// SetValue sets the Value field's value.
func (s *ConditionForListAlertStrategiesOutput) SetValue(v float64) *ConditionForListAlertStrategiesOutput {
	s.Value = &v
	return s
}

type ContactGroupForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ContactGroupForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContactGroupForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *ContactGroupForListAlertStrategiesOutput) SetId(v string) *ContactGroupForListAlertStrategiesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ContactGroupForListAlertStrategiesOutput) SetName(v string) *ContactGroupForListAlertStrategiesOutput {
	s.Name = &v
	return s
}

type ContactRobotForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RobotType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ContactRobotForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContactRobotForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *ContactRobotForListAlertStrategiesOutput) SetId(v string) *ContactRobotForListAlertStrategiesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ContactRobotForListAlertStrategiesOutput) SetName(v string) *ContactRobotForListAlertStrategiesOutput {
	s.Name = &v
	return s
}

// SetRobotType sets the RobotType field's value.
func (s *ContactRobotForListAlertStrategiesOutput) SetRobotType(v string) *ContactRobotForListAlertStrategiesOutput {
	s.RobotType = &v
	return s
}

type DataForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AlertRule *AlertRuleForListAlertStrategiesOutput `type:"structure" json:",omitempty"`

	Domains []*DomainForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProbeTasks []*ProbeTaskForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	ResourceScope *string `type:"string" json:",omitempty"`

	ResourceTypes []*string `type:"list" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`

	SubscribeRule *SubscribeRuleForListAlertStrategiesOutput `type:"structure" json:",omitempty"`

	TriggerType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetAlertRule sets the AlertRule field's value.
func (s *DataForListAlertStrategiesOutput) SetAlertRule(v *AlertRuleForListAlertStrategiesOutput) *DataForListAlertStrategiesOutput {
	s.AlertRule = v
	return s
}

// SetDomains sets the Domains field's value.
func (s *DataForListAlertStrategiesOutput) SetDomains(v []*DomainForListAlertStrategiesOutput) *DataForListAlertStrategiesOutput {
	s.Domains = v
	return s
}

// SetId sets the Id field's value.
func (s *DataForListAlertStrategiesOutput) SetId(v string) *DataForListAlertStrategiesOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListAlertStrategiesOutput) SetName(v string) *DataForListAlertStrategiesOutput {
	s.Name = &v
	return s
}

// SetProbeTasks sets the ProbeTasks field's value.
func (s *DataForListAlertStrategiesOutput) SetProbeTasks(v []*ProbeTaskForListAlertStrategiesOutput) *DataForListAlertStrategiesOutput {
	s.ProbeTasks = v
	return s
}

// SetResourceScope sets the ResourceScope field's value.
func (s *DataForListAlertStrategiesOutput) SetResourceScope(v string) *DataForListAlertStrategiesOutput {
	s.ResourceScope = &v
	return s
}

// SetResourceTypes sets the ResourceTypes field's value.
func (s *DataForListAlertStrategiesOutput) SetResourceTypes(v []*string) *DataForListAlertStrategiesOutput {
	s.ResourceTypes = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DataForListAlertStrategiesOutput) SetStatus(v string) *DataForListAlertStrategiesOutput {
	s.Status = &v
	return s
}

// SetSubscribeRule sets the SubscribeRule field's value.
func (s *DataForListAlertStrategiesOutput) SetSubscribeRule(v *SubscribeRuleForListAlertStrategiesOutput) *DataForListAlertStrategiesOutput {
	s.SubscribeRule = v
	return s
}

// SetTriggerType sets the TriggerType field's value.
func (s *DataForListAlertStrategiesOutput) SetTriggerType(v string) *DataForListAlertStrategiesOutput {
	s.TriggerType = &v
	return s
}

type DomainForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Domain *string `type:"string" json:",omitempty"`

	Vendor *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DomainForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DomainForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *DomainForListAlertStrategiesOutput) SetDomain(v string) *DomainForListAlertStrategiesOutput {
	s.Domain = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *DomainForListAlertStrategiesOutput) SetVendor(v string) *DomainForListAlertStrategiesOutput {
	s.Vendor = &v
	return s
}

type ListAlertStrategiesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Pagination *PaginationForListAlertStrategiesInput `type:"structure" json:",omitempty"`

	ProjectName *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListAlertStrategiesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlertStrategiesInput) GoString() string {
	return s.String()
}

// SetLevel sets the Level field's value.
func (s *ListAlertStrategiesInput) SetLevel(v string) *ListAlertStrategiesInput {
	s.Level = &v
	return s
}

// SetName sets the Name field's value.
func (s *ListAlertStrategiesInput) SetName(v string) *ListAlertStrategiesInput {
	s.Name = &v
	return s
}

// SetPagination sets the Pagination field's value.
func (s *ListAlertStrategiesInput) SetPagination(v *PaginationForListAlertStrategiesInput) *ListAlertStrategiesInput {
	s.Pagination = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *ListAlertStrategiesInput) SetProjectName(v string) *ListAlertStrategiesInput {
	s.ProjectName = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListAlertStrategiesInput) SetStatus(v string) *ListAlertStrategiesInput {
	s.Status = &v
	return s
}

type ListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	Pagination *PaginationForListAlertStrategiesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListAlertStrategiesOutput) SetData(v []*DataForListAlertStrategiesOutput) *ListAlertStrategiesOutput {
	s.Data = v
	return s
}

// SetPagination sets the Pagination field's value.
func (s *ListAlertStrategiesOutput) SetPagination(v *PaginationForListAlertStrategiesOutput) *ListAlertStrategiesOutput {
	s.Pagination = v
	return s
}

type NotifyConfigForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	IgnoreDisabledDomains *bool `type:"boolean" json:",omitempty"`

	Level *string `type:"string" json:",omitempty"`

	SendType []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s NotifyConfigForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s NotifyConfigForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetIgnoreDisabledDomains sets the IgnoreDisabledDomains field's value.
func (s *NotifyConfigForListAlertStrategiesOutput) SetIgnoreDisabledDomains(v bool) *NotifyConfigForListAlertStrategiesOutput {
	s.IgnoreDisabledDomains = &v
	return s
}

// SetLevel sets the Level field's value.
func (s *NotifyConfigForListAlertStrategiesOutput) SetLevel(v string) *NotifyConfigForListAlertStrategiesOutput {
	s.Level = &v
	return s
}

// SetSendType sets the SendType field's value.
func (s *NotifyConfigForListAlertStrategiesOutput) SetSendType(v []*string) *NotifyConfigForListAlertStrategiesOutput {
	s.SendType = v
	return s
}

type PaginationForListAlertStrategiesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PageNum *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s PaginationForListAlertStrategiesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PaginationForListAlertStrategiesInput) GoString() string {
	return s.String()
}

// SetPageNum sets the PageNum field's value.
func (s *PaginationForListAlertStrategiesInput) SetPageNum(v int64) *PaginationForListAlertStrategiesInput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *PaginationForListAlertStrategiesInput) SetPageSize(v int64) *PaginationForListAlertStrategiesInput {
	s.PageSize = &v
	return s
}

type PaginationForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PageNum *int64 `type:"int64" json:",omitempty"`

	PageSize *int64 `type:"int64" json:",omitempty"`

	Total *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s PaginationForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PaginationForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetPageNum sets the PageNum field's value.
func (s *PaginationForListAlertStrategiesOutput) SetPageNum(v int64) *PaginationForListAlertStrategiesOutput {
	s.PageNum = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *PaginationForListAlertStrategiesOutput) SetPageSize(v int64) *PaginationForListAlertStrategiesOutput {
	s.PageSize = &v
	return s
}

// SetTotal sets the Total field's value.
func (s *PaginationForListAlertStrategiesOutput) SetTotal(v int64) *PaginationForListAlertStrategiesOutput {
	s.Total = &v
	return s
}

type ProbeTaskForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	TaskId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ProbeTaskForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProbeTaskForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetName sets the Name field's value.
func (s *ProbeTaskForListAlertStrategiesOutput) SetName(v string) *ProbeTaskForListAlertStrategiesOutput {
	s.Name = &v
	return s
}

// SetTaskId sets the TaskId field's value.
func (s *ProbeTaskForListAlertStrategiesOutput) SetTaskId(v string) *ProbeTaskForListAlertStrategiesOutput {
	s.TaskId = &v
	return s
}

type SubscribeRuleForListAlertStrategiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ContactGroups []*ContactGroupForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	ContactRobots []*ContactRobotForListAlertStrategiesOutput `type:"list" json:",omitempty"`

	NotifyConfig *NotifyConfigForListAlertStrategiesOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s SubscribeRuleForListAlertStrategiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubscribeRuleForListAlertStrategiesOutput) GoString() string {
	return s.String()
}

// SetContactGroups sets the ContactGroups field's value.
func (s *SubscribeRuleForListAlertStrategiesOutput) SetContactGroups(v []*ContactGroupForListAlertStrategiesOutput) *SubscribeRuleForListAlertStrategiesOutput {
	s.ContactGroups = v
	return s
}

// SetContactRobots sets the ContactRobots field's value.
func (s *SubscribeRuleForListAlertStrategiesOutput) SetContactRobots(v []*ContactRobotForListAlertStrategiesOutput) *SubscribeRuleForListAlertStrategiesOutput {
	s.ContactRobots = v
	return s
}

// SetNotifyConfig sets the NotifyConfig field's value.
func (s *SubscribeRuleForListAlertStrategiesOutput) SetNotifyConfig(v *NotifyConfigForListAlertStrategiesOutput) *SubscribeRuleForListAlertStrategiesOutput {
	s.NotifyConfig = v
	return s
}
