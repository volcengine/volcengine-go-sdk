// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListRemedyConfigsCommon = "ListRemedyConfigs"

// ListRemedyConfigsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRemedyConfigsCommon operation. The "output" return
// value will be populated with the ListRemedyConfigsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRemedyConfigsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRemedyConfigsCommon Send returns without error.
//
// See ListRemedyConfigsCommon for more information on using the ListRemedyConfigsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListRemedyConfigsCommonRequest method.
//    req, resp := client.ListRemedyConfigsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListRemedyConfigsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListRemedyConfigsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRemedyConfigsCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListRemedyConfigsCommon for usage and error information.
func (c *VKE) ListRemedyConfigsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListRemedyConfigsCommonRequest(input)
	return out, req.Send()
}

// ListRemedyConfigsCommonWithContext is the same as ListRemedyConfigsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListRemedyConfigsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListRemedyConfigsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListRemedyConfigsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListRemedyConfigs = "ListRemedyConfigs"

// ListRemedyConfigsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListRemedyConfigs operation. The "output" return
// value will be populated with the ListRemedyConfigsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListRemedyConfigsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListRemedyConfigsCommon Send returns without error.
//
// See ListRemedyConfigs for more information on using the ListRemedyConfigs
// API call, and error handling.
//
//    // Example sending a request using the ListRemedyConfigsRequest method.
//    req, resp := client.ListRemedyConfigsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) ListRemedyConfigsRequest(input *ListRemedyConfigsInput) (req *request.Request, output *ListRemedyConfigsOutput) {
	op := &request.Operation{
		Name:       opListRemedyConfigs,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListRemedyConfigsInput{}
	}

	output = &ListRemedyConfigsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListRemedyConfigs API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation ListRemedyConfigs for usage and error information.
func (c *VKE) ListRemedyConfigs(input *ListRemedyConfigsInput) (*ListRemedyConfigsOutput, error) {
	req, out := c.ListRemedyConfigsRequest(input)
	return out, req.Send()
}

// ListRemedyConfigsWithContext is the same as ListRemedyConfigs with the addition of
// the ability to pass a context and additional request options.
//
// See ListRemedyConfigs for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) ListRemedyConfigsWithContext(ctx volcengine.Context, input *ListRemedyConfigsInput, opts ...request.Option) (*ListRemedyConfigsOutput, error) {
	req, out := c.ListRemedyConfigsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ActionForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	RebootEcs *bool `type:"boolean" json:",omitempty"`

	WaitFor *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ActionForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ActionForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetRebootEcs sets the RebootEcs field's value.
func (s *ActionForListRemedyConfigsOutput) SetRebootEcs(v bool) *ActionForListRemedyConfigsOutput {
	s.RebootEcs = &v
	return s
}

// SetWaitFor sets the WaitFor field's value.
func (s *ActionForListRemedyConfigsOutput) SetWaitFor(v int32) *ActionForListRemedyConfigsOutput {
	s.WaitFor = &v
	return s
}

type ConfigForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Action *ActionForListRemedyConfigsOutput `type:"structure" json:",omitempty"`

	AutoRestoreSchedule *bool `type:"boolean" json:",omitempty"`

	Drain *DrainForListRemedyConfigsOutput `type:"structure" json:",omitempty"`

	InterveneCordon *InterveneCordonForListRemedyConfigsOutput `type:"structure" json:",omitempty"`

	InterveneDrain *InterveneDrainForListRemedyConfigsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ConfigForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetAction sets the Action field's value.
func (s *ConfigForListRemedyConfigsOutput) SetAction(v *ActionForListRemedyConfigsOutput) *ConfigForListRemedyConfigsOutput {
	s.Action = v
	return s
}

// SetAutoRestoreSchedule sets the AutoRestoreSchedule field's value.
func (s *ConfigForListRemedyConfigsOutput) SetAutoRestoreSchedule(v bool) *ConfigForListRemedyConfigsOutput {
	s.AutoRestoreSchedule = &v
	return s
}

// SetDrain sets the Drain field's value.
func (s *ConfigForListRemedyConfigsOutput) SetDrain(v *DrainForListRemedyConfigsOutput) *ConfigForListRemedyConfigsOutput {
	s.Drain = v
	return s
}

// SetInterveneCordon sets the InterveneCordon field's value.
func (s *ConfigForListRemedyConfigsOutput) SetInterveneCordon(v *InterveneCordonForListRemedyConfigsOutput) *ConfigForListRemedyConfigsOutput {
	s.InterveneCordon = v
	return s
}

// SetInterveneDrain sets the InterveneDrain field's value.
func (s *ConfigForListRemedyConfigsOutput) SetInterveneDrain(v *InterveneDrainForListRemedyConfigsOutput) *ConfigForListRemedyConfigsOutput {
	s.InterveneDrain = v
	return s
}

type DrainForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	WaitFor *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s DrainForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DrainForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetWaitFor sets the WaitFor field's value.
func (s *DrainForListRemedyConfigsOutput) SetWaitFor(v int32) *DrainForListRemedyConfigsOutput {
	s.WaitFor = &v
	return s
}

type FilterForListRemedyConfigsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterIds []*string `type:"list" json:",omitempty"`

	Ids []*string `type:"list" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ResourceIds []*string `type:"list" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty" enum:"EnumOfResourceTypeForListRemedyConfigsInput"`
}

// String returns the string representation
func (s FilterForListRemedyConfigsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListRemedyConfigsInput) GoString() string {
	return s.String()
}

// SetClusterIds sets the ClusterIds field's value.
func (s *FilterForListRemedyConfigsInput) SetClusterIds(v []*string) *FilterForListRemedyConfigsInput {
	s.ClusterIds = v
	return s
}

// SetIds sets the Ids field's value.
func (s *FilterForListRemedyConfigsInput) SetIds(v []*string) *FilterForListRemedyConfigsInput {
	s.Ids = v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListRemedyConfigsInput) SetName(v string) *FilterForListRemedyConfigsInput {
	s.Name = &v
	return s
}

// SetResourceIds sets the ResourceIds field's value.
func (s *FilterForListRemedyConfigsInput) SetResourceIds(v []*string) *FilterForListRemedyConfigsInput {
	s.ResourceIds = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *FilterForListRemedyConfigsInput) SetResourceType(v string) *FilterForListRemedyConfigsInput {
	s.ResourceType = &v
	return s
}

type InterveneCordonForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	Label *LabelForListRemedyConfigsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s InterveneCordonForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InterveneCordonForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *InterveneCordonForListRemedyConfigsOutput) SetEnabled(v bool) *InterveneCordonForListRemedyConfigsOutput {
	s.Enabled = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *InterveneCordonForListRemedyConfigsOutput) SetLabel(v *LabelForListRemedyConfigsOutput) *InterveneCordonForListRemedyConfigsOutput {
	s.Label = v
	return s
}

type InterveneDrainForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	Label *LabelForListRemedyConfigsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s InterveneDrainForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InterveneDrainForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *InterveneDrainForListRemedyConfigsOutput) SetEnabled(v bool) *InterveneDrainForListRemedyConfigsOutput {
	s.Enabled = &v
	return s
}

// SetLabel sets the Label field's value.
func (s *InterveneDrainForListRemedyConfigsOutput) SetLabel(v *LabelForListRemedyConfigsOutput) *InterveneDrainForListRemedyConfigsOutput {
	s.Label = v
	return s
}

type ItemForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClusterId *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ResourceIds []*string `type:"list" json:",omitempty"`

	ResourceType *string `type:"string" json:",omitempty" enum:"EnumOfResourceTypeForListRemedyConfigsOutput"`

	Rules []*RuleForListRemedyConfigsOutput `type:"list" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ItemForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ItemForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetClusterId sets the ClusterId field's value.
func (s *ItemForListRemedyConfigsOutput) SetClusterId(v string) *ItemForListRemedyConfigsOutput {
	s.ClusterId = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ItemForListRemedyConfigsOutput) SetCreateTime(v string) *ItemForListRemedyConfigsOutput {
	s.CreateTime = &v
	return s
}

// SetId sets the Id field's value.
func (s *ItemForListRemedyConfigsOutput) SetId(v string) *ItemForListRemedyConfigsOutput {
	s.Id = &v
	return s
}

// SetName sets the Name field's value.
func (s *ItemForListRemedyConfigsOutput) SetName(v string) *ItemForListRemedyConfigsOutput {
	s.Name = &v
	return s
}

// SetResourceIds sets the ResourceIds field's value.
func (s *ItemForListRemedyConfigsOutput) SetResourceIds(v []*string) *ItemForListRemedyConfigsOutput {
	s.ResourceIds = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ItemForListRemedyConfigsOutput) SetResourceType(v string) *ItemForListRemedyConfigsOutput {
	s.ResourceType = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *ItemForListRemedyConfigsOutput) SetRules(v []*RuleForListRemedyConfigsOutput) *ItemForListRemedyConfigsOutput {
	s.Rules = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ItemForListRemedyConfigsOutput) SetUpdateTime(v string) *ItemForListRemedyConfigsOutput {
	s.UpdateTime = &v
	return s
}

type LabelForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s LabelForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LabelForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *LabelForListRemedyConfigsOutput) SetKey(v string) *LabelForListRemedyConfigsOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *LabelForListRemedyConfigsOutput) SetValue(v string) *LabelForListRemedyConfigsOutput {
	s.Value = &v
	return s
}

type ListRemedyConfigsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListRemedyConfigsInput `type:"structure" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRemedyConfigsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRemedyConfigsInput) GoString() string {
	return s.String()
}

// SetFilter sets the Filter field's value.
func (s *ListRemedyConfigsInput) SetFilter(v *FilterForListRemedyConfigsInput) *ListRemedyConfigsInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRemedyConfigsInput) SetPageNumber(v int32) *ListRemedyConfigsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRemedyConfigsInput) SetPageSize(v int32) *ListRemedyConfigsInput {
	s.PageSize = &v
	return s
}

type ListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Items []*ItemForListRemedyConfigsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetItems sets the Items field's value.
func (s *ListRemedyConfigsOutput) SetItems(v []*ItemForListRemedyConfigsOutput) *ListRemedyConfigsOutput {
	s.Items = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListRemedyConfigsOutput) SetPageNumber(v int32) *ListRemedyConfigsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListRemedyConfigsOutput) SetPageSize(v int32) *ListRemedyConfigsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListRemedyConfigsOutput) SetTotalCount(v int32) *ListRemedyConfigsOutput {
	s.TotalCount = &v
	return s
}

type RemedyStrategyForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Config *ConfigForListRemedyConfigsOutput `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty" enum:"EnumOfTypeForListRemedyConfigsOutput"`
}

// String returns the string representation
func (s RemedyStrategyForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RemedyStrategyForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetConfig sets the Config field's value.
func (s *RemedyStrategyForListRemedyConfigsOutput) SetConfig(v *ConfigForListRemedyConfigsOutput) *RemedyStrategyForListRemedyConfigsOutput {
	s.Config = v
	return s
}

// SetType sets the Type field's value.
func (s *RemedyStrategyForListRemedyConfigsOutput) SetType(v string) *RemedyStrategyForListRemedyConfigsOutput {
	s.Type = &v
	return s
}

type RuleForListRemedyConfigsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FaultType *string `type:"string" json:",omitempty" enum:"EnumOfFaultTypeForListRemedyConfigsOutput"`

	IncidentTypes []*string `type:"list" json:",omitempty"`

	RemedyStrategy *RemedyStrategyForListRemedyConfigsOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s RuleForListRemedyConfigsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForListRemedyConfigsOutput) GoString() string {
	return s.String()
}

// SetFaultType sets the FaultType field's value.
func (s *RuleForListRemedyConfigsOutput) SetFaultType(v string) *RuleForListRemedyConfigsOutput {
	s.FaultType = &v
	return s
}

// SetIncidentTypes sets the IncidentTypes field's value.
func (s *RuleForListRemedyConfigsOutput) SetIncidentTypes(v []*string) *RuleForListRemedyConfigsOutput {
	s.IncidentTypes = v
	return s
}

// SetRemedyStrategy sets the RemedyStrategy field's value.
func (s *RuleForListRemedyConfigsOutput) SetRemedyStrategy(v *RemedyStrategyForListRemedyConfigsOutput) *RuleForListRemedyConfigsOutput {
	s.RemedyStrategy = v
	return s
}

const (
	// EnumOfFaultTypeForListRemedyConfigsOutputGpufault is a EnumOfFaultTypeForListRemedyConfigsOutput enum value
	EnumOfFaultTypeForListRemedyConfigsOutputGpufault = "GPUFault"

	// EnumOfFaultTypeForListRemedyConfigsOutputNodeFault is a EnumOfFaultTypeForListRemedyConfigsOutput enum value
	EnumOfFaultTypeForListRemedyConfigsOutputNodeFault = "NodeFault"

	// EnumOfFaultTypeForListRemedyConfigsOutputSystemFault is a EnumOfFaultTypeForListRemedyConfigsOutput enum value
	EnumOfFaultTypeForListRemedyConfigsOutputSystemFault = "SystemFault"
)

const (
	// EnumOfResourceTypeForListRemedyConfigsInputVkeNodePool is a EnumOfResourceTypeForListRemedyConfigsInput enum value
	EnumOfResourceTypeForListRemedyConfigsInputVkeNodePool = "VkeNodePool"
)

const (
	// EnumOfResourceTypeForListRemedyConfigsOutputVkeNodePool is a EnumOfResourceTypeForListRemedyConfigsOutput enum value
	EnumOfResourceTypeForListRemedyConfigsOutputVkeNodePool = "VkeNodePool"
)

const (
	// EnumOfTypeForListRemedyConfigsOutputNotify is a EnumOfTypeForListRemedyConfigsOutput enum value
	EnumOfTypeForListRemedyConfigsOutputNotify = "Notify"

	// EnumOfTypeForListRemedyConfigsOutputCordonNode is a EnumOfTypeForListRemedyConfigsOutput enum value
	EnumOfTypeForListRemedyConfigsOutputCordonNode = "CordonNode"

	// EnumOfTypeForListRemedyConfigsOutputDrainNode is a EnumOfTypeForListRemedyConfigsOutput enum value
	EnumOfTypeForListRemedyConfigsOutputDrainNode = "DrainNode"

	// EnumOfTypeForListRemedyConfigsOutputRemedy is a EnumOfTypeForListRemedyConfigsOutput enum value
	EnumOfTypeForListRemedyConfigsOutputRemedy = "Remedy"
)
