// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateScalingPolicyCommon = "UpdateScalingPolicy"

// UpdateScalingPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateScalingPolicyCommon operation. The "output" return
// value will be populated with the UpdateScalingPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateScalingPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateScalingPolicyCommon Send returns without error.
//
// See UpdateScalingPolicyCommon for more information on using the UpdateScalingPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateScalingPolicyCommonRequest method.
//    req, resp := client.UpdateScalingPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) UpdateScalingPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateScalingPolicyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateScalingPolicyCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation UpdateScalingPolicyCommon for usage and error information.
func (c *VKE) UpdateScalingPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateScalingPolicyCommonRequest(input)
	return out, req.Send()
}

// UpdateScalingPolicyCommonWithContext is the same as UpdateScalingPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateScalingPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) UpdateScalingPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateScalingPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateScalingPolicy = "UpdateScalingPolicy"

// UpdateScalingPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateScalingPolicy operation. The "output" return
// value will be populated with the UpdateScalingPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateScalingPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateScalingPolicyCommon Send returns without error.
//
// See UpdateScalingPolicy for more information on using the UpdateScalingPolicy
// API call, and error handling.
//
//    // Example sending a request using the UpdateScalingPolicyRequest method.
//    req, resp := client.UpdateScalingPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) UpdateScalingPolicyRequest(input *UpdateScalingPolicyInput) (req *request.Request, output *UpdateScalingPolicyOutput) {
	op := &request.Operation{
		Name:       opUpdateScalingPolicy,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateScalingPolicyInput{}
	}

	output = &UpdateScalingPolicyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateScalingPolicy API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation UpdateScalingPolicy for usage and error information.
func (c *VKE) UpdateScalingPolicy(input *UpdateScalingPolicyInput) (*UpdateScalingPolicyOutput, error) {
	req, out := c.UpdateScalingPolicyRequest(input)
	return out, req.Send()
}

// UpdateScalingPolicyWithContext is the same as UpdateScalingPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateScalingPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) UpdateScalingPolicyWithContext(ctx volcengine.Context, input *UpdateScalingPolicyInput, opts ...request.Option) (*UpdateScalingPolicyOutput, error) {
	req, out := c.UpdateScalingPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ScheduledInstancePolicyForUpdateScalingPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoReleaseTime *string `type:"string" json:",omitempty"`

	DeliveryType *string `type:"string" json:",omitempty" enum:"EnumOfDeliveryTypeForUpdateScalingPolicyInput"`

	ElasticScheduledInstanceType *string `type:"string" json:",omitempty" enum:"EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInput"`

	EndDeliveryTime *string `type:"string" json:",omitempty"`

	StartDeliveryTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ScheduledInstancePolicyForUpdateScalingPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduledInstancePolicyForUpdateScalingPolicyInput) GoString() string {
	return s.String()
}

// SetAutoReleaseTime sets the AutoReleaseTime field's value.
func (s *ScheduledInstancePolicyForUpdateScalingPolicyInput) SetAutoReleaseTime(v string) *ScheduledInstancePolicyForUpdateScalingPolicyInput {
	s.AutoReleaseTime = &v
	return s
}

// SetDeliveryType sets the DeliveryType field's value.
func (s *ScheduledInstancePolicyForUpdateScalingPolicyInput) SetDeliveryType(v string) *ScheduledInstancePolicyForUpdateScalingPolicyInput {
	s.DeliveryType = &v
	return s
}

// SetElasticScheduledInstanceType sets the ElasticScheduledInstanceType field's value.
func (s *ScheduledInstancePolicyForUpdateScalingPolicyInput) SetElasticScheduledInstanceType(v string) *ScheduledInstancePolicyForUpdateScalingPolicyInput {
	s.ElasticScheduledInstanceType = &v
	return s
}

// SetEndDeliveryTime sets the EndDeliveryTime field's value.
func (s *ScheduledInstancePolicyForUpdateScalingPolicyInput) SetEndDeliveryTime(v string) *ScheduledInstancePolicyForUpdateScalingPolicyInput {
	s.EndDeliveryTime = &v
	return s
}

// SetStartDeliveryTime sets the StartDeliveryTime field's value.
func (s *ScheduledInstancePolicyForUpdateScalingPolicyInput) SetStartDeliveryTime(v string) *ScheduledInstancePolicyForUpdateScalingPolicyInput {
	s.StartDeliveryTime = &v
	return s
}

type ScheduledPolicyForUpdateScalingPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LaunchTime *string `type:"string" json:",omitempty"`

	RecurrenceEndTime *string `type:"string" json:",omitempty"`

	RecurrenceType *string `type:"string" json:",omitempty" enum:"EnumOfRecurrenceTypeForUpdateScalingPolicyInput"`

	RecurrenceValue *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ScheduledPolicyForUpdateScalingPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ScheduledPolicyForUpdateScalingPolicyInput) GoString() string {
	return s.String()
}

// SetLaunchTime sets the LaunchTime field's value.
func (s *ScheduledPolicyForUpdateScalingPolicyInput) SetLaunchTime(v string) *ScheduledPolicyForUpdateScalingPolicyInput {
	s.LaunchTime = &v
	return s
}

// SetRecurrenceEndTime sets the RecurrenceEndTime field's value.
func (s *ScheduledPolicyForUpdateScalingPolicyInput) SetRecurrenceEndTime(v string) *ScheduledPolicyForUpdateScalingPolicyInput {
	s.RecurrenceEndTime = &v
	return s
}

// SetRecurrenceType sets the RecurrenceType field's value.
func (s *ScheduledPolicyForUpdateScalingPolicyInput) SetRecurrenceType(v string) *ScheduledPolicyForUpdateScalingPolicyInput {
	s.RecurrenceType = &v
	return s
}

// SetRecurrenceValue sets the RecurrenceValue field's value.
func (s *ScheduledPolicyForUpdateScalingPolicyInput) SetRecurrenceValue(v string) *ScheduledPolicyForUpdateScalingPolicyInput {
	s.RecurrenceValue = &v
	return s
}

type UpdateScalingPolicyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdjustmentValue *int32 `type:"int32" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	// ClusterId is a required field
	ClusterId *string `type:"string" json:",omitempty" required:"true"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	// NodePoolId is a required field
	NodePoolId *string `type:"string" json:",omitempty" required:"true"`

	ScheduledInstancePolicy *ScheduledInstancePolicyForUpdateScalingPolicyInput `type:"structure" json:",omitempty"`

	ScheduledPolicy *ScheduledPolicyForUpdateScalingPolicyInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateScalingPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateScalingPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateScalingPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateScalingPolicyInput"}
	if s.ClusterId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterId"))
	}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}
	if s.NodePoolId == nil {
		invalidParams.Add(request.NewErrParamRequired("NodePoolId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAdjustmentValue sets the AdjustmentValue field's value.
func (s *UpdateScalingPolicyInput) SetAdjustmentValue(v int32) *UpdateScalingPolicyInput {
	s.AdjustmentValue = &v
	return s
}

// SetClientToken sets the ClientToken field's value.
func (s *UpdateScalingPolicyInput) SetClientToken(v string) *UpdateScalingPolicyInput {
	s.ClientToken = &v
	return s
}

// SetClusterId sets the ClusterId field's value.
func (s *UpdateScalingPolicyInput) SetClusterId(v string) *UpdateScalingPolicyInput {
	s.ClusterId = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *UpdateScalingPolicyInput) SetEnabled(v bool) *UpdateScalingPolicyInput {
	s.Enabled = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateScalingPolicyInput) SetId(v string) *UpdateScalingPolicyInput {
	s.Id = &v
	return s
}

// SetNodePoolId sets the NodePoolId field's value.
func (s *UpdateScalingPolicyInput) SetNodePoolId(v string) *UpdateScalingPolicyInput {
	s.NodePoolId = &v
	return s
}

// SetScheduledInstancePolicy sets the ScheduledInstancePolicy field's value.
func (s *UpdateScalingPolicyInput) SetScheduledInstancePolicy(v *ScheduledInstancePolicyForUpdateScalingPolicyInput) *UpdateScalingPolicyInput {
	s.ScheduledInstancePolicy = v
	return s
}

// SetScheduledPolicy sets the ScheduledPolicy field's value.
func (s *UpdateScalingPolicyInput) SetScheduledPolicy(v *ScheduledPolicyForUpdateScalingPolicyInput) *UpdateScalingPolicyInput {
	s.ScheduledPolicy = v
	return s
}

type UpdateScalingPolicyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateScalingPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateScalingPolicyOutput) GoString() string {
	return s.String()
}

const (
	// EnumOfDeliveryTypeForUpdateScalingPolicyInputReserve is a EnumOfDeliveryTypeForUpdateScalingPolicyInput enum value
	EnumOfDeliveryTypeForUpdateScalingPolicyInputReserve = "Reserve"

	// EnumOfDeliveryTypeForUpdateScalingPolicyInputImmediate is a EnumOfDeliveryTypeForUpdateScalingPolicyInput enum value
	EnumOfDeliveryTypeForUpdateScalingPolicyInputImmediate = "Immediate"
)

const (
	// EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInputEsi is a EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInput enum value
	EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInputEsi = "Esi"

	// EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInputSegmented is a EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInput enum value
	EnumOfElasticScheduledInstanceTypeForUpdateScalingPolicyInputSegmented = "Segmented"
)

const (
	// EnumOfRecurrenceTypeForUpdateScalingPolicyInputDaily is a EnumOfRecurrenceTypeForUpdateScalingPolicyInput enum value
	EnumOfRecurrenceTypeForUpdateScalingPolicyInputDaily = "Daily"

	// EnumOfRecurrenceTypeForUpdateScalingPolicyInputWeekly is a EnumOfRecurrenceTypeForUpdateScalingPolicyInput enum value
	EnumOfRecurrenceTypeForUpdateScalingPolicyInputWeekly = "Weekly"

	// EnumOfRecurrenceTypeForUpdateScalingPolicyInputMonthly is a EnumOfRecurrenceTypeForUpdateScalingPolicyInput enum value
	EnumOfRecurrenceTypeForUpdateScalingPolicyInputMonthly = "Monthly"
)
