// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteScalingPoliciesCommon = "DeleteScalingPolicies"

// DeleteScalingPoliciesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteScalingPoliciesCommon operation. The "output" return
// value will be populated with the DeleteScalingPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteScalingPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteScalingPoliciesCommon Send returns without error.
//
// See DeleteScalingPoliciesCommon for more information on using the DeleteScalingPoliciesCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteScalingPoliciesCommonRequest method.
//    req, resp := client.DeleteScalingPoliciesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) DeleteScalingPoliciesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteScalingPoliciesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteScalingPoliciesCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation DeleteScalingPoliciesCommon for usage and error information.
func (c *VKE) DeleteScalingPoliciesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingPoliciesCommonRequest(input)
	return out, req.Send()
}

// DeleteScalingPoliciesCommonWithContext is the same as DeleteScalingPoliciesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingPoliciesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) DeleteScalingPoliciesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteScalingPoliciesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteScalingPolicies = "DeleteScalingPolicies"

// DeleteScalingPoliciesRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteScalingPolicies operation. The "output" return
// value will be populated with the DeleteScalingPoliciesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteScalingPoliciesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteScalingPoliciesCommon Send returns without error.
//
// See DeleteScalingPolicies for more information on using the DeleteScalingPolicies
// API call, and error handling.
//
//    // Example sending a request using the DeleteScalingPoliciesRequest method.
//    req, resp := client.DeleteScalingPoliciesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) DeleteScalingPoliciesRequest(input *DeleteScalingPoliciesInput) (req *request.Request, output *DeleteScalingPoliciesOutput) {
	op := &request.Operation{
		Name:       opDeleteScalingPolicies,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteScalingPoliciesInput{}
	}

	output = &DeleteScalingPoliciesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteScalingPolicies API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation DeleteScalingPolicies for usage and error information.
func (c *VKE) DeleteScalingPolicies(input *DeleteScalingPoliciesInput) (*DeleteScalingPoliciesOutput, error) {
	req, out := c.DeleteScalingPoliciesRequest(input)
	return out, req.Send()
}

// DeleteScalingPoliciesWithContext is the same as DeleteScalingPolicies with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteScalingPolicies for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) DeleteScalingPoliciesWithContext(ctx volcengine.Context, input *DeleteScalingPoliciesInput, opts ...request.Option) (*DeleteScalingPoliciesOutput, error) {
	req, out := c.DeleteScalingPoliciesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteScalingPoliciesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClusterId is a required field
	ClusterId *string `type:"string" json:",omitempty" required:"true"`

	Ids []*string `type:"list" json:",omitempty"`

	// NodePoolId is a required field
	NodePoolId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteScalingPoliciesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPoliciesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteScalingPoliciesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteScalingPoliciesInput"}
	if s.ClusterId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClusterId"))
	}
	if s.NodePoolId == nil {
		invalidParams.Add(request.NewErrParamRequired("NodePoolId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClusterId sets the ClusterId field's value.
func (s *DeleteScalingPoliciesInput) SetClusterId(v string) *DeleteScalingPoliciesInput {
	s.ClusterId = &v
	return s
}

// SetIds sets the Ids field's value.
func (s *DeleteScalingPoliciesInput) SetIds(v []*string) *DeleteScalingPoliciesInput {
	s.Ids = v
	return s
}

// SetNodePoolId sets the NodePoolId field's value.
func (s *DeleteScalingPoliciesInput) SetNodePoolId(v string) *DeleteScalingPoliciesInput {
	s.NodePoolId = &v
	return s
}

type DeleteScalingPoliciesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteScalingPoliciesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteScalingPoliciesOutput) GoString() string {
	return s.String()
}
