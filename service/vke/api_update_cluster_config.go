// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vke

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateClusterConfigCommon = "UpdateClusterConfig"

// UpdateClusterConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateClusterConfigCommon operation. The "output" return
// value will be populated with the UpdateClusterConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateClusterConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateClusterConfigCommon Send returns without error.
//
// See UpdateClusterConfigCommon for more information on using the UpdateClusterConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateClusterConfigCommonRequest method.
//    req, resp := client.UpdateClusterConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) UpdateClusterConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateClusterConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateClusterConfigCommon API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation UpdateClusterConfigCommon for usage and error information.
func (c *VKE) UpdateClusterConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateClusterConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateClusterConfigCommonWithContext is the same as UpdateClusterConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateClusterConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) UpdateClusterConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateClusterConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateClusterConfig = "UpdateClusterConfig"

// UpdateClusterConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateClusterConfig operation. The "output" return
// value will be populated with the UpdateClusterConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateClusterConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateClusterConfigCommon Send returns without error.
//
// See UpdateClusterConfig for more information on using the UpdateClusterConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateClusterConfigRequest method.
//    req, resp := client.UpdateClusterConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VKE) UpdateClusterConfigRequest(input *UpdateClusterConfigInput) (req *request.Request, output *UpdateClusterConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateClusterConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateClusterConfigInput{}
	}

	output = &UpdateClusterConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateClusterConfig API operation for VKE.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VKE's
// API operation UpdateClusterConfig for usage and error information.
func (c *VKE) UpdateClusterConfig(input *UpdateClusterConfigInput) (*UpdateClusterConfigOutput, error) {
	req, out := c.UpdateClusterConfigRequest(input)
	return out, req.Send()
}

// UpdateClusterConfigWithContext is the same as UpdateClusterConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateClusterConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VKE) UpdateClusterConfigWithContext(ctx volcengine.Context, input *UpdateClusterConfigInput, opts ...request.Option) (*UpdateClusterConfigOutput, error) {
	req, out := c.UpdateClusterConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiServerPublicAccessConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	PublicAccessNetworkConfig *PublicAccessNetworkConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ApiServerPublicAccessConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiServerPublicAccessConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetPublicAccessNetworkConfig sets the PublicAccessNetworkConfig field's value.
func (s *ApiServerPublicAccessConfigForUpdateClusterConfigInput) SetPublicAccessNetworkConfig(v *PublicAccessNetworkConfigForUpdateClusterConfigInput) *ApiServerPublicAccessConfigForUpdateClusterConfigInput {
	s.PublicAccessNetworkConfig = v
	return s
}

type ClusterConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiServerPublicAccessConfig *ApiServerPublicAccessConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	ApiServerPublicAccessEnabled *bool `type:"boolean" json:",omitempty"`

	SubnetIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ClusterConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ClusterConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetApiServerPublicAccessConfig sets the ApiServerPublicAccessConfig field's value.
func (s *ClusterConfigForUpdateClusterConfigInput) SetApiServerPublicAccessConfig(v *ApiServerPublicAccessConfigForUpdateClusterConfigInput) *ClusterConfigForUpdateClusterConfigInput {
	s.ApiServerPublicAccessConfig = v
	return s
}

// SetApiServerPublicAccessEnabled sets the ApiServerPublicAccessEnabled field's value.
func (s *ClusterConfigForUpdateClusterConfigInput) SetApiServerPublicAccessEnabled(v bool) *ClusterConfigForUpdateClusterConfigInput {
	s.ApiServerPublicAccessEnabled = &v
	return s
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *ClusterConfigForUpdateClusterConfigInput) SetSubnetIds(v []*string) *ClusterConfigForUpdateClusterConfigInput {
	s.SubnetIds = v
	return s
}

type ComponentConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty" enum:"EnumOfNameForUpdateClusterConfigInput"`
}

// String returns the string representation
func (s ComponentConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ComponentConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *ComponentConfigForUpdateClusterConfigInput) SetEnabled(v bool) *ComponentConfigForUpdateClusterConfigInput {
	s.Enabled = &v
	return s
}

// SetName sets the Name field's value.
func (s *ComponentConfigForUpdateClusterConfigInput) SetName(v string) *ComponentConfigForUpdateClusterConfigInput {
	s.Name = &v
	return s
}

type LogSetupForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	LogTtl *int32 `type:"int32" json:",omitempty"`

	LogType *string `type:"string" json:",omitempty" enum:"EnumOfLogTypeForUpdateClusterConfigInput"`
}

// String returns the string representation
func (s LogSetupForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LogSetupForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *LogSetupForUpdateClusterConfigInput) SetEnabled(v bool) *LogSetupForUpdateClusterConfigInput {
	s.Enabled = &v
	return s
}

// SetLogTtl sets the LogTtl field's value.
func (s *LogSetupForUpdateClusterConfigInput) SetLogTtl(v int32) *LogSetupForUpdateClusterConfigInput {
	s.LogTtl = &v
	return s
}

// SetLogType sets the LogType field's value.
func (s *LogSetupForUpdateClusterConfigInput) SetLogType(v string) *LogSetupForUpdateClusterConfigInput {
	s.LogType = &v
	return s
}

type LoggingConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LogProjectId *string `type:"string" json:",omitempty"`

	LogSetups []*LogSetupForUpdateClusterConfigInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s LoggingConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s LoggingConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetLogProjectId sets the LogProjectId field's value.
func (s *LoggingConfigForUpdateClusterConfigInput) SetLogProjectId(v string) *LoggingConfigForUpdateClusterConfigInput {
	s.LogProjectId = &v
	return s
}

// SetLogSetups sets the LogSetups field's value.
func (s *LoggingConfigForUpdateClusterConfigInput) SetLogSetups(v []*LogSetupForUpdateClusterConfigInput) *LoggingConfigForUpdateClusterConfigInput {
	s.LogSetups = v
	return s
}

type MonitoringConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ComponentConfigs []*ComponentConfigForUpdateClusterConfigInput `type:"list" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s MonitoringConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MonitoringConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetComponentConfigs sets the ComponentConfigs field's value.
func (s *MonitoringConfigForUpdateClusterConfigInput) SetComponentConfigs(v []*ComponentConfigForUpdateClusterConfigInput) *MonitoringConfigForUpdateClusterConfigInput {
	s.ComponentConfigs = v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *MonitoringConfigForUpdateClusterConfigInput) SetWorkspaceId(v string) *MonitoringConfigForUpdateClusterConfigInput {
	s.WorkspaceId = &v
	return s
}

type PodsConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	VpcCniConfig *VpcCniConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s PodsConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PodsConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetVpcCniConfig sets the VpcCniConfig field's value.
func (s *PodsConfigForUpdateClusterConfigInput) SetVpcCniConfig(v *VpcCniConfigForUpdateClusterConfigInput) *PodsConfigForUpdateClusterConfigInput {
	s.VpcCniConfig = v
	return s
}

type PublicAccessNetworkConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Bandwidth *int32 `type:"int32" json:",omitempty"`

	BillingType *int32 `type:"int32" json:",omitempty"`

	Isp *string `type:"string" json:",omitempty" enum:"EnumOfIspForUpdateClusterConfigInput"`
}

// String returns the string representation
func (s PublicAccessNetworkConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PublicAccessNetworkConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetBandwidth sets the Bandwidth field's value.
func (s *PublicAccessNetworkConfigForUpdateClusterConfigInput) SetBandwidth(v int32) *PublicAccessNetworkConfigForUpdateClusterConfigInput {
	s.Bandwidth = &v
	return s
}

// SetBillingType sets the BillingType field's value.
func (s *PublicAccessNetworkConfigForUpdateClusterConfigInput) SetBillingType(v int32) *PublicAccessNetworkConfigForUpdateClusterConfigInput {
	s.BillingType = &v
	return s
}

// SetIsp sets the Isp field's value.
func (s *PublicAccessNetworkConfigForUpdateClusterConfigInput) SetIsp(v string) *PublicAccessNetworkConfigForUpdateClusterConfigInput {
	s.Isp = &v
	return s
}

type RegisterMonitoringConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	QueryUrl *string `type:"string" json:",omitempty"`

	RemoteWriteUrl *string `type:"string" json:",omitempty"`

	WorkspaceId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s RegisterMonitoringConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RegisterMonitoringConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetQueryUrl sets the QueryUrl field's value.
func (s *RegisterMonitoringConfigForUpdateClusterConfigInput) SetQueryUrl(v string) *RegisterMonitoringConfigForUpdateClusterConfigInput {
	s.QueryUrl = &v
	return s
}

// SetRemoteWriteUrl sets the RemoteWriteUrl field's value.
func (s *RegisterMonitoringConfigForUpdateClusterConfigInput) SetRemoteWriteUrl(v string) *RegisterMonitoringConfigForUpdateClusterConfigInput {
	s.RemoteWriteUrl = &v
	return s
}

// SetWorkspaceId sets the WorkspaceId field's value.
func (s *RegisterMonitoringConfigForUpdateClusterConfigInput) SetWorkspaceId(v string) *RegisterMonitoringConfigForUpdateClusterConfigInput {
	s.WorkspaceId = &v
	return s
}

type UpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientToken *string `type:"string" json:",omitempty"`

	ClusterConfig *ClusterConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	DeleteProtectionEnabled *bool `type:"boolean" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	LoggingConfig *LoggingConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	MonitoringConfig *MonitoringConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PodsConfig *PodsConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	RegisterMonitoringConfig *RegisterMonitoringConfigForUpdateClusterConfigInput `type:"structure" json:",omitempty"`

	SourceRegion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateClusterConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateClusterConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateClusterConfigInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *UpdateClusterConfigInput) SetClientToken(v string) *UpdateClusterConfigInput {
	s.ClientToken = &v
	return s
}

// SetClusterConfig sets the ClusterConfig field's value.
func (s *UpdateClusterConfigInput) SetClusterConfig(v *ClusterConfigForUpdateClusterConfigInput) *UpdateClusterConfigInput {
	s.ClusterConfig = v
	return s
}

// SetDeleteProtectionEnabled sets the DeleteProtectionEnabled field's value.
func (s *UpdateClusterConfigInput) SetDeleteProtectionEnabled(v bool) *UpdateClusterConfigInput {
	s.DeleteProtectionEnabled = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateClusterConfigInput) SetDescription(v string) *UpdateClusterConfigInput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateClusterConfigInput) SetId(v string) *UpdateClusterConfigInput {
	s.Id = &v
	return s
}

// SetLoggingConfig sets the LoggingConfig field's value.
func (s *UpdateClusterConfigInput) SetLoggingConfig(v *LoggingConfigForUpdateClusterConfigInput) *UpdateClusterConfigInput {
	s.LoggingConfig = v
	return s
}

// SetMonitoringConfig sets the MonitoringConfig field's value.
func (s *UpdateClusterConfigInput) SetMonitoringConfig(v *MonitoringConfigForUpdateClusterConfigInput) *UpdateClusterConfigInput {
	s.MonitoringConfig = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateClusterConfigInput) SetName(v string) *UpdateClusterConfigInput {
	s.Name = &v
	return s
}

// SetPodsConfig sets the PodsConfig field's value.
func (s *UpdateClusterConfigInput) SetPodsConfig(v *PodsConfigForUpdateClusterConfigInput) *UpdateClusterConfigInput {
	s.PodsConfig = v
	return s
}

// SetRegisterMonitoringConfig sets the RegisterMonitoringConfig field's value.
func (s *UpdateClusterConfigInput) SetRegisterMonitoringConfig(v *RegisterMonitoringConfigForUpdateClusterConfigInput) *UpdateClusterConfigInput {
	s.RegisterMonitoringConfig = v
	return s
}

// SetSourceRegion sets the SourceRegion field's value.
func (s *UpdateClusterConfigInput) SetSourceRegion(v string) *UpdateClusterConfigInput {
	s.SourceRegion = &v
	return s
}

type UpdateClusterConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateClusterConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateClusterConfigOutput) GoString() string {
	return s.String()
}

type VpcCniConfigForUpdateClusterConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SubnetIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s VpcCniConfigForUpdateClusterConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s VpcCniConfigForUpdateClusterConfigInput) GoString() string {
	return s.String()
}

// SetSubnetIds sets the SubnetIds field's value.
func (s *VpcCniConfigForUpdateClusterConfigInput) SetSubnetIds(v []*string) *VpcCniConfigForUpdateClusterConfigInput {
	s.SubnetIds = v
	return s
}

const (
	// EnumOfIspForUpdateClusterConfigInputBgp is a EnumOfIspForUpdateClusterConfigInput enum value
	EnumOfIspForUpdateClusterConfigInputBgp = "BGP"

	// EnumOfIspForUpdateClusterConfigInputChinaMobile is a EnumOfIspForUpdateClusterConfigInput enum value
	EnumOfIspForUpdateClusterConfigInputChinaMobile = "ChinaMobile"

	// EnumOfIspForUpdateClusterConfigInputChinaTelecom is a EnumOfIspForUpdateClusterConfigInput enum value
	EnumOfIspForUpdateClusterConfigInputChinaTelecom = "ChinaTelecom"

	// EnumOfIspForUpdateClusterConfigInputChinaUnicom is a EnumOfIspForUpdateClusterConfigInput enum value
	EnumOfIspForUpdateClusterConfigInputChinaUnicom = "ChinaUnicom"
)

const (
	// EnumOfLogTypeForUpdateClusterConfigInputAudit is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputAudit = "Audit"

	// EnumOfLogTypeForUpdateClusterConfigInputKubeApiServer is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputKubeApiServer = "KubeApiServer"

	// EnumOfLogTypeForUpdateClusterConfigInputKubeScheduler is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputKubeScheduler = "KubeScheduler"

	// EnumOfLogTypeForUpdateClusterConfigInputKubeControllerManager is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputKubeControllerManager = "KubeControllerManager"

	// EnumOfLogTypeForUpdateClusterConfigInputCloudControllerManager is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputCloudControllerManager = "CloudControllerManager"

	// EnumOfLogTypeForUpdateClusterConfigInputEtcd is a EnumOfLogTypeForUpdateClusterConfigInput enum value
	EnumOfLogTypeForUpdateClusterConfigInputEtcd = "Etcd"
)

const (
	// EnumOfNameForUpdateClusterConfigInputKubelet is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputKubelet = "Kubelet"

	// EnumOfNameForUpdateClusterConfigInputKubeApiServer is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputKubeApiServer = "KubeApiServer"

	// EnumOfNameForUpdateClusterConfigInputKubeControllerManager is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputKubeControllerManager = "KubeControllerManager"

	// EnumOfNameForUpdateClusterConfigInputKubeScheduler is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputKubeScheduler = "KubeScheduler"

	// EnumOfNameForUpdateClusterConfigInputEtcd is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputEtcd = "Etcd"

	// EnumOfNameForUpdateClusterConfigInputClusterAutoscaler is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputClusterAutoscaler = "ClusterAutoscaler"

	// EnumOfNameForUpdateClusterConfigInputKubeBrain is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputKubeBrain = "KubeBrain"

	// EnumOfNameForUpdateClusterConfigInputGodelScheduler is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputGodelScheduler = "GodelScheduler"

	// EnumOfNameForUpdateClusterConfigInputGodelDispatcher is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputGodelDispatcher = "GodelDispatcher"

	// EnumOfNameForUpdateClusterConfigInputGodelBinder is a EnumOfNameForUpdateClusterConfigInput enum value
	EnumOfNameForUpdateClusterConfigInputGodelBinder = "GodelBinder"
)
