// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeServerGroupAttributesCommon = "DescribeServerGroupAttributes"

// DescribeServerGroupAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeServerGroupAttributesCommon operation. The "output" return
// value will be populated with the DescribeServerGroupAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupAttributesCommon Send returns without error.
//
// See DescribeServerGroupAttributesCommon for more information on using the DescribeServerGroupAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupAttributesCommonRequest method.
//    req, resp := client.DescribeServerGroupAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) DescribeServerGroupAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeServerGroupAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroupAttributesCommon API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DescribeServerGroupAttributesCommon for usage and error information.
func (c *ALB) DescribeServerGroupAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupAttributesCommonRequest(input)
	return out, req.Send()
}

// DescribeServerGroupAttributesCommonWithContext is the same as DescribeServerGroupAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroupAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeServerGroupAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeServerGroupAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeServerGroupAttributes = "DescribeServerGroupAttributes"

// DescribeServerGroupAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeServerGroupAttributes operation. The "output" return
// value will be populated with the DescribeServerGroupAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeServerGroupAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeServerGroupAttributesCommon Send returns without error.
//
// See DescribeServerGroupAttributes for more information on using the DescribeServerGroupAttributes
// API call, and error handling.
//
//    // Example sending a request using the DescribeServerGroupAttributesRequest method.
//    req, resp := client.DescribeServerGroupAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) DescribeServerGroupAttributesRequest(input *DescribeServerGroupAttributesInput) (req *request.Request, output *DescribeServerGroupAttributesOutput) {
	op := &request.Operation{
		Name:       opDescribeServerGroupAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeServerGroupAttributesInput{}
	}

	output = &DescribeServerGroupAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeServerGroupAttributes API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation DescribeServerGroupAttributes for usage and error information.
func (c *ALB) DescribeServerGroupAttributes(input *DescribeServerGroupAttributesInput) (*DescribeServerGroupAttributesOutput, error) {
	req, out := c.DescribeServerGroupAttributesRequest(input)
	return out, req.Send()
}

// DescribeServerGroupAttributesWithContext is the same as DescribeServerGroupAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeServerGroupAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) DescribeServerGroupAttributesWithContext(ctx volcengine.Context, input *DescribeServerGroupAttributesInput, opts ...request.Option) (*DescribeServerGroupAttributesOutput, error) {
	req, out := c.DescribeServerGroupAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeServerGroupAttributesInput struct {
	_ struct{} `type:"structure"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DescribeServerGroupAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeServerGroupAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeServerGroupAttributesInput"}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *DescribeServerGroupAttributesInput) SetServerGroupId(v string) *DescribeServerGroupAttributesInput {
	s.ServerGroupId = &v
	return s
}

type DescribeServerGroupAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	CrossZoneEnabled *string `type:"string"`

	Description *string `type:"string"`

	HealthCheck *HealthCheckForDescribeServerGroupAttributesOutput `type:"structure"`

	IPAddressType *string `type:"string"`

	Listeners []*string `type:"list"`

	ProjectName *string `type:"string"`

	Protocol *string `type:"string"`

	RequestId *string `type:"string"`

	Scheduler *string `type:"string"`

	ServerGroupId *string `type:"string"`

	ServerGroupName *string `type:"string"`

	ServerGroupType *string `type:"string"`

	Servers []*ServerForDescribeServerGroupAttributesOutput `type:"list"`

	Status *string `type:"string"`

	StickySessionConfig *StickySessionConfigForDescribeServerGroupAttributesOutput `type:"structure"`

	Tags []*TagForDescribeServerGroupAttributesOutput `type:"list"`

	VpcId *string `type:"string"`
}

// String returns the string representation
func (s DescribeServerGroupAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeServerGroupAttributesOutput) GoString() string {
	return s.String()
}

// SetCrossZoneEnabled sets the CrossZoneEnabled field's value.
func (s *DescribeServerGroupAttributesOutput) SetCrossZoneEnabled(v string) *DescribeServerGroupAttributesOutput {
	s.CrossZoneEnabled = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DescribeServerGroupAttributesOutput) SetDescription(v string) *DescribeServerGroupAttributesOutput {
	s.Description = &v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *DescribeServerGroupAttributesOutput) SetHealthCheck(v *HealthCheckForDescribeServerGroupAttributesOutput) *DescribeServerGroupAttributesOutput {
	s.HealthCheck = v
	return s
}

// SetIPAddressType sets the IPAddressType field's value.
func (s *DescribeServerGroupAttributesOutput) SetIPAddressType(v string) *DescribeServerGroupAttributesOutput {
	s.IPAddressType = &v
	return s
}

// SetListeners sets the Listeners field's value.
func (s *DescribeServerGroupAttributesOutput) SetListeners(v []*string) *DescribeServerGroupAttributesOutput {
	s.Listeners = v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *DescribeServerGroupAttributesOutput) SetProjectName(v string) *DescribeServerGroupAttributesOutput {
	s.ProjectName = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeServerGroupAttributesOutput) SetProtocol(v string) *DescribeServerGroupAttributesOutput {
	s.Protocol = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeServerGroupAttributesOutput) SetRequestId(v string) *DescribeServerGroupAttributesOutput {
	s.RequestId = &v
	return s
}

// SetScheduler sets the Scheduler field's value.
func (s *DescribeServerGroupAttributesOutput) SetScheduler(v string) *DescribeServerGroupAttributesOutput {
	s.Scheduler = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *DescribeServerGroupAttributesOutput) SetServerGroupId(v string) *DescribeServerGroupAttributesOutput {
	s.ServerGroupId = &v
	return s
}

// SetServerGroupName sets the ServerGroupName field's value.
func (s *DescribeServerGroupAttributesOutput) SetServerGroupName(v string) *DescribeServerGroupAttributesOutput {
	s.ServerGroupName = &v
	return s
}

// SetServerGroupType sets the ServerGroupType field's value.
func (s *DescribeServerGroupAttributesOutput) SetServerGroupType(v string) *DescribeServerGroupAttributesOutput {
	s.ServerGroupType = &v
	return s
}

// SetServers sets the Servers field's value.
func (s *DescribeServerGroupAttributesOutput) SetServers(v []*ServerForDescribeServerGroupAttributesOutput) *DescribeServerGroupAttributesOutput {
	s.Servers = v
	return s
}

// SetStatus sets the Status field's value.
func (s *DescribeServerGroupAttributesOutput) SetStatus(v string) *DescribeServerGroupAttributesOutput {
	s.Status = &v
	return s
}

// SetStickySessionConfig sets the StickySessionConfig field's value.
func (s *DescribeServerGroupAttributesOutput) SetStickySessionConfig(v *StickySessionConfigForDescribeServerGroupAttributesOutput) *DescribeServerGroupAttributesOutput {
	s.StickySessionConfig = v
	return s
}

// SetTags sets the Tags field's value.
func (s *DescribeServerGroupAttributesOutput) SetTags(v []*TagForDescribeServerGroupAttributesOutput) *DescribeServerGroupAttributesOutput {
	s.Tags = v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *DescribeServerGroupAttributesOutput) SetVpcId(v string) *DescribeServerGroupAttributesOutput {
	s.VpcId = &v
	return s
}

type HealthCheckForDescribeServerGroupAttributesOutput struct {
	_ struct{} `type:"structure"`

	Domain *string `type:"string"`

	Enabled *string `type:"string"`

	HealthyThreshold *int64 `type:"integer"`

	HttpCode *string `type:"string"`

	HttpVersion *string `type:"string"`

	Interval *int64 `type:"integer"`

	Method *string `type:"string"`

	Port *int64 `max:"65535" type:"integer"`

	Protocol *string `type:"string"`

	Timeout *int64 `type:"integer"`

	URI *string `type:"string"`

	UnhealthyThreshold *int64 `type:"integer"`
}

// String returns the string representation
func (s HealthCheckForDescribeServerGroupAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthCheckForDescribeServerGroupAttributesOutput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetDomain(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Domain = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetEnabled(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Enabled = &v
	return s
}

// SetHealthyThreshold sets the HealthyThreshold field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetHealthyThreshold(v int64) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.HealthyThreshold = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetHttpCode(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.HttpCode = &v
	return s
}

// SetHttpVersion sets the HttpVersion field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetHttpVersion(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.HttpVersion = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetInterval(v int64) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Interval = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetMethod(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Method = &v
	return s
}

// SetPort sets the Port field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetPort(v int64) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetProtocol(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Protocol = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetTimeout(v int64) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.Timeout = &v
	return s
}

// SetURI sets the URI field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetURI(v string) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.URI = &v
	return s
}

// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
func (s *HealthCheckForDescribeServerGroupAttributesOutput) SetUnhealthyThreshold(v int64) *HealthCheckForDescribeServerGroupAttributesOutput {
	s.UnhealthyThreshold = &v
	return s
}

type ServerForDescribeServerGroupAttributesOutput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	InstanceId *string `type:"string"`

	Ip *string `type:"string"`

	Port *int64 `type:"integer"`

	RemoteEnabled *string `type:"string"`

	ServerId *string `type:"string"`

	Type *string `type:"string"`

	Weight *int64 `type:"integer"`
}

// String returns the string representation
func (s ServerForDescribeServerGroupAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerForDescribeServerGroupAttributesOutput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetDescription(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetInstanceId(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.InstanceId = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetIp(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.Ip = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetPort(v int64) *ServerForDescribeServerGroupAttributesOutput {
	s.Port = &v
	return s
}

// SetRemoteEnabled sets the RemoteEnabled field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetRemoteEnabled(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.RemoteEnabled = &v
	return s
}

// SetServerId sets the ServerId field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetServerId(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.ServerId = &v
	return s
}

// SetType sets the Type field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetType(v string) *ServerForDescribeServerGroupAttributesOutput {
	s.Type = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ServerForDescribeServerGroupAttributesOutput) SetWeight(v int64) *ServerForDescribeServerGroupAttributesOutput {
	s.Weight = &v
	return s
}

type StickySessionConfigForDescribeServerGroupAttributesOutput struct {
	_ struct{} `type:"structure"`

	Cookie *string `type:"string"`

	CookieTimeout *int64 `type:"integer"`

	StickySessionEnabled *string `type:"string"`

	StickySessionType *string `type:"string"`
}

// String returns the string representation
func (s StickySessionConfigForDescribeServerGroupAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s StickySessionConfigForDescribeServerGroupAttributesOutput) GoString() string {
	return s.String()
}

// SetCookie sets the Cookie field's value.
func (s *StickySessionConfigForDescribeServerGroupAttributesOutput) SetCookie(v string) *StickySessionConfigForDescribeServerGroupAttributesOutput {
	s.Cookie = &v
	return s
}

// SetCookieTimeout sets the CookieTimeout field's value.
func (s *StickySessionConfigForDescribeServerGroupAttributesOutput) SetCookieTimeout(v int64) *StickySessionConfigForDescribeServerGroupAttributesOutput {
	s.CookieTimeout = &v
	return s
}

// SetStickySessionEnabled sets the StickySessionEnabled field's value.
func (s *StickySessionConfigForDescribeServerGroupAttributesOutput) SetStickySessionEnabled(v string) *StickySessionConfigForDescribeServerGroupAttributesOutput {
	s.StickySessionEnabled = &v
	return s
}

// SetStickySessionType sets the StickySessionType field's value.
func (s *StickySessionConfigForDescribeServerGroupAttributesOutput) SetStickySessionType(v string) *StickySessionConfigForDescribeServerGroupAttributesOutput {
	s.StickySessionType = &v
	return s
}

type TagForDescribeServerGroupAttributesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeServerGroupAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeServerGroupAttributesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeServerGroupAttributesOutput) SetKey(v string) *TagForDescribeServerGroupAttributesOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeServerGroupAttributesOutput) SetValue(v string) *TagForDescribeServerGroupAttributesOutput {
	s.Value = &v
	return s
}
