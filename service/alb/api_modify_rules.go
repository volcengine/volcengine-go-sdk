// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyRulesCommon = "ModifyRules"

// ModifyRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyRulesCommon operation. The "output" return
// value will be populated with the ModifyRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyRulesCommon Send returns without error.
//
// See ModifyRulesCommon for more information on using the ModifyRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyRulesCommonRequest method.
//    req, resp := client.ModifyRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) ModifyRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyRulesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyRulesCommon API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation ModifyRulesCommon for usage and error information.
func (c *ALB) ModifyRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyRulesCommonRequest(input)
	return out, req.Send()
}

// ModifyRulesCommonWithContext is the same as ModifyRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) ModifyRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyRules = "ModifyRules"

// ModifyRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyRules operation. The "output" return
// value will be populated with the ModifyRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyRulesCommon Send returns without error.
//
// See ModifyRules for more information on using the ModifyRules
// API call, and error handling.
//
//    // Example sending a request using the ModifyRulesRequest method.
//    req, resp := client.ModifyRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) ModifyRulesRequest(input *ModifyRulesInput) (req *request.Request, output *ModifyRulesOutput) {
	op := &request.Operation{
		Name:       opModifyRules,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyRulesInput{}
	}

	output = &ModifyRulesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyRules API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation ModifyRules for usage and error information.
func (c *ALB) ModifyRules(input *ModifyRulesInput) (*ModifyRulesOutput, error) {
	req, out := c.ModifyRulesRequest(input)
	return out, req.Send()
}

// ModifyRulesWithContext is the same as ModifyRules with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) ModifyRulesWithContext(ctx volcengine.Context, input *ModifyRulesInput, opts ...request.Option) (*ModifyRulesOutput, error) {
	req, out := c.ModifyRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConvertForwardGroupConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupStickySession *ServerGroupStickySessionForModifyRulesInput `type:"structure"`

	ServerGroupTuples []*ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput `type:"list"`
}

// String returns the string representation
func (s ConvertForwardGroupConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertForwardGroupConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupStickySession sets the ServerGroupStickySession field's value.
func (s *ConvertForwardGroupConfigForModifyRulesInput) SetServerGroupStickySession(v *ServerGroupStickySessionForModifyRulesInput) *ConvertForwardGroupConfigForModifyRulesInput {
	s.ServerGroupStickySession = v
	return s
}

// SetServerGroupTuples sets the ServerGroupTuples field's value.
func (s *ConvertForwardGroupConfigForModifyRulesInput) SetServerGroupTuples(v []*ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput) *ConvertForwardGroupConfigForModifyRulesInput {
	s.ServerGroupTuples = v
	return s
}

type ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupId *string `type:"string"`

	Weight *string `type:"string"`
}

// String returns the string representation
func (s ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput) SetServerGroupId(v string) *ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput {
	s.ServerGroupId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput) SetWeight(v string) *ConvertForwardGroupConfigServerGroupTupleForModifyRulesInput {
	s.Weight = &v
	return s
}

type ConvertRedirectConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Host *string `type:"string"`

	HttpCode *string `type:"string"`

	Path *string `type:"string"`

	Port *string `type:"string"`

	Protocol *string `type:"string"`
}

// String returns the string representation
func (s ConvertRedirectConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertRedirectConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetHost sets the Host field's value.
func (s *ConvertRedirectConfigForModifyRulesInput) SetHost(v string) *ConvertRedirectConfigForModifyRulesInput {
	s.Host = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *ConvertRedirectConfigForModifyRulesInput) SetHttpCode(v string) *ConvertRedirectConfigForModifyRulesInput {
	s.HttpCode = &v
	return s
}

// SetPath sets the Path field's value.
func (s *ConvertRedirectConfigForModifyRulesInput) SetPath(v string) *ConvertRedirectConfigForModifyRulesInput {
	s.Path = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ConvertRedirectConfigForModifyRulesInput) SetPort(v string) *ConvertRedirectConfigForModifyRulesInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ConvertRedirectConfigForModifyRulesInput) SetProtocol(v string) *ConvertRedirectConfigForModifyRulesInput {
	s.Protocol = &v
	return s
}

type ConvertRewriteConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Path *string `type:"string"`
}

// String returns the string representation
func (s ConvertRewriteConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertRewriteConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetPath sets the Path field's value.
func (s *ConvertRewriteConfigForModifyRulesInput) SetPath(v string) *ConvertRewriteConfigForModifyRulesInput {
	s.Path = &v
	return s
}

type FixedResponseConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Content *string `type:"string"`

	ContentType *string `type:"string"`

	HttpCode *string `type:"string"`
}

// String returns the string representation
func (s FixedResponseConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FixedResponseConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *FixedResponseConfigForModifyRulesInput) SetContent(v string) *FixedResponseConfigForModifyRulesInput {
	s.Content = &v
	return s
}

// SetContentType sets the ContentType field's value.
func (s *FixedResponseConfigForModifyRulesInput) SetContentType(v string) *FixedResponseConfigForModifyRulesInput {
	s.ContentType = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *FixedResponseConfigForModifyRulesInput) SetHttpCode(v string) *FixedResponseConfigForModifyRulesInput {
	s.HttpCode = &v
	return s
}

type ForwardGroupConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupTuples []*ForwardGroupConfigServerGroupTupleForModifyRulesInput `type:"list"`

	StickySessionEnabled *string `type:"string"`

	StickySessionTimeout *int64 `type:"integer"`
}

// String returns the string representation
func (s ForwardGroupConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ForwardGroupConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupTuples sets the ServerGroupTuples field's value.
func (s *ForwardGroupConfigForModifyRulesInput) SetServerGroupTuples(v []*ForwardGroupConfigServerGroupTupleForModifyRulesInput) *ForwardGroupConfigForModifyRulesInput {
	s.ServerGroupTuples = v
	return s
}

// SetStickySessionEnabled sets the StickySessionEnabled field's value.
func (s *ForwardGroupConfigForModifyRulesInput) SetStickySessionEnabled(v string) *ForwardGroupConfigForModifyRulesInput {
	s.StickySessionEnabled = &v
	return s
}

// SetStickySessionTimeout sets the StickySessionTimeout field's value.
func (s *ForwardGroupConfigForModifyRulesInput) SetStickySessionTimeout(v int64) *ForwardGroupConfigForModifyRulesInput {
	s.StickySessionTimeout = &v
	return s
}

type ForwardGroupConfigServerGroupTupleForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupId *string `type:"string"`

	Weight *int64 `type:"integer"`
}

// String returns the string representation
func (s ForwardGroupConfigServerGroupTupleForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ForwardGroupConfigServerGroupTupleForModifyRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ForwardGroupConfigServerGroupTupleForModifyRulesInput) SetServerGroupId(v string) *ForwardGroupConfigServerGroupTupleForModifyRulesInput {
	s.ServerGroupId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ForwardGroupConfigServerGroupTupleForModifyRulesInput) SetWeight(v int64) *ForwardGroupConfigServerGroupTupleForModifyRulesInput {
	s.Weight = &v
	return s
}

type HeaderConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s HeaderConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HeaderConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *HeaderConfigForModifyRulesInput) SetKey(v string) *HeaderConfigForModifyRulesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *HeaderConfigForModifyRulesInput) SetValues(v []*string) *HeaderConfigForModifyRulesInput {
	s.Values = v
	return s
}

type HostConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s HostConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HostConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *HostConfigForModifyRulesInput) SetValues(v []*string) *HostConfigForModifyRulesInput {
	s.Values = v
	return s
}

type MethodConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s MethodConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MethodConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *MethodConfigForModifyRulesInput) SetValues(v []*string) *MethodConfigForModifyRulesInput {
	s.Values = v
	return s
}

type ModifyRulesInput struct {
	_ struct{} `type:"structure"`

	// ListenerId is a required field
	ListenerId *string `type:"string" required:"true"`

	Rules []*RuleForModifyRulesInput `type:"list"`
}

// String returns the string representation
func (s ModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyRulesInput"}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}
	if s.Rules != nil {
		for i, v := range s.Rules {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Rules", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetListenerId sets the ListenerId field's value.
func (s *ModifyRulesInput) SetListenerId(v string) *ModifyRulesInput {
	s.ListenerId = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *ModifyRulesInput) SetRules(v []*RuleForModifyRulesInput) *ModifyRulesInput {
	s.Rules = v
	return s
}

type ModifyRulesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyRulesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyRulesOutput) SetRequestId(v string) *ModifyRulesOutput {
	s.RequestId = &v
	return s
}

type PathConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s PathConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PathConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *PathConfigForModifyRulesInput) SetValues(v []*string) *PathConfigForModifyRulesInput {
	s.Values = v
	return s
}

type QueryStringConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*QueryStringConfigValueForModifyRulesInput `type:"list"`
}

// String returns the string representation
func (s QueryStringConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryStringConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *QueryStringConfigForModifyRulesInput) SetValues(v []*QueryStringConfigValueForModifyRulesInput) *QueryStringConfigForModifyRulesInput {
	s.Values = v
	return s
}

type QueryStringConfigValueForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s QueryStringConfigValueForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryStringConfigValueForModifyRulesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *QueryStringConfigValueForModifyRulesInput) SetKey(v string) *QueryStringConfigValueForModifyRulesInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *QueryStringConfigValueForModifyRulesInput) SetValue(v string) *QueryStringConfigValueForModifyRulesInput {
	s.Value = &v
	return s
}

type RedirectConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	RedirectDomain *string `min:"1" max:"128" type:"string"`

	RedirectHttpCode *string `type:"string"`

	RedirectPort *string `type:"string"`

	RedirectProtocol *string `type:"string"`

	RedirectUri *string `min:"1" max:"128" type:"string"`
}

// String returns the string representation
func (s RedirectConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RedirectConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RedirectConfigForModifyRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RedirectConfigForModifyRulesInput"}
	if s.RedirectDomain != nil && len(*s.RedirectDomain) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("RedirectDomain", 1))
	}
	if s.RedirectDomain != nil && len(*s.RedirectDomain) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("RedirectDomain", 128, *s.RedirectDomain))
	}
	if s.RedirectUri != nil && len(*s.RedirectUri) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("RedirectUri", 1))
	}
	if s.RedirectUri != nil && len(*s.RedirectUri) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("RedirectUri", 128, *s.RedirectUri))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRedirectDomain sets the RedirectDomain field's value.
func (s *RedirectConfigForModifyRulesInput) SetRedirectDomain(v string) *RedirectConfigForModifyRulesInput {
	s.RedirectDomain = &v
	return s
}

// SetRedirectHttpCode sets the RedirectHttpCode field's value.
func (s *RedirectConfigForModifyRulesInput) SetRedirectHttpCode(v string) *RedirectConfigForModifyRulesInput {
	s.RedirectHttpCode = &v
	return s
}

// SetRedirectPort sets the RedirectPort field's value.
func (s *RedirectConfigForModifyRulesInput) SetRedirectPort(v string) *RedirectConfigForModifyRulesInput {
	s.RedirectPort = &v
	return s
}

// SetRedirectProtocol sets the RedirectProtocol field's value.
func (s *RedirectConfigForModifyRulesInput) SetRedirectProtocol(v string) *RedirectConfigForModifyRulesInput {
	s.RedirectProtocol = &v
	return s
}

// SetRedirectUri sets the RedirectUri field's value.
func (s *RedirectConfigForModifyRulesInput) SetRedirectUri(v string) *RedirectConfigForModifyRulesInput {
	s.RedirectUri = &v
	return s
}

type RewriteConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	RewritePath *string `type:"string"`
}

// String returns the string representation
func (s RewriteConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RewriteConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetRewritePath sets the RewritePath field's value.
func (s *RewriteConfigForModifyRulesInput) SetRewritePath(v string) *RewriteConfigForModifyRulesInput {
	s.RewritePath = &v
	return s
}

type RuleForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	ForwardGroupConfig *ForwardGroupConfigForModifyRulesInput `type:"structure"`

	Priority *int64 `min:"1" max:"10000" type:"integer"`

	RedirectConfig *RedirectConfigForModifyRulesInput `type:"structure"`

	RewriteConfig *RewriteConfigForModifyRulesInput `type:"structure"`

	RewriteEnabled *string `type:"string"`

	RuleAction *string `type:"string"`

	RuleActions []*RulesRuleActionForModifyRulesInput `type:"list"`

	RuleConditions []*RulesRuleConditionForModifyRulesInput `type:"list"`

	// RuleId is a required field
	RuleId *string `type:"string" required:"true"`

	ServerGroupId *string `type:"string"`

	TrafficLimitEnabled *string `type:"string"`

	TrafficLimitQPS *int64 `type:"integer"`
}

// String returns the string representation
func (s RuleForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForModifyRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RuleForModifyRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RuleForModifyRulesInput"}
	if s.Priority != nil && *s.Priority < 1 {
		invalidParams.Add(request.NewErrParamMinValue("Priority", 1))
	}
	if s.Priority != nil && *s.Priority > 10000 {
		invalidParams.Add(request.NewErrParamMaxValue("Priority", 10000))
	}
	if s.RuleId == nil {
		invalidParams.Add(request.NewErrParamRequired("RuleId"))
	}
	if s.RedirectConfig != nil {
		if err := s.RedirectConfig.Validate(); err != nil {
			invalidParams.AddNested("RedirectConfig", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *RuleForModifyRulesInput) SetDescription(v string) *RuleForModifyRulesInput {
	s.Description = &v
	return s
}

// SetForwardGroupConfig sets the ForwardGroupConfig field's value.
func (s *RuleForModifyRulesInput) SetForwardGroupConfig(v *ForwardGroupConfigForModifyRulesInput) *RuleForModifyRulesInput {
	s.ForwardGroupConfig = v
	return s
}

// SetPriority sets the Priority field's value.
func (s *RuleForModifyRulesInput) SetPriority(v int64) *RuleForModifyRulesInput {
	s.Priority = &v
	return s
}

// SetRedirectConfig sets the RedirectConfig field's value.
func (s *RuleForModifyRulesInput) SetRedirectConfig(v *RedirectConfigForModifyRulesInput) *RuleForModifyRulesInput {
	s.RedirectConfig = v
	return s
}

// SetRewriteConfig sets the RewriteConfig field's value.
func (s *RuleForModifyRulesInput) SetRewriteConfig(v *RewriteConfigForModifyRulesInput) *RuleForModifyRulesInput {
	s.RewriteConfig = v
	return s
}

// SetRewriteEnabled sets the RewriteEnabled field's value.
func (s *RuleForModifyRulesInput) SetRewriteEnabled(v string) *RuleForModifyRulesInput {
	s.RewriteEnabled = &v
	return s
}

// SetRuleAction sets the RuleAction field's value.
func (s *RuleForModifyRulesInput) SetRuleAction(v string) *RuleForModifyRulesInput {
	s.RuleAction = &v
	return s
}

// SetRuleActions sets the RuleActions field's value.
func (s *RuleForModifyRulesInput) SetRuleActions(v []*RulesRuleActionForModifyRulesInput) *RuleForModifyRulesInput {
	s.RuleActions = v
	return s
}

// SetRuleConditions sets the RuleConditions field's value.
func (s *RuleForModifyRulesInput) SetRuleConditions(v []*RulesRuleConditionForModifyRulesInput) *RuleForModifyRulesInput {
	s.RuleConditions = v
	return s
}

// SetRuleId sets the RuleId field's value.
func (s *RuleForModifyRulesInput) SetRuleId(v string) *RuleForModifyRulesInput {
	s.RuleId = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *RuleForModifyRulesInput) SetServerGroupId(v string) *RuleForModifyRulesInput {
	s.ServerGroupId = &v
	return s
}

// SetTrafficLimitEnabled sets the TrafficLimitEnabled field's value.
func (s *RuleForModifyRulesInput) SetTrafficLimitEnabled(v string) *RuleForModifyRulesInput {
	s.TrafficLimitEnabled = &v
	return s
}

// SetTrafficLimitQPS sets the TrafficLimitQPS field's value.
func (s *RuleForModifyRulesInput) SetTrafficLimitQPS(v int64) *RuleForModifyRulesInput {
	s.TrafficLimitQPS = &v
	return s
}

type RulesRuleActionForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	FixedResponseConfig *FixedResponseConfigForModifyRulesInput `type:"structure"`

	ForwardGroupConfig *ConvertForwardGroupConfigForModifyRulesInput `type:"structure"`

	RedirectConfig *ConvertRedirectConfigForModifyRulesInput `type:"structure"`

	RewriteConfig *ConvertRewriteConfigForModifyRulesInput `type:"structure"`

	TrafficLimitConfig *TrafficLimitConfigForModifyRulesInput `type:"structure"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s RulesRuleActionForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesRuleActionForModifyRulesInput) GoString() string {
	return s.String()
}

// SetFixedResponseConfig sets the FixedResponseConfig field's value.
func (s *RulesRuleActionForModifyRulesInput) SetFixedResponseConfig(v *FixedResponseConfigForModifyRulesInput) *RulesRuleActionForModifyRulesInput {
	s.FixedResponseConfig = v
	return s
}

// SetForwardGroupConfig sets the ForwardGroupConfig field's value.
func (s *RulesRuleActionForModifyRulesInput) SetForwardGroupConfig(v *ConvertForwardGroupConfigForModifyRulesInput) *RulesRuleActionForModifyRulesInput {
	s.ForwardGroupConfig = v
	return s
}

// SetRedirectConfig sets the RedirectConfig field's value.
func (s *RulesRuleActionForModifyRulesInput) SetRedirectConfig(v *ConvertRedirectConfigForModifyRulesInput) *RulesRuleActionForModifyRulesInput {
	s.RedirectConfig = v
	return s
}

// SetRewriteConfig sets the RewriteConfig field's value.
func (s *RulesRuleActionForModifyRulesInput) SetRewriteConfig(v *ConvertRewriteConfigForModifyRulesInput) *RulesRuleActionForModifyRulesInput {
	s.RewriteConfig = v
	return s
}

// SetTrafficLimitConfig sets the TrafficLimitConfig field's value.
func (s *RulesRuleActionForModifyRulesInput) SetTrafficLimitConfig(v *TrafficLimitConfigForModifyRulesInput) *RulesRuleActionForModifyRulesInput {
	s.TrafficLimitConfig = v
	return s
}

// SetType sets the Type field's value.
func (s *RulesRuleActionForModifyRulesInput) SetType(v string) *RulesRuleActionForModifyRulesInput {
	s.Type = &v
	return s
}

type RulesRuleConditionForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	HeaderConfig *HeaderConfigForModifyRulesInput `type:"structure"`

	HostConfig *HostConfigForModifyRulesInput `type:"structure"`

	MethodConfig *MethodConfigForModifyRulesInput `type:"structure"`

	PathConfig *PathConfigForModifyRulesInput `type:"structure"`

	QueryStringConfig *QueryStringConfigForModifyRulesInput `type:"structure"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s RulesRuleConditionForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesRuleConditionForModifyRulesInput) GoString() string {
	return s.String()
}

// SetHeaderConfig sets the HeaderConfig field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetHeaderConfig(v *HeaderConfigForModifyRulesInput) *RulesRuleConditionForModifyRulesInput {
	s.HeaderConfig = v
	return s
}

// SetHostConfig sets the HostConfig field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetHostConfig(v *HostConfigForModifyRulesInput) *RulesRuleConditionForModifyRulesInput {
	s.HostConfig = v
	return s
}

// SetMethodConfig sets the MethodConfig field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetMethodConfig(v *MethodConfigForModifyRulesInput) *RulesRuleConditionForModifyRulesInput {
	s.MethodConfig = v
	return s
}

// SetPathConfig sets the PathConfig field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetPathConfig(v *PathConfigForModifyRulesInput) *RulesRuleConditionForModifyRulesInput {
	s.PathConfig = v
	return s
}

// SetQueryStringConfig sets the QueryStringConfig field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetQueryStringConfig(v *QueryStringConfigForModifyRulesInput) *RulesRuleConditionForModifyRulesInput {
	s.QueryStringConfig = v
	return s
}

// SetType sets the Type field's value.
func (s *RulesRuleConditionForModifyRulesInput) SetType(v string) *RulesRuleConditionForModifyRulesInput {
	s.Type = &v
	return s
}

type ServerGroupStickySessionForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	Enabled *string `type:"string"`

	Timeout *string `type:"string"`
}

// String returns the string representation
func (s ServerGroupStickySessionForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerGroupStickySessionForModifyRulesInput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *ServerGroupStickySessionForModifyRulesInput) SetEnabled(v string) *ServerGroupStickySessionForModifyRulesInput {
	s.Enabled = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *ServerGroupStickySessionForModifyRulesInput) SetTimeout(v string) *ServerGroupStickySessionForModifyRulesInput {
	s.Timeout = &v
	return s
}

type TrafficLimitConfigForModifyRulesInput struct {
	_ struct{} `type:"structure"`

	QPS *string `type:"string"`
}

// String returns the string representation
func (s TrafficLimitConfigForModifyRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrafficLimitConfigForModifyRulesInput) GoString() string {
	return s.String()
}

// SetQPS sets the QPS field's value.
func (s *TrafficLimitConfigForModifyRulesInput) SetQPS(v string) *TrafficLimitConfigForModifyRulesInput {
	s.QPS = &v
	return s
}
