// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package alb

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateRulesCommon = "CreateRules"

// CreateRulesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRulesCommon operation. The "output" return
// value will be populated with the CreateRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRulesCommon Send returns without error.
//
// See CreateRulesCommon for more information on using the CreateRulesCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateRulesCommonRequest method.
//    req, resp := client.CreateRulesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) CreateRulesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateRulesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateRulesCommon API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation CreateRulesCommon for usage and error information.
func (c *ALB) CreateRulesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateRulesCommonRequest(input)
	return out, req.Send()
}

// CreateRulesCommonWithContext is the same as CreateRulesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRulesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) CreateRulesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateRulesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateRules = "CreateRules"

// CreateRulesRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateRules operation. The "output" return
// value will be populated with the CreateRulesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateRulesCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateRulesCommon Send returns without error.
//
// See CreateRules for more information on using the CreateRules
// API call, and error handling.
//
//    // Example sending a request using the CreateRulesRequest method.
//    req, resp := client.CreateRulesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ALB) CreateRulesRequest(input *CreateRulesInput) (req *request.Request, output *CreateRulesOutput) {
	op := &request.Operation{
		Name:       opCreateRules,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateRulesInput{}
	}

	output = &CreateRulesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateRules API operation for ALB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ALB's
// API operation CreateRules for usage and error information.
func (c *ALB) CreateRules(input *CreateRulesInput) (*CreateRulesOutput, error) {
	req, out := c.CreateRulesRequest(input)
	return out, req.Send()
}

// CreateRulesWithContext is the same as CreateRules with the addition of
// the ability to pass a context and additional request options.
//
// See CreateRules for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ALB) CreateRulesWithContext(ctx volcengine.Context, input *CreateRulesInput, opts ...request.Option) (*CreateRulesOutput, error) {
	req, out := c.CreateRulesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ConvertForwardGroupConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupStickySession *ServerGroupStickySessionForCreateRulesInput `type:"structure"`

	ServerGroupTuples []*ForwardGroupConfigServerGroupTupleForCreateRulesInput `type:"list"`
}

// String returns the string representation
func (s ConvertForwardGroupConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertForwardGroupConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupStickySession sets the ServerGroupStickySession field's value.
func (s *ConvertForwardGroupConfigForCreateRulesInput) SetServerGroupStickySession(v *ServerGroupStickySessionForCreateRulesInput) *ConvertForwardGroupConfigForCreateRulesInput {
	s.ServerGroupStickySession = v
	return s
}

// SetServerGroupTuples sets the ServerGroupTuples field's value.
func (s *ConvertForwardGroupConfigForCreateRulesInput) SetServerGroupTuples(v []*ForwardGroupConfigServerGroupTupleForCreateRulesInput) *ConvertForwardGroupConfigForCreateRulesInput {
	s.ServerGroupTuples = v
	return s
}

type ConvertRedirectConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Host *string `type:"string"`

	HttpCode *string `type:"string"`

	Path *string `type:"string"`

	Port *string `type:"string"`

	Protocol *string `type:"string"`
}

// String returns the string representation
func (s ConvertRedirectConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertRedirectConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetHost sets the Host field's value.
func (s *ConvertRedirectConfigForCreateRulesInput) SetHost(v string) *ConvertRedirectConfigForCreateRulesInput {
	s.Host = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *ConvertRedirectConfigForCreateRulesInput) SetHttpCode(v string) *ConvertRedirectConfigForCreateRulesInput {
	s.HttpCode = &v
	return s
}

// SetPath sets the Path field's value.
func (s *ConvertRedirectConfigForCreateRulesInput) SetPath(v string) *ConvertRedirectConfigForCreateRulesInput {
	s.Path = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ConvertRedirectConfigForCreateRulesInput) SetPort(v string) *ConvertRedirectConfigForCreateRulesInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ConvertRedirectConfigForCreateRulesInput) SetProtocol(v string) *ConvertRedirectConfigForCreateRulesInput {
	s.Protocol = &v
	return s
}

type ConvertRewriteConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Path *string `type:"string"`
}

// String returns the string representation
func (s ConvertRewriteConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConvertRewriteConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetPath sets the Path field's value.
func (s *ConvertRewriteConfigForCreateRulesInput) SetPath(v string) *ConvertRewriteConfigForCreateRulesInput {
	s.Path = &v
	return s
}

type CreateRulesInput struct {
	_ struct{} `type:"structure"`

	// ListenerId is a required field
	ListenerId *string `type:"string" required:"true"`

	Rules []*RuleForCreateRulesInput `type:"list"`
}

// String returns the string representation
func (s CreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateRulesInput"}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}
	if s.Rules != nil {
		for i, v := range s.Rules {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Rules", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetListenerId sets the ListenerId field's value.
func (s *CreateRulesInput) SetListenerId(v string) *CreateRulesInput {
	s.ListenerId = &v
	return s
}

// SetRules sets the Rules field's value.
func (s *CreateRulesInput) SetRules(v []*RuleForCreateRulesInput) *CreateRulesInput {
	s.Rules = v
	return s
}

type CreateRulesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`

	RuleIds []*string `type:"list"`
}

// String returns the string representation
func (s CreateRulesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateRulesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateRulesOutput) SetRequestId(v string) *CreateRulesOutput {
	s.RequestId = &v
	return s
}

// SetRuleIds sets the RuleIds field's value.
func (s *CreateRulesOutput) SetRuleIds(v []*string) *CreateRulesOutput {
	s.RuleIds = v
	return s
}

type FixedResponseConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Content *string `type:"string"`

	ContentType *string `type:"string"`

	HttpCode *string `type:"string"`
}

// String returns the string representation
func (s FixedResponseConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FixedResponseConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetContent sets the Content field's value.
func (s *FixedResponseConfigForCreateRulesInput) SetContent(v string) *FixedResponseConfigForCreateRulesInput {
	s.Content = &v
	return s
}

// SetContentType sets the ContentType field's value.
func (s *FixedResponseConfigForCreateRulesInput) SetContentType(v string) *FixedResponseConfigForCreateRulesInput {
	s.ContentType = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *FixedResponseConfigForCreateRulesInput) SetHttpCode(v string) *FixedResponseConfigForCreateRulesInput {
	s.HttpCode = &v
	return s
}

type ForwardGroupConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupTuples []*ForwardGroupConfigServerGroupTupleForCreateRulesInput `type:"list"`

	StickySessionEnabled *string `type:"string"`

	StickySessionTimeout *int64 `type:"integer"`
}

// String returns the string representation
func (s ForwardGroupConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ForwardGroupConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupTuples sets the ServerGroupTuples field's value.
func (s *ForwardGroupConfigForCreateRulesInput) SetServerGroupTuples(v []*ForwardGroupConfigServerGroupTupleForCreateRulesInput) *ForwardGroupConfigForCreateRulesInput {
	s.ServerGroupTuples = v
	return s
}

// SetStickySessionEnabled sets the StickySessionEnabled field's value.
func (s *ForwardGroupConfigForCreateRulesInput) SetStickySessionEnabled(v string) *ForwardGroupConfigForCreateRulesInput {
	s.StickySessionEnabled = &v
	return s
}

// SetStickySessionTimeout sets the StickySessionTimeout field's value.
func (s *ForwardGroupConfigForCreateRulesInput) SetStickySessionTimeout(v int64) *ForwardGroupConfigForCreateRulesInput {
	s.StickySessionTimeout = &v
	return s
}

type ForwardGroupConfigServerGroupTupleForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	ServerGroupId *string `type:"string"`

	Weight *int64 `type:"integer"`
}

// String returns the string representation
func (s ForwardGroupConfigServerGroupTupleForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ForwardGroupConfigServerGroupTupleForCreateRulesInput) GoString() string {
	return s.String()
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ForwardGroupConfigServerGroupTupleForCreateRulesInput) SetServerGroupId(v string) *ForwardGroupConfigServerGroupTupleForCreateRulesInput {
	s.ServerGroupId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ForwardGroupConfigServerGroupTupleForCreateRulesInput) SetWeight(v int64) *ForwardGroupConfigServerGroupTupleForCreateRulesInput {
	s.Weight = &v
	return s
}

type HeaderConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s HeaderConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HeaderConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *HeaderConfigForCreateRulesInput) SetKey(v string) *HeaderConfigForCreateRulesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *HeaderConfigForCreateRulesInput) SetValues(v []*string) *HeaderConfigForCreateRulesInput {
	s.Values = v
	return s
}

type HostConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s HostConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HostConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *HostConfigForCreateRulesInput) SetValues(v []*string) *HostConfigForCreateRulesInput {
	s.Values = v
	return s
}

type MethodConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s MethodConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MethodConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *MethodConfigForCreateRulesInput) SetValues(v []*string) *MethodConfigForCreateRulesInput {
	s.Values = v
	return s
}

type PathConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s PathConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PathConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *PathConfigForCreateRulesInput) SetValues(v []*string) *PathConfigForCreateRulesInput {
	s.Values = v
	return s
}

type QueryStringConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Values []*QueryStringConfigValueForCreateRulesInput `type:"list"`
}

// String returns the string representation
func (s QueryStringConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryStringConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetValues sets the Values field's value.
func (s *QueryStringConfigForCreateRulesInput) SetValues(v []*QueryStringConfigValueForCreateRulesInput) *QueryStringConfigForCreateRulesInput {
	s.Values = v
	return s
}

type QueryStringConfigValueForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s QueryStringConfigValueForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryStringConfigValueForCreateRulesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *QueryStringConfigValueForCreateRulesInput) SetKey(v string) *QueryStringConfigValueForCreateRulesInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *QueryStringConfigValueForCreateRulesInput) SetValue(v string) *QueryStringConfigValueForCreateRulesInput {
	s.Value = &v
	return s
}

type RedirectConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	RedirectDomain *string `min:"1" max:"128" type:"string"`

	RedirectHttpCode *string `type:"string"`

	RedirectPort *string `type:"string"`

	RedirectProtocol *string `type:"string"`

	RedirectUri *string `min:"1" max:"128" type:"string"`
}

// String returns the string representation
func (s RedirectConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RedirectConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RedirectConfigForCreateRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RedirectConfigForCreateRulesInput"}
	if s.RedirectDomain != nil && len(*s.RedirectDomain) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("RedirectDomain", 1))
	}
	if s.RedirectDomain != nil && len(*s.RedirectDomain) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("RedirectDomain", 128, *s.RedirectDomain))
	}
	if s.RedirectUri != nil && len(*s.RedirectUri) < 1 {
		invalidParams.Add(request.NewErrParamMinLen("RedirectUri", 1))
	}
	if s.RedirectUri != nil && len(*s.RedirectUri) > 128 {
		invalidParams.Add(request.NewErrParamMaxLen("RedirectUri", 128, *s.RedirectUri))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetRedirectDomain sets the RedirectDomain field's value.
func (s *RedirectConfigForCreateRulesInput) SetRedirectDomain(v string) *RedirectConfigForCreateRulesInput {
	s.RedirectDomain = &v
	return s
}

// SetRedirectHttpCode sets the RedirectHttpCode field's value.
func (s *RedirectConfigForCreateRulesInput) SetRedirectHttpCode(v string) *RedirectConfigForCreateRulesInput {
	s.RedirectHttpCode = &v
	return s
}

// SetRedirectPort sets the RedirectPort field's value.
func (s *RedirectConfigForCreateRulesInput) SetRedirectPort(v string) *RedirectConfigForCreateRulesInput {
	s.RedirectPort = &v
	return s
}

// SetRedirectProtocol sets the RedirectProtocol field's value.
func (s *RedirectConfigForCreateRulesInput) SetRedirectProtocol(v string) *RedirectConfigForCreateRulesInput {
	s.RedirectProtocol = &v
	return s
}

// SetRedirectUri sets the RedirectUri field's value.
func (s *RedirectConfigForCreateRulesInput) SetRedirectUri(v string) *RedirectConfigForCreateRulesInput {
	s.RedirectUri = &v
	return s
}

type RewriteConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	RewritePath *string `type:"string"`
}

// String returns the string representation
func (s RewriteConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RewriteConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetRewritePath sets the RewritePath field's value.
func (s *RewriteConfigForCreateRulesInput) SetRewritePath(v string) *RewriteConfigForCreateRulesInput {
	s.RewritePath = &v
	return s
}

type RuleForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	Domain *string `type:"string"`

	ForwardGroupConfig *ForwardGroupConfigForCreateRulesInput `type:"structure"`

	Priority *int64 `min:"1" max:"10000" type:"integer"`

	RedirectConfig *RedirectConfigForCreateRulesInput `type:"structure"`

	RewriteConfig *RewriteConfigForCreateRulesInput `type:"structure"`

	RewriteEnabled *string `type:"string"`

	RuleAction *string `type:"string"`

	RuleActions []*RulesRuleActionForCreateRulesInput `type:"list"`

	RuleConditions []*RulesRuleConditionForCreateRulesInput `type:"list"`

	ServerGroupId *string `type:"string"`

	TrafficLimitEnabled *string `type:"string"`

	TrafficLimitQPS *int64 `type:"integer"`

	URL *string `type:"string"`
}

// String returns the string representation
func (s RuleForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RuleForCreateRulesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RuleForCreateRulesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RuleForCreateRulesInput"}
	if s.Priority != nil && *s.Priority < 1 {
		invalidParams.Add(request.NewErrParamMinValue("Priority", 1))
	}
	if s.Priority != nil && *s.Priority > 10000 {
		invalidParams.Add(request.NewErrParamMaxValue("Priority", 10000))
	}
	if s.RedirectConfig != nil {
		if err := s.RedirectConfig.Validate(); err != nil {
			invalidParams.AddNested("RedirectConfig", err.(request.ErrInvalidParams))
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *RuleForCreateRulesInput) SetDescription(v string) *RuleForCreateRulesInput {
	s.Description = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *RuleForCreateRulesInput) SetDomain(v string) *RuleForCreateRulesInput {
	s.Domain = &v
	return s
}

// SetForwardGroupConfig sets the ForwardGroupConfig field's value.
func (s *RuleForCreateRulesInput) SetForwardGroupConfig(v *ForwardGroupConfigForCreateRulesInput) *RuleForCreateRulesInput {
	s.ForwardGroupConfig = v
	return s
}

// SetPriority sets the Priority field's value.
func (s *RuleForCreateRulesInput) SetPriority(v int64) *RuleForCreateRulesInput {
	s.Priority = &v
	return s
}

// SetRedirectConfig sets the RedirectConfig field's value.
func (s *RuleForCreateRulesInput) SetRedirectConfig(v *RedirectConfigForCreateRulesInput) *RuleForCreateRulesInput {
	s.RedirectConfig = v
	return s
}

// SetRewriteConfig sets the RewriteConfig field's value.
func (s *RuleForCreateRulesInput) SetRewriteConfig(v *RewriteConfigForCreateRulesInput) *RuleForCreateRulesInput {
	s.RewriteConfig = v
	return s
}

// SetRewriteEnabled sets the RewriteEnabled field's value.
func (s *RuleForCreateRulesInput) SetRewriteEnabled(v string) *RuleForCreateRulesInput {
	s.RewriteEnabled = &v
	return s
}

// SetRuleAction sets the RuleAction field's value.
func (s *RuleForCreateRulesInput) SetRuleAction(v string) *RuleForCreateRulesInput {
	s.RuleAction = &v
	return s
}

// SetRuleActions sets the RuleActions field's value.
func (s *RuleForCreateRulesInput) SetRuleActions(v []*RulesRuleActionForCreateRulesInput) *RuleForCreateRulesInput {
	s.RuleActions = v
	return s
}

// SetRuleConditions sets the RuleConditions field's value.
func (s *RuleForCreateRulesInput) SetRuleConditions(v []*RulesRuleConditionForCreateRulesInput) *RuleForCreateRulesInput {
	s.RuleConditions = v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *RuleForCreateRulesInput) SetServerGroupId(v string) *RuleForCreateRulesInput {
	s.ServerGroupId = &v
	return s
}

// SetTrafficLimitEnabled sets the TrafficLimitEnabled field's value.
func (s *RuleForCreateRulesInput) SetTrafficLimitEnabled(v string) *RuleForCreateRulesInput {
	s.TrafficLimitEnabled = &v
	return s
}

// SetTrafficLimitQPS sets the TrafficLimitQPS field's value.
func (s *RuleForCreateRulesInput) SetTrafficLimitQPS(v int64) *RuleForCreateRulesInput {
	s.TrafficLimitQPS = &v
	return s
}

// SetURL sets the URL field's value.
func (s *RuleForCreateRulesInput) SetURL(v string) *RuleForCreateRulesInput {
	s.URL = &v
	return s
}

type RulesRuleActionForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	FixedResponseConfig *FixedResponseConfigForCreateRulesInput `type:"structure"`

	ForwardGroupConfig *ConvertForwardGroupConfigForCreateRulesInput `type:"structure"`

	RedirectConfig *ConvertRedirectConfigForCreateRulesInput `type:"structure"`

	RewriteConfig *ConvertRewriteConfigForCreateRulesInput `type:"structure"`

	TrafficLimitConfig *TrafficLimitConfigForCreateRulesInput `type:"structure"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s RulesRuleActionForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesRuleActionForCreateRulesInput) GoString() string {
	return s.String()
}

// SetFixedResponseConfig sets the FixedResponseConfig field's value.
func (s *RulesRuleActionForCreateRulesInput) SetFixedResponseConfig(v *FixedResponseConfigForCreateRulesInput) *RulesRuleActionForCreateRulesInput {
	s.FixedResponseConfig = v
	return s
}

// SetForwardGroupConfig sets the ForwardGroupConfig field's value.
func (s *RulesRuleActionForCreateRulesInput) SetForwardGroupConfig(v *ConvertForwardGroupConfigForCreateRulesInput) *RulesRuleActionForCreateRulesInput {
	s.ForwardGroupConfig = v
	return s
}

// SetRedirectConfig sets the RedirectConfig field's value.
func (s *RulesRuleActionForCreateRulesInput) SetRedirectConfig(v *ConvertRedirectConfigForCreateRulesInput) *RulesRuleActionForCreateRulesInput {
	s.RedirectConfig = v
	return s
}

// SetRewriteConfig sets the RewriteConfig field's value.
func (s *RulesRuleActionForCreateRulesInput) SetRewriteConfig(v *ConvertRewriteConfigForCreateRulesInput) *RulesRuleActionForCreateRulesInput {
	s.RewriteConfig = v
	return s
}

// SetTrafficLimitConfig sets the TrafficLimitConfig field's value.
func (s *RulesRuleActionForCreateRulesInput) SetTrafficLimitConfig(v *TrafficLimitConfigForCreateRulesInput) *RulesRuleActionForCreateRulesInput {
	s.TrafficLimitConfig = v
	return s
}

// SetType sets the Type field's value.
func (s *RulesRuleActionForCreateRulesInput) SetType(v string) *RulesRuleActionForCreateRulesInput {
	s.Type = &v
	return s
}

type RulesRuleConditionForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	HeaderConfig *HeaderConfigForCreateRulesInput `type:"structure"`

	HostConfig *HostConfigForCreateRulesInput `type:"structure"`

	MethodConfig *MethodConfigForCreateRulesInput `type:"structure"`

	PathConfig *PathConfigForCreateRulesInput `type:"structure"`

	QueryStringConfig *QueryStringConfigForCreateRulesInput `type:"structure"`

	Type *string `type:"string"`
}

// String returns the string representation
func (s RulesRuleConditionForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RulesRuleConditionForCreateRulesInput) GoString() string {
	return s.String()
}

// SetHeaderConfig sets the HeaderConfig field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetHeaderConfig(v *HeaderConfigForCreateRulesInput) *RulesRuleConditionForCreateRulesInput {
	s.HeaderConfig = v
	return s
}

// SetHostConfig sets the HostConfig field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetHostConfig(v *HostConfigForCreateRulesInput) *RulesRuleConditionForCreateRulesInput {
	s.HostConfig = v
	return s
}

// SetMethodConfig sets the MethodConfig field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetMethodConfig(v *MethodConfigForCreateRulesInput) *RulesRuleConditionForCreateRulesInput {
	s.MethodConfig = v
	return s
}

// SetPathConfig sets the PathConfig field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetPathConfig(v *PathConfigForCreateRulesInput) *RulesRuleConditionForCreateRulesInput {
	s.PathConfig = v
	return s
}

// SetQueryStringConfig sets the QueryStringConfig field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetQueryStringConfig(v *QueryStringConfigForCreateRulesInput) *RulesRuleConditionForCreateRulesInput {
	s.QueryStringConfig = v
	return s
}

// SetType sets the Type field's value.
func (s *RulesRuleConditionForCreateRulesInput) SetType(v string) *RulesRuleConditionForCreateRulesInput {
	s.Type = &v
	return s
}

type ServerGroupStickySessionForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	Enabled *string `type:"string"`

	Timeout *int64 `type:"integer"`
}

// String returns the string representation
func (s ServerGroupStickySessionForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerGroupStickySessionForCreateRulesInput) GoString() string {
	return s.String()
}

// SetEnabled sets the Enabled field's value.
func (s *ServerGroupStickySessionForCreateRulesInput) SetEnabled(v string) *ServerGroupStickySessionForCreateRulesInput {
	s.Enabled = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *ServerGroupStickySessionForCreateRulesInput) SetTimeout(v int64) *ServerGroupStickySessionForCreateRulesInput {
	s.Timeout = &v
	return s
}

type TrafficLimitConfigForCreateRulesInput struct {
	_ struct{} `type:"structure"`

	QPS *int64 `type:"integer"`
}

// String returns the string representation
func (s TrafficLimitConfigForCreateRulesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TrafficLimitConfigForCreateRulesInput) GoString() string {
	return s.String()
}

// SetQPS sets the QPS field's value.
func (s *TrafficLimitConfigForCreateRulesInput) SetQPS(v int64) *TrafficLimitConfigForCreateRulesInput {
	s.QPS = &v
	return s
}
