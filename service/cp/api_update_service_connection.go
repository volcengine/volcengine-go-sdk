// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateServiceConnectionCommon = "UpdateServiceConnection"

// UpdateServiceConnectionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateServiceConnectionCommon operation. The "output" return
// value will be populated with the UpdateServiceConnectionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateServiceConnectionCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateServiceConnectionCommon Send returns without error.
//
// See UpdateServiceConnectionCommon for more information on using the UpdateServiceConnectionCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateServiceConnectionCommonRequest method.
//    req, resp := client.UpdateServiceConnectionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) UpdateServiceConnectionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateServiceConnectionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateServiceConnectionCommon API operation for CP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CP's
// API operation UpdateServiceConnectionCommon for usage and error information.
func (c *CP) UpdateServiceConnectionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateServiceConnectionCommonRequest(input)
	return out, req.Send()
}

// UpdateServiceConnectionCommonWithContext is the same as UpdateServiceConnectionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateServiceConnectionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) UpdateServiceConnectionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateServiceConnectionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateServiceConnection = "UpdateServiceConnection"

// UpdateServiceConnectionRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateServiceConnection operation. The "output" return
// value will be populated with the UpdateServiceConnectionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateServiceConnectionCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateServiceConnectionCommon Send returns without error.
//
// See UpdateServiceConnection for more information on using the UpdateServiceConnection
// API call, and error handling.
//
//    // Example sending a request using the UpdateServiceConnectionRequest method.
//    req, resp := client.UpdateServiceConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) UpdateServiceConnectionRequest(input *UpdateServiceConnectionInput) (req *request.Request, output *UpdateServiceConnectionOutput) {
	op := &request.Operation{
		Name:       opUpdateServiceConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateServiceConnectionInput{}
	}

	output = &UpdateServiceConnectionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateServiceConnection API operation for CP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CP's
// API operation UpdateServiceConnection for usage and error information.
func (c *CP) UpdateServiceConnection(input *UpdateServiceConnectionInput) (*UpdateServiceConnectionOutput, error) {
	req, out := c.UpdateServiceConnectionRequest(input)
	return out, req.Send()
}

// UpdateServiceConnectionWithContext is the same as UpdateServiceConnection with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateServiceConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) UpdateServiceConnectionWithContext(ctx volcengine.Context, input *UpdateServiceConnectionInput, opts ...request.Option) (*UpdateServiceConnectionOutput, error) {
	req, out := c.UpdateServiceConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CredentialForUpdateServiceConnectionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`

	Token *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CredentialForUpdateServiceConnectionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CredentialForUpdateServiceConnectionInput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *CredentialForUpdateServiceConnectionInput) SetAccessKey(v string) *CredentialForUpdateServiceConnectionInput {
	s.AccessKey = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CredentialForUpdateServiceConnectionInput) SetPassword(v string) *CredentialForUpdateServiceConnectionInput {
	s.Password = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *CredentialForUpdateServiceConnectionInput) SetSecretKey(v string) *CredentialForUpdateServiceConnectionInput {
	s.SecretKey = &v
	return s
}

// SetToken sets the Token field's value.
func (s *CredentialForUpdateServiceConnectionInput) SetToken(v string) *CredentialForUpdateServiceConnectionInput {
	s.Token = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *CredentialForUpdateServiceConnectionInput) SetUsername(v string) *CredentialForUpdateServiceConnectionInput {
	s.Username = &v
	return s
}

type UpdateServiceConnectionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Credential *CredentialForUpdateServiceConnectionInput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	DisableNetworkVerify *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	// IsAllWsShared is a required field
	IsAllWsShared *bool `type:"boolean" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	SharedWorkspaceIds []*string `type:"list" json:",omitempty"`

	URL *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateServiceConnectionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateServiceConnectionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateServiceConnectionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateServiceConnectionInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}
	if s.IsAllWsShared == nil {
		invalidParams.Add(request.NewErrParamRequired("IsAllWsShared"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCredential sets the Credential field's value.
func (s *UpdateServiceConnectionInput) SetCredential(v *CredentialForUpdateServiceConnectionInput) *UpdateServiceConnectionInput {
	s.Credential = v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateServiceConnectionInput) SetDescription(v string) *UpdateServiceConnectionInput {
	s.Description = &v
	return s
}

// SetDisableNetworkVerify sets the DisableNetworkVerify field's value.
func (s *UpdateServiceConnectionInput) SetDisableNetworkVerify(v bool) *UpdateServiceConnectionInput {
	s.DisableNetworkVerify = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateServiceConnectionInput) SetId(v string) *UpdateServiceConnectionInput {
	s.Id = &v
	return s
}

// SetIsAllWsShared sets the IsAllWsShared field's value.
func (s *UpdateServiceConnectionInput) SetIsAllWsShared(v bool) *UpdateServiceConnectionInput {
	s.IsAllWsShared = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateServiceConnectionInput) SetName(v string) *UpdateServiceConnectionInput {
	s.Name = &v
	return s
}

// SetSharedWorkspaceIds sets the SharedWorkspaceIds field's value.
func (s *UpdateServiceConnectionInput) SetSharedWorkspaceIds(v []*string) *UpdateServiceConnectionInput {
	s.SharedWorkspaceIds = v
	return s
}

// SetURL sets the URL field's value.
func (s *UpdateServiceConnectionInput) SetURL(v string) *UpdateServiceConnectionInput {
	s.URL = &v
	return s
}

type UpdateServiceConnectionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateServiceConnectionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateServiceConnectionOutput) GoString() string {
	return s.String()
}
