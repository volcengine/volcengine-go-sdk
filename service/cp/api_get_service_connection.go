// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cp

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetServiceConnectionCommon = "GetServiceConnection"

// GetServiceConnectionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceConnectionCommon operation. The "output" return
// value will be populated with the GetServiceConnectionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceConnectionCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceConnectionCommon Send returns without error.
//
// See GetServiceConnectionCommon for more information on using the GetServiceConnectionCommon
// API call, and error handling.
//
//    // Example sending a request using the GetServiceConnectionCommonRequest method.
//    req, resp := client.GetServiceConnectionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) GetServiceConnectionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetServiceConnectionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceConnectionCommon API operation for CP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CP's
// API operation GetServiceConnectionCommon for usage and error information.
func (c *CP) GetServiceConnectionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetServiceConnectionCommonRequest(input)
	return out, req.Send()
}

// GetServiceConnectionCommonWithContext is the same as GetServiceConnectionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceConnectionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) GetServiceConnectionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetServiceConnectionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetServiceConnection = "GetServiceConnection"

// GetServiceConnectionRequest generates a "volcengine/request.Request" representing the
// client's request for the GetServiceConnection operation. The "output" return
// value will be populated with the GetServiceConnectionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetServiceConnectionCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetServiceConnectionCommon Send returns without error.
//
// See GetServiceConnection for more information on using the GetServiceConnection
// API call, and error handling.
//
//    // Example sending a request using the GetServiceConnectionRequest method.
//    req, resp := client.GetServiceConnectionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CP) GetServiceConnectionRequest(input *GetServiceConnectionInput) (req *request.Request, output *GetServiceConnectionOutput) {
	op := &request.Operation{
		Name:       opGetServiceConnection,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetServiceConnectionInput{}
	}

	output = &GetServiceConnectionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetServiceConnection API operation for CP.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CP's
// API operation GetServiceConnection for usage and error information.
func (c *CP) GetServiceConnection(input *GetServiceConnectionInput) (*GetServiceConnectionOutput, error) {
	req, out := c.GetServiceConnectionRequest(input)
	return out, req.Send()
}

// GetServiceConnectionWithContext is the same as GetServiceConnection with the addition of
// the ability to pass a context and additional request options.
//
// See GetServiceConnection for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CP) GetServiceConnectionWithContext(ctx volcengine.Context, input *GetServiceConnectionInput, opts ...request.Option) (*GetServiceConnectionOutput, error) {
	req, out := c.GetServiceConnectionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreatorForGetServiceConnectionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccountId *int64 `type:"int64" json:",omitempty"`

	UserId *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s CreatorForGetServiceConnectionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreatorForGetServiceConnectionOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *CreatorForGetServiceConnectionOutput) SetAccountId(v int64) *CreatorForGetServiceConnectionOutput {
	s.AccountId = &v
	return s
}

// SetUserId sets the UserId field's value.
func (s *CreatorForGetServiceConnectionOutput) SetUserId(v int64) *CreatorForGetServiceConnectionOutput {
	s.UserId = &v
	return s
}

type CredentialForGetServiceConnectionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AccessKey *string `type:"string" json:",omitempty"`

	Password *string `type:"string" json:",omitempty"`

	SecretKey *string `type:"string" json:",omitempty"`

	Token *string `type:"string" json:",omitempty"`

	Username *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CredentialForGetServiceConnectionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CredentialForGetServiceConnectionOutput) GoString() string {
	return s.String()
}

// SetAccessKey sets the AccessKey field's value.
func (s *CredentialForGetServiceConnectionOutput) SetAccessKey(v string) *CredentialForGetServiceConnectionOutput {
	s.AccessKey = &v
	return s
}

// SetPassword sets the Password field's value.
func (s *CredentialForGetServiceConnectionOutput) SetPassword(v string) *CredentialForGetServiceConnectionOutput {
	s.Password = &v
	return s
}

// SetSecretKey sets the SecretKey field's value.
func (s *CredentialForGetServiceConnectionOutput) SetSecretKey(v string) *CredentialForGetServiceConnectionOutput {
	s.SecretKey = &v
	return s
}

// SetToken sets the Token field's value.
func (s *CredentialForGetServiceConnectionOutput) SetToken(v string) *CredentialForGetServiceConnectionOutput {
	s.Token = &v
	return s
}

// SetUsername sets the Username field's value.
func (s *CredentialForGetServiceConnectionOutput) SetUsername(v string) *CredentialForGetServiceConnectionOutput {
	s.Username = &v
	return s
}

type GetServiceConnectionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetServiceConnectionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceConnectionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetServiceConnectionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetServiceConnectionInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetId sets the Id field's value.
func (s *GetServiceConnectionInput) SetId(v string) *GetServiceConnectionInput {
	s.Id = &v
	return s
}

type GetServiceConnectionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Category *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Creator *CreatorForGetServiceConnectionOutput `type:"structure" json:",omitempty"`

	Credential *CredentialForGetServiceConnectionOutput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	IsAllWsShared *bool `type:"boolean" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	PipelineBinding *bool `type:"boolean" json:",omitempty"`

	SharedWorkspaceIds []*string `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	URL *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetServiceConnectionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetServiceConnectionOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *GetServiceConnectionOutput) SetCategory(v string) *GetServiceConnectionOutput {
	s.Category = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetServiceConnectionOutput) SetCreateTime(v string) *GetServiceConnectionOutput {
	s.CreateTime = &v
	return s
}

// SetCreator sets the Creator field's value.
func (s *GetServiceConnectionOutput) SetCreator(v *CreatorForGetServiceConnectionOutput) *GetServiceConnectionOutput {
	s.Creator = v
	return s
}

// SetCredential sets the Credential field's value.
func (s *GetServiceConnectionOutput) SetCredential(v *CredentialForGetServiceConnectionOutput) *GetServiceConnectionOutput {
	s.Credential = v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetServiceConnectionOutput) SetDescription(v string) *GetServiceConnectionOutput {
	s.Description = &v
	return s
}

// SetId sets the Id field's value.
func (s *GetServiceConnectionOutput) SetId(v string) *GetServiceConnectionOutput {
	s.Id = &v
	return s
}

// SetIsAllWsShared sets the IsAllWsShared field's value.
func (s *GetServiceConnectionOutput) SetIsAllWsShared(v bool) *GetServiceConnectionOutput {
	s.IsAllWsShared = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetServiceConnectionOutput) SetName(v string) *GetServiceConnectionOutput {
	s.Name = &v
	return s
}

// SetPipelineBinding sets the PipelineBinding field's value.
func (s *GetServiceConnectionOutput) SetPipelineBinding(v bool) *GetServiceConnectionOutput {
	s.PipelineBinding = &v
	return s
}

// SetSharedWorkspaceIds sets the SharedWorkspaceIds field's value.
func (s *GetServiceConnectionOutput) SetSharedWorkspaceIds(v []*string) *GetServiceConnectionOutput {
	s.SharedWorkspaceIds = v
	return s
}

// SetType sets the Type field's value.
func (s *GetServiceConnectionOutput) SetType(v string) *GetServiceConnectionOutput {
	s.Type = &v
	return s
}

// SetURL sets the URL field's value.
func (s *GetServiceConnectionOutput) SetURL(v string) *GetServiceConnectionOutput {
	s.URL = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetServiceConnectionOutput) SetUpdateTime(v string) *GetServiceConnectionOutput {
	s.UpdateTime = &v
	return s
}
