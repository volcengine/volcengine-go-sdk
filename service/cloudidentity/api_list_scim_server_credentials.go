// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListSCIMServerCredentialsCommon = "ListSCIMServerCredentials"

// ListSCIMServerCredentialsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSCIMServerCredentialsCommon operation. The "output" return
// value will be populated with the ListSCIMServerCredentialsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSCIMServerCredentialsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSCIMServerCredentialsCommon Send returns without error.
//
// See ListSCIMServerCredentialsCommon for more information on using the ListSCIMServerCredentialsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListSCIMServerCredentialsCommonRequest method.
//    req, resp := client.ListSCIMServerCredentialsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) ListSCIMServerCredentialsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListSCIMServerCredentialsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSCIMServerCredentialsCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation ListSCIMServerCredentialsCommon for usage and error information.
func (c *CLOUDIDENTITY) ListSCIMServerCredentialsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListSCIMServerCredentialsCommonRequest(input)
	return out, req.Send()
}

// ListSCIMServerCredentialsCommonWithContext is the same as ListSCIMServerCredentialsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListSCIMServerCredentialsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) ListSCIMServerCredentialsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListSCIMServerCredentialsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListSCIMServerCredentials = "ListSCIMServerCredentials"

// ListSCIMServerCredentialsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListSCIMServerCredentials operation. The "output" return
// value will be populated with the ListSCIMServerCredentialsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListSCIMServerCredentialsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListSCIMServerCredentialsCommon Send returns without error.
//
// See ListSCIMServerCredentials for more information on using the ListSCIMServerCredentials
// API call, and error handling.
//
//    // Example sending a request using the ListSCIMServerCredentialsRequest method.
//    req, resp := client.ListSCIMServerCredentialsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) ListSCIMServerCredentialsRequest(input *ListSCIMServerCredentialsInput) (req *request.Request, output *ListSCIMServerCredentialsOutput) {
	op := &request.Operation{
		Name:       opListSCIMServerCredentials,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListSCIMServerCredentialsInput{}
	}

	output = &ListSCIMServerCredentialsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListSCIMServerCredentials API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation ListSCIMServerCredentials for usage and error information.
func (c *CLOUDIDENTITY) ListSCIMServerCredentials(input *ListSCIMServerCredentialsInput) (*ListSCIMServerCredentialsOutput, error) {
	req, out := c.ListSCIMServerCredentialsRequest(input)
	return out, req.Send()
}

// ListSCIMServerCredentialsWithContext is the same as ListSCIMServerCredentials with the addition of
// the ability to pass a context and additional request options.
//
// See ListSCIMServerCredentials for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) ListSCIMServerCredentialsWithContext(ctx volcengine.Context, input *ListSCIMServerCredentialsInput, opts ...request.Option) (*ListSCIMServerCredentialsOutput, error) {
	req, out := c.ListSCIMServerCredentialsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListSCIMServerCredentialsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ListSCIMServerCredentialsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSCIMServerCredentialsInput) GoString() string {
	return s.String()
}

type ListSCIMServerCredentialsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	SCIMServerCredentials []*SCIMServerCredentialForListSCIMServerCredentialsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListSCIMServerCredentialsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListSCIMServerCredentialsOutput) GoString() string {
	return s.String()
}

// SetSCIMServerCredentials sets the SCIMServerCredentials field's value.
func (s *ListSCIMServerCredentialsOutput) SetSCIMServerCredentials(v []*SCIMServerCredentialForListSCIMServerCredentialsOutput) *ListSCIMServerCredentialsOutput {
	s.SCIMServerCredentials = v
	return s
}

type SCIMServerCredentialForListSCIMServerCredentialsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedTime *string `type:"string" json:",omitempty"`

	CredentialId *string `type:"string" json:",omitempty"`

	CredentialType *string `type:"string" json:",omitempty"`

	ExpireTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SCIMServerCredentialForListSCIMServerCredentialsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SCIMServerCredentialForListSCIMServerCredentialsOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *SCIMServerCredentialForListSCIMServerCredentialsOutput) SetCreatedTime(v string) *SCIMServerCredentialForListSCIMServerCredentialsOutput {
	s.CreatedTime = &v
	return s
}

// SetCredentialId sets the CredentialId field's value.
func (s *SCIMServerCredentialForListSCIMServerCredentialsOutput) SetCredentialId(v string) *SCIMServerCredentialForListSCIMServerCredentialsOutput {
	s.CredentialId = &v
	return s
}

// SetCredentialType sets the CredentialType field's value.
func (s *SCIMServerCredentialForListSCIMServerCredentialsOutput) SetCredentialType(v string) *SCIMServerCredentialForListSCIMServerCredentialsOutput {
	s.CredentialType = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *SCIMServerCredentialForListSCIMServerCredentialsOutput) SetExpireTime(v string) *SCIMServerCredentialForListSCIMServerCredentialsOutput {
	s.ExpireTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *SCIMServerCredentialForListSCIMServerCredentialsOutput) SetStatus(v string) *SCIMServerCredentialForListSCIMServerCredentialsOutput {
	s.Status = &v
	return s
}
