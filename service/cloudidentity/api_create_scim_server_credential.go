// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package cloudidentity

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateSCIMServerCredentialCommon = "CreateSCIMServerCredential"

// CreateSCIMServerCredentialCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateSCIMServerCredentialCommon operation. The "output" return
// value will be populated with the CreateSCIMServerCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSCIMServerCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSCIMServerCredentialCommon Send returns without error.
//
// See CreateSCIMServerCredentialCommon for more information on using the CreateSCIMServerCredentialCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateSCIMServerCredentialCommonRequest method.
//    req, resp := client.CreateSCIMServerCredentialCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) CreateSCIMServerCredentialCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateSCIMServerCredentialCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateSCIMServerCredentialCommon API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation CreateSCIMServerCredentialCommon for usage and error information.
func (c *CLOUDIDENTITY) CreateSCIMServerCredentialCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateSCIMServerCredentialCommonRequest(input)
	return out, req.Send()
}

// CreateSCIMServerCredentialCommonWithContext is the same as CreateSCIMServerCredentialCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSCIMServerCredentialCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) CreateSCIMServerCredentialCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateSCIMServerCredentialCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateSCIMServerCredential = "CreateSCIMServerCredential"

// CreateSCIMServerCredentialRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateSCIMServerCredential operation. The "output" return
// value will be populated with the CreateSCIMServerCredentialCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateSCIMServerCredentialCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateSCIMServerCredentialCommon Send returns without error.
//
// See CreateSCIMServerCredential for more information on using the CreateSCIMServerCredential
// API call, and error handling.
//
//    // Example sending a request using the CreateSCIMServerCredentialRequest method.
//    req, resp := client.CreateSCIMServerCredentialRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLOUDIDENTITY) CreateSCIMServerCredentialRequest(input *CreateSCIMServerCredentialInput) (req *request.Request, output *CreateSCIMServerCredentialOutput) {
	op := &request.Operation{
		Name:       opCreateSCIMServerCredential,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateSCIMServerCredentialInput{}
	}

	output = &CreateSCIMServerCredentialOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateSCIMServerCredential API operation for CLOUDIDENTITY.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLOUDIDENTITY's
// API operation CreateSCIMServerCredential for usage and error information.
func (c *CLOUDIDENTITY) CreateSCIMServerCredential(input *CreateSCIMServerCredentialInput) (*CreateSCIMServerCredentialOutput, error) {
	req, out := c.CreateSCIMServerCredentialRequest(input)
	return out, req.Send()
}

// CreateSCIMServerCredentialWithContext is the same as CreateSCIMServerCredential with the addition of
// the ability to pass a context and additional request options.
//
// See CreateSCIMServerCredential for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLOUDIDENTITY) CreateSCIMServerCredentialWithContext(ctx volcengine.Context, input *CreateSCIMServerCredentialInput, opts ...request.Option) (*CreateSCIMServerCredentialOutput, error) {
	req, out := c.CreateSCIMServerCredentialRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateSCIMServerCredentialInput struct {
	_ struct{} `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CreateSCIMServerCredentialInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSCIMServerCredentialInput) GoString() string {
	return s.String()
}

type CreateSCIMServerCredentialOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedTime *string `type:"string" json:",omitempty"`

	CredentialId *string `type:"string" json:",omitempty"`

	CredentialSecret *string `type:"string" json:",omitempty"`

	CredentialType *string `type:"string" json:",omitempty"`

	ExpireTime *string `type:"string" json:",omitempty"`

	Status *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateSCIMServerCredentialOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateSCIMServerCredentialOutput) GoString() string {
	return s.String()
}

// SetCreatedTime sets the CreatedTime field's value.
func (s *CreateSCIMServerCredentialOutput) SetCreatedTime(v string) *CreateSCIMServerCredentialOutput {
	s.CreatedTime = &v
	return s
}

// SetCredentialId sets the CredentialId field's value.
func (s *CreateSCIMServerCredentialOutput) SetCredentialId(v string) *CreateSCIMServerCredentialOutput {
	s.CredentialId = &v
	return s
}

// SetCredentialSecret sets the CredentialSecret field's value.
func (s *CreateSCIMServerCredentialOutput) SetCredentialSecret(v string) *CreateSCIMServerCredentialOutput {
	s.CredentialSecret = &v
	return s
}

// SetCredentialType sets the CredentialType field's value.
func (s *CreateSCIMServerCredentialOutput) SetCredentialType(v string) *CreateSCIMServerCredentialOutput {
	s.CredentialType = &v
	return s
}

// SetExpireTime sets the ExpireTime field's value.
func (s *CreateSCIMServerCredentialOutput) SetExpireTime(v string) *CreateSCIMServerCredentialOutput {
	s.ExpireTime = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CreateSCIMServerCredentialOutput) SetStatus(v string) *CreateSCIMServerCredentialOutput {
	s.Status = &v
	return s
}
