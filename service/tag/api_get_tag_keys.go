// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package tag

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTagKeysCommon = "GetTagKeys"

// GetTagKeysCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTagKeysCommon operation. The "output" return
// value will be populated with the GetTagKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTagKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTagKeysCommon Send returns without error.
//
// See GetTagKeysCommon for more information on using the GetTagKeysCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTagKeysCommonRequest method.
//    req, resp := client.GetTagKeysCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TAG) GetTagKeysCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTagKeysCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetTagKeysCommon API operation for TAG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TAG's
// API operation GetTagKeysCommon for usage and error information.
func (c *TAG) GetTagKeysCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTagKeysCommonRequest(input)
	return out, req.Send()
}

// GetTagKeysCommonWithContext is the same as GetTagKeysCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTagKeysCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TAG) GetTagKeysCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTagKeysCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTagKeys = "GetTagKeys"

// GetTagKeysRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTagKeys operation. The "output" return
// value will be populated with the GetTagKeysCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTagKeysCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTagKeysCommon Send returns without error.
//
// See GetTagKeys for more information on using the GetTagKeys
// API call, and error handling.
//
//    // Example sending a request using the GetTagKeysRequest method.
//    req, resp := client.GetTagKeysRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TAG) GetTagKeysRequest(input *GetTagKeysInput) (req *request.Request, output *GetTagKeysOutput) {
	op := &request.Operation{
		Name:       opGetTagKeys,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTagKeysInput{}
	}

	output = &GetTagKeysOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetTagKeys API operation for TAG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TAG's
// API operation GetTagKeys for usage and error information.
func (c *TAG) GetTagKeys(input *GetTagKeysInput) (*GetTagKeysOutput, error) {
	req, out := c.GetTagKeysRequest(input)
	return out, req.Send()
}

// GetTagKeysWithContext is the same as GetTagKeys with the addition of
// the ability to pass a context and additional request options.
//
// See GetTagKeys for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TAG) GetTagKeysWithContext(ctx volcengine.Context, input *GetTagKeysInput, opts ...request.Option) (*GetTagKeysOutput, error) {
	req, out := c.GetTagKeysRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTagKeysInput struct {
	_ struct{} `type:"structure"`

	MatchType *string `type:"string" enum:"EnumOfMatchTypeForGetTagKeysInput"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	TagKey *string `type:"string"`

	TagType *string `type:"string"`
}

// String returns the string representation
func (s GetTagKeysInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTagKeysInput) GoString() string {
	return s.String()
}

// SetMatchType sets the MatchType field's value.
func (s *GetTagKeysInput) SetMatchType(v string) *GetTagKeysInput {
	s.MatchType = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *GetTagKeysInput) SetMaxResults(v int32) *GetTagKeysInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *GetTagKeysInput) SetNextToken(v string) *GetTagKeysInput {
	s.NextToken = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *GetTagKeysInput) SetTagKey(v string) *GetTagKeysInput {
	s.TagKey = &v
	return s
}

// SetTagType sets the TagType field's value.
func (s *GetTagKeysInput) SetTagType(v string) *GetTagKeysInput {
	s.TagType = &v
	return s
}

type GetTagKeysOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	TagKeys []*TagKeyForGetTagKeysOutput `type:"list"`
}

// String returns the string representation
func (s GetTagKeysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTagKeysOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *GetTagKeysOutput) SetNextToken(v string) *GetTagKeysOutput {
	s.NextToken = &v
	return s
}

// SetTagKeys sets the TagKeys field's value.
func (s *GetTagKeysOutput) SetTagKeys(v []*TagKeyForGetTagKeysOutput) *GetTagKeysOutput {
	s.TagKeys = v
	return s
}

type TagKeyForGetTagKeysOutput struct {
	_ struct{} `type:"structure"`

	Category *string `type:"string"`

	TagKey *string `type:"string"`
}

// String returns the string representation
func (s TagKeyForGetTagKeysOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagKeyForGetTagKeysOutput) GoString() string {
	return s.String()
}

// SetCategory sets the Category field's value.
func (s *TagKeyForGetTagKeysOutput) SetCategory(v string) *TagKeyForGetTagKeysOutput {
	s.Category = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *TagKeyForGetTagKeysOutput) SetTagKey(v string) *TagKeyForGetTagKeysOutput {
	s.TagKey = &v
	return s
}

const (
	// EnumOfMatchTypeForGetTagKeysInputPrefix is a EnumOfMatchTypeForGetTagKeysInput enum value
	EnumOfMatchTypeForGetTagKeysInputPrefix = "prefix"

	// EnumOfMatchTypeForGetTagKeysInputEquals is a EnumOfMatchTypeForGetTagKeysInput enum value
	EnumOfMatchTypeForGetTagKeysInputEquals = "equals"

	// EnumOfMatchTypeForGetTagKeysInputContain is a EnumOfMatchTypeForGetTagKeysInput enum value
	EnumOfMatchTypeForGetTagKeysInputContain = "contain"
)
