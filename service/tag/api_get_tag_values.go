// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package tag

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetTagValuesCommon = "GetTagValues"

// GetTagValuesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTagValuesCommon operation. The "output" return
// value will be populated with the GetTagValuesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTagValuesCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTagValuesCommon Send returns without error.
//
// See GetTagValuesCommon for more information on using the GetTagValuesCommon
// API call, and error handling.
//
//    // Example sending a request using the GetTagValuesCommonRequest method.
//    req, resp := client.GetTagValuesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TAG) GetTagValuesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetTagValuesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// GetTagValuesCommon API operation for TAG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TAG's
// API operation GetTagValuesCommon for usage and error information.
func (c *TAG) GetTagValuesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetTagValuesCommonRequest(input)
	return out, req.Send()
}

// GetTagValuesCommonWithContext is the same as GetTagValuesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetTagValuesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TAG) GetTagValuesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetTagValuesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetTagValues = "GetTagValues"

// GetTagValuesRequest generates a "volcengine/request.Request" representing the
// client's request for the GetTagValues operation. The "output" return
// value will be populated with the GetTagValuesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetTagValuesCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetTagValuesCommon Send returns without error.
//
// See GetTagValues for more information on using the GetTagValues
// API call, and error handling.
//
//    // Example sending a request using the GetTagValuesRequest method.
//    req, resp := client.GetTagValuesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *TAG) GetTagValuesRequest(input *GetTagValuesInput) (req *request.Request, output *GetTagValuesOutput) {
	op := &request.Operation{
		Name:       opGetTagValues,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetTagValuesInput{}
	}

	output = &GetTagValuesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// GetTagValues API operation for TAG.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for TAG's
// API operation GetTagValues for usage and error information.
func (c *TAG) GetTagValues(input *GetTagValuesInput) (*GetTagValuesOutput, error) {
	req, out := c.GetTagValuesRequest(input)
	return out, req.Send()
}

// GetTagValuesWithContext is the same as GetTagValues with the addition of
// the ability to pass a context and additional request options.
//
// See GetTagValues for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *TAG) GetTagValuesWithContext(ctx volcengine.Context, input *GetTagValuesInput, opts ...request.Option) (*GetTagValuesOutput, error) {
	req, out := c.GetTagValuesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetTagValuesInput struct {
	_ struct{} `type:"structure"`

	MatchType *string `type:"string" enum:"EnumOfMatchTypeForGetTagValuesInput"`

	MaxResults *int32 `type:"int32"`

	NextToken *string `type:"string"`

	// TagKeys is a required field
	TagKeys []*string `type:"list" required:"true"`

	TagValue *string `type:"string"`
}

// String returns the string representation
func (s GetTagValuesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTagValuesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetTagValuesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetTagValuesInput"}
	if s.TagKeys == nil {
		invalidParams.Add(request.NewErrParamRequired("TagKeys"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMatchType sets the MatchType field's value.
func (s *GetTagValuesInput) SetMatchType(v string) *GetTagValuesInput {
	s.MatchType = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *GetTagValuesInput) SetMaxResults(v int32) *GetTagValuesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *GetTagValuesInput) SetNextToken(v string) *GetTagValuesInput {
	s.NextToken = &v
	return s
}

// SetTagKeys sets the TagKeys field's value.
func (s *GetTagValuesInput) SetTagKeys(v []*string) *GetTagValuesInput {
	s.TagKeys = v
	return s
}

// SetTagValue sets the TagValue field's value.
func (s *GetTagValuesInput) SetTagValue(v string) *GetTagValuesInput {
	s.TagValue = &v
	return s
}

type GetTagValuesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	Tags []*TagForGetTagValuesOutput `type:"list"`
}

// String returns the string representation
func (s GetTagValuesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetTagValuesOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *GetTagValuesOutput) SetNextToken(v string) *GetTagValuesOutput {
	s.NextToken = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *GetTagValuesOutput) SetTags(v []*TagForGetTagValuesOutput) *GetTagValuesOutput {
	s.Tags = v
	return s
}

type TagForGetTagValuesOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Type *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForGetTagValuesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForGetTagValuesOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForGetTagValuesOutput) SetKey(v string) *TagForGetTagValuesOutput {
	s.Key = &v
	return s
}

// SetType sets the Type field's value.
func (s *TagForGetTagValuesOutput) SetType(v string) *TagForGetTagValuesOutput {
	s.Type = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForGetTagValuesOutput) SetValue(v string) *TagForGetTagValuesOutput {
	s.Value = &v
	return s
}

const (
	// EnumOfMatchTypeForGetTagValuesInputPrefix is a EnumOfMatchTypeForGetTagValuesInput enum value
	EnumOfMatchTypeForGetTagValuesInputPrefix = "prefix"

	// EnumOfMatchTypeForGetTagValuesInputEquals is a EnumOfMatchTypeForGetTagValuesInput enum value
	EnumOfMatchTypeForGetTagValuesInputEquals = "equals"

	// EnumOfMatchTypeForGetTagValuesInputContain is a EnumOfMatchTypeForGetTagValuesInput enum value
	EnumOfMatchTypeForGetTagValuesInputContain = "contain"
)
