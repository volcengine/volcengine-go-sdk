// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package escloud

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeIpAllowListCommon = "DescribeIpAllowList"

// DescribeIpAllowListCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeIpAllowListCommon operation. The "output" return
// value will be populated with the DescribeIpAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpAllowListCommon Send returns without error.
//
// See DescribeIpAllowListCommon for more information on using the DescribeIpAllowListCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpAllowListCommonRequest method.
//    req, resp := client.DescribeIpAllowListCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ESCLOUD) DescribeIpAllowListCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeIpAllowListCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeIpAllowListCommon API operation for ESCLOUD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ESCLOUD's
// API operation DescribeIpAllowListCommon for usage and error information.
func (c *ESCLOUD) DescribeIpAllowListCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeIpAllowListCommonRequest(input)
	return out, req.Send()
}

// DescribeIpAllowListCommonWithContext is the same as DescribeIpAllowListCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpAllowListCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ESCLOUD) DescribeIpAllowListCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeIpAllowListCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeIpAllowList = "DescribeIpAllowList"

// DescribeIpAllowListRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeIpAllowList operation. The "output" return
// value will be populated with the DescribeIpAllowListCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeIpAllowListCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeIpAllowListCommon Send returns without error.
//
// See DescribeIpAllowList for more information on using the DescribeIpAllowList
// API call, and error handling.
//
//    // Example sending a request using the DescribeIpAllowListRequest method.
//    req, resp := client.DescribeIpAllowListRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ESCLOUD) DescribeIpAllowListRequest(input *DescribeIpAllowListInput) (req *request.Request, output *DescribeIpAllowListOutput) {
	op := &request.Operation{
		Name:       opDescribeIpAllowList,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeIpAllowListInput{}
	}

	output = &DescribeIpAllowListOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DescribeIpAllowList API operation for ESCLOUD.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ESCLOUD's
// API operation DescribeIpAllowList for usage and error information.
func (c *ESCLOUD) DescribeIpAllowList(input *DescribeIpAllowListInput) (*DescribeIpAllowListOutput, error) {
	req, out := c.DescribeIpAllowListRequest(input)
	return out, req.Send()
}

// DescribeIpAllowListWithContext is the same as DescribeIpAllowList with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeIpAllowList for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ESCLOUD) DescribeIpAllowListWithContext(ctx volcengine.Context, input *DescribeIpAllowListInput, opts ...request.Option) (*DescribeIpAllowListOutput, error) {
	req, out := c.DescribeIpAllowListRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeIpAllowListInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InstanceId is a required field
	InstanceId *string `type:"string" json:",omitempty" required:"true"`

	Type []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeIpAllowListInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpAllowListInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeIpAllowListInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeIpAllowListInput"}
	if s.InstanceId == nil {
		invalidParams.Add(request.NewErrParamRequired("InstanceId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInstanceId sets the InstanceId field's value.
func (s *DescribeIpAllowListInput) SetInstanceId(v string) *DescribeIpAllowListInput {
	s.InstanceId = &v
	return s
}

// SetType sets the Type field's value.
func (s *DescribeIpAllowListInput) SetType(v []*string) *DescribeIpAllowListInput {
	s.Type = v
	return s
}

type DescribeIpAllowListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	IpAllowList []*IpAllowListForDescribeIpAllowListOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s DescribeIpAllowListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeIpAllowListOutput) GoString() string {
	return s.String()
}

// SetIpAllowList sets the IpAllowList field's value.
func (s *DescribeIpAllowListOutput) SetIpAllowList(v []*IpAllowListForDescribeIpAllowListOutput) *DescribeIpAllowListOutput {
	s.IpAllowList = v
	return s
}

type GroupForDescribeIpAllowListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowList *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GroupForDescribeIpAllowListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GroupForDescribeIpAllowListOutput) GoString() string {
	return s.String()
}

// SetAllowList sets the AllowList field's value.
func (s *GroupForDescribeIpAllowListOutput) SetAllowList(v string) *GroupForDescribeIpAllowListOutput {
	s.AllowList = &v
	return s
}

// SetName sets the Name field's value.
func (s *GroupForDescribeIpAllowListOutput) SetName(v string) *GroupForDescribeIpAllowListOutput {
	s.Name = &v
	return s
}

type IpAllowListForDescribeIpAllowListOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowList *string `type:"string" json:",omitempty"`

	Groups []*GroupForDescribeIpAllowListOutput `type:"list" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s IpAllowListForDescribeIpAllowListOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IpAllowListForDescribeIpAllowListOutput) GoString() string {
	return s.String()
}

// SetAllowList sets the AllowList field's value.
func (s *IpAllowListForDescribeIpAllowListOutput) SetAllowList(v string) *IpAllowListForDescribeIpAllowListOutput {
	s.AllowList = &v
	return s
}

// SetGroups sets the Groups field's value.
func (s *IpAllowListForDescribeIpAllowListOutput) SetGroups(v []*GroupForDescribeIpAllowListOutput) *IpAllowListForDescribeIpAllowListOutput {
	s.Groups = v
	return s
}

// SetType sets the Type field's value.
func (s *IpAllowListForDescribeIpAllowListOutput) SetType(v string) *IpAllowListForDescribeIpAllowListOutput {
	s.Type = &v
	return s
}
