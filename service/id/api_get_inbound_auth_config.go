// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetInboundAuthConfigCommon = "GetInboundAuthConfig"

// GetInboundAuthConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetInboundAuthConfigCommon operation. The "output" return
// value will be populated with the GetInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetInboundAuthConfigCommon Send returns without error.
//
// See GetInboundAuthConfigCommon for more information on using the GetInboundAuthConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the GetInboundAuthConfigCommonRequest method.
//    req, resp := client.GetInboundAuthConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetInboundAuthConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetInboundAuthConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetInboundAuthConfigCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetInboundAuthConfigCommon for usage and error information.
func (c *ID) GetInboundAuthConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetInboundAuthConfigCommonRequest(input)
	return out, req.Send()
}

// GetInboundAuthConfigCommonWithContext is the same as GetInboundAuthConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetInboundAuthConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetInboundAuthConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetInboundAuthConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetInboundAuthConfig = "GetInboundAuthConfig"

// GetInboundAuthConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the GetInboundAuthConfig operation. The "output" return
// value will be populated with the GetInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetInboundAuthConfigCommon Send returns without error.
//
// See GetInboundAuthConfig for more information on using the GetInboundAuthConfig
// API call, and error handling.
//
//    // Example sending a request using the GetInboundAuthConfigRequest method.
//    req, resp := client.GetInboundAuthConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetInboundAuthConfigRequest(input *GetInboundAuthConfigInput) (req *request.Request, output *GetInboundAuthConfigOutput) {
	op := &request.Operation{
		Name:       opGetInboundAuthConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetInboundAuthConfigInput{}
	}

	output = &GetInboundAuthConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetInboundAuthConfig API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetInboundAuthConfig for usage and error information.
func (c *ID) GetInboundAuthConfig(input *GetInboundAuthConfigInput) (*GetInboundAuthConfigOutput, error) {
	req, out := c.GetInboundAuthConfigRequest(input)
	return out, req.Send()
}

// GetInboundAuthConfigWithContext is the same as GetInboundAuthConfig with the addition of
// the ability to pass a context and additional request options.
//
// See GetInboundAuthConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetInboundAuthConfigWithContext(ctx volcengine.Context, input *GetInboundAuthConfigInput, opts ...request.Option) (*GetInboundAuthConfigOutput, error) {
	req, out := c.GetInboundAuthConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyAuthConfigForGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForGetInboundAuthConfigOutput `type:"list" json:",omitempty"`

	ApiKeyName *string `type:"string" json:",omitempty"`

	ExpiryTimestamp *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyAuthConfigForGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyAuthConfigForGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetApiKey sets the ApiKey field's value.
func (s *ApiKeyAuthConfigForGetInboundAuthConfigOutput) SetApiKey(v string) *ApiKeyAuthConfigForGetInboundAuthConfigOutput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *ApiKeyAuthConfigForGetInboundAuthConfigOutput) SetApiKeyMetadata(v []*ApiKeyMetadataForGetInboundAuthConfigOutput) *ApiKeyAuthConfigForGetInboundAuthConfigOutput {
	s.ApiKeyMetadata = v
	return s
}

// SetApiKeyName sets the ApiKeyName field's value.
func (s *ApiKeyAuthConfigForGetInboundAuthConfigOutput) SetApiKeyName(v string) *ApiKeyAuthConfigForGetInboundAuthConfigOutput {
	s.ApiKeyName = &v
	return s
}

// SetExpiryTimestamp sets the ExpiryTimestamp field's value.
func (s *ApiKeyAuthConfigForGetInboundAuthConfigOutput) SetExpiryTimestamp(v int64) *ApiKeyAuthConfigForGetInboundAuthConfigOutput {
	s.ExpiryTimestamp = &v
	return s
}

type ApiKeyMetadataForGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForGetInboundAuthConfigOutput) SetLocation(v string) *ApiKeyMetadataForGetInboundAuthConfigOutput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForGetInboundAuthConfigOutput) SetParameterName(v string) *ApiKeyMetadataForGetInboundAuthConfigOutput {
	s.ParameterName = &v
	return s
}

type GetInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// InboundAuthConfigId is a required field
	InboundAuthConfigId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInboundAuthConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetInboundAuthConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetInboundAuthConfigInput"}
	if s.InboundAuthConfigId == nil {
		invalidParams.Add(request.NewErrParamRequired("InboundAuthConfigId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetInboundAuthConfigId sets the InboundAuthConfigId field's value.
func (s *GetInboundAuthConfigInput) SetInboundAuthConfigId(v string) *GetInboundAuthConfigInput {
	s.InboundAuthConfigId = &v
	return s
}

type GetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ApiKeyAuthConfigs []*ApiKeyAuthConfigForGetInboundAuthConfigOutput `type:"list" json:",omitempty"`

	AuthType *string `type:"string" json:",omitempty"`

	ConfigName *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	InboundAuthConfigId *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	JwtAuthConfig *JwtAuthConfigForGetInboundAuthConfigOutput `type:"structure" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetApiKeyAuthConfigs sets the ApiKeyAuthConfigs field's value.
func (s *GetInboundAuthConfigOutput) SetApiKeyAuthConfigs(v []*ApiKeyAuthConfigForGetInboundAuthConfigOutput) *GetInboundAuthConfigOutput {
	s.ApiKeyAuthConfigs = v
	return s
}

// SetAuthType sets the AuthType field's value.
func (s *GetInboundAuthConfigOutput) SetAuthType(v string) *GetInboundAuthConfigOutput {
	s.AuthType = &v
	return s
}

// SetConfigName sets the ConfigName field's value.
func (s *GetInboundAuthConfigOutput) SetConfigName(v string) *GetInboundAuthConfigOutput {
	s.ConfigName = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *GetInboundAuthConfigOutput) SetCreatedAt(v string) *GetInboundAuthConfigOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetInboundAuthConfigOutput) SetDescription(v string) *GetInboundAuthConfigOutput {
	s.Description = &v
	return s
}

// SetInboundAuthConfigId sets the InboundAuthConfigId field's value.
func (s *GetInboundAuthConfigOutput) SetInboundAuthConfigId(v string) *GetInboundAuthConfigOutput {
	s.InboundAuthConfigId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *GetInboundAuthConfigOutput) SetInstanceId(v string) *GetInboundAuthConfigOutput {
	s.InstanceId = &v
	return s
}

// SetJwtAuthConfig sets the JwtAuthConfig field's value.
func (s *GetInboundAuthConfigOutput) SetJwtAuthConfig(v *JwtAuthConfigForGetInboundAuthConfigOutput) *GetInboundAuthConfigOutput {
	s.JwtAuthConfig = v
	return s
}

// SetTrn sets the Trn field's value.
func (s *GetInboundAuthConfigOutput) SetTrn(v string) *GetInboundAuthConfigOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *GetInboundAuthConfigOutput) SetUpdatedAt(v string) *GetInboundAuthConfigOutput {
	s.UpdatedAt = &v
	return s
}

type JwtAuthConfigForGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedAudiences []*string `type:"list" json:",omitempty"`

	AllowedClients []*string `type:"list" json:",omitempty"`

	DiscoveryUrl *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s JwtAuthConfigForGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s JwtAuthConfigForGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetAllowedAudiences sets the AllowedAudiences field's value.
func (s *JwtAuthConfigForGetInboundAuthConfigOutput) SetAllowedAudiences(v []*string) *JwtAuthConfigForGetInboundAuthConfigOutput {
	s.AllowedAudiences = v
	return s
}

// SetAllowedClients sets the AllowedClients field's value.
func (s *JwtAuthConfigForGetInboundAuthConfigOutput) SetAllowedClients(v []*string) *JwtAuthConfigForGetInboundAuthConfigOutput {
	s.AllowedClients = v
	return s
}

// SetDiscoveryUrl sets the DiscoveryUrl field's value.
func (s *JwtAuthConfigForGetInboundAuthConfigOutput) SetDiscoveryUrl(v string) *JwtAuthConfigForGetInboundAuthConfigOutput {
	s.DiscoveryUrl = &v
	return s
}
