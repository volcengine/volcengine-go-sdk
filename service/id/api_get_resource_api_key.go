// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetResourceApiKeyCommon = "GetResourceApiKey"

// GetResourceApiKeyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetResourceApiKeyCommon operation. The "output" return
// value will be populated with the GetResourceApiKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetResourceApiKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetResourceApiKeyCommon Send returns without error.
//
// See GetResourceApiKeyCommon for more information on using the GetResourceApiKeyCommon
// API call, and error handling.
//
//    // Example sending a request using the GetResourceApiKeyCommonRequest method.
//    req, resp := client.GetResourceApiKeyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetResourceApiKeyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetResourceApiKeyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetResourceApiKeyCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetResourceApiKeyCommon for usage and error information.
func (c *ID) GetResourceApiKeyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetResourceApiKeyCommonRequest(input)
	return out, req.Send()
}

// GetResourceApiKeyCommonWithContext is the same as GetResourceApiKeyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetResourceApiKeyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetResourceApiKeyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetResourceApiKeyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetResourceApiKey = "GetResourceApiKey"

// GetResourceApiKeyRequest generates a "volcengine/request.Request" representing the
// client's request for the GetResourceApiKey operation. The "output" return
// value will be populated with the GetResourceApiKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetResourceApiKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetResourceApiKeyCommon Send returns without error.
//
// See GetResourceApiKey for more information on using the GetResourceApiKey
// API call, and error handling.
//
//    // Example sending a request using the GetResourceApiKeyRequest method.
//    req, resp := client.GetResourceApiKeyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetResourceApiKeyRequest(input *GetResourceApiKeyInput) (req *request.Request, output *GetResourceApiKeyOutput) {
	op := &request.Operation{
		Name:       opGetResourceApiKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetResourceApiKeyInput{}
	}

	output = &GetResourceApiKeyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetResourceApiKey API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetResourceApiKey for usage and error information.
func (c *ID) GetResourceApiKey(input *GetResourceApiKeyInput) (*GetResourceApiKeyOutput, error) {
	req, out := c.GetResourceApiKeyRequest(input)
	return out, req.Send()
}

// GetResourceApiKeyWithContext is the same as GetResourceApiKey with the addition of
// the ability to pass a context and additional request options.
//
// See GetResourceApiKey for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetResourceApiKeyWithContext(ctx volcengine.Context, input *GetResourceApiKeyInput, opts ...request.Option) (*GetResourceApiKeyOutput, error) {
	req, out := c.GetResourceApiKeyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyMetadataForGetResourceApiKeyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForGetResourceApiKeyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForGetResourceApiKeyOutput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForGetResourceApiKeyOutput) SetLocation(v string) *ApiKeyMetadataForGetResourceApiKeyOutput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForGetResourceApiKeyOutput) SetParameterName(v string) *ApiKeyMetadataForGetResourceApiKeyOutput {
	s.ParameterName = &v
	return s
}

type GetResourceApiKeyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// IdentityToken is a required field
	IdentityToken *string `type:"string" json:",omitempty" required:"true"`

	PoolName *string `type:"string" json:",omitempty"`

	// ProviderName is a required field
	ProviderName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetResourceApiKeyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetResourceApiKeyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetResourceApiKeyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetResourceApiKeyInput"}
	if s.IdentityToken == nil {
		invalidParams.Add(request.NewErrParamRequired("IdentityToken"))
	}
	if s.ProviderName == nil {
		invalidParams.Add(request.NewErrParamRequired("ProviderName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetIdentityToken sets the IdentityToken field's value.
func (s *GetResourceApiKeyInput) SetIdentityToken(v string) *GetResourceApiKeyInput {
	s.IdentityToken = &v
	return s
}

// SetPoolName sets the PoolName field's value.
func (s *GetResourceApiKeyInput) SetPoolName(v string) *GetResourceApiKeyInput {
	s.PoolName = &v
	return s
}

// SetProviderName sets the ProviderName field's value.
func (s *GetResourceApiKeyInput) SetProviderName(v string) *GetResourceApiKeyInput {
	s.ProviderName = &v
	return s
}

type GetResourceApiKeyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForGetResourceApiKeyOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s GetResourceApiKeyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetResourceApiKeyOutput) GoString() string {
	return s.String()
}

// SetApiKey sets the ApiKey field's value.
func (s *GetResourceApiKeyOutput) SetApiKey(v string) *GetResourceApiKeyOutput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *GetResourceApiKeyOutput) SetApiKeyMetadata(v []*ApiKeyMetadataForGetResourceApiKeyOutput) *GetResourceApiKeyOutput {
	s.ApiKeyMetadata = v
	return s
}
