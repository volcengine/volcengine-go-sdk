// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateInboundAuthConfigCommon = "UpdateInboundAuthConfig"

// UpdateInboundAuthConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateInboundAuthConfigCommon operation. The "output" return
// value will be populated with the UpdateInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateInboundAuthConfigCommon Send returns without error.
//
// See UpdateInboundAuthConfigCommon for more information on using the UpdateInboundAuthConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateInboundAuthConfigCommonRequest method.
//    req, resp := client.UpdateInboundAuthConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateInboundAuthConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateInboundAuthConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateInboundAuthConfigCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateInboundAuthConfigCommon for usage and error information.
func (c *ID) UpdateInboundAuthConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateInboundAuthConfigCommonRequest(input)
	return out, req.Send()
}

// UpdateInboundAuthConfigCommonWithContext is the same as UpdateInboundAuthConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateInboundAuthConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateInboundAuthConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateInboundAuthConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateInboundAuthConfig = "UpdateInboundAuthConfig"

// UpdateInboundAuthConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateInboundAuthConfig operation. The "output" return
// value will be populated with the UpdateInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateInboundAuthConfigCommon Send returns without error.
//
// See UpdateInboundAuthConfig for more information on using the UpdateInboundAuthConfig
// API call, and error handling.
//
//    // Example sending a request using the UpdateInboundAuthConfigRequest method.
//    req, resp := client.UpdateInboundAuthConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateInboundAuthConfigRequest(input *UpdateInboundAuthConfigInput) (req *request.Request, output *UpdateInboundAuthConfigOutput) {
	op := &request.Operation{
		Name:       opUpdateInboundAuthConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateInboundAuthConfigInput{}
	}

	output = &UpdateInboundAuthConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateInboundAuthConfig API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateInboundAuthConfig for usage and error information.
func (c *ID) UpdateInboundAuthConfig(input *UpdateInboundAuthConfigInput) (*UpdateInboundAuthConfigOutput, error) {
	req, out := c.UpdateInboundAuthConfigRequest(input)
	return out, req.Send()
}

// UpdateInboundAuthConfigWithContext is the same as UpdateInboundAuthConfig with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateInboundAuthConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateInboundAuthConfigWithContext(ctx volcengine.Context, input *UpdateInboundAuthConfigInput, opts ...request.Option) (*UpdateInboundAuthConfigOutput, error) {
	req, out := c.UpdateInboundAuthConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyAuthConfigForUpdateInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForUpdateInboundAuthConfigInput `type:"list" json:",omitempty"`

	ApiKeyName *string `type:"string" json:",omitempty"`

	ExpiryTimestamp *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyAuthConfigForUpdateInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyAuthConfigForUpdateInboundAuthConfigInput) GoString() string {
	return s.String()
}

// SetApiKey sets the ApiKey field's value.
func (s *ApiKeyAuthConfigForUpdateInboundAuthConfigInput) SetApiKey(v string) *ApiKeyAuthConfigForUpdateInboundAuthConfigInput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *ApiKeyAuthConfigForUpdateInboundAuthConfigInput) SetApiKeyMetadata(v []*ApiKeyMetadataForUpdateInboundAuthConfigInput) *ApiKeyAuthConfigForUpdateInboundAuthConfigInput {
	s.ApiKeyMetadata = v
	return s
}

// SetApiKeyName sets the ApiKeyName field's value.
func (s *ApiKeyAuthConfigForUpdateInboundAuthConfigInput) SetApiKeyName(v string) *ApiKeyAuthConfigForUpdateInboundAuthConfigInput {
	s.ApiKeyName = &v
	return s
}

// SetExpiryTimestamp sets the ExpiryTimestamp field's value.
func (s *ApiKeyAuthConfigForUpdateInboundAuthConfigInput) SetExpiryTimestamp(v int64) *ApiKeyAuthConfigForUpdateInboundAuthConfigInput {
	s.ExpiryTimestamp = &v
	return s
}

type ApiKeyMetadataForUpdateInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForUpdateInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForUpdateInboundAuthConfigInput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForUpdateInboundAuthConfigInput) SetLocation(v string) *ApiKeyMetadataForUpdateInboundAuthConfigInput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForUpdateInboundAuthConfigInput) SetParameterName(v string) *ApiKeyMetadataForUpdateInboundAuthConfigInput {
	s.ParameterName = &v
	return s
}

type JwtAuthConfigForUpdateInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedAudiences []*string `type:"list" json:",omitempty"`

	AllowedClients []*string `type:"list" json:",omitempty"`

	DiscoveryUrl *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s JwtAuthConfigForUpdateInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s JwtAuthConfigForUpdateInboundAuthConfigInput) GoString() string {
	return s.String()
}

// SetAllowedAudiences sets the AllowedAudiences field's value.
func (s *JwtAuthConfigForUpdateInboundAuthConfigInput) SetAllowedAudiences(v []*string) *JwtAuthConfigForUpdateInboundAuthConfigInput {
	s.AllowedAudiences = v
	return s
}

// SetAllowedClients sets the AllowedClients field's value.
func (s *JwtAuthConfigForUpdateInboundAuthConfigInput) SetAllowedClients(v []*string) *JwtAuthConfigForUpdateInboundAuthConfigInput {
	s.AllowedClients = v
	return s
}

// SetDiscoveryUrl sets the DiscoveryUrl field's value.
func (s *JwtAuthConfigForUpdateInboundAuthConfigInput) SetDiscoveryUrl(v string) *JwtAuthConfigForUpdateInboundAuthConfigInput {
	s.DiscoveryUrl = &v
	return s
}

type UpdateInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKeyAuthConfig *ApiKeyAuthConfigForUpdateInboundAuthConfigInput `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// InboundAuthConfigId is a required field
	InboundAuthConfigId *string `type:"string" json:",omitempty" required:"true"`

	JwtAuthConfig *JwtAuthConfigForUpdateInboundAuthConfigInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s UpdateInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateInboundAuthConfigInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateInboundAuthConfigInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateInboundAuthConfigInput"}
	if s.InboundAuthConfigId == nil {
		invalidParams.Add(request.NewErrParamRequired("InboundAuthConfigId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApiKeyAuthConfig sets the ApiKeyAuthConfig field's value.
func (s *UpdateInboundAuthConfigInput) SetApiKeyAuthConfig(v *ApiKeyAuthConfigForUpdateInboundAuthConfigInput) *UpdateInboundAuthConfigInput {
	s.ApiKeyAuthConfig = v
	return s
}

// SetDescription sets the Description field's value.
func (s *UpdateInboundAuthConfigInput) SetDescription(v string) *UpdateInboundAuthConfigInput {
	s.Description = &v
	return s
}

// SetInboundAuthConfigId sets the InboundAuthConfigId field's value.
func (s *UpdateInboundAuthConfigInput) SetInboundAuthConfigId(v string) *UpdateInboundAuthConfigInput {
	s.InboundAuthConfigId = &v
	return s
}

// SetJwtAuthConfig sets the JwtAuthConfig field's value.
func (s *UpdateInboundAuthConfigInput) SetJwtAuthConfig(v *JwtAuthConfigForUpdateInboundAuthConfigInput) *UpdateInboundAuthConfigInput {
	s.JwtAuthConfig = v
	return s
}

type UpdateInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateInboundAuthConfigOutput) GoString() string {
	return s.String()
}
