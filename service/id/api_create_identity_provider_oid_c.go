// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateIdentityProviderOIDCCommon = "CreateIdentityProviderOIDC"

// CreateIdentityProviderOIDCCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateIdentityProviderOIDCCommon operation. The "output" return
// value will be populated with the CreateIdentityProviderOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateIdentityProviderOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateIdentityProviderOIDCCommon Send returns without error.
//
// See CreateIdentityProviderOIDCCommon for more information on using the CreateIdentityProviderOIDCCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateIdentityProviderOIDCCommonRequest method.
//    req, resp := client.CreateIdentityProviderOIDCCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateIdentityProviderOIDCCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateIdentityProviderOIDCCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateIdentityProviderOIDCCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateIdentityProviderOIDCCommon for usage and error information.
func (c *ID) CreateIdentityProviderOIDCCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateIdentityProviderOIDCCommonRequest(input)
	return out, req.Send()
}

// CreateIdentityProviderOIDCCommonWithContext is the same as CreateIdentityProviderOIDCCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateIdentityProviderOIDCCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateIdentityProviderOIDCCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateIdentityProviderOIDCCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateIdentityProviderOIDC = "CreateIdentityProviderOIDC"

// CreateIdentityProviderOIDCRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateIdentityProviderOIDC operation. The "output" return
// value will be populated with the CreateIdentityProviderOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateIdentityProviderOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateIdentityProviderOIDCCommon Send returns without error.
//
// See CreateIdentityProviderOIDC for more information on using the CreateIdentityProviderOIDC
// API call, and error handling.
//
//    // Example sending a request using the CreateIdentityProviderOIDCRequest method.
//    req, resp := client.CreateIdentityProviderOIDCRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateIdentityProviderOIDCRequest(input *CreateIdentityProviderOIDCInput) (req *request.Request, output *CreateIdentityProviderOIDCOutput) {
	op := &request.Operation{
		Name:       opCreateIdentityProviderOIDC,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateIdentityProviderOIDCInput{}
	}

	output = &CreateIdentityProviderOIDCOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateIdentityProviderOIDC API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateIdentityProviderOIDC for usage and error information.
func (c *ID) CreateIdentityProviderOIDC(input *CreateIdentityProviderOIDCInput) (*CreateIdentityProviderOIDCOutput, error) {
	req, out := c.CreateIdentityProviderOIDCRequest(input)
	return out, req.Send()
}

// CreateIdentityProviderOIDCWithContext is the same as CreateIdentityProviderOIDC with the addition of
// the ability to pass a context and additional request options.
//
// See CreateIdentityProviderOIDC for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateIdentityProviderOIDCWithContext(ctx volcengine.Context, input *CreateIdentityProviderOIDCInput, opts ...request.Option) (*CreateIdentityProviderOIDCOutput, error) {
	req, out := c.CreateIdentityProviderOIDCRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateIdentityProviderOIDCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClientId is a required field
	ClientId *string `type:"string" json:",omitempty" required:"true"`

	// ClientSecret is a required field
	ClientSecret *string `type:"string" json:",omitempty" required:"true"`

	// Enabled is a required field
	Enabled *bool `type:"boolean" json:",omitempty" required:"true"`

	// IsIdTokenMapping is a required field
	IsIdTokenMapping *bool `type:"boolean" json:",omitempty" required:"true"`

	// Issuer is a required field
	Issuer *string `type:"string" json:",omitempty" required:"true"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	ProviderOptions *ProviderOptionsForCreateIdentityProviderOIDCInput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	// UsePkce is a required field
	UsePkce *bool `type:"boolean" json:",omitempty" required:"true"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateIdentityProviderOIDCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateIdentityProviderOIDCInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateIdentityProviderOIDCInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateIdentityProviderOIDCInput"}
	if s.ClientId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientId"))
	}
	if s.ClientSecret == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientSecret"))
	}
	if s.Enabled == nil {
		invalidParams.Add(request.NewErrParamRequired("Enabled"))
	}
	if s.IsIdTokenMapping == nil {
		invalidParams.Add(request.NewErrParamRequired("IsIdTokenMapping"))
	}
	if s.Issuer == nil {
		invalidParams.Add(request.NewErrParamRequired("Issuer"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.UsePkce == nil {
		invalidParams.Add(request.NewErrParamRequired("UsePkce"))
	}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientId sets the ClientId field's value.
func (s *CreateIdentityProviderOIDCInput) SetClientId(v string) *CreateIdentityProviderOIDCInput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *CreateIdentityProviderOIDCInput) SetClientSecret(v string) *CreateIdentityProviderOIDCInput {
	s.ClientSecret = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *CreateIdentityProviderOIDCInput) SetEnabled(v bool) *CreateIdentityProviderOIDCInput {
	s.Enabled = &v
	return s
}

// SetIsIdTokenMapping sets the IsIdTokenMapping field's value.
func (s *CreateIdentityProviderOIDCInput) SetIsIdTokenMapping(v bool) *CreateIdentityProviderOIDCInput {
	s.IsIdTokenMapping = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *CreateIdentityProviderOIDCInput) SetIssuer(v string) *CreateIdentityProviderOIDCInput {
	s.Issuer = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateIdentityProviderOIDCInput) SetName(v string) *CreateIdentityProviderOIDCInput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *CreateIdentityProviderOIDCInput) SetProviderOptions(v *ProviderOptionsForCreateIdentityProviderOIDCInput) *CreateIdentityProviderOIDCInput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *CreateIdentityProviderOIDCInput) SetScopesList(v []*string) *CreateIdentityProviderOIDCInput {
	s.ScopesList = v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *CreateIdentityProviderOIDCInput) SetUsePkce(v bool) *CreateIdentityProviderOIDCInput {
	s.UsePkce = &v
	return s
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *CreateIdentityProviderOIDCInput) SetUserPoolUid(v string) *CreateIdentityProviderOIDCInput {
	s.UserPoolUid = &v
	return s
}

type CreateIdentityProviderOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ClientId *string `type:"string" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	IsIdTokenMapping *bool `type:"boolean" json:",omitempty"`

	Issuer *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProviderOptions *ProviderOptionsForCreateIdentityProviderOIDCOutput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UsePkce *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s CreateIdentityProviderOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateIdentityProviderOIDCOutput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *CreateIdentityProviderOIDCOutput) SetClientId(v string) *CreateIdentityProviderOIDCOutput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *CreateIdentityProviderOIDCOutput) SetClientSecret(v string) *CreateIdentityProviderOIDCOutput {
	s.ClientSecret = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *CreateIdentityProviderOIDCOutput) SetEnabled(v bool) *CreateIdentityProviderOIDCOutput {
	s.Enabled = &v
	return s
}

// SetIsIdTokenMapping sets the IsIdTokenMapping field's value.
func (s *CreateIdentityProviderOIDCOutput) SetIsIdTokenMapping(v bool) *CreateIdentityProviderOIDCOutput {
	s.IsIdTokenMapping = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *CreateIdentityProviderOIDCOutput) SetIssuer(v string) *CreateIdentityProviderOIDCOutput {
	s.Issuer = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateIdentityProviderOIDCOutput) SetName(v string) *CreateIdentityProviderOIDCOutput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *CreateIdentityProviderOIDCOutput) SetProviderOptions(v *ProviderOptionsForCreateIdentityProviderOIDCOutput) *CreateIdentityProviderOIDCOutput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *CreateIdentityProviderOIDCOutput) SetScopesList(v []*string) *CreateIdentityProviderOIDCOutput {
	s.ScopesList = v
	return s
}

// SetUid sets the Uid field's value.
func (s *CreateIdentityProviderOIDCOutput) SetUid(v string) *CreateIdentityProviderOIDCOutput {
	s.Uid = &v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *CreateIdentityProviderOIDCOutput) SetUsePkce(v bool) *CreateIdentityProviderOIDCOutput {
	s.UsePkce = &v
	return s
}

type ProviderOptionsForCreateIdentityProviderOIDCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForCreateIdentityProviderOIDCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForCreateIdentityProviderOIDCInput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCInput) SetAutoLinking(v string) *ProviderOptionsForCreateIdentityProviderOIDCInput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCInput) SetIsAutoCreation(v bool) *ProviderOptionsForCreateIdentityProviderOIDCInput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCInput) SetIsAutoUpdate(v bool) *ProviderOptionsForCreateIdentityProviderOIDCInput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCInput) SetIsCreationAllowed(v bool) *ProviderOptionsForCreateIdentityProviderOIDCInput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCInput) SetIsLinkingAllowed(v bool) *ProviderOptionsForCreateIdentityProviderOIDCInput {
	s.IsLinkingAllowed = &v
	return s
}

type ProviderOptionsForCreateIdentityProviderOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForCreateIdentityProviderOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForCreateIdentityProviderOIDCOutput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCOutput) SetAutoLinking(v string) *ProviderOptionsForCreateIdentityProviderOIDCOutput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCOutput) SetIsAutoCreation(v bool) *ProviderOptionsForCreateIdentityProviderOIDCOutput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCOutput) SetIsAutoUpdate(v bool) *ProviderOptionsForCreateIdentityProviderOIDCOutput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCOutput) SetIsCreationAllowed(v bool) *ProviderOptionsForCreateIdentityProviderOIDCOutput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForCreateIdentityProviderOIDCOutput) SetIsLinkingAllowed(v bool) *ProviderOptionsForCreateIdentityProviderOIDCOutput {
	s.IsLinkingAllowed = &v
	return s
}
