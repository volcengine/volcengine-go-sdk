// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateIdentityProviderOIDCCommon = "UpdateIdentityProviderOIDC"

// UpdateIdentityProviderOIDCCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateIdentityProviderOIDCCommon operation. The "output" return
// value will be populated with the UpdateIdentityProviderOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateIdentityProviderOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateIdentityProviderOIDCCommon Send returns without error.
//
// See UpdateIdentityProviderOIDCCommon for more information on using the UpdateIdentityProviderOIDCCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateIdentityProviderOIDCCommonRequest method.
//    req, resp := client.UpdateIdentityProviderOIDCCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateIdentityProviderOIDCCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateIdentityProviderOIDCCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateIdentityProviderOIDCCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateIdentityProviderOIDCCommon for usage and error information.
func (c *ID) UpdateIdentityProviderOIDCCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateIdentityProviderOIDCCommonRequest(input)
	return out, req.Send()
}

// UpdateIdentityProviderOIDCCommonWithContext is the same as UpdateIdentityProviderOIDCCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateIdentityProviderOIDCCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateIdentityProviderOIDCCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateIdentityProviderOIDCCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateIdentityProviderOIDC = "UpdateIdentityProviderOIDC"

// UpdateIdentityProviderOIDCRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateIdentityProviderOIDC operation. The "output" return
// value will be populated with the UpdateIdentityProviderOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateIdentityProviderOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateIdentityProviderOIDCCommon Send returns without error.
//
// See UpdateIdentityProviderOIDC for more information on using the UpdateIdentityProviderOIDC
// API call, and error handling.
//
//    // Example sending a request using the UpdateIdentityProviderOIDCRequest method.
//    req, resp := client.UpdateIdentityProviderOIDCRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateIdentityProviderOIDCRequest(input *UpdateIdentityProviderOIDCInput) (req *request.Request, output *UpdateIdentityProviderOIDCOutput) {
	op := &request.Operation{
		Name:       opUpdateIdentityProviderOIDC,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateIdentityProviderOIDCInput{}
	}

	output = &UpdateIdentityProviderOIDCOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateIdentityProviderOIDC API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateIdentityProviderOIDC for usage and error information.
func (c *ID) UpdateIdentityProviderOIDC(input *UpdateIdentityProviderOIDCInput) (*UpdateIdentityProviderOIDCOutput, error) {
	req, out := c.UpdateIdentityProviderOIDCRequest(input)
	return out, req.Send()
}

// UpdateIdentityProviderOIDCWithContext is the same as UpdateIdentityProviderOIDC with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateIdentityProviderOIDC for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateIdentityProviderOIDCWithContext(ctx volcengine.Context, input *UpdateIdentityProviderOIDCInput, opts ...request.Option) (*UpdateIdentityProviderOIDCOutput, error) {
	req, out := c.UpdateIdentityProviderOIDCRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ProviderOptionsForUpdateIdentityProviderOIDCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForUpdateIdentityProviderOIDCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForUpdateIdentityProviderOIDCInput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCInput) SetAutoLinking(v string) *ProviderOptionsForUpdateIdentityProviderOIDCInput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCInput) SetIsAutoCreation(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCInput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCInput) SetIsAutoUpdate(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCInput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCInput) SetIsCreationAllowed(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCInput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCInput) SetIsLinkingAllowed(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCInput {
	s.IsLinkingAllowed = &v
	return s
}

type ProviderOptionsForUpdateIdentityProviderOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForUpdateIdentityProviderOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForUpdateIdentityProviderOIDCOutput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCOutput) SetAutoLinking(v string) *ProviderOptionsForUpdateIdentityProviderOIDCOutput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCOutput) SetIsAutoCreation(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCOutput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCOutput) SetIsAutoUpdate(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCOutput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCOutput) SetIsCreationAllowed(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCOutput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForUpdateIdentityProviderOIDCOutput) SetIsLinkingAllowed(v bool) *ProviderOptionsForUpdateIdentityProviderOIDCOutput {
	s.IsLinkingAllowed = &v
	return s
}

type UpdateIdentityProviderOIDCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClientId is a required field
	ClientId *string `type:"string" json:",omitempty" required:"true"`

	ClientSecret *string `type:"string" json:",omitempty"`

	// ConnectionUid is a required field
	ConnectionUid *string `type:"string" json:",omitempty" required:"true"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	// IsIdTokenMapping is a required field
	IsIdTokenMapping *bool `type:"boolean" json:",omitempty" required:"true"`

	Issuer *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProviderOptions *ProviderOptionsForUpdateIdentityProviderOIDCInput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	// UsePkce is a required field
	UsePkce *bool `type:"boolean" json:",omitempty" required:"true"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s UpdateIdentityProviderOIDCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateIdentityProviderOIDCInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateIdentityProviderOIDCInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateIdentityProviderOIDCInput"}
	if s.ClientId == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientId"))
	}
	if s.ConnectionUid == nil {
		invalidParams.Add(request.NewErrParamRequired("ConnectionUid"))
	}
	if s.IsIdTokenMapping == nil {
		invalidParams.Add(request.NewErrParamRequired("IsIdTokenMapping"))
	}
	if s.UsePkce == nil {
		invalidParams.Add(request.NewErrParamRequired("UsePkce"))
	}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientId sets the ClientId field's value.
func (s *UpdateIdentityProviderOIDCInput) SetClientId(v string) *UpdateIdentityProviderOIDCInput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *UpdateIdentityProviderOIDCInput) SetClientSecret(v string) *UpdateIdentityProviderOIDCInput {
	s.ClientSecret = &v
	return s
}

// SetConnectionUid sets the ConnectionUid field's value.
func (s *UpdateIdentityProviderOIDCInput) SetConnectionUid(v string) *UpdateIdentityProviderOIDCInput {
	s.ConnectionUid = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *UpdateIdentityProviderOIDCInput) SetEnabled(v bool) *UpdateIdentityProviderOIDCInput {
	s.Enabled = &v
	return s
}

// SetIsIdTokenMapping sets the IsIdTokenMapping field's value.
func (s *UpdateIdentityProviderOIDCInput) SetIsIdTokenMapping(v bool) *UpdateIdentityProviderOIDCInput {
	s.IsIdTokenMapping = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *UpdateIdentityProviderOIDCInput) SetIssuer(v string) *UpdateIdentityProviderOIDCInput {
	s.Issuer = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateIdentityProviderOIDCInput) SetName(v string) *UpdateIdentityProviderOIDCInput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *UpdateIdentityProviderOIDCInput) SetProviderOptions(v *ProviderOptionsForUpdateIdentityProviderOIDCInput) *UpdateIdentityProviderOIDCInput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *UpdateIdentityProviderOIDCInput) SetScopesList(v []*string) *UpdateIdentityProviderOIDCInput {
	s.ScopesList = v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *UpdateIdentityProviderOIDCInput) SetUsePkce(v bool) *UpdateIdentityProviderOIDCInput {
	s.UsePkce = &v
	return s
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *UpdateIdentityProviderOIDCInput) SetUserPoolUid(v string) *UpdateIdentityProviderOIDCInput {
	s.UserPoolUid = &v
	return s
}

type UpdateIdentityProviderOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ClientId *string `type:"string" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	IsIdTokenMapping *bool `type:"boolean" json:",omitempty"`

	Issuer *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProviderOptions *ProviderOptionsForUpdateIdentityProviderOIDCOutput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UsePkce *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s UpdateIdentityProviderOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateIdentityProviderOIDCOutput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetClientId(v string) *UpdateIdentityProviderOIDCOutput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetClientSecret(v string) *UpdateIdentityProviderOIDCOutput {
	s.ClientSecret = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetEnabled(v bool) *UpdateIdentityProviderOIDCOutput {
	s.Enabled = &v
	return s
}

// SetIsIdTokenMapping sets the IsIdTokenMapping field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetIsIdTokenMapping(v bool) *UpdateIdentityProviderOIDCOutput {
	s.IsIdTokenMapping = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetIssuer(v string) *UpdateIdentityProviderOIDCOutput {
	s.Issuer = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetName(v string) *UpdateIdentityProviderOIDCOutput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetProviderOptions(v *ProviderOptionsForUpdateIdentityProviderOIDCOutput) *UpdateIdentityProviderOIDCOutput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetScopesList(v []*string) *UpdateIdentityProviderOIDCOutput {
	s.ScopesList = v
	return s
}

// SetUid sets the Uid field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetUid(v string) *UpdateIdentityProviderOIDCOutput {
	s.Uid = &v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *UpdateIdentityProviderOIDCOutput) SetUsePkce(v bool) *UpdateIdentityProviderOIDCOutput {
	s.UsePkce = &v
	return s
}
