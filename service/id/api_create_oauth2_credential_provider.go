// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateOauth2CredentialProviderCommon = "CreateOauth2CredentialProvider"

// CreateOauth2CredentialProviderCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateOauth2CredentialProviderCommon operation. The "output" return
// value will be populated with the CreateOauth2CredentialProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateOauth2CredentialProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateOauth2CredentialProviderCommon Send returns without error.
//
// See CreateOauth2CredentialProviderCommon for more information on using the CreateOauth2CredentialProviderCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateOauth2CredentialProviderCommonRequest method.
//    req, resp := client.CreateOauth2CredentialProviderCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateOauth2CredentialProviderCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateOauth2CredentialProviderCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateOauth2CredentialProviderCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateOauth2CredentialProviderCommon for usage and error information.
func (c *ID) CreateOauth2CredentialProviderCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateOauth2CredentialProviderCommonRequest(input)
	return out, req.Send()
}

// CreateOauth2CredentialProviderCommonWithContext is the same as CreateOauth2CredentialProviderCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateOauth2CredentialProviderCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateOauth2CredentialProviderCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateOauth2CredentialProviderCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateOauth2CredentialProvider = "CreateOauth2CredentialProvider"

// CreateOauth2CredentialProviderRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateOauth2CredentialProvider operation. The "output" return
// value will be populated with the CreateOauth2CredentialProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateOauth2CredentialProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateOauth2CredentialProviderCommon Send returns without error.
//
// See CreateOauth2CredentialProvider for more information on using the CreateOauth2CredentialProvider
// API call, and error handling.
//
//    // Example sending a request using the CreateOauth2CredentialProviderRequest method.
//    req, resp := client.CreateOauth2CredentialProviderRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateOauth2CredentialProviderRequest(input *CreateOauth2CredentialProviderInput) (req *request.Request, output *CreateOauth2CredentialProviderOutput) {
	op := &request.Operation{
		Name:       opCreateOauth2CredentialProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateOauth2CredentialProviderInput{}
	}

	output = &CreateOauth2CredentialProviderOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateOauth2CredentialProvider API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateOauth2CredentialProvider for usage and error information.
func (c *ID) CreateOauth2CredentialProvider(input *CreateOauth2CredentialProviderInput) (*CreateOauth2CredentialProviderOutput, error) {
	req, out := c.CreateOauth2CredentialProviderRequest(input)
	return out, req.Send()
}

// CreateOauth2CredentialProviderWithContext is the same as CreateOauth2CredentialProvider with the addition of
// the ability to pass a context and additional request options.
//
// See CreateOauth2CredentialProvider for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateOauth2CredentialProviderWithContext(ctx volcengine.Context, input *CreateOauth2CredentialProviderInput, opts ...request.Option) (*CreateOauth2CredentialProviderOutput, error) {
	req, out := c.CreateOauth2CredentialProviderRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AuthorizationServerMetadataForCreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthorizationEndpoint *string `type:"string" json:",omitempty"`

	Issuer *string `type:"string" json:",omitempty"`

	ResponseTypes []*string `type:"list" json:",omitempty"`

	TokenEndpoint *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// SetAuthorizationEndpoint sets the AuthorizationEndpoint field's value.
func (s *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) SetAuthorizationEndpoint(v string) *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput {
	s.AuthorizationEndpoint = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) SetIssuer(v string) *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput {
	s.Issuer = &v
	return s
}

// SetResponseTypes sets the ResponseTypes field's value.
func (s *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) SetResponseTypes(v []*string) *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput {
	s.ResponseTypes = v
	return s
}

// SetTokenEndpoint sets the TokenEndpoint field's value.
func (s *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) SetTokenEndpoint(v string) *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput {
	s.TokenEndpoint = &v
	return s
}

type ConfigForCreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientId *string `type:"string" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	CustomParameters *CustomParametersForCreateOauth2CredentialProviderInput `type:"structure" json:",omitempty"`

	Flow *string `type:"string" json:",omitempty"`

	ForceAuthentication *bool `type:"boolean" json:",omitempty"`

	MaxExpires *int64 `type:"int64" json:",omitempty"`

	Oauth2Discovery *Oauth2DiscoveryForCreateOauth2CredentialProviderInput `type:"structure" json:",omitempty"`

	RedirectUrl *string `type:"string" json:",omitempty"`

	Scopes []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ConfigForCreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ConfigForCreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetClientId(v string) *ConfigForCreateOauth2CredentialProviderInput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetClientSecret(v string) *ConfigForCreateOauth2CredentialProviderInput {
	s.ClientSecret = &v
	return s
}

// SetCustomParameters sets the CustomParameters field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetCustomParameters(v *CustomParametersForCreateOauth2CredentialProviderInput) *ConfigForCreateOauth2CredentialProviderInput {
	s.CustomParameters = v
	return s
}

// SetFlow sets the Flow field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetFlow(v string) *ConfigForCreateOauth2CredentialProviderInput {
	s.Flow = &v
	return s
}

// SetForceAuthentication sets the ForceAuthentication field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetForceAuthentication(v bool) *ConfigForCreateOauth2CredentialProviderInput {
	s.ForceAuthentication = &v
	return s
}

// SetMaxExpires sets the MaxExpires field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetMaxExpires(v int64) *ConfigForCreateOauth2CredentialProviderInput {
	s.MaxExpires = &v
	return s
}

// SetOauth2Discovery sets the Oauth2Discovery field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetOauth2Discovery(v *Oauth2DiscoveryForCreateOauth2CredentialProviderInput) *ConfigForCreateOauth2CredentialProviderInput {
	s.Oauth2Discovery = v
	return s
}

// SetRedirectUrl sets the RedirectUrl field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetRedirectUrl(v string) *ConfigForCreateOauth2CredentialProviderInput {
	s.RedirectUrl = &v
	return s
}

// SetScopes sets the Scopes field's value.
func (s *ConfigForCreateOauth2CredentialProviderInput) SetScopes(v []*string) *ConfigForCreateOauth2CredentialProviderInput {
	s.Scopes = v
	return s
}

type CreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Config *ConfigForCreateOauth2CredentialProviderInput `type:"structure" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	PoolName *string `type:"string" json:",omitempty"`

	// Vendor is a required field
	Vendor *int32 `type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateOauth2CredentialProviderInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateOauth2CredentialProviderInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.Vendor == nil {
		invalidParams.Add(request.NewErrParamRequired("Vendor"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetConfig sets the Config field's value.
func (s *CreateOauth2CredentialProviderInput) SetConfig(v *ConfigForCreateOauth2CredentialProviderInput) *CreateOauth2CredentialProviderInput {
	s.Config = v
	return s
}

// SetName sets the Name field's value.
func (s *CreateOauth2CredentialProviderInput) SetName(v string) *CreateOauth2CredentialProviderInput {
	s.Name = &v
	return s
}

// SetPoolName sets the PoolName field's value.
func (s *CreateOauth2CredentialProviderInput) SetPoolName(v string) *CreateOauth2CredentialProviderInput {
	s.PoolName = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *CreateOauth2CredentialProviderInput) SetVendor(v int32) *CreateOauth2CredentialProviderInput {
	s.Vendor = &v
	return s
}

type CreateOauth2CredentialProviderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CredentialProviderTrn *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	SecretTrn *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateOauth2CredentialProviderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateOauth2CredentialProviderOutput) GoString() string {
	return s.String()
}

// SetCredentialProviderTrn sets the CredentialProviderTrn field's value.
func (s *CreateOauth2CredentialProviderOutput) SetCredentialProviderTrn(v string) *CreateOauth2CredentialProviderOutput {
	s.CredentialProviderTrn = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateOauth2CredentialProviderOutput) SetName(v string) *CreateOauth2CredentialProviderOutput {
	s.Name = &v
	return s
}

// SetSecretTrn sets the SecretTrn field's value.
func (s *CreateOauth2CredentialProviderOutput) SetSecretTrn(v string) *CreateOauth2CredentialProviderOutput {
	s.SecretTrn = &v
	return s
}

type CustomParametersForCreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Entries []*EntryForCreateOauth2CredentialProviderInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s CustomParametersForCreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CustomParametersForCreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// SetEntries sets the Entries field's value.
func (s *CustomParametersForCreateOauth2CredentialProviderInput) SetEntries(v []*EntryForCreateOauth2CredentialProviderInput) *CustomParametersForCreateOauth2CredentialProviderInput {
	s.Entries = v
	return s
}

type EntryForCreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s EntryForCreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s EntryForCreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *EntryForCreateOauth2CredentialProviderInput) SetKey(v string) *EntryForCreateOauth2CredentialProviderInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *EntryForCreateOauth2CredentialProviderInput) SetValue(v string) *EntryForCreateOauth2CredentialProviderInput {
	s.Value = &v
	return s
}

type Oauth2DiscoveryForCreateOauth2CredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthorizationServerMetadata *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput `type:"structure" json:",omitempty"`

	DiscoveryUrl *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s Oauth2DiscoveryForCreateOauth2CredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Oauth2DiscoveryForCreateOauth2CredentialProviderInput) GoString() string {
	return s.String()
}

// SetAuthorizationServerMetadata sets the AuthorizationServerMetadata field's value.
func (s *Oauth2DiscoveryForCreateOauth2CredentialProviderInput) SetAuthorizationServerMetadata(v *AuthorizationServerMetadataForCreateOauth2CredentialProviderInput) *Oauth2DiscoveryForCreateOauth2CredentialProviderInput {
	s.AuthorizationServerMetadata = v
	return s
}

// SetDiscoveryUrl sets the DiscoveryUrl field's value.
func (s *Oauth2DiscoveryForCreateOauth2CredentialProviderInput) SetDiscoveryUrl(v string) *Oauth2DiscoveryForCreateOauth2CredentialProviderInput {
	s.DiscoveryUrl = &v
	return s
}
