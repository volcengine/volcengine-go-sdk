// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListUserPoolClientsCommon = "ListUserPoolClients"

// ListUserPoolClientsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUserPoolClientsCommon operation. The "output" return
// value will be populated with the ListUserPoolClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUserPoolClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUserPoolClientsCommon Send returns without error.
//
// See ListUserPoolClientsCommon for more information on using the ListUserPoolClientsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListUserPoolClientsCommonRequest method.
//    req, resp := client.ListUserPoolClientsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListUserPoolClientsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListUserPoolClientsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUserPoolClientsCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListUserPoolClientsCommon for usage and error information.
func (c *ID) ListUserPoolClientsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListUserPoolClientsCommonRequest(input)
	return out, req.Send()
}

// ListUserPoolClientsCommonWithContext is the same as ListUserPoolClientsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListUserPoolClientsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListUserPoolClientsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListUserPoolClientsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListUserPoolClients = "ListUserPoolClients"

// ListUserPoolClientsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListUserPoolClients operation. The "output" return
// value will be populated with the ListUserPoolClientsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListUserPoolClientsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListUserPoolClientsCommon Send returns without error.
//
// See ListUserPoolClients for more information on using the ListUserPoolClients
// API call, and error handling.
//
//    // Example sending a request using the ListUserPoolClientsRequest method.
//    req, resp := client.ListUserPoolClientsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListUserPoolClientsRequest(input *ListUserPoolClientsInput) (req *request.Request, output *ListUserPoolClientsOutput) {
	op := &request.Operation{
		Name:       opListUserPoolClients,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListUserPoolClientsInput{}
	}

	output = &ListUserPoolClientsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListUserPoolClients API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListUserPoolClients for usage and error information.
func (c *ID) ListUserPoolClients(input *ListUserPoolClientsInput) (*ListUserPoolClientsOutput, error) {
	req, out := c.ListUserPoolClientsRequest(input)
	return out, req.Send()
}

// ListUserPoolClientsWithContext is the same as ListUserPoolClients with the addition of
// the ability to pass a context and additional request options.
//
// See ListUserPoolClients for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListUserPoolClientsWithContext(ctx volcengine.Context, input *ListUserPoolClientsInput, opts ...request.Option) (*ListUserPoolClientsOutput, error) {
	req, out := c.ListUserPoolClientsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListUserPoolClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListUserPoolClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListUserPoolClientsOutput) GoString() string {
	return s.String()
}

// SetClientType sets the ClientType field's value.
func (s *DataForListUserPoolClientsOutput) SetClientType(v string) *DataForListUserPoolClientsOutput {
	s.ClientType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *DataForListUserPoolClientsOutput) SetCreateTime(v string) *DataForListUserPoolClientsOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *DataForListUserPoolClientsOutput) SetDescription(v string) *DataForListUserPoolClientsOutput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListUserPoolClientsOutput) SetName(v string) *DataForListUserPoolClientsOutput {
	s.Name = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForListUserPoolClientsOutput) SetUid(v string) *DataForListUserPoolClientsOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *DataForListUserPoolClientsOutput) SetUpdateTime(v string) *DataForListUserPoolClientsOutput {
	s.UpdateTime = &v
	return s
}

type FilterForListUserPoolClientsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientTypes []*string `type:"list" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s FilterForListUserPoolClientsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s FilterForListUserPoolClientsInput) GoString() string {
	return s.String()
}

// SetClientTypes sets the ClientTypes field's value.
func (s *FilterForListUserPoolClientsInput) SetClientTypes(v []*string) *FilterForListUserPoolClientsInput {
	s.ClientTypes = v
	return s
}

// SetDescription sets the Description field's value.
func (s *FilterForListUserPoolClientsInput) SetDescription(v string) *FilterForListUserPoolClientsInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *FilterForListUserPoolClientsInput) SetName(v string) *FilterForListUserPoolClientsInput {
	s.Name = &v
	return s
}

type ListUserPoolClientsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Filter *FilterForListUserPoolClientsInput `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `type:"int32" json:",omitempty" required:"true"`

	SortDirection *string `type:"string" json:",omitempty"`

	SortField *string `type:"string" json:",omitempty"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListUserPoolClientsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUserPoolClientsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListUserPoolClientsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListUserPoolClientsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetFilter sets the Filter field's value.
func (s *ListUserPoolClientsInput) SetFilter(v *FilterForListUserPoolClientsInput) *ListUserPoolClientsInput {
	s.Filter = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListUserPoolClientsInput) SetPageNumber(v int32) *ListUserPoolClientsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListUserPoolClientsInput) SetPageSize(v int32) *ListUserPoolClientsInput {
	s.PageSize = &v
	return s
}

// SetSortDirection sets the SortDirection field's value.
func (s *ListUserPoolClientsInput) SetSortDirection(v string) *ListUserPoolClientsInput {
	s.SortDirection = &v
	return s
}

// SetSortField sets the SortField field's value.
func (s *ListUserPoolClientsInput) SetSortField(v string) *ListUserPoolClientsInput {
	s.SortField = &v
	return s
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *ListUserPoolClientsInput) SetUserPoolUid(v string) *ListUserPoolClientsInput {
	s.UserPoolUid = &v
	return s
}

type ListUserPoolClientsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListUserPoolClientsOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListUserPoolClientsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListUserPoolClientsOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListUserPoolClientsOutput) SetData(v []*DataForListUserPoolClientsOutput) *ListUserPoolClientsOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListUserPoolClientsOutput) SetPageNumber(v int32) *ListUserPoolClientsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListUserPoolClientsOutput) SetPageSize(v int32) *ListUserPoolClientsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListUserPoolClientsOutput) SetTotalCount(v int32) *ListUserPoolClientsOutput {
	s.TotalCount = &v
	return s
}
