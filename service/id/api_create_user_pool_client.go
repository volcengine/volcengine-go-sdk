// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateUserPoolClientCommon = "CreateUserPoolClient"

// CreateUserPoolClientCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUserPoolClientCommon operation. The "output" return
// value will be populated with the CreateUserPoolClientCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUserPoolClientCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUserPoolClientCommon Send returns without error.
//
// See CreateUserPoolClientCommon for more information on using the CreateUserPoolClientCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateUserPoolClientCommonRequest method.
//    req, resp := client.CreateUserPoolClientCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateUserPoolClientCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateUserPoolClientCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateUserPoolClientCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateUserPoolClientCommon for usage and error information.
func (c *ID) CreateUserPoolClientCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateUserPoolClientCommonRequest(input)
	return out, req.Send()
}

// CreateUserPoolClientCommonWithContext is the same as CreateUserPoolClientCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUserPoolClientCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateUserPoolClientCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateUserPoolClientCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateUserPoolClient = "CreateUserPoolClient"

// CreateUserPoolClientRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateUserPoolClient operation. The "output" return
// value will be populated with the CreateUserPoolClientCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateUserPoolClientCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateUserPoolClientCommon Send returns without error.
//
// See CreateUserPoolClient for more information on using the CreateUserPoolClient
// API call, and error handling.
//
//    // Example sending a request using the CreateUserPoolClientRequest method.
//    req, resp := client.CreateUserPoolClientRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateUserPoolClientRequest(input *CreateUserPoolClientInput) (req *request.Request, output *CreateUserPoolClientOutput) {
	op := &request.Operation{
		Name:       opCreateUserPoolClient,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateUserPoolClientInput{}
	}

	output = &CreateUserPoolClientOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateUserPoolClient API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateUserPoolClient for usage and error information.
func (c *ID) CreateUserPoolClient(input *CreateUserPoolClientInput) (*CreateUserPoolClientOutput, error) {
	req, out := c.CreateUserPoolClientRequest(input)
	return out, req.Send()
}

// CreateUserPoolClientWithContext is the same as CreateUserPoolClient with the addition of
// the ability to pass a context and additional request options.
//
// See CreateUserPoolClient for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateUserPoolClientWithContext(ctx volcengine.Context, input *CreateUserPoolClientInput, opts ...request.Option) (*CreateUserPoolClientOutput, error) {
	req, out := c.CreateUserPoolClientRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateUserPoolClientInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedCallbackUrls []*string `type:"list" json:",omitempty"`

	// ClientType is a required field
	ClientType *string `type:"string" json:",omitempty" required:"true"`

	Description *string `type:"string" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateUserPoolClientInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUserPoolClientInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateUserPoolClientInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateUserPoolClientInput"}
	if s.ClientType == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientType"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllowedCallbackUrls sets the AllowedCallbackUrls field's value.
func (s *CreateUserPoolClientInput) SetAllowedCallbackUrls(v []*string) *CreateUserPoolClientInput {
	s.AllowedCallbackUrls = v
	return s
}

// SetClientType sets the ClientType field's value.
func (s *CreateUserPoolClientInput) SetClientType(v string) *CreateUserPoolClientInput {
	s.ClientType = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateUserPoolClientInput) SetDescription(v string) *CreateUserPoolClientInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateUserPoolClientInput) SetName(v string) *CreateUserPoolClientInput {
	s.Name = &v
	return s
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *CreateUserPoolClientInput) SetUserPoolUid(v string) *CreateUserPoolClientInput {
	s.UserPoolUid = &v
	return s
}

type CreateUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AllowedCallbackUrls []*string `type:"list" json:",omitempty"`

	AllowedCors []*string `type:"list" json:",omitempty"`

	AllowedLogoutUrls []*string `type:"list" json:",omitempty"`

	AllowedWebOrigins []*string `type:"list" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	ClientType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	IdToken *IdTokenForCreateUserPoolClientOutput `type:"structure" json:",omitempty"`

	LoginPageUrl *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RefreshToken *RefreshTokenForCreateUserPoolClientOutput `type:"structure" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetAllowedCallbackUrls sets the AllowedCallbackUrls field's value.
func (s *CreateUserPoolClientOutput) SetAllowedCallbackUrls(v []*string) *CreateUserPoolClientOutput {
	s.AllowedCallbackUrls = v
	return s
}

// SetAllowedCors sets the AllowedCors field's value.
func (s *CreateUserPoolClientOutput) SetAllowedCors(v []*string) *CreateUserPoolClientOutput {
	s.AllowedCors = v
	return s
}

// SetAllowedLogoutUrls sets the AllowedLogoutUrls field's value.
func (s *CreateUserPoolClientOutput) SetAllowedLogoutUrls(v []*string) *CreateUserPoolClientOutput {
	s.AllowedLogoutUrls = v
	return s
}

// SetAllowedWebOrigins sets the AllowedWebOrigins field's value.
func (s *CreateUserPoolClientOutput) SetAllowedWebOrigins(v []*string) *CreateUserPoolClientOutput {
	s.AllowedWebOrigins = v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *CreateUserPoolClientOutput) SetClientSecret(v string) *CreateUserPoolClientOutput {
	s.ClientSecret = &v
	return s
}

// SetClientType sets the ClientType field's value.
func (s *CreateUserPoolClientOutput) SetClientType(v string) *CreateUserPoolClientOutput {
	s.ClientType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *CreateUserPoolClientOutput) SetCreateTime(v string) *CreateUserPoolClientOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateUserPoolClientOutput) SetDescription(v string) *CreateUserPoolClientOutput {
	s.Description = &v
	return s
}

// SetIdToken sets the IdToken field's value.
func (s *CreateUserPoolClientOutput) SetIdToken(v *IdTokenForCreateUserPoolClientOutput) *CreateUserPoolClientOutput {
	s.IdToken = v
	return s
}

// SetLoginPageUrl sets the LoginPageUrl field's value.
func (s *CreateUserPoolClientOutput) SetLoginPageUrl(v string) *CreateUserPoolClientOutput {
	s.LoginPageUrl = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateUserPoolClientOutput) SetName(v string) *CreateUserPoolClientOutput {
	s.Name = &v
	return s
}

// SetRefreshToken sets the RefreshToken field's value.
func (s *CreateUserPoolClientOutput) SetRefreshToken(v *RefreshTokenForCreateUserPoolClientOutput) *CreateUserPoolClientOutput {
	s.RefreshToken = v
	return s
}

// SetUid sets the Uid field's value.
func (s *CreateUserPoolClientOutput) SetUid(v string) *CreateUserPoolClientOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *CreateUserPoolClientOutput) SetUpdateTime(v string) *CreateUserPoolClientOutput {
	s.UpdateTime = &v
	return s
}

type IdTokenForCreateUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LifetimeSeconds *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s IdTokenForCreateUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IdTokenForCreateUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetLifetimeSeconds sets the LifetimeSeconds field's value.
func (s *IdTokenForCreateUserPoolClientOutput) SetLifetimeSeconds(v int32) *IdTokenForCreateUserPoolClientOutput {
	s.LifetimeSeconds = &v
	return s
}

type RefreshTokenForCreateUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CombinedLifetimeSeconds *int32 `type:"int32" json:",omitempty"`

	HasCombinedLifetime *bool `type:"boolean" json:",omitempty"`

	HasIdleLifetime *bool `type:"boolean" json:",omitempty"`

	IdleLifetimeSeconds *int32 `type:"int32" json:",omitempty"`

	Rotation *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RefreshTokenForCreateUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RefreshTokenForCreateUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetCombinedLifetimeSeconds sets the CombinedLifetimeSeconds field's value.
func (s *RefreshTokenForCreateUserPoolClientOutput) SetCombinedLifetimeSeconds(v int32) *RefreshTokenForCreateUserPoolClientOutput {
	s.CombinedLifetimeSeconds = &v
	return s
}

// SetHasCombinedLifetime sets the HasCombinedLifetime field's value.
func (s *RefreshTokenForCreateUserPoolClientOutput) SetHasCombinedLifetime(v bool) *RefreshTokenForCreateUserPoolClientOutput {
	s.HasCombinedLifetime = &v
	return s
}

// SetHasIdleLifetime sets the HasIdleLifetime field's value.
func (s *RefreshTokenForCreateUserPoolClientOutput) SetHasIdleLifetime(v bool) *RefreshTokenForCreateUserPoolClientOutput {
	s.HasIdleLifetime = &v
	return s
}

// SetIdleLifetimeSeconds sets the IdleLifetimeSeconds field's value.
func (s *RefreshTokenForCreateUserPoolClientOutput) SetIdleLifetimeSeconds(v int32) *RefreshTokenForCreateUserPoolClientOutput {
	s.IdleLifetimeSeconds = &v
	return s
}

// SetRotation sets the Rotation field's value.
func (s *RefreshTokenForCreateUserPoolClientOutput) SetRotation(v bool) *RefreshTokenForCreateUserPoolClientOutput {
	s.Rotation = &v
	return s
}
