// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateApiKeyCredentialProviderCommon = "UpdateApiKeyCredentialProvider"

// UpdateApiKeyCredentialProviderCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateApiKeyCredentialProviderCommon operation. The "output" return
// value will be populated with the UpdateApiKeyCredentialProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateApiKeyCredentialProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateApiKeyCredentialProviderCommon Send returns without error.
//
// See UpdateApiKeyCredentialProviderCommon for more information on using the UpdateApiKeyCredentialProviderCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateApiKeyCredentialProviderCommonRequest method.
//    req, resp := client.UpdateApiKeyCredentialProviderCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateApiKeyCredentialProviderCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateApiKeyCredentialProviderCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateApiKeyCredentialProviderCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateApiKeyCredentialProviderCommon for usage and error information.
func (c *ID) UpdateApiKeyCredentialProviderCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateApiKeyCredentialProviderCommonRequest(input)
	return out, req.Send()
}

// UpdateApiKeyCredentialProviderCommonWithContext is the same as UpdateApiKeyCredentialProviderCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateApiKeyCredentialProviderCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateApiKeyCredentialProviderCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateApiKeyCredentialProviderCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateApiKeyCredentialProvider = "UpdateApiKeyCredentialProvider"

// UpdateApiKeyCredentialProviderRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateApiKeyCredentialProvider operation. The "output" return
// value will be populated with the UpdateApiKeyCredentialProviderCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateApiKeyCredentialProviderCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateApiKeyCredentialProviderCommon Send returns without error.
//
// See UpdateApiKeyCredentialProvider for more information on using the UpdateApiKeyCredentialProvider
// API call, and error handling.
//
//    // Example sending a request using the UpdateApiKeyCredentialProviderRequest method.
//    req, resp := client.UpdateApiKeyCredentialProviderRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateApiKeyCredentialProviderRequest(input *UpdateApiKeyCredentialProviderInput) (req *request.Request, output *UpdateApiKeyCredentialProviderOutput) {
	op := &request.Operation{
		Name:       opUpdateApiKeyCredentialProvider,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateApiKeyCredentialProviderInput{}
	}

	output = &UpdateApiKeyCredentialProviderOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateApiKeyCredentialProvider API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateApiKeyCredentialProvider for usage and error information.
func (c *ID) UpdateApiKeyCredentialProvider(input *UpdateApiKeyCredentialProviderInput) (*UpdateApiKeyCredentialProviderOutput, error) {
	req, out := c.UpdateApiKeyCredentialProviderRequest(input)
	return out, req.Send()
}

// UpdateApiKeyCredentialProviderWithContext is the same as UpdateApiKeyCredentialProvider with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateApiKeyCredentialProvider for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateApiKeyCredentialProviderWithContext(ctx volcengine.Context, input *UpdateApiKeyCredentialProviderInput, opts ...request.Option) (*UpdateApiKeyCredentialProviderOutput, error) {
	req, out := c.UpdateApiKeyCredentialProviderRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyMetadataForUpdateApiKeyCredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForUpdateApiKeyCredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForUpdateApiKeyCredentialProviderInput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForUpdateApiKeyCredentialProviderInput) SetLocation(v string) *ApiKeyMetadataForUpdateApiKeyCredentialProviderInput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForUpdateApiKeyCredentialProviderInput) SetParameterName(v string) *ApiKeyMetadataForUpdateApiKeyCredentialProviderInput {
	s.ParameterName = &v
	return s
}

type UpdateApiKeyCredentialProviderInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForUpdateApiKeyCredentialProviderInput `type:"list" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	PoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateApiKeyCredentialProviderInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateApiKeyCredentialProviderInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateApiKeyCredentialProviderInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateApiKeyCredentialProviderInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApiKey sets the ApiKey field's value.
func (s *UpdateApiKeyCredentialProviderInput) SetApiKey(v string) *UpdateApiKeyCredentialProviderInput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *UpdateApiKeyCredentialProviderInput) SetApiKeyMetadata(v []*ApiKeyMetadataForUpdateApiKeyCredentialProviderInput) *UpdateApiKeyCredentialProviderInput {
	s.ApiKeyMetadata = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateApiKeyCredentialProviderInput) SetName(v string) *UpdateApiKeyCredentialProviderInput {
	s.Name = &v
	return s
}

// SetPoolName sets the PoolName field's value.
func (s *UpdateApiKeyCredentialProviderInput) SetPoolName(v string) *UpdateApiKeyCredentialProviderInput {
	s.PoolName = &v
	return s
}

type UpdateApiKeyCredentialProviderOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedAt *string `type:"string" json:",omitempty"`

	CredentialProviderTrn *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	SecretTrn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateApiKeyCredentialProviderOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateApiKeyCredentialProviderOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *UpdateApiKeyCredentialProviderOutput) SetCreatedAt(v string) *UpdateApiKeyCredentialProviderOutput {
	s.CreatedAt = &v
	return s
}

// SetCredentialProviderTrn sets the CredentialProviderTrn field's value.
func (s *UpdateApiKeyCredentialProviderOutput) SetCredentialProviderTrn(v string) *UpdateApiKeyCredentialProviderOutput {
	s.CredentialProviderTrn = &v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateApiKeyCredentialProviderOutput) SetName(v string) *UpdateApiKeyCredentialProviderOutput {
	s.Name = &v
	return s
}

// SetSecretTrn sets the SecretTrn field's value.
func (s *UpdateApiKeyCredentialProviderOutput) SetSecretTrn(v string) *UpdateApiKeyCredentialProviderOutput {
	s.SecretTrn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *UpdateApiKeyCredentialProviderOutput) SetUpdatedAt(v string) *UpdateApiKeyCredentialProviderOutput {
	s.UpdatedAt = &v
	return s
}
