// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetUserCommon = "GetUser"

// GetUserCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUserCommon operation. The "output" return
// value will be populated with the GetUserCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUserCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUserCommon Send returns without error.
//
// See GetUserCommon for more information on using the GetUserCommon
// API call, and error handling.
//
//    // Example sending a request using the GetUserCommonRequest method.
//    req, resp := client.GetUserCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetUserCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetUserCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUserCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetUserCommon for usage and error information.
func (c *ID) GetUserCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetUserCommonRequest(input)
	return out, req.Send()
}

// GetUserCommonWithContext is the same as GetUserCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetUserCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetUserCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetUserCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetUser = "GetUser"

// GetUserRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUser operation. The "output" return
// value will be populated with the GetUserCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUserCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUserCommon Send returns without error.
//
// See GetUser for more information on using the GetUser
// API call, and error handling.
//
//    // Example sending a request using the GetUserRequest method.
//    req, resp := client.GetUserRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetUserRequest(input *GetUserInput) (req *request.Request, output *GetUserOutput) {
	op := &request.Operation{
		Name:       opGetUser,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetUserInput{}
	}

	output = &GetUserOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUser API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetUser for usage and error information.
func (c *ID) GetUser(input *GetUserInput) (*GetUserOutput, error) {
	req, out := c.GetUserRequest(input)
	return out, req.Send()
}

// GetUserWithContext is the same as GetUser with the addition of
// the ability to pass a context and additional request options.
//
// See GetUser for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetUserWithContext(ctx volcengine.Context, input *GetUserInput, opts ...request.Option) (*GetUserOutput, error) {
	req, out := c.GetUserRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetUserInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`

	// UserUid is a required field
	UserUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetUserInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUserInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetUserInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetUserInput"}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}
	if s.UserUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *GetUserInput) SetUserPoolUid(v string) *GetUserInput {
	s.UserPoolUid = &v
	return s
}

// SetUserUid sets the UserUid field's value.
func (s *GetUserInput) SetUserUid(v string) *GetUserInput {
	s.UserUid = &v
	return s
}

type GetUserOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Birthdate *string `type:"string" json:",omitempty"`

	Connection *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Email *string `type:"string" json:",omitempty"`

	EmailVerified *bool `type:"boolean" json:",omitempty"`

	FamilyName *string `type:"string" json:",omitempty"`

	Gender *string `type:"string" json:",omitempty"`

	GivenName *string `type:"string" json:",omitempty"`

	LatestBrowser *string `type:"string" json:",omitempty"`

	LatestLogin *string `type:"string" json:",omitempty"`

	Locale *string `type:"string" json:",omitempty"`

	MiddleName *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	NickName *string `type:"string" json:",omitempty"`

	NumLogins *int32 `type:"int32" json:",omitempty"`

	PhoneNumber *string `type:"string" json:",omitempty"`

	PhoneNumberVerified *bool `type:"boolean" json:",omitempty"`

	Picture *string `type:"string" json:",omitempty"`

	PreferredUsername *string `type:"string" json:",omitempty"`

	Profile *string `type:"string" json:",omitempty"`

	Sub *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`

	UserMetadata *string `type:"string" json:",omitempty"`

	Website *string `type:"string" json:",omitempty"`

	ZoneInfo *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetUserOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUserOutput) GoString() string {
	return s.String()
}

// SetBirthdate sets the Birthdate field's value.
func (s *GetUserOutput) SetBirthdate(v string) *GetUserOutput {
	s.Birthdate = &v
	return s
}

// SetConnection sets the Connection field's value.
func (s *GetUserOutput) SetConnection(v string) *GetUserOutput {
	s.Connection = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetUserOutput) SetCreateTime(v string) *GetUserOutput {
	s.CreateTime = &v
	return s
}

// SetEmail sets the Email field's value.
func (s *GetUserOutput) SetEmail(v string) *GetUserOutput {
	s.Email = &v
	return s
}

// SetEmailVerified sets the EmailVerified field's value.
func (s *GetUserOutput) SetEmailVerified(v bool) *GetUserOutput {
	s.EmailVerified = &v
	return s
}

// SetFamilyName sets the FamilyName field's value.
func (s *GetUserOutput) SetFamilyName(v string) *GetUserOutput {
	s.FamilyName = &v
	return s
}

// SetGender sets the Gender field's value.
func (s *GetUserOutput) SetGender(v string) *GetUserOutput {
	s.Gender = &v
	return s
}

// SetGivenName sets the GivenName field's value.
func (s *GetUserOutput) SetGivenName(v string) *GetUserOutput {
	s.GivenName = &v
	return s
}

// SetLatestBrowser sets the LatestBrowser field's value.
func (s *GetUserOutput) SetLatestBrowser(v string) *GetUserOutput {
	s.LatestBrowser = &v
	return s
}

// SetLatestLogin sets the LatestLogin field's value.
func (s *GetUserOutput) SetLatestLogin(v string) *GetUserOutput {
	s.LatestLogin = &v
	return s
}

// SetLocale sets the Locale field's value.
func (s *GetUserOutput) SetLocale(v string) *GetUserOutput {
	s.Locale = &v
	return s
}

// SetMiddleName sets the MiddleName field's value.
func (s *GetUserOutput) SetMiddleName(v string) *GetUserOutput {
	s.MiddleName = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetUserOutput) SetName(v string) *GetUserOutput {
	s.Name = &v
	return s
}

// SetNickName sets the NickName field's value.
func (s *GetUserOutput) SetNickName(v string) *GetUserOutput {
	s.NickName = &v
	return s
}

// SetNumLogins sets the NumLogins field's value.
func (s *GetUserOutput) SetNumLogins(v int32) *GetUserOutput {
	s.NumLogins = &v
	return s
}

// SetPhoneNumber sets the PhoneNumber field's value.
func (s *GetUserOutput) SetPhoneNumber(v string) *GetUserOutput {
	s.PhoneNumber = &v
	return s
}

// SetPhoneNumberVerified sets the PhoneNumberVerified field's value.
func (s *GetUserOutput) SetPhoneNumberVerified(v bool) *GetUserOutput {
	s.PhoneNumberVerified = &v
	return s
}

// SetPicture sets the Picture field's value.
func (s *GetUserOutput) SetPicture(v string) *GetUserOutput {
	s.Picture = &v
	return s
}

// SetPreferredUsername sets the PreferredUsername field's value.
func (s *GetUserOutput) SetPreferredUsername(v string) *GetUserOutput {
	s.PreferredUsername = &v
	return s
}

// SetProfile sets the Profile field's value.
func (s *GetUserOutput) SetProfile(v string) *GetUserOutput {
	s.Profile = &v
	return s
}

// SetSub sets the Sub field's value.
func (s *GetUserOutput) SetSub(v string) *GetUserOutput {
	s.Sub = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *GetUserOutput) SetUid(v string) *GetUserOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetUserOutput) SetUpdateTime(v string) *GetUserOutput {
	s.UpdateTime = &v
	return s
}

// SetUserMetadata sets the UserMetadata field's value.
func (s *GetUserOutput) SetUserMetadata(v string) *GetUserOutput {
	s.UserMetadata = &v
	return s
}

// SetWebsite sets the Website field's value.
func (s *GetUserOutput) SetWebsite(v string) *GetUserOutput {
	s.Website = &v
	return s
}

// SetZoneInfo sets the ZoneInfo field's value.
func (s *GetUserOutput) SetZoneInfo(v string) *GetUserOutput {
	s.ZoneInfo = &v
	return s
}
