// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opBatchGetInboundAuthConfigCommon = "BatchGetInboundAuthConfig"

// BatchGetInboundAuthConfigCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchGetInboundAuthConfigCommon operation. The "output" return
// value will be populated with the BatchGetInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchGetInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchGetInboundAuthConfigCommon Send returns without error.
//
// See BatchGetInboundAuthConfigCommon for more information on using the BatchGetInboundAuthConfigCommon
// API call, and error handling.
//
//    // Example sending a request using the BatchGetInboundAuthConfigCommonRequest method.
//    req, resp := client.BatchGetInboundAuthConfigCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) BatchGetInboundAuthConfigCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBatchGetInboundAuthConfigCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchGetInboundAuthConfigCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation BatchGetInboundAuthConfigCommon for usage and error information.
func (c *ID) BatchGetInboundAuthConfigCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BatchGetInboundAuthConfigCommonRequest(input)
	return out, req.Send()
}

// BatchGetInboundAuthConfigCommonWithContext is the same as BatchGetInboundAuthConfigCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BatchGetInboundAuthConfigCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) BatchGetInboundAuthConfigCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BatchGetInboundAuthConfigCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchGetInboundAuthConfig = "BatchGetInboundAuthConfig"

// BatchGetInboundAuthConfigRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchGetInboundAuthConfig operation. The "output" return
// value will be populated with the BatchGetInboundAuthConfigCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchGetInboundAuthConfigCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchGetInboundAuthConfigCommon Send returns without error.
//
// See BatchGetInboundAuthConfig for more information on using the BatchGetInboundAuthConfig
// API call, and error handling.
//
//    // Example sending a request using the BatchGetInboundAuthConfigRequest method.
//    req, resp := client.BatchGetInboundAuthConfigRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) BatchGetInboundAuthConfigRequest(input *BatchGetInboundAuthConfigInput) (req *request.Request, output *BatchGetInboundAuthConfigOutput) {
	op := &request.Operation{
		Name:       opBatchGetInboundAuthConfig,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BatchGetInboundAuthConfigInput{}
	}

	output = &BatchGetInboundAuthConfigOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchGetInboundAuthConfig API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation BatchGetInboundAuthConfig for usage and error information.
func (c *ID) BatchGetInboundAuthConfig(input *BatchGetInboundAuthConfigInput) (*BatchGetInboundAuthConfigOutput, error) {
	req, out := c.BatchGetInboundAuthConfigRequest(input)
	return out, req.Send()
}

// BatchGetInboundAuthConfigWithContext is the same as BatchGetInboundAuthConfig with the addition of
// the ability to pass a context and additional request options.
//
// See BatchGetInboundAuthConfig for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) BatchGetInboundAuthConfigWithContext(ctx volcengine.Context, input *BatchGetInboundAuthConfigInput, opts ...request.Option) (*BatchGetInboundAuthConfigOutput, error) {
	req, out := c.BatchGetInboundAuthConfigRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForBatchGetInboundAuthConfigOutput `type:"list" json:",omitempty"`

	ApiKeyName *string `type:"string" json:",omitempty"`

	ExpiryTimestamp *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetApiKey sets the ApiKey field's value.
func (s *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) SetApiKey(v string) *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) SetApiKeyMetadata(v []*ApiKeyMetadataForBatchGetInboundAuthConfigOutput) *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ApiKeyMetadata = v
	return s
}

// SetApiKeyName sets the ApiKeyName field's value.
func (s *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) SetApiKeyName(v string) *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ApiKeyName = &v
	return s
}

// SetExpiryTimestamp sets the ExpiryTimestamp field's value.
func (s *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) SetExpiryTimestamp(v int64) *ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ExpiryTimestamp = &v
	return s
}

type ApiKeyMetadataForBatchGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForBatchGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForBatchGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForBatchGetInboundAuthConfigOutput) SetLocation(v string) *ApiKeyMetadataForBatchGetInboundAuthConfigOutput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForBatchGetInboundAuthConfigOutput) SetParameterName(v string) *ApiKeyMetadataForBatchGetInboundAuthConfigOutput {
	s.ParameterName = &v
	return s
}

type BatchGetInboundAuthConfigInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	InboundAuthConfigIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BatchGetInboundAuthConfigInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchGetInboundAuthConfigInput) GoString() string {
	return s.String()
}

// SetInboundAuthConfigIds sets the InboundAuthConfigIds field's value.
func (s *BatchGetInboundAuthConfigInput) SetInboundAuthConfigIds(v []*string) *BatchGetInboundAuthConfigInput {
	s.InboundAuthConfigIds = v
	return s
}

type BatchGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	InboundAuthConfigs []*InboundAuthConfigForBatchGetInboundAuthConfigOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BatchGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetInboundAuthConfigs sets the InboundAuthConfigs field's value.
func (s *BatchGetInboundAuthConfigOutput) SetInboundAuthConfigs(v []*InboundAuthConfigForBatchGetInboundAuthConfigOutput) *BatchGetInboundAuthConfigOutput {
	s.InboundAuthConfigs = v
	return s
}

type InboundAuthConfigForBatchGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKeyAuthConfigs []*ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput `type:"list" json:",omitempty"`

	AuthType *string `type:"string" json:",omitempty"`

	ConfigName *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	InboundAuthConfigId *string `type:"string" json:",omitempty"`

	InstanceId *string `type:"string" json:",omitempty"`

	JwtAuthConfig *JwtAuthConfigForBatchGetInboundAuthConfigOutput `type:"structure" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s InboundAuthConfigForBatchGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s InboundAuthConfigForBatchGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetApiKeyAuthConfigs sets the ApiKeyAuthConfigs field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetApiKeyAuthConfigs(v []*ApiKeyAuthConfigForBatchGetInboundAuthConfigOutput) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ApiKeyAuthConfigs = v
	return s
}

// SetAuthType sets the AuthType field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetAuthType(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.AuthType = &v
	return s
}

// SetConfigName sets the ConfigName field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetConfigName(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.ConfigName = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetCreatedAt(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetDescription(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.Description = &v
	return s
}

// SetInboundAuthConfigId sets the InboundAuthConfigId field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetInboundAuthConfigId(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.InboundAuthConfigId = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetInstanceId(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.InstanceId = &v
	return s
}

// SetJwtAuthConfig sets the JwtAuthConfig field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetJwtAuthConfig(v *JwtAuthConfigForBatchGetInboundAuthConfigOutput) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.JwtAuthConfig = v
	return s
}

// SetTrn sets the Trn field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetTrn(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *InboundAuthConfigForBatchGetInboundAuthConfigOutput) SetUpdatedAt(v string) *InboundAuthConfigForBatchGetInboundAuthConfigOutput {
	s.UpdatedAt = &v
	return s
}

type JwtAuthConfigForBatchGetInboundAuthConfigOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedAudiences []*string `type:"list" json:",omitempty"`

	AllowedClients []*string `type:"list" json:",omitempty"`

	DiscoveryUrl *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s JwtAuthConfigForBatchGetInboundAuthConfigOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s JwtAuthConfigForBatchGetInboundAuthConfigOutput) GoString() string {
	return s.String()
}

// SetAllowedAudiences sets the AllowedAudiences field's value.
func (s *JwtAuthConfigForBatchGetInboundAuthConfigOutput) SetAllowedAudiences(v []*string) *JwtAuthConfigForBatchGetInboundAuthConfigOutput {
	s.AllowedAudiences = v
	return s
}

// SetAllowedClients sets the AllowedClients field's value.
func (s *JwtAuthConfigForBatchGetInboundAuthConfigOutput) SetAllowedClients(v []*string) *JwtAuthConfigForBatchGetInboundAuthConfigOutput {
	s.AllowedClients = v
	return s
}

// SetDiscoveryUrl sets the DiscoveryUrl field's value.
func (s *JwtAuthConfigForBatchGetInboundAuthConfigOutput) SetDiscoveryUrl(v string) *JwtAuthConfigForBatchGetInboundAuthConfigOutput {
	s.DiscoveryUrl = &v
	return s
}
