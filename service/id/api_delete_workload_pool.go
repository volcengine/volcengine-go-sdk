// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteWorkloadPoolCommon = "DeleteWorkloadPool"

// DeleteWorkloadPoolCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteWorkloadPoolCommon operation. The "output" return
// value will be populated with the DeleteWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteWorkloadPoolCommon Send returns without error.
//
// See DeleteWorkloadPoolCommon for more information on using the DeleteWorkloadPoolCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteWorkloadPoolCommonRequest method.
//    req, resp := client.DeleteWorkloadPoolCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) DeleteWorkloadPoolCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteWorkloadPoolCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteWorkloadPoolCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation DeleteWorkloadPoolCommon for usage and error information.
func (c *ID) DeleteWorkloadPoolCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteWorkloadPoolCommonRequest(input)
	return out, req.Send()
}

// DeleteWorkloadPoolCommonWithContext is the same as DeleteWorkloadPoolCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteWorkloadPoolCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) DeleteWorkloadPoolCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteWorkloadPoolCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteWorkloadPool = "DeleteWorkloadPool"

// DeleteWorkloadPoolRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteWorkloadPool operation. The "output" return
// value will be populated with the DeleteWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteWorkloadPoolCommon Send returns without error.
//
// See DeleteWorkloadPool for more information on using the DeleteWorkloadPool
// API call, and error handling.
//
//    // Example sending a request using the DeleteWorkloadPoolRequest method.
//    req, resp := client.DeleteWorkloadPoolRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) DeleteWorkloadPoolRequest(input *DeleteWorkloadPoolInput) (req *request.Request, output *DeleteWorkloadPoolOutput) {
	op := &request.Operation{
		Name:       opDeleteWorkloadPool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteWorkloadPoolInput{}
	}

	output = &DeleteWorkloadPoolOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteWorkloadPool API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation DeleteWorkloadPool for usage and error information.
func (c *ID) DeleteWorkloadPool(input *DeleteWorkloadPoolInput) (*DeleteWorkloadPoolOutput, error) {
	req, out := c.DeleteWorkloadPoolRequest(input)
	return out, req.Send()
}

// DeleteWorkloadPoolWithContext is the same as DeleteWorkloadPool with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteWorkloadPool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) DeleteWorkloadPoolWithContext(ctx volcengine.Context, input *DeleteWorkloadPoolInput, opts ...request.Option) (*DeleteWorkloadPoolOutput, error) {
	req, out := c.DeleteWorkloadPoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteWorkloadPoolInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DeleteWorkloadPoolInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteWorkloadPoolInput) GoString() string {
	return s.String()
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *DeleteWorkloadPoolInput) SetWorkloadPoolName(v string) *DeleteWorkloadPoolInput {
	s.WorkloadPoolName = &v
	return s
}

type DeleteWorkloadPoolOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteWorkloadPoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteWorkloadPoolOutput) GoString() string {
	return s.String()
}
