// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGetUserPoolClientCommon = "GetUserPoolClient"

// GetUserPoolClientCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUserPoolClientCommon operation. The "output" return
// value will be populated with the GetUserPoolClientCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUserPoolClientCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUserPoolClientCommon Send returns without error.
//
// See GetUserPoolClientCommon for more information on using the GetUserPoolClientCommon
// API call, and error handling.
//
//    // Example sending a request using the GetUserPoolClientCommonRequest method.
//    req, resp := client.GetUserPoolClientCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetUserPoolClientCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGetUserPoolClientCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUserPoolClientCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetUserPoolClientCommon for usage and error information.
func (c *ID) GetUserPoolClientCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GetUserPoolClientCommonRequest(input)
	return out, req.Send()
}

// GetUserPoolClientCommonWithContext is the same as GetUserPoolClientCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GetUserPoolClientCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetUserPoolClientCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GetUserPoolClientCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGetUserPoolClient = "GetUserPoolClient"

// GetUserPoolClientRequest generates a "volcengine/request.Request" representing the
// client's request for the GetUserPoolClient operation. The "output" return
// value will be populated with the GetUserPoolClientCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GetUserPoolClientCommon Request to send the API call to the service.
// the "output" return value is not valid until after GetUserPoolClientCommon Send returns without error.
//
// See GetUserPoolClient for more information on using the GetUserPoolClient
// API call, and error handling.
//
//    // Example sending a request using the GetUserPoolClientRequest method.
//    req, resp := client.GetUserPoolClientRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GetUserPoolClientRequest(input *GetUserPoolClientInput) (req *request.Request, output *GetUserPoolClientOutput) {
	op := &request.Operation{
		Name:       opGetUserPoolClient,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GetUserPoolClientInput{}
	}

	output = &GetUserPoolClientOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GetUserPoolClient API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GetUserPoolClient for usage and error information.
func (c *ID) GetUserPoolClient(input *GetUserPoolClientInput) (*GetUserPoolClientOutput, error) {
	req, out := c.GetUserPoolClientRequest(input)
	return out, req.Send()
}

// GetUserPoolClientWithContext is the same as GetUserPoolClient with the addition of
// the ability to pass a context and additional request options.
//
// See GetUserPoolClient for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GetUserPoolClientWithContext(ctx volcengine.Context, input *GetUserPoolClientInput, opts ...request.Option) (*GetUserPoolClientOutput, error) {
	req, out := c.GetUserPoolClientRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GetUserPoolClientInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ClientUid is a required field
	ClientUid *string `type:"string" json:",omitempty" required:"true"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s GetUserPoolClientInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUserPoolClientInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GetUserPoolClientInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GetUserPoolClientInput"}
	if s.ClientUid == nil {
		invalidParams.Add(request.NewErrParamRequired("ClientUid"))
	}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientUid sets the ClientUid field's value.
func (s *GetUserPoolClientInput) SetClientUid(v string) *GetUserPoolClientInput {
	s.ClientUid = &v
	return s
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *GetUserPoolClientInput) SetUserPoolUid(v string) *GetUserPoolClientInput {
	s.UserPoolUid = &v
	return s
}

type GetUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AllowedCallbackUrls []*string `type:"list" json:",omitempty"`

	AllowedCors []*string `type:"list" json:",omitempty"`

	AllowedLogoutUrls []*string `type:"list" json:",omitempty"`

	AllowedWebOrigins []*string `type:"list" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	ClientType *string `type:"string" json:",omitempty"`

	CreateTime *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	IdToken *IdTokenForGetUserPoolClientOutput `type:"structure" json:",omitempty"`

	LoginPageUrl *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	RefreshToken *RefreshTokenForGetUserPoolClientOutput `type:"structure" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UpdateTime *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GetUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GetUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetAllowedCallbackUrls sets the AllowedCallbackUrls field's value.
func (s *GetUserPoolClientOutput) SetAllowedCallbackUrls(v []*string) *GetUserPoolClientOutput {
	s.AllowedCallbackUrls = v
	return s
}

// SetAllowedCors sets the AllowedCors field's value.
func (s *GetUserPoolClientOutput) SetAllowedCors(v []*string) *GetUserPoolClientOutput {
	s.AllowedCors = v
	return s
}

// SetAllowedLogoutUrls sets the AllowedLogoutUrls field's value.
func (s *GetUserPoolClientOutput) SetAllowedLogoutUrls(v []*string) *GetUserPoolClientOutput {
	s.AllowedLogoutUrls = v
	return s
}

// SetAllowedWebOrigins sets the AllowedWebOrigins field's value.
func (s *GetUserPoolClientOutput) SetAllowedWebOrigins(v []*string) *GetUserPoolClientOutput {
	s.AllowedWebOrigins = v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *GetUserPoolClientOutput) SetClientSecret(v string) *GetUserPoolClientOutput {
	s.ClientSecret = &v
	return s
}

// SetClientType sets the ClientType field's value.
func (s *GetUserPoolClientOutput) SetClientType(v string) *GetUserPoolClientOutput {
	s.ClientType = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *GetUserPoolClientOutput) SetCreateTime(v string) *GetUserPoolClientOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *GetUserPoolClientOutput) SetDescription(v string) *GetUserPoolClientOutput {
	s.Description = &v
	return s
}

// SetIdToken sets the IdToken field's value.
func (s *GetUserPoolClientOutput) SetIdToken(v *IdTokenForGetUserPoolClientOutput) *GetUserPoolClientOutput {
	s.IdToken = v
	return s
}

// SetLoginPageUrl sets the LoginPageUrl field's value.
func (s *GetUserPoolClientOutput) SetLoginPageUrl(v string) *GetUserPoolClientOutput {
	s.LoginPageUrl = &v
	return s
}

// SetName sets the Name field's value.
func (s *GetUserPoolClientOutput) SetName(v string) *GetUserPoolClientOutput {
	s.Name = &v
	return s
}

// SetRefreshToken sets the RefreshToken field's value.
func (s *GetUserPoolClientOutput) SetRefreshToken(v *RefreshTokenForGetUserPoolClientOutput) *GetUserPoolClientOutput {
	s.RefreshToken = v
	return s
}

// SetUid sets the Uid field's value.
func (s *GetUserPoolClientOutput) SetUid(v string) *GetUserPoolClientOutput {
	s.Uid = &v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *GetUserPoolClientOutput) SetUpdateTime(v string) *GetUserPoolClientOutput {
	s.UpdateTime = &v
	return s
}

type IdTokenForGetUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	LifetimeSeconds *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s IdTokenForGetUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s IdTokenForGetUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetLifetimeSeconds sets the LifetimeSeconds field's value.
func (s *IdTokenForGetUserPoolClientOutput) SetLifetimeSeconds(v int32) *IdTokenForGetUserPoolClientOutput {
	s.LifetimeSeconds = &v
	return s
}

type RefreshTokenForGetUserPoolClientOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CombinedLifetimeSeconds *int32 `type:"int32" json:",omitempty"`

	HasCombinedLifetime *bool `type:"boolean" json:",omitempty"`

	HasIdleLifetime *bool `type:"boolean" json:",omitempty"`

	IdleLifetimeSeconds *int32 `type:"int32" json:",omitempty"`

	Rotation *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s RefreshTokenForGetUserPoolClientOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RefreshTokenForGetUserPoolClientOutput) GoString() string {
	return s.String()
}

// SetCombinedLifetimeSeconds sets the CombinedLifetimeSeconds field's value.
func (s *RefreshTokenForGetUserPoolClientOutput) SetCombinedLifetimeSeconds(v int32) *RefreshTokenForGetUserPoolClientOutput {
	s.CombinedLifetimeSeconds = &v
	return s
}

// SetHasCombinedLifetime sets the HasCombinedLifetime field's value.
func (s *RefreshTokenForGetUserPoolClientOutput) SetHasCombinedLifetime(v bool) *RefreshTokenForGetUserPoolClientOutput {
	s.HasCombinedLifetime = &v
	return s
}

// SetHasIdleLifetime sets the HasIdleLifetime field's value.
func (s *RefreshTokenForGetUserPoolClientOutput) SetHasIdleLifetime(v bool) *RefreshTokenForGetUserPoolClientOutput {
	s.HasIdleLifetime = &v
	return s
}

// SetIdleLifetimeSeconds sets the IdleLifetimeSeconds field's value.
func (s *RefreshTokenForGetUserPoolClientOutput) SetIdleLifetimeSeconds(v int32) *RefreshTokenForGetUserPoolClientOutput {
	s.IdleLifetimeSeconds = &v
	return s
}

// SetRotation sets the Rotation field's value.
func (s *RefreshTokenForGetUserPoolClientOutput) SetRotation(v bool) *RefreshTokenForGetUserPoolClientOutput {
	s.Rotation = &v
	return s
}
