// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateWorkloadPoolCommon = "CreateWorkloadPool"

// CreateWorkloadPoolCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateWorkloadPoolCommon operation. The "output" return
// value will be populated with the CreateWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateWorkloadPoolCommon Send returns without error.
//
// See CreateWorkloadPoolCommon for more information on using the CreateWorkloadPoolCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateWorkloadPoolCommonRequest method.
//    req, resp := client.CreateWorkloadPoolCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateWorkloadPoolCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateWorkloadPoolCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateWorkloadPoolCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateWorkloadPoolCommon for usage and error information.
func (c *ID) CreateWorkloadPoolCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateWorkloadPoolCommonRequest(input)
	return out, req.Send()
}

// CreateWorkloadPoolCommonWithContext is the same as CreateWorkloadPoolCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateWorkloadPoolCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateWorkloadPoolCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateWorkloadPoolCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateWorkloadPool = "CreateWorkloadPool"

// CreateWorkloadPoolRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateWorkloadPool operation. The "output" return
// value will be populated with the CreateWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateWorkloadPoolCommon Send returns without error.
//
// See CreateWorkloadPool for more information on using the CreateWorkloadPool
// API call, and error handling.
//
//    // Example sending a request using the CreateWorkloadPoolRequest method.
//    req, resp := client.CreateWorkloadPoolRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateWorkloadPoolRequest(input *CreateWorkloadPoolInput) (req *request.Request, output *CreateWorkloadPoolOutput) {
	op := &request.Operation{
		Name:       opCreateWorkloadPool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateWorkloadPoolInput{}
	}

	output = &CreateWorkloadPoolOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateWorkloadPool API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateWorkloadPool for usage and error information.
func (c *ID) CreateWorkloadPool(input *CreateWorkloadPoolInput) (*CreateWorkloadPoolOutput, error) {
	req, out := c.CreateWorkloadPoolRequest(input)
	return out, req.Send()
}

// CreateWorkloadPoolWithContext is the same as CreateWorkloadPool with the addition of
// the ability to pass a context and additional request options.
//
// See CreateWorkloadPool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateWorkloadPoolWithContext(ctx volcengine.Context, input *CreateWorkloadPoolInput, opts ...request.Option) (*CreateWorkloadPoolOutput, error) {
	req, out := c.CreateWorkloadPoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateWorkloadPoolInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateWorkloadPoolInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateWorkloadPoolInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *CreateWorkloadPoolInput) SetDescription(v string) *CreateWorkloadPoolInput {
	s.Description = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *CreateWorkloadPoolInput) SetWorkloadPoolName(v string) *CreateWorkloadPoolInput {
	s.WorkloadPoolName = &v
	return s
}

type CreateWorkloadPoolOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	WorkloadPoolId *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateWorkloadPoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateWorkloadPoolOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *CreateWorkloadPoolOutput) SetCreatedAt(v string) *CreateWorkloadPoolOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateWorkloadPoolOutput) SetDescription(v string) *CreateWorkloadPoolOutput {
	s.Description = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *CreateWorkloadPoolOutput) SetTrn(v string) *CreateWorkloadPoolOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *CreateWorkloadPoolOutput) SetUpdatedAt(v string) *CreateWorkloadPoolOutput {
	s.UpdatedAt = &v
	return s
}

// SetWorkloadPoolId sets the WorkloadPoolId field's value.
func (s *CreateWorkloadPoolOutput) SetWorkloadPoolId(v string) *CreateWorkloadPoolOutput {
	s.WorkloadPoolId = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *CreateWorkloadPoolOutput) SetWorkloadPoolName(v string) *CreateWorkloadPoolOutput {
	s.WorkloadPoolName = &v
	return s
}
