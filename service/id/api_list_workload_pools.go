// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListWorkloadPoolsCommon = "ListWorkloadPools"

// ListWorkloadPoolsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWorkloadPoolsCommon operation. The "output" return
// value will be populated with the ListWorkloadPoolsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWorkloadPoolsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWorkloadPoolsCommon Send returns without error.
//
// See ListWorkloadPoolsCommon for more information on using the ListWorkloadPoolsCommon
// API call, and error handling.
//
//    // Example sending a request using the ListWorkloadPoolsCommonRequest method.
//    req, resp := client.ListWorkloadPoolsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListWorkloadPoolsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListWorkloadPoolsCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWorkloadPoolsCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListWorkloadPoolsCommon for usage and error information.
func (c *ID) ListWorkloadPoolsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListWorkloadPoolsCommonRequest(input)
	return out, req.Send()
}

// ListWorkloadPoolsCommonWithContext is the same as ListWorkloadPoolsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListWorkloadPoolsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListWorkloadPoolsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListWorkloadPoolsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListWorkloadPools = "ListWorkloadPools"

// ListWorkloadPoolsRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWorkloadPools operation. The "output" return
// value will be populated with the ListWorkloadPoolsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWorkloadPoolsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWorkloadPoolsCommon Send returns without error.
//
// See ListWorkloadPools for more information on using the ListWorkloadPools
// API call, and error handling.
//
//    // Example sending a request using the ListWorkloadPoolsRequest method.
//    req, resp := client.ListWorkloadPoolsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListWorkloadPoolsRequest(input *ListWorkloadPoolsInput) (req *request.Request, output *ListWorkloadPoolsOutput) {
	op := &request.Operation{
		Name:       opListWorkloadPools,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListWorkloadPoolsInput{}
	}

	output = &ListWorkloadPoolsOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWorkloadPools API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListWorkloadPools for usage and error information.
func (c *ID) ListWorkloadPools(input *ListWorkloadPoolsInput) (*ListWorkloadPoolsOutput, error) {
	req, out := c.ListWorkloadPoolsRequest(input)
	return out, req.Send()
}

// ListWorkloadPoolsWithContext is the same as ListWorkloadPools with the addition of
// the ability to pass a context and additional request options.
//
// See ListWorkloadPools for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListWorkloadPoolsWithContext(ctx volcengine.Context, input *ListWorkloadPoolsInput, opts ...request.Option) (*ListWorkloadPoolsOutput, error) {
	req, out := c.ListWorkloadPoolsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListWorkloadPoolsInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `min:"1" type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `max:"100" type:"int32" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListWorkloadPoolsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWorkloadPoolsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListWorkloadPoolsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListWorkloadPoolsInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageNumber != nil && *s.PageNumber < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageNumber", 1))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWorkloadPoolsInput) SetPageNumber(v int32) *ListWorkloadPoolsInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWorkloadPoolsInput) SetPageSize(v int32) *ListWorkloadPoolsInput {
	s.PageSize = &v
	return s
}

type ListWorkloadPoolsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`

	WorkloadPools []*WorkloadPoolForListWorkloadPoolsOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListWorkloadPoolsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWorkloadPoolsOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWorkloadPoolsOutput) SetPageNumber(v int32) *ListWorkloadPoolsOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWorkloadPoolsOutput) SetPageSize(v int32) *ListWorkloadPoolsOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListWorkloadPoolsOutput) SetTotalCount(v int32) *ListWorkloadPoolsOutput {
	s.TotalCount = &v
	return s
}

// SetWorkloadPools sets the WorkloadPools field's value.
func (s *ListWorkloadPoolsOutput) SetWorkloadPools(v []*WorkloadPoolForListWorkloadPoolsOutput) *ListWorkloadPoolsOutput {
	s.WorkloadPools = v
	return s
}

type WorkloadPoolForListWorkloadPoolsOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	WorkloadPoolId *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s WorkloadPoolForListWorkloadPoolsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WorkloadPoolForListWorkloadPoolsOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetCreatedAt(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetDescription(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.Description = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetTrn(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetUpdatedAt(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.UpdatedAt = &v
	return s
}

// SetWorkloadPoolId sets the WorkloadPoolId field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetWorkloadPoolId(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.WorkloadPoolId = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *WorkloadPoolForListWorkloadPoolsOutput) SetWorkloadPoolName(v string) *WorkloadPoolForListWorkloadPoolsOutput {
	s.WorkloadPoolName = &v
	return s
}
