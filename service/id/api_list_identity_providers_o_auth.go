// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListIdentityProvidersOAuthCommon = "ListIdentityProvidersOAuth"

// ListIdentityProvidersOAuthCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIdentityProvidersOAuthCommon operation. The "output" return
// value will be populated with the ListIdentityProvidersOAuthCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIdentityProvidersOAuthCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIdentityProvidersOAuthCommon Send returns without error.
//
// See ListIdentityProvidersOAuthCommon for more information on using the ListIdentityProvidersOAuthCommon
// API call, and error handling.
//
//    // Example sending a request using the ListIdentityProvidersOAuthCommonRequest method.
//    req, resp := client.ListIdentityProvidersOAuthCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListIdentityProvidersOAuthCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListIdentityProvidersOAuthCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIdentityProvidersOAuthCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListIdentityProvidersOAuthCommon for usage and error information.
func (c *ID) ListIdentityProvidersOAuthCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListIdentityProvidersOAuthCommonRequest(input)
	return out, req.Send()
}

// ListIdentityProvidersOAuthCommonWithContext is the same as ListIdentityProvidersOAuthCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListIdentityProvidersOAuthCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListIdentityProvidersOAuthCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListIdentityProvidersOAuthCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListIdentityProvidersOAuth = "ListIdentityProvidersOAuth"

// ListIdentityProvidersOAuthRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIdentityProvidersOAuth operation. The "output" return
// value will be populated with the ListIdentityProvidersOAuthCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIdentityProvidersOAuthCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIdentityProvidersOAuthCommon Send returns without error.
//
// See ListIdentityProvidersOAuth for more information on using the ListIdentityProvidersOAuth
// API call, and error handling.
//
//    // Example sending a request using the ListIdentityProvidersOAuthRequest method.
//    req, resp := client.ListIdentityProvidersOAuthRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListIdentityProvidersOAuthRequest(input *ListIdentityProvidersOAuthInput) (req *request.Request, output *ListIdentityProvidersOAuthOutput) {
	op := &request.Operation{
		Name:       opListIdentityProvidersOAuth,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListIdentityProvidersOAuthInput{}
	}

	output = &ListIdentityProvidersOAuthOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIdentityProvidersOAuth API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListIdentityProvidersOAuth for usage and error information.
func (c *ID) ListIdentityProvidersOAuth(input *ListIdentityProvidersOAuthInput) (*ListIdentityProvidersOAuthOutput, error) {
	req, out := c.ListIdentityProvidersOAuthRequest(input)
	return out, req.Send()
}

// ListIdentityProvidersOAuthWithContext is the same as ListIdentityProvidersOAuth with the addition of
// the ability to pass a context and additional request options.
//
// See ListIdentityProvidersOAuth for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListIdentityProvidersOAuthWithContext(ctx volcengine.Context, input *ListIdentityProvidersOAuthInput, opts ...request.Option) (*ListIdentityProvidersOAuthOutput, error) {
	req, out := c.ListIdentityProvidersOAuthRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListIdentityProvidersOAuthOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AuthorizationEndpoint *string `type:"string" json:",omitempty"`

	ClientId *string `type:"string" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	IdAttribute *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProviderOptions *ProviderOptionsForListIdentityProvidersOAuthOutput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	TokenEndpoint *string `type:"string" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UsePkce *bool `type:"boolean" json:",omitempty"`

	UserEndpoint *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s DataForListIdentityProvidersOAuthOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListIdentityProvidersOAuthOutput) GoString() string {
	return s.String()
}

// SetAuthorizationEndpoint sets the AuthorizationEndpoint field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetAuthorizationEndpoint(v string) *DataForListIdentityProvidersOAuthOutput {
	s.AuthorizationEndpoint = &v
	return s
}

// SetClientId sets the ClientId field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetClientId(v string) *DataForListIdentityProvidersOAuthOutput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetClientSecret(v string) *DataForListIdentityProvidersOAuthOutput {
	s.ClientSecret = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetEnabled(v bool) *DataForListIdentityProvidersOAuthOutput {
	s.Enabled = &v
	return s
}

// SetIdAttribute sets the IdAttribute field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetIdAttribute(v string) *DataForListIdentityProvidersOAuthOutput {
	s.IdAttribute = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetName(v string) *DataForListIdentityProvidersOAuthOutput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetProviderOptions(v *ProviderOptionsForListIdentityProvidersOAuthOutput) *DataForListIdentityProvidersOAuthOutput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetScopesList(v []*string) *DataForListIdentityProvidersOAuthOutput {
	s.ScopesList = v
	return s
}

// SetTokenEndpoint sets the TokenEndpoint field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetTokenEndpoint(v string) *DataForListIdentityProvidersOAuthOutput {
	s.TokenEndpoint = &v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetUid(v string) *DataForListIdentityProvidersOAuthOutput {
	s.Uid = &v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetUsePkce(v bool) *DataForListIdentityProvidersOAuthOutput {
	s.UsePkce = &v
	return s
}

// SetUserEndpoint sets the UserEndpoint field's value.
func (s *DataForListIdentityProvidersOAuthOutput) SetUserEndpoint(v string) *DataForListIdentityProvidersOAuthOutput {
	s.UserEndpoint = &v
	return s
}

type ListIdentityProvidersOAuthInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListIdentityProvidersOAuthInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIdentityProvidersOAuthInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListIdentityProvidersOAuthInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListIdentityProvidersOAuthInput"}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *ListIdentityProvidersOAuthInput) SetUserPoolUid(v string) *ListIdentityProvidersOAuthInput {
	s.UserPoolUid = &v
	return s
}

type ListIdentityProvidersOAuthOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListIdentityProvidersOAuthOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListIdentityProvidersOAuthOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIdentityProvidersOAuthOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListIdentityProvidersOAuthOutput) SetData(v []*DataForListIdentityProvidersOAuthOutput) *ListIdentityProvidersOAuthOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListIdentityProvidersOAuthOutput) SetPageNumber(v int32) *ListIdentityProvidersOAuthOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListIdentityProvidersOAuthOutput) SetPageSize(v int32) *ListIdentityProvidersOAuthOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListIdentityProvidersOAuthOutput) SetTotalCount(v int32) *ListIdentityProvidersOAuthOutput {
	s.TotalCount = &v
	return s
}

type ProviderOptionsForListIdentityProvidersOAuthOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForListIdentityProvidersOAuthOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForListIdentityProvidersOAuthOutput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForListIdentityProvidersOAuthOutput) SetAutoLinking(v string) *ProviderOptionsForListIdentityProvidersOAuthOutput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForListIdentityProvidersOAuthOutput) SetIsAutoCreation(v bool) *ProviderOptionsForListIdentityProvidersOAuthOutput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForListIdentityProvidersOAuthOutput) SetIsAutoUpdate(v bool) *ProviderOptionsForListIdentityProvidersOAuthOutput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForListIdentityProvidersOAuthOutput) SetIsCreationAllowed(v bool) *ProviderOptionsForListIdentityProvidersOAuthOutput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForListIdentityProvidersOAuthOutput) SetIsLinkingAllowed(v bool) *ProviderOptionsForListIdentityProvidersOAuthOutput {
	s.IsLinkingAllowed = &v
	return s
}
