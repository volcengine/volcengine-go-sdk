// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateWorkloadPoolCommon = "UpdateWorkloadPool"

// UpdateWorkloadPoolCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateWorkloadPoolCommon operation. The "output" return
// value will be populated with the UpdateWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateWorkloadPoolCommon Send returns without error.
//
// See UpdateWorkloadPoolCommon for more information on using the UpdateWorkloadPoolCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateWorkloadPoolCommonRequest method.
//    req, resp := client.UpdateWorkloadPoolCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateWorkloadPoolCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateWorkloadPoolCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateWorkloadPoolCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateWorkloadPoolCommon for usage and error information.
func (c *ID) UpdateWorkloadPoolCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateWorkloadPoolCommonRequest(input)
	return out, req.Send()
}

// UpdateWorkloadPoolCommonWithContext is the same as UpdateWorkloadPoolCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateWorkloadPoolCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateWorkloadPoolCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateWorkloadPoolCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateWorkloadPool = "UpdateWorkloadPool"

// UpdateWorkloadPoolRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateWorkloadPool operation. The "output" return
// value will be populated with the UpdateWorkloadPoolCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateWorkloadPoolCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateWorkloadPoolCommon Send returns without error.
//
// See UpdateWorkloadPool for more information on using the UpdateWorkloadPool
// API call, and error handling.
//
//    // Example sending a request using the UpdateWorkloadPoolRequest method.
//    req, resp := client.UpdateWorkloadPoolRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) UpdateWorkloadPoolRequest(input *UpdateWorkloadPoolInput) (req *request.Request, output *UpdateWorkloadPoolOutput) {
	op := &request.Operation{
		Name:       opUpdateWorkloadPool,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateWorkloadPoolInput{}
	}

	output = &UpdateWorkloadPoolOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateWorkloadPool API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation UpdateWorkloadPool for usage and error information.
func (c *ID) UpdateWorkloadPool(input *UpdateWorkloadPoolInput) (*UpdateWorkloadPoolOutput, error) {
	req, out := c.UpdateWorkloadPoolRequest(input)
	return out, req.Send()
}

// UpdateWorkloadPoolWithContext is the same as UpdateWorkloadPool with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateWorkloadPool for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) UpdateWorkloadPoolWithContext(ctx volcengine.Context, input *UpdateWorkloadPoolInput, opts ...request.Option) (*UpdateWorkloadPoolOutput, error) {
	req, out := c.UpdateWorkloadPoolRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type UpdateWorkloadPoolInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateWorkloadPoolInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateWorkloadPoolInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *UpdateWorkloadPoolInput) SetDescription(v string) *UpdateWorkloadPoolInput {
	s.Description = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *UpdateWorkloadPoolInput) SetWorkloadPoolName(v string) *UpdateWorkloadPoolInput {
	s.WorkloadPoolName = &v
	return s
}

type UpdateWorkloadPoolOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateWorkloadPoolOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateWorkloadPoolOutput) GoString() string {
	return s.String()
}
