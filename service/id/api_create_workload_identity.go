// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateWorkloadIdentityCommon = "CreateWorkloadIdentity"

// CreateWorkloadIdentityCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateWorkloadIdentityCommon operation. The "output" return
// value will be populated with the CreateWorkloadIdentityCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateWorkloadIdentityCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateWorkloadIdentityCommon Send returns without error.
//
// See CreateWorkloadIdentityCommon for more information on using the CreateWorkloadIdentityCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateWorkloadIdentityCommonRequest method.
//    req, resp := client.CreateWorkloadIdentityCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateWorkloadIdentityCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateWorkloadIdentityCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateWorkloadIdentityCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateWorkloadIdentityCommon for usage and error information.
func (c *ID) CreateWorkloadIdentityCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateWorkloadIdentityCommonRequest(input)
	return out, req.Send()
}

// CreateWorkloadIdentityCommonWithContext is the same as CreateWorkloadIdentityCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateWorkloadIdentityCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateWorkloadIdentityCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateWorkloadIdentityCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateWorkloadIdentity = "CreateWorkloadIdentity"

// CreateWorkloadIdentityRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateWorkloadIdentity operation. The "output" return
// value will be populated with the CreateWorkloadIdentityCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateWorkloadIdentityCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateWorkloadIdentityCommon Send returns without error.
//
// See CreateWorkloadIdentity for more information on using the CreateWorkloadIdentity
// API call, and error handling.
//
//    // Example sending a request using the CreateWorkloadIdentityRequest method.
//    req, resp := client.CreateWorkloadIdentityRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateWorkloadIdentityRequest(input *CreateWorkloadIdentityInput) (req *request.Request, output *CreateWorkloadIdentityOutput) {
	op := &request.Operation{
		Name:       opCreateWorkloadIdentity,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateWorkloadIdentityInput{}
	}

	output = &CreateWorkloadIdentityOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateWorkloadIdentity API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateWorkloadIdentity for usage and error information.
func (c *ID) CreateWorkloadIdentity(input *CreateWorkloadIdentityInput) (*CreateWorkloadIdentityOutput, error) {
	req, out := c.CreateWorkloadIdentityRequest(input)
	return out, req.Send()
}

// CreateWorkloadIdentityWithContext is the same as CreateWorkloadIdentity with the addition of
// the ability to pass a context and additional request options.
//
// See CreateWorkloadIdentity for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateWorkloadIdentityWithContext(ctx volcengine.Context, input *CreateWorkloadIdentityInput, opts ...request.Option) (*CreateWorkloadIdentityOutput, error) {
	req, out := c.CreateWorkloadIdentityRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateWorkloadIdentityInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedResourceOauth2ReturnUrls []*string `type:"list" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateWorkloadIdentityInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateWorkloadIdentityInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateWorkloadIdentityInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateWorkloadIdentityInput"}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAllowedResourceOauth2ReturnUrls sets the AllowedResourceOauth2ReturnUrls field's value.
func (s *CreateWorkloadIdentityInput) SetAllowedResourceOauth2ReturnUrls(v []*string) *CreateWorkloadIdentityInput {
	s.AllowedResourceOauth2ReturnUrls = v
	return s
}

// SetCategory sets the Category field's value.
func (s *CreateWorkloadIdentityInput) SetCategory(v string) *CreateWorkloadIdentityInput {
	s.Category = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateWorkloadIdentityInput) SetDescription(v string) *CreateWorkloadIdentityInput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateWorkloadIdentityInput) SetName(v string) *CreateWorkloadIdentityInput {
	s.Name = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *CreateWorkloadIdentityInput) SetWorkloadPoolName(v string) *CreateWorkloadIdentityInput {
	s.WorkloadPoolName = &v
	return s
}

type CreateWorkloadIdentityOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	AllowedResourceOauth2ReturnUrls []*string `type:"list" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s CreateWorkloadIdentityOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateWorkloadIdentityOutput) GoString() string {
	return s.String()
}

// SetAllowedResourceOauth2ReturnUrls sets the AllowedResourceOauth2ReturnUrls field's value.
func (s *CreateWorkloadIdentityOutput) SetAllowedResourceOauth2ReturnUrls(v []*string) *CreateWorkloadIdentityOutput {
	s.AllowedResourceOauth2ReturnUrls = v
	return s
}

// SetCategory sets the Category field's value.
func (s *CreateWorkloadIdentityOutput) SetCategory(v string) *CreateWorkloadIdentityOutput {
	s.Category = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *CreateWorkloadIdentityOutput) SetCreatedAt(v string) *CreateWorkloadIdentityOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateWorkloadIdentityOutput) SetDescription(v string) *CreateWorkloadIdentityOutput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *CreateWorkloadIdentityOutput) SetName(v string) *CreateWorkloadIdentityOutput {
	s.Name = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *CreateWorkloadIdentityOutput) SetTrn(v string) *CreateWorkloadIdentityOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *CreateWorkloadIdentityOutput) SetUpdatedAt(v string) *CreateWorkloadIdentityOutput {
	s.UpdatedAt = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *CreateWorkloadIdentityOutput) SetWorkloadPoolName(v string) *CreateWorkloadIdentityOutput {
	s.WorkloadPoolName = &v
	return s
}
