// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opGrantPermissionCommon = "GrantPermission"

// GrantPermissionCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the GrantPermissionCommon operation. The "output" return
// value will be populated with the GrantPermissionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GrantPermissionCommon Request to send the API call to the service.
// the "output" return value is not valid until after GrantPermissionCommon Send returns without error.
//
// See GrantPermissionCommon for more information on using the GrantPermissionCommon
// API call, and error handling.
//
//    // Example sending a request using the GrantPermissionCommonRequest method.
//    req, resp := client.GrantPermissionCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GrantPermissionCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opGrantPermissionCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GrantPermissionCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GrantPermissionCommon for usage and error information.
func (c *ID) GrantPermissionCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.GrantPermissionCommonRequest(input)
	return out, req.Send()
}

// GrantPermissionCommonWithContext is the same as GrantPermissionCommon with the addition of
// the ability to pass a context and additional request options.
//
// See GrantPermissionCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GrantPermissionCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.GrantPermissionCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opGrantPermission = "GrantPermission"

// GrantPermissionRequest generates a "volcengine/request.Request" representing the
// client's request for the GrantPermission operation. The "output" return
// value will be populated with the GrantPermissionCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned GrantPermissionCommon Request to send the API call to the service.
// the "output" return value is not valid until after GrantPermissionCommon Send returns without error.
//
// See GrantPermission for more information on using the GrantPermission
// API call, and error handling.
//
//    // Example sending a request using the GrantPermissionRequest method.
//    req, resp := client.GrantPermissionRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) GrantPermissionRequest(input *GrantPermissionInput) (req *request.Request, output *GrantPermissionOutput) {
	op := &request.Operation{
		Name:       opGrantPermission,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &GrantPermissionInput{}
	}

	output = &GrantPermissionOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// GrantPermission API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation GrantPermission for usage and error information.
func (c *ID) GrantPermission(input *GrantPermissionInput) (*GrantPermissionOutput, error) {
	req, out := c.GrantPermissionRequest(input)
	return out, req.Send()
}

// GrantPermissionWithContext is the same as GrantPermission with the addition of
// the ability to pass a context and additional request options.
//
// See GrantPermission for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) GrantPermissionWithContext(ctx volcengine.Context, input *GrantPermissionInput, opts ...request.Option) (*GrantPermissionOutput, error) {
	req, out := c.GrantPermissionRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type GrantPermissionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// NamespaceName is a required field
	NamespaceName *string `type:"string" json:",omitempty" required:"true"`

	Operation *OperationForGrantPermissionInput `type:"structure" json:",omitempty"`

	OriginalCallers []*OriginalCallerForGrantPermissionInput `type:"list" json:",omitempty"`

	Principal *PrincipalForGrantPermissionInput `type:"structure" json:",omitempty"`

	Resource *ResourceForGrantPermissionInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s GrantPermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantPermissionInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *GrantPermissionInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "GrantPermissionInput"}
	if s.NamespaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("NamespaceName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetNamespaceName sets the NamespaceName field's value.
func (s *GrantPermissionInput) SetNamespaceName(v string) *GrantPermissionInput {
	s.NamespaceName = &v
	return s
}

// SetOperation sets the Operation field's value.
func (s *GrantPermissionInput) SetOperation(v *OperationForGrantPermissionInput) *GrantPermissionInput {
	s.Operation = v
	return s
}

// SetOriginalCallers sets the OriginalCallers field's value.
func (s *GrantPermissionInput) SetOriginalCallers(v []*OriginalCallerForGrantPermissionInput) *GrantPermissionInput {
	s.OriginalCallers = v
	return s
}

// SetPrincipal sets the Principal field's value.
func (s *GrantPermissionInput) SetPrincipal(v *PrincipalForGrantPermissionInput) *GrantPermissionInput {
	s.Principal = v
	return s
}

// SetResource sets the Resource field's value.
func (s *GrantPermissionInput) SetResource(v *ResourceForGrantPermissionInput) *GrantPermissionInput {
	s.Resource = v
	return s
}

type GrantPermissionOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	NamespaceId *string `type:"string" json:",omitempty"`

	Policy *string `type:"string" json:",omitempty"`

	PolicyId *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s GrantPermissionOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s GrantPermissionOutput) GoString() string {
	return s.String()
}

// SetNamespaceId sets the NamespaceId field's value.
func (s *GrantPermissionOutput) SetNamespaceId(v string) *GrantPermissionOutput {
	s.NamespaceId = &v
	return s
}

// SetPolicy sets the Policy field's value.
func (s *GrantPermissionOutput) SetPolicy(v string) *GrantPermissionOutput {
	s.Policy = &v
	return s
}

// SetPolicyId sets the PolicyId field's value.
func (s *GrantPermissionOutput) SetPolicyId(v string) *GrantPermissionOutput {
	s.PolicyId = &v
	return s
}

type OperationForGrantPermissionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OperationForGrantPermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperationForGrantPermissionInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *OperationForGrantPermissionInput) SetId(v string) *OperationForGrantPermissionInput {
	s.Id = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *OperationForGrantPermissionInput) SetOperator(v string) *OperationForGrantPermissionInput {
	s.Operator = &v
	return s
}

// SetType sets the Type field's value.
func (s *OperationForGrantPermissionInput) SetType(v string) *OperationForGrantPermissionInput {
	s.Type = &v
	return s
}

type OriginalCallerForGrantPermissionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s OriginalCallerForGrantPermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OriginalCallerForGrantPermissionInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *OriginalCallerForGrantPermissionInput) SetId(v string) *OriginalCallerForGrantPermissionInput {
	s.Id = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *OriginalCallerForGrantPermissionInput) SetOperator(v string) *OriginalCallerForGrantPermissionInput {
	s.Operator = &v
	return s
}

// SetType sets the Type field's value.
func (s *OriginalCallerForGrantPermissionInput) SetType(v string) *OriginalCallerForGrantPermissionInput {
	s.Type = &v
	return s
}

type PrincipalForGrantPermissionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PrincipalForGrantPermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PrincipalForGrantPermissionInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *PrincipalForGrantPermissionInput) SetId(v string) *PrincipalForGrantPermissionInput {
	s.Id = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *PrincipalForGrantPermissionInput) SetOperator(v string) *PrincipalForGrantPermissionInput {
	s.Operator = &v
	return s
}

// SetType sets the Type field's value.
func (s *PrincipalForGrantPermissionInput) SetType(v string) *PrincipalForGrantPermissionInput {
	s.Type = &v
	return s
}

type ResourceForGrantPermissionInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Operator *string `type:"string" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ResourceForGrantPermissionInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceForGrantPermissionInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *ResourceForGrantPermissionInput) SetId(v string) *ResourceForGrantPermissionInput {
	s.Id = &v
	return s
}

// SetOperator sets the Operator field's value.
func (s *ResourceForGrantPermissionInput) SetOperator(v string) *ResourceForGrantPermissionInput {
	s.Operator = &v
	return s
}

// SetType sets the Type field's value.
func (s *ResourceForGrantPermissionInput) SetType(v string) *ResourceForGrantPermissionInput {
	s.Type = &v
	return s
}
