// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opBatchGetOauth2CredentialProvidersCommon = "BatchGetOauth2CredentialProviders"

// BatchGetOauth2CredentialProvidersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchGetOauth2CredentialProvidersCommon operation. The "output" return
// value will be populated with the BatchGetOauth2CredentialProvidersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchGetOauth2CredentialProvidersCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchGetOauth2CredentialProvidersCommon Send returns without error.
//
// See BatchGetOauth2CredentialProvidersCommon for more information on using the BatchGetOauth2CredentialProvidersCommon
// API call, and error handling.
//
//    // Example sending a request using the BatchGetOauth2CredentialProvidersCommonRequest method.
//    req, resp := client.BatchGetOauth2CredentialProvidersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) BatchGetOauth2CredentialProvidersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opBatchGetOauth2CredentialProvidersCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchGetOauth2CredentialProvidersCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation BatchGetOauth2CredentialProvidersCommon for usage and error information.
func (c *ID) BatchGetOauth2CredentialProvidersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.BatchGetOauth2CredentialProvidersCommonRequest(input)
	return out, req.Send()
}

// BatchGetOauth2CredentialProvidersCommonWithContext is the same as BatchGetOauth2CredentialProvidersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See BatchGetOauth2CredentialProvidersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) BatchGetOauth2CredentialProvidersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.BatchGetOauth2CredentialProvidersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opBatchGetOauth2CredentialProviders = "BatchGetOauth2CredentialProviders"

// BatchGetOauth2CredentialProvidersRequest generates a "volcengine/request.Request" representing the
// client's request for the BatchGetOauth2CredentialProviders operation. The "output" return
// value will be populated with the BatchGetOauth2CredentialProvidersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned BatchGetOauth2CredentialProvidersCommon Request to send the API call to the service.
// the "output" return value is not valid until after BatchGetOauth2CredentialProvidersCommon Send returns without error.
//
// See BatchGetOauth2CredentialProviders for more information on using the BatchGetOauth2CredentialProviders
// API call, and error handling.
//
//    // Example sending a request using the BatchGetOauth2CredentialProvidersRequest method.
//    req, resp := client.BatchGetOauth2CredentialProvidersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) BatchGetOauth2CredentialProvidersRequest(input *BatchGetOauth2CredentialProvidersInput) (req *request.Request, output *BatchGetOauth2CredentialProvidersOutput) {
	op := &request.Operation{
		Name:       opBatchGetOauth2CredentialProviders,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &BatchGetOauth2CredentialProvidersInput{}
	}

	output = &BatchGetOauth2CredentialProvidersOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// BatchGetOauth2CredentialProviders API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation BatchGetOauth2CredentialProviders for usage and error information.
func (c *ID) BatchGetOauth2CredentialProviders(input *BatchGetOauth2CredentialProvidersInput) (*BatchGetOauth2CredentialProvidersOutput, error) {
	req, out := c.BatchGetOauth2CredentialProvidersRequest(input)
	return out, req.Send()
}

// BatchGetOauth2CredentialProvidersWithContext is the same as BatchGetOauth2CredentialProviders with the addition of
// the ability to pass a context and additional request options.
//
// See BatchGetOauth2CredentialProviders for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) BatchGetOauth2CredentialProvidersWithContext(ctx volcengine.Context, input *BatchGetOauth2CredentialProvidersInput, opts ...request.Option) (*BatchGetOauth2CredentialProvidersOutput, error) {
	req, out := c.BatchGetOauth2CredentialProvidersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type BatchGetOauth2CredentialProvidersInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Names []*string `type:"list" json:",omitempty"`

	PoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s BatchGetOauth2CredentialProvidersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchGetOauth2CredentialProvidersInput) GoString() string {
	return s.String()
}

// SetNames sets the Names field's value.
func (s *BatchGetOauth2CredentialProvidersInput) SetNames(v []*string) *BatchGetOauth2CredentialProvidersInput {
	s.Names = v
	return s
}

// SetPoolName sets the PoolName field's value.
func (s *BatchGetOauth2CredentialProvidersInput) SetPoolName(v string) *BatchGetOauth2CredentialProvidersInput {
	s.PoolName = &v
	return s
}

type BatchGetOauth2CredentialProvidersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Oauth2CredentialProviders []*Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s BatchGetOauth2CredentialProvidersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s BatchGetOauth2CredentialProvidersOutput) GoString() string {
	return s.String()
}

// SetOauth2CredentialProviders sets the Oauth2CredentialProviders field's value.
func (s *BatchGetOauth2CredentialProvidersOutput) SetOauth2CredentialProviders(v []*Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) *BatchGetOauth2CredentialProvidersOutput {
	s.Oauth2CredentialProviders = v
	return s
}

type Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	CredentialProviderTrn *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	Vendor *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) GoString() string {
	return s.String()
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) SetCreatedAt(v string) *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput {
	s.CreatedAt = &v
	return s
}

// SetCredentialProviderTrn sets the CredentialProviderTrn field's value.
func (s *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) SetCredentialProviderTrn(v string) *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput {
	s.CredentialProviderTrn = &v
	return s
}

// SetName sets the Name field's value.
func (s *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) SetName(v string) *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput {
	s.Name = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) SetUpdatedAt(v string) *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput {
	s.UpdatedAt = &v
	return s
}

// SetVendor sets the Vendor field's value.
func (s *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput) SetVendor(v int32) *Oauth2CredentialProviderForBatchGetOauth2CredentialProvidersOutput {
	s.Vendor = &v
	return s
}
