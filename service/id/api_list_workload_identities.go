// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListWorkloadIdentitiesCommon = "ListWorkloadIdentities"

// ListWorkloadIdentitiesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWorkloadIdentitiesCommon operation. The "output" return
// value will be populated with the ListWorkloadIdentitiesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWorkloadIdentitiesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWorkloadIdentitiesCommon Send returns without error.
//
// See ListWorkloadIdentitiesCommon for more information on using the ListWorkloadIdentitiesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListWorkloadIdentitiesCommonRequest method.
//    req, resp := client.ListWorkloadIdentitiesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListWorkloadIdentitiesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListWorkloadIdentitiesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWorkloadIdentitiesCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListWorkloadIdentitiesCommon for usage and error information.
func (c *ID) ListWorkloadIdentitiesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListWorkloadIdentitiesCommonRequest(input)
	return out, req.Send()
}

// ListWorkloadIdentitiesCommonWithContext is the same as ListWorkloadIdentitiesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListWorkloadIdentitiesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListWorkloadIdentitiesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListWorkloadIdentitiesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListWorkloadIdentities = "ListWorkloadIdentities"

// ListWorkloadIdentitiesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListWorkloadIdentities operation. The "output" return
// value will be populated with the ListWorkloadIdentitiesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListWorkloadIdentitiesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListWorkloadIdentitiesCommon Send returns without error.
//
// See ListWorkloadIdentities for more information on using the ListWorkloadIdentities
// API call, and error handling.
//
//    // Example sending a request using the ListWorkloadIdentitiesRequest method.
//    req, resp := client.ListWorkloadIdentitiesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListWorkloadIdentitiesRequest(input *ListWorkloadIdentitiesInput) (req *request.Request, output *ListWorkloadIdentitiesOutput) {
	op := &request.Operation{
		Name:       opListWorkloadIdentities,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListWorkloadIdentitiesInput{}
	}

	output = &ListWorkloadIdentitiesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListWorkloadIdentities API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListWorkloadIdentities for usage and error information.
func (c *ID) ListWorkloadIdentities(input *ListWorkloadIdentitiesInput) (*ListWorkloadIdentitiesOutput, error) {
	req, out := c.ListWorkloadIdentitiesRequest(input)
	return out, req.Send()
}

// ListWorkloadIdentitiesWithContext is the same as ListWorkloadIdentities with the addition of
// the ability to pass a context and additional request options.
//
// See ListWorkloadIdentities for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListWorkloadIdentitiesWithContext(ctx volcengine.Context, input *ListWorkloadIdentitiesInput, opts ...request.Option) (*ListWorkloadIdentitiesOutput, error) {
	req, out := c.ListWorkloadIdentitiesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListWorkloadIdentitiesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	// PageNumber is a required field
	PageNumber *int32 `min:"1" type:"int32" json:",omitempty" required:"true"`

	// PageSize is a required field
	PageSize *int32 `max:"100" type:"int32" json:",omitempty" required:"true"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ListWorkloadIdentitiesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWorkloadIdentitiesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListWorkloadIdentitiesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListWorkloadIdentitiesInput"}
	if s.PageNumber == nil {
		invalidParams.Add(request.NewErrParamRequired("PageNumber"))
	}
	if s.PageNumber != nil && *s.PageNumber < 1 {
		invalidParams.Add(request.NewErrParamMinValue("PageNumber", 1))
	}
	if s.PageSize == nil {
		invalidParams.Add(request.NewErrParamRequired("PageSize"))
	}
	if s.PageSize != nil && *s.PageSize > 100 {
		invalidParams.Add(request.NewErrParamMaxValue("PageSize", 100))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCategory sets the Category field's value.
func (s *ListWorkloadIdentitiesInput) SetCategory(v string) *ListWorkloadIdentitiesInput {
	s.Category = &v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWorkloadIdentitiesInput) SetPageNumber(v int32) *ListWorkloadIdentitiesInput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWorkloadIdentitiesInput) SetPageSize(v int32) *ListWorkloadIdentitiesInput {
	s.PageSize = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *ListWorkloadIdentitiesInput) SetWorkloadPoolName(v string) *ListWorkloadIdentitiesInput {
	s.WorkloadPoolName = &v
	return s
}

type ListWorkloadIdentitiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`

	WorkloadIdentities []*WorkloadIdentityForListWorkloadIdentitiesOutput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ListWorkloadIdentitiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListWorkloadIdentitiesOutput) GoString() string {
	return s.String()
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListWorkloadIdentitiesOutput) SetPageNumber(v int32) *ListWorkloadIdentitiesOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListWorkloadIdentitiesOutput) SetPageSize(v int32) *ListWorkloadIdentitiesOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListWorkloadIdentitiesOutput) SetTotalCount(v int32) *ListWorkloadIdentitiesOutput {
	s.TotalCount = &v
	return s
}

// SetWorkloadIdentities sets the WorkloadIdentities field's value.
func (s *ListWorkloadIdentitiesOutput) SetWorkloadIdentities(v []*WorkloadIdentityForListWorkloadIdentitiesOutput) *ListWorkloadIdentitiesOutput {
	s.WorkloadIdentities = v
	return s
}

type WorkloadIdentityForListWorkloadIdentitiesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AllowedResourceOauth2ReturnUrls []*string `type:"list" json:",omitempty"`

	Category *string `type:"string" json:",omitempty"`

	CreatedAt *string `type:"string" json:",omitempty"`

	Description *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Trn *string `type:"string" json:",omitempty"`

	UpdatedAt *string `type:"string" json:",omitempty"`

	WorkloadPoolName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s WorkloadIdentityForListWorkloadIdentitiesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s WorkloadIdentityForListWorkloadIdentitiesOutput) GoString() string {
	return s.String()
}

// SetAllowedResourceOauth2ReturnUrls sets the AllowedResourceOauth2ReturnUrls field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetAllowedResourceOauth2ReturnUrls(v []*string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.AllowedResourceOauth2ReturnUrls = v
	return s
}

// SetCategory sets the Category field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetCategory(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.Category = &v
	return s
}

// SetCreatedAt sets the CreatedAt field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetCreatedAt(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.CreatedAt = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetDescription(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.Description = &v
	return s
}

// SetName sets the Name field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetName(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.Name = &v
	return s
}

// SetTrn sets the Trn field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetTrn(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.Trn = &v
	return s
}

// SetUpdatedAt sets the UpdatedAt field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetUpdatedAt(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.UpdatedAt = &v
	return s
}

// SetWorkloadPoolName sets the WorkloadPoolName field's value.
func (s *WorkloadIdentityForListWorkloadIdentitiesOutput) SetWorkloadPoolName(v string) *WorkloadIdentityForListWorkloadIdentitiesOutput {
	s.WorkloadPoolName = &v
	return s
}
