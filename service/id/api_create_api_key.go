// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateApiKeyCommon = "CreateApiKey"

// CreateApiKeyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateApiKeyCommon operation. The "output" return
// value will be populated with the CreateApiKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateApiKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateApiKeyCommon Send returns without error.
//
// See CreateApiKeyCommon for more information on using the CreateApiKeyCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateApiKeyCommonRequest method.
//    req, resp := client.CreateApiKeyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateApiKeyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateApiKeyCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateApiKeyCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateApiKeyCommon for usage and error information.
func (c *ID) CreateApiKeyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateApiKeyCommonRequest(input)
	return out, req.Send()
}

// CreateApiKeyCommonWithContext is the same as CreateApiKeyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateApiKeyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateApiKeyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateApiKeyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateApiKey = "CreateApiKey"

// CreateApiKeyRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateApiKey operation. The "output" return
// value will be populated with the CreateApiKeyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateApiKeyCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateApiKeyCommon Send returns without error.
//
// See CreateApiKey for more information on using the CreateApiKey
// API call, and error handling.
//
//    // Example sending a request using the CreateApiKeyRequest method.
//    req, resp := client.CreateApiKeyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) CreateApiKeyRequest(input *CreateApiKeyInput) (req *request.Request, output *CreateApiKeyOutput) {
	op := &request.Operation{
		Name:       opCreateApiKey,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateApiKeyInput{}
	}

	output = &CreateApiKeyOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateApiKey API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation CreateApiKey for usage and error information.
func (c *ID) CreateApiKey(input *CreateApiKeyInput) (*CreateApiKeyOutput, error) {
	req, out := c.CreateApiKeyRequest(input)
	return out, req.Send()
}

// CreateApiKeyWithContext is the same as CreateApiKey with the addition of
// the ability to pass a context and additional request options.
//
// See CreateApiKey for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) CreateApiKeyWithContext(ctx volcengine.Context, input *CreateApiKeyInput, opts ...request.Option) (*CreateApiKeyOutput, error) {
	req, out := c.CreateApiKeyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ApiKeyAuthConfigForCreateApiKeyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKey *string `type:"string" json:",omitempty"`

	ApiKeyMetadata []*ApiKeyMetadataForCreateApiKeyInput `type:"list" json:",omitempty"`

	ApiKeyName *string `type:"string" json:",omitempty"`

	ExpiryTimestamp *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyAuthConfigForCreateApiKeyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyAuthConfigForCreateApiKeyInput) GoString() string {
	return s.String()
}

// SetApiKey sets the ApiKey field's value.
func (s *ApiKeyAuthConfigForCreateApiKeyInput) SetApiKey(v string) *ApiKeyAuthConfigForCreateApiKeyInput {
	s.ApiKey = &v
	return s
}

// SetApiKeyMetadata sets the ApiKeyMetadata field's value.
func (s *ApiKeyAuthConfigForCreateApiKeyInput) SetApiKeyMetadata(v []*ApiKeyMetadataForCreateApiKeyInput) *ApiKeyAuthConfigForCreateApiKeyInput {
	s.ApiKeyMetadata = v
	return s
}

// SetApiKeyName sets the ApiKeyName field's value.
func (s *ApiKeyAuthConfigForCreateApiKeyInput) SetApiKeyName(v string) *ApiKeyAuthConfigForCreateApiKeyInput {
	s.ApiKeyName = &v
	return s
}

// SetExpiryTimestamp sets the ExpiryTimestamp field's value.
func (s *ApiKeyAuthConfigForCreateApiKeyInput) SetExpiryTimestamp(v int64) *ApiKeyAuthConfigForCreateApiKeyInput {
	s.ExpiryTimestamp = &v
	return s
}

type ApiKeyMetadataForCreateApiKeyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Location *string `type:"string" json:",omitempty"`

	ParameterName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ApiKeyMetadataForCreateApiKeyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ApiKeyMetadataForCreateApiKeyInput) GoString() string {
	return s.String()
}

// SetLocation sets the Location field's value.
func (s *ApiKeyMetadataForCreateApiKeyInput) SetLocation(v string) *ApiKeyMetadataForCreateApiKeyInput {
	s.Location = &v
	return s
}

// SetParameterName sets the ParameterName field's value.
func (s *ApiKeyMetadataForCreateApiKeyInput) SetParameterName(v string) *ApiKeyMetadataForCreateApiKeyInput {
	s.ParameterName = &v
	return s
}

type CreateApiKeyInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ApiKeyAuthConfig *ApiKeyAuthConfigForCreateApiKeyInput `type:"structure" json:",omitempty"`

	// InboundAuthConfigId is a required field
	InboundAuthConfigId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateApiKeyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateApiKeyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateApiKeyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateApiKeyInput"}
	if s.InboundAuthConfigId == nil {
		invalidParams.Add(request.NewErrParamRequired("InboundAuthConfigId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetApiKeyAuthConfig sets the ApiKeyAuthConfig field's value.
func (s *CreateApiKeyInput) SetApiKeyAuthConfig(v *ApiKeyAuthConfigForCreateApiKeyInput) *CreateApiKeyInput {
	s.ApiKeyAuthConfig = v
	return s
}

// SetInboundAuthConfigId sets the InboundAuthConfigId field's value.
func (s *CreateApiKeyInput) SetInboundAuthConfigId(v string) *CreateApiKeyInput {
	s.InboundAuthConfigId = &v
	return s
}

type CreateApiKeyOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s CreateApiKeyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateApiKeyOutput) GoString() string {
	return s.String()
}
