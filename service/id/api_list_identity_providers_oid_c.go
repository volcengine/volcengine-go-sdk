// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package id

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListIdentityProvidersOIDCCommon = "ListIdentityProvidersOIDC"

// ListIdentityProvidersOIDCCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIdentityProvidersOIDCCommon operation. The "output" return
// value will be populated with the ListIdentityProvidersOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIdentityProvidersOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIdentityProvidersOIDCCommon Send returns without error.
//
// See ListIdentityProvidersOIDCCommon for more information on using the ListIdentityProvidersOIDCCommon
// API call, and error handling.
//
//    // Example sending a request using the ListIdentityProvidersOIDCCommonRequest method.
//    req, resp := client.ListIdentityProvidersOIDCCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListIdentityProvidersOIDCCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListIdentityProvidersOIDCCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIdentityProvidersOIDCCommon API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListIdentityProvidersOIDCCommon for usage and error information.
func (c *ID) ListIdentityProvidersOIDCCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListIdentityProvidersOIDCCommonRequest(input)
	return out, req.Send()
}

// ListIdentityProvidersOIDCCommonWithContext is the same as ListIdentityProvidersOIDCCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListIdentityProvidersOIDCCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListIdentityProvidersOIDCCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListIdentityProvidersOIDCCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListIdentityProvidersOIDC = "ListIdentityProvidersOIDC"

// ListIdentityProvidersOIDCRequest generates a "volcengine/request.Request" representing the
// client's request for the ListIdentityProvidersOIDC operation. The "output" return
// value will be populated with the ListIdentityProvidersOIDCCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListIdentityProvidersOIDCCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListIdentityProvidersOIDCCommon Send returns without error.
//
// See ListIdentityProvidersOIDC for more information on using the ListIdentityProvidersOIDC
// API call, and error handling.
//
//    // Example sending a request using the ListIdentityProvidersOIDCRequest method.
//    req, resp := client.ListIdentityProvidersOIDCRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *ID) ListIdentityProvidersOIDCRequest(input *ListIdentityProvidersOIDCInput) (req *request.Request, output *ListIdentityProvidersOIDCOutput) {
	op := &request.Operation{
		Name:       opListIdentityProvidersOIDC,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListIdentityProvidersOIDCInput{}
	}

	output = &ListIdentityProvidersOIDCOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ListIdentityProvidersOIDC API operation for ID.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for ID's
// API operation ListIdentityProvidersOIDC for usage and error information.
func (c *ID) ListIdentityProvidersOIDC(input *ListIdentityProvidersOIDCInput) (*ListIdentityProvidersOIDCOutput, error) {
	req, out := c.ListIdentityProvidersOIDCRequest(input)
	return out, req.Send()
}

// ListIdentityProvidersOIDCWithContext is the same as ListIdentityProvidersOIDC with the addition of
// the ability to pass a context and additional request options.
//
// See ListIdentityProvidersOIDC for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *ID) ListIdentityProvidersOIDCWithContext(ctx volcengine.Context, input *ListIdentityProvidersOIDCInput, opts ...request.Option) (*ListIdentityProvidersOIDCOutput, error) {
	req, out := c.ListIdentityProvidersOIDCRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DataForListIdentityProvidersOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ClientId *string `type:"string" json:",omitempty"`

	ClientSecret *string `type:"string" json:",omitempty"`

	Enabled *bool `type:"boolean" json:",omitempty"`

	IsIdTokenMapping *bool `type:"boolean" json:",omitempty"`

	Issuer *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	ProviderOptions *ProviderOptionsForListIdentityProvidersOIDCOutput `type:"structure" json:",omitempty"`

	ScopesList []*string `type:"list" json:",omitempty"`

	Uid *string `type:"string" json:",omitempty"`

	UsePkce *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s DataForListIdentityProvidersOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DataForListIdentityProvidersOIDCOutput) GoString() string {
	return s.String()
}

// SetClientId sets the ClientId field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetClientId(v string) *DataForListIdentityProvidersOIDCOutput {
	s.ClientId = &v
	return s
}

// SetClientSecret sets the ClientSecret field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetClientSecret(v string) *DataForListIdentityProvidersOIDCOutput {
	s.ClientSecret = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetEnabled(v bool) *DataForListIdentityProvidersOIDCOutput {
	s.Enabled = &v
	return s
}

// SetIsIdTokenMapping sets the IsIdTokenMapping field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetIsIdTokenMapping(v bool) *DataForListIdentityProvidersOIDCOutput {
	s.IsIdTokenMapping = &v
	return s
}

// SetIssuer sets the Issuer field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetIssuer(v string) *DataForListIdentityProvidersOIDCOutput {
	s.Issuer = &v
	return s
}

// SetName sets the Name field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetName(v string) *DataForListIdentityProvidersOIDCOutput {
	s.Name = &v
	return s
}

// SetProviderOptions sets the ProviderOptions field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetProviderOptions(v *ProviderOptionsForListIdentityProvidersOIDCOutput) *DataForListIdentityProvidersOIDCOutput {
	s.ProviderOptions = v
	return s
}

// SetScopesList sets the ScopesList field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetScopesList(v []*string) *DataForListIdentityProvidersOIDCOutput {
	s.ScopesList = v
	return s
}

// SetUid sets the Uid field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetUid(v string) *DataForListIdentityProvidersOIDCOutput {
	s.Uid = &v
	return s
}

// SetUsePkce sets the UsePkce field's value.
func (s *DataForListIdentityProvidersOIDCOutput) SetUsePkce(v bool) *DataForListIdentityProvidersOIDCOutput {
	s.UsePkce = &v
	return s
}

type ListIdentityProvidersOIDCInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// UserPoolUid is a required field
	UserPoolUid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ListIdentityProvidersOIDCInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIdentityProvidersOIDCInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListIdentityProvidersOIDCInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListIdentityProvidersOIDCInput"}
	if s.UserPoolUid == nil {
		invalidParams.Add(request.NewErrParamRequired("UserPoolUid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetUserPoolUid sets the UserPoolUid field's value.
func (s *ListIdentityProvidersOIDCInput) SetUserPoolUid(v string) *ListIdentityProvidersOIDCInput {
	s.UserPoolUid = &v
	return s
}

type ListIdentityProvidersOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Data []*DataForListIdentityProvidersOIDCOutput `type:"list" json:",omitempty"`

	PageNumber *int32 `type:"int32" json:",omitempty"`

	PageSize *int32 `type:"int32" json:",omitempty"`

	TotalCount *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s ListIdentityProvidersOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListIdentityProvidersOIDCOutput) GoString() string {
	return s.String()
}

// SetData sets the Data field's value.
func (s *ListIdentityProvidersOIDCOutput) SetData(v []*DataForListIdentityProvidersOIDCOutput) *ListIdentityProvidersOIDCOutput {
	s.Data = v
	return s
}

// SetPageNumber sets the PageNumber field's value.
func (s *ListIdentityProvidersOIDCOutput) SetPageNumber(v int32) *ListIdentityProvidersOIDCOutput {
	s.PageNumber = &v
	return s
}

// SetPageSize sets the PageSize field's value.
func (s *ListIdentityProvidersOIDCOutput) SetPageSize(v int32) *ListIdentityProvidersOIDCOutput {
	s.PageSize = &v
	return s
}

// SetTotalCount sets the TotalCount field's value.
func (s *ListIdentityProvidersOIDCOutput) SetTotalCount(v int32) *ListIdentityProvidersOIDCOutput {
	s.TotalCount = &v
	return s
}

type ProviderOptionsForListIdentityProvidersOIDCOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AutoLinking *string `type:"string" json:",omitempty"`

	IsAutoCreation *bool `type:"boolean" json:",omitempty"`

	IsAutoUpdate *bool `type:"boolean" json:",omitempty"`

	IsCreationAllowed *bool `type:"boolean" json:",omitempty"`

	IsLinkingAllowed *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s ProviderOptionsForListIdentityProvidersOIDCOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProviderOptionsForListIdentityProvidersOIDCOutput) GoString() string {
	return s.String()
}

// SetAutoLinking sets the AutoLinking field's value.
func (s *ProviderOptionsForListIdentityProvidersOIDCOutput) SetAutoLinking(v string) *ProviderOptionsForListIdentityProvidersOIDCOutput {
	s.AutoLinking = &v
	return s
}

// SetIsAutoCreation sets the IsAutoCreation field's value.
func (s *ProviderOptionsForListIdentityProvidersOIDCOutput) SetIsAutoCreation(v bool) *ProviderOptionsForListIdentityProvidersOIDCOutput {
	s.IsAutoCreation = &v
	return s
}

// SetIsAutoUpdate sets the IsAutoUpdate field's value.
func (s *ProviderOptionsForListIdentityProvidersOIDCOutput) SetIsAutoUpdate(v bool) *ProviderOptionsForListIdentityProvidersOIDCOutput {
	s.IsAutoUpdate = &v
	return s
}

// SetIsCreationAllowed sets the IsCreationAllowed field's value.
func (s *ProviderOptionsForListIdentityProvidersOIDCOutput) SetIsCreationAllowed(v bool) *ProviderOptionsForListIdentityProvidersOIDCOutput {
	s.IsCreationAllowed = &v
	return s
}

// SetIsLinkingAllowed sets the IsLinkingAllowed field's value.
func (s *ProviderOptionsForListIdentityProvidersOIDCOutput) SetIsLinkingAllowed(v bool) *ProviderOptionsForListIdentityProvidersOIDCOutput {
	s.IsLinkingAllowed = &v
	return s
}
