// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"fmt"

	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNLBBackendServersAttributesCommon = "ModifyNLBBackendServersAttributes"

// ModifyNLBBackendServersAttributesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNLBBackendServersAttributesCommon operation. The "output" return
// value will be populated with the ModifyNLBBackendServersAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNLBBackendServersAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNLBBackendServersAttributesCommon Send returns without error.
//
// See ModifyNLBBackendServersAttributesCommon for more information on using the ModifyNLBBackendServersAttributesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNLBBackendServersAttributesCommonRequest method.
//    req, resp := client.ModifyNLBBackendServersAttributesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNLBBackendServersAttributesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNLBBackendServersAttributesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNLBBackendServersAttributesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNLBBackendServersAttributesCommon for usage and error information.
func (c *CLB) ModifyNLBBackendServersAttributesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNLBBackendServersAttributesCommonRequest(input)
	return out, req.Send()
}

// ModifyNLBBackendServersAttributesCommonWithContext is the same as ModifyNLBBackendServersAttributesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNLBBackendServersAttributesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNLBBackendServersAttributesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNLBBackendServersAttributesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNLBBackendServersAttributes = "ModifyNLBBackendServersAttributes"

// ModifyNLBBackendServersAttributesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNLBBackendServersAttributes operation. The "output" return
// value will be populated with the ModifyNLBBackendServersAttributesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNLBBackendServersAttributesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNLBBackendServersAttributesCommon Send returns without error.
//
// See ModifyNLBBackendServersAttributes for more information on using the ModifyNLBBackendServersAttributes
// API call, and error handling.
//
//    // Example sending a request using the ModifyNLBBackendServersAttributesRequest method.
//    req, resp := client.ModifyNLBBackendServersAttributesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNLBBackendServersAttributesRequest(input *ModifyNLBBackendServersAttributesInput) (req *request.Request, output *ModifyNLBBackendServersAttributesOutput) {
	op := &request.Operation{
		Name:       opModifyNLBBackendServersAttributes,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNLBBackendServersAttributesInput{}
	}

	output = &ModifyNLBBackendServersAttributesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNLBBackendServersAttributes API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNLBBackendServersAttributes for usage and error information.
func (c *CLB) ModifyNLBBackendServersAttributes(input *ModifyNLBBackendServersAttributesInput) (*ModifyNLBBackendServersAttributesOutput, error) {
	req, out := c.ModifyNLBBackendServersAttributesRequest(input)
	return out, req.Send()
}

// ModifyNLBBackendServersAttributesWithContext is the same as ModifyNLBBackendServersAttributes with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNLBBackendServersAttributes for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNLBBackendServersAttributesWithContext(ctx volcengine.Context, input *ModifyNLBBackendServersAttributesInput, opts ...request.Option) (*ModifyNLBBackendServersAttributesOutput, error) {
	req, out := c.ModifyNLBBackendServersAttributesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyNLBBackendServersAttributesInput struct {
	_ struct{} `type:"structure"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`

	Servers []*ServerForModifyNLBBackendServersAttributesInput `type:"list"`
}

// String returns the string representation
func (s ModifyNLBBackendServersAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNLBBackendServersAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNLBBackendServersAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNLBBackendServersAttributesInput"}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}
	if s.Servers != nil {
		for i, v := range s.Servers {
			if v == nil {
				continue
			}
			if err := v.Validate(); err != nil {
				invalidParams.AddNested(fmt.Sprintf("%s[%v]", "Servers", i), err.(request.ErrInvalidParams))
			}
		}
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ModifyNLBBackendServersAttributesInput) SetServerGroupId(v string) *ModifyNLBBackendServersAttributesInput {
	s.ServerGroupId = &v
	return s
}

// SetServers sets the Servers field's value.
func (s *ModifyNLBBackendServersAttributesInput) SetServers(v []*ServerForModifyNLBBackendServersAttributesInput) *ModifyNLBBackendServersAttributesInput {
	s.Servers = v
	return s
}

type ModifyNLBBackendServersAttributesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNLBBackendServersAttributesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNLBBackendServersAttributesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNLBBackendServersAttributesOutput) SetRequestId(v string) *ModifyNLBBackendServersAttributesOutput {
	s.RequestId = &v
	return s
}

type ServerForModifyNLBBackendServersAttributesInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	Port *int64 `type:"integer"`

	// ServerId is a required field
	ServerId *string `type:"string" required:"true"`

	Weight *int64 `type:"integer"`
}

// String returns the string representation
func (s ServerForModifyNLBBackendServersAttributesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerForModifyNLBBackendServersAttributesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ServerForModifyNLBBackendServersAttributesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ServerForModifyNLBBackendServersAttributesInput"}
	if s.ServerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetDescription sets the Description field's value.
func (s *ServerForModifyNLBBackendServersAttributesInput) SetDescription(v string) *ServerForModifyNLBBackendServersAttributesInput {
	s.Description = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ServerForModifyNLBBackendServersAttributesInput) SetPort(v int64) *ServerForModifyNLBBackendServersAttributesInput {
	s.Port = &v
	return s
}

// SetServerId sets the ServerId field's value.
func (s *ServerForModifyNLBBackendServersAttributesInput) SetServerId(v string) *ServerForModifyNLBBackendServersAttributesInput {
	s.ServerId = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ServerForModifyNLBBackendServersAttributesInput) SetWeight(v int64) *ServerForModifyNLBBackendServersAttributesInput {
	s.Weight = &v
	return s
}
