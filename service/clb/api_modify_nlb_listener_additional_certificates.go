// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNLBListenerAdditionalCertificatesCommon = "ModifyNLBListenerAdditionalCertificates"

// ModifyNLBListenerAdditionalCertificatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNLBListenerAdditionalCertificatesCommon operation. The "output" return
// value will be populated with the ModifyNLBListenerAdditionalCertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNLBListenerAdditionalCertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNLBListenerAdditionalCertificatesCommon Send returns without error.
//
// See ModifyNLBListenerAdditionalCertificatesCommon for more information on using the ModifyNLBListenerAdditionalCertificatesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNLBListenerAdditionalCertificatesCommonRequest method.
//    req, resp := client.ModifyNLBListenerAdditionalCertificatesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNLBListenerAdditionalCertificatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNLBListenerAdditionalCertificatesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNLBListenerAdditionalCertificatesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNLBListenerAdditionalCertificatesCommon for usage and error information.
func (c *CLB) ModifyNLBListenerAdditionalCertificatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNLBListenerAdditionalCertificatesCommonRequest(input)
	return out, req.Send()
}

// ModifyNLBListenerAdditionalCertificatesCommonWithContext is the same as ModifyNLBListenerAdditionalCertificatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNLBListenerAdditionalCertificatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNLBListenerAdditionalCertificatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNLBListenerAdditionalCertificatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNLBListenerAdditionalCertificates = "ModifyNLBListenerAdditionalCertificates"

// ModifyNLBListenerAdditionalCertificatesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNLBListenerAdditionalCertificates operation. The "output" return
// value will be populated with the ModifyNLBListenerAdditionalCertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNLBListenerAdditionalCertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNLBListenerAdditionalCertificatesCommon Send returns without error.
//
// See ModifyNLBListenerAdditionalCertificates for more information on using the ModifyNLBListenerAdditionalCertificates
// API call, and error handling.
//
//    // Example sending a request using the ModifyNLBListenerAdditionalCertificatesRequest method.
//    req, resp := client.ModifyNLBListenerAdditionalCertificatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNLBListenerAdditionalCertificatesRequest(input *ModifyNLBListenerAdditionalCertificatesInput) (req *request.Request, output *ModifyNLBListenerAdditionalCertificatesOutput) {
	op := &request.Operation{
		Name:       opModifyNLBListenerAdditionalCertificates,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNLBListenerAdditionalCertificatesInput{}
	}

	output = &ModifyNLBListenerAdditionalCertificatesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNLBListenerAdditionalCertificates API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNLBListenerAdditionalCertificates for usage and error information.
func (c *CLB) ModifyNLBListenerAdditionalCertificates(input *ModifyNLBListenerAdditionalCertificatesInput) (*ModifyNLBListenerAdditionalCertificatesOutput, error) {
	req, out := c.ModifyNLBListenerAdditionalCertificatesRequest(input)
	return out, req.Send()
}

// ModifyNLBListenerAdditionalCertificatesWithContext is the same as ModifyNLBListenerAdditionalCertificates with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNLBListenerAdditionalCertificates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNLBListenerAdditionalCertificatesWithContext(ctx volcengine.Context, input *ModifyNLBListenerAdditionalCertificatesInput, opts ...request.Option) (*ModifyNLBListenerAdditionalCertificatesOutput, error) {
	req, out := c.ModifyNLBListenerAdditionalCertificatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyNLBListenerAdditionalCertificatesInput struct {
	_ struct{} `type:"structure"`

	AssociateCertificateIds []*string `type:"list"`

	AssociateCertificateSource *string `type:"string"`

	DisassociateCertificateIds []*string `type:"list"`

	// ListenerId is a required field
	ListenerId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyNLBListenerAdditionalCertificatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNLBListenerAdditionalCertificatesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNLBListenerAdditionalCertificatesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNLBListenerAdditionalCertificatesInput"}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAssociateCertificateIds sets the AssociateCertificateIds field's value.
func (s *ModifyNLBListenerAdditionalCertificatesInput) SetAssociateCertificateIds(v []*string) *ModifyNLBListenerAdditionalCertificatesInput {
	s.AssociateCertificateIds = v
	return s
}

// SetAssociateCertificateSource sets the AssociateCertificateSource field's value.
func (s *ModifyNLBListenerAdditionalCertificatesInput) SetAssociateCertificateSource(v string) *ModifyNLBListenerAdditionalCertificatesInput {
	s.AssociateCertificateSource = &v
	return s
}

// SetDisassociateCertificateIds sets the DisassociateCertificateIds field's value.
func (s *ModifyNLBListenerAdditionalCertificatesInput) SetDisassociateCertificateIds(v []*string) *ModifyNLBListenerAdditionalCertificatesInput {
	s.DisassociateCertificateIds = v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *ModifyNLBListenerAdditionalCertificatesInput) SetListenerId(v string) *ModifyNLBListenerAdditionalCertificatesInput {
	s.ListenerId = &v
	return s
}

type ModifyNLBListenerAdditionalCertificatesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNLBListenerAdditionalCertificatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNLBListenerAdditionalCertificatesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNLBListenerAdditionalCertificatesOutput) SetRequestId(v string) *ModifyNLBListenerAdditionalCertificatesOutput {
	s.RequestId = &v
	return s
}
