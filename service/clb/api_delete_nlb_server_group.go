// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteNLBServerGroupCommon = "DeleteNLBServerGroup"

// DeleteNLBServerGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNLBServerGroupCommon operation. The "output" return
// value will be populated with the DeleteNLBServerGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNLBServerGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNLBServerGroupCommon Send returns without error.
//
// See DeleteNLBServerGroupCommon for more information on using the DeleteNLBServerGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteNLBServerGroupCommonRequest method.
//    req, resp := client.DeleteNLBServerGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DeleteNLBServerGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteNLBServerGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteNLBServerGroupCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DeleteNLBServerGroupCommon for usage and error information.
func (c *CLB) DeleteNLBServerGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteNLBServerGroupCommonRequest(input)
	return out, req.Send()
}

// DeleteNLBServerGroupCommonWithContext is the same as DeleteNLBServerGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNLBServerGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DeleteNLBServerGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteNLBServerGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteNLBServerGroup = "DeleteNLBServerGroup"

// DeleteNLBServerGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNLBServerGroup operation. The "output" return
// value will be populated with the DeleteNLBServerGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNLBServerGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNLBServerGroupCommon Send returns without error.
//
// See DeleteNLBServerGroup for more information on using the DeleteNLBServerGroup
// API call, and error handling.
//
//    // Example sending a request using the DeleteNLBServerGroupRequest method.
//    req, resp := client.DeleteNLBServerGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DeleteNLBServerGroupRequest(input *DeleteNLBServerGroupInput) (req *request.Request, output *DeleteNLBServerGroupOutput) {
	op := &request.Operation{
		Name:       opDeleteNLBServerGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNLBServerGroupInput{}
	}

	output = &DeleteNLBServerGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteNLBServerGroup API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DeleteNLBServerGroup for usage and error information.
func (c *CLB) DeleteNLBServerGroup(input *DeleteNLBServerGroupInput) (*DeleteNLBServerGroupOutput, error) {
	req, out := c.DeleteNLBServerGroupRequest(input)
	return out, req.Send()
}

// DeleteNLBServerGroupWithContext is the same as DeleteNLBServerGroup with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNLBServerGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DeleteNLBServerGroupWithContext(ctx volcengine.Context, input *DeleteNLBServerGroupInput, opts ...request.Option) (*DeleteNLBServerGroupOutput, error) {
	req, out := c.DeleteNLBServerGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteNLBServerGroupInput struct {
	_ struct{} `type:"structure"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteNLBServerGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNLBServerGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNLBServerGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteNLBServerGroupInput"}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *DeleteNLBServerGroupInput) SetServerGroupId(v string) *DeleteNLBServerGroupInput {
	s.ServerGroupId = &v
	return s
}

type DeleteNLBServerGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DeleteNLBServerGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNLBServerGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteNLBServerGroupOutput) SetRequestId(v string) *DeleteNLBServerGroupOutput {
	s.RequestId = &v
	return s
}
