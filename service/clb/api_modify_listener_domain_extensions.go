// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyListenerDomainExtensionsCommon = "ModifyListenerDomainExtensions"

// ModifyListenerDomainExtensionsCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyListenerDomainExtensionsCommon operation. The "output" return
// value will be populated with the ModifyListenerDomainExtensionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyListenerDomainExtensionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyListenerDomainExtensionsCommon Send returns without error.
//
// See ModifyListenerDomainExtensionsCommon for more information on using the ModifyListenerDomainExtensionsCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyListenerDomainExtensionsCommonRequest method.
//    req, resp := client.ModifyListenerDomainExtensionsCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyListenerDomainExtensionsCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyListenerDomainExtensionsCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyListenerDomainExtensionsCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyListenerDomainExtensionsCommon for usage and error information.
func (c *CLB) ModifyListenerDomainExtensionsCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyListenerDomainExtensionsCommonRequest(input)
	return out, req.Send()
}

// ModifyListenerDomainExtensionsCommonWithContext is the same as ModifyListenerDomainExtensionsCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyListenerDomainExtensionsCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyListenerDomainExtensionsCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyListenerDomainExtensionsCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyListenerDomainExtensions = "ModifyListenerDomainExtensions"

// ModifyListenerDomainExtensionsRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyListenerDomainExtensions operation. The "output" return
// value will be populated with the ModifyListenerDomainExtensionsCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyListenerDomainExtensionsCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyListenerDomainExtensionsCommon Send returns without error.
//
// See ModifyListenerDomainExtensions for more information on using the ModifyListenerDomainExtensions
// API call, and error handling.
//
//    // Example sending a request using the ModifyListenerDomainExtensionsRequest method.
//    req, resp := client.ModifyListenerDomainExtensionsRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyListenerDomainExtensionsRequest(input *ModifyListenerDomainExtensionsInput) (req *request.Request, output *ModifyListenerDomainExtensionsOutput) {
	op := &request.Operation{
		Name:       opModifyListenerDomainExtensions,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyListenerDomainExtensionsInput{}
	}

	output = &ModifyListenerDomainExtensionsOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyListenerDomainExtensions API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyListenerDomainExtensions for usage and error information.
func (c *CLB) ModifyListenerDomainExtensions(input *ModifyListenerDomainExtensionsInput) (*ModifyListenerDomainExtensionsOutput, error) {
	req, out := c.ModifyListenerDomainExtensionsRequest(input)
	return out, req.Send()
}

// ModifyListenerDomainExtensionsWithContext is the same as ModifyListenerDomainExtensions with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyListenerDomainExtensions for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyListenerDomainExtensionsWithContext(ctx volcengine.Context, input *ModifyListenerDomainExtensionsInput, opts ...request.Option) (*ModifyListenerDomainExtensionsOutput, error) {
	req, out := c.ModifyListenerDomainExtensionsRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddDomainExtensionForModifyListenerDomainExtensionsInput struct {
	_ struct{} `type:"structure"`

	CertCenterCertificateId *string `type:"string"`

	CertificateSource *string `type:"string"`

	Domain *string `type:"string"`
}

// String returns the string representation
func (s AddDomainExtensionForModifyListenerDomainExtensionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddDomainExtensionForModifyListenerDomainExtensionsInput) GoString() string {
	return s.String()
}

// SetCertCenterCertificateId sets the CertCenterCertificateId field's value.
func (s *AddDomainExtensionForModifyListenerDomainExtensionsInput) SetCertCenterCertificateId(v string) *AddDomainExtensionForModifyListenerDomainExtensionsInput {
	s.CertCenterCertificateId = &v
	return s
}

// SetCertificateSource sets the CertificateSource field's value.
func (s *AddDomainExtensionForModifyListenerDomainExtensionsInput) SetCertificateSource(v string) *AddDomainExtensionForModifyListenerDomainExtensionsInput {
	s.CertificateSource = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *AddDomainExtensionForModifyListenerDomainExtensionsInput) SetDomain(v string) *AddDomainExtensionForModifyListenerDomainExtensionsInput {
	s.Domain = &v
	return s
}

type ModifyDomainExtensionForModifyListenerDomainExtensionsInput struct {
	_ struct{} `type:"structure"`

	CertCenterCertificateId *string `type:"string"`

	CertificateSource *string `type:"string"`

	DomainExtensionId *string `type:"string"`
}

// String returns the string representation
func (s ModifyDomainExtensionForModifyListenerDomainExtensionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyDomainExtensionForModifyListenerDomainExtensionsInput) GoString() string {
	return s.String()
}

// SetCertCenterCertificateId sets the CertCenterCertificateId field's value.
func (s *ModifyDomainExtensionForModifyListenerDomainExtensionsInput) SetCertCenterCertificateId(v string) *ModifyDomainExtensionForModifyListenerDomainExtensionsInput {
	s.CertCenterCertificateId = &v
	return s
}

// SetCertificateSource sets the CertificateSource field's value.
func (s *ModifyDomainExtensionForModifyListenerDomainExtensionsInput) SetCertificateSource(v string) *ModifyDomainExtensionForModifyListenerDomainExtensionsInput {
	s.CertificateSource = &v
	return s
}

// SetDomainExtensionId sets the DomainExtensionId field's value.
func (s *ModifyDomainExtensionForModifyListenerDomainExtensionsInput) SetDomainExtensionId(v string) *ModifyDomainExtensionForModifyListenerDomainExtensionsInput {
	s.DomainExtensionId = &v
	return s
}

type ModifyListenerDomainExtensionsInput struct {
	_ struct{} `type:"structure"`

	AddDomainExtensions []*AddDomainExtensionForModifyListenerDomainExtensionsInput `type:"list"`

	// ListenerId is a required field
	ListenerId *string `type:"string" required:"true"`

	ModifyDomainExtensions []*ModifyDomainExtensionForModifyListenerDomainExtensionsInput `type:"list"`

	RemoveDomainExtensions []*RemoveDomainExtensionForModifyListenerDomainExtensionsInput `type:"list"`
}

// String returns the string representation
func (s ModifyListenerDomainExtensionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyListenerDomainExtensionsInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyListenerDomainExtensionsInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyListenerDomainExtensionsInput"}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAddDomainExtensions sets the AddDomainExtensions field's value.
func (s *ModifyListenerDomainExtensionsInput) SetAddDomainExtensions(v []*AddDomainExtensionForModifyListenerDomainExtensionsInput) *ModifyListenerDomainExtensionsInput {
	s.AddDomainExtensions = v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *ModifyListenerDomainExtensionsInput) SetListenerId(v string) *ModifyListenerDomainExtensionsInput {
	s.ListenerId = &v
	return s
}

// SetModifyDomainExtensions sets the ModifyDomainExtensions field's value.
func (s *ModifyListenerDomainExtensionsInput) SetModifyDomainExtensions(v []*ModifyDomainExtensionForModifyListenerDomainExtensionsInput) *ModifyListenerDomainExtensionsInput {
	s.ModifyDomainExtensions = v
	return s
}

// SetRemoveDomainExtensions sets the RemoveDomainExtensions field's value.
func (s *ModifyListenerDomainExtensionsInput) SetRemoveDomainExtensions(v []*RemoveDomainExtensionForModifyListenerDomainExtensionsInput) *ModifyListenerDomainExtensionsInput {
	s.RemoveDomainExtensions = v
	return s
}

type ModifyListenerDomainExtensionsOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyListenerDomainExtensionsOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyListenerDomainExtensionsOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyListenerDomainExtensionsOutput) SetRequestId(v string) *ModifyListenerDomainExtensionsOutput {
	s.RequestId = &v
	return s
}

type RemoveDomainExtensionForModifyListenerDomainExtensionsInput struct {
	_ struct{} `type:"structure"`

	DomainExtensionId *string `type:"string"`
}

// String returns the string representation
func (s RemoveDomainExtensionForModifyListenerDomainExtensionsInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveDomainExtensionForModifyListenerDomainExtensionsInput) GoString() string {
	return s.String()
}

// SetDomainExtensionId sets the DomainExtensionId field's value.
func (s *RemoveDomainExtensionForModifyListenerDomainExtensionsInput) SetDomainExtensionId(v string) *RemoveDomainExtensionForModifyListenerDomainExtensionsInput {
	s.DomainExtensionId = &v
	return s
}
