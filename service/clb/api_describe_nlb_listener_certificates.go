// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeNLBListenerCertificatesCommon = "DescribeNLBListenerCertificates"

// DescribeNLBListenerCertificatesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNLBListenerCertificatesCommon operation. The "output" return
// value will be populated with the DescribeNLBListenerCertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNLBListenerCertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNLBListenerCertificatesCommon Send returns without error.
//
// See DescribeNLBListenerCertificatesCommon for more information on using the DescribeNLBListenerCertificatesCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeNLBListenerCertificatesCommonRequest method.
//    req, resp := client.DescribeNLBListenerCertificatesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeNLBListenerCertificatesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeNLBListenerCertificatesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNLBListenerCertificatesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeNLBListenerCertificatesCommon for usage and error information.
func (c *CLB) DescribeNLBListenerCertificatesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeNLBListenerCertificatesCommonRequest(input)
	return out, req.Send()
}

// DescribeNLBListenerCertificatesCommonWithContext is the same as DescribeNLBListenerCertificatesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNLBListenerCertificatesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeNLBListenerCertificatesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeNLBListenerCertificatesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeNLBListenerCertificates = "DescribeNLBListenerCertificates"

// DescribeNLBListenerCertificatesRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNLBListenerCertificates operation. The "output" return
// value will be populated with the DescribeNLBListenerCertificatesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNLBListenerCertificatesCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNLBListenerCertificatesCommon Send returns without error.
//
// See DescribeNLBListenerCertificates for more information on using the DescribeNLBListenerCertificates
// API call, and error handling.
//
//    // Example sending a request using the DescribeNLBListenerCertificatesRequest method.
//    req, resp := client.DescribeNLBListenerCertificatesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeNLBListenerCertificatesRequest(input *DescribeNLBListenerCertificatesInput) (req *request.Request, output *DescribeNLBListenerCertificatesOutput) {
	op := &request.Operation{
		Name:       opDescribeNLBListenerCertificates,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNLBListenerCertificatesInput{}
	}

	output = &DescribeNLBListenerCertificatesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNLBListenerCertificates API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeNLBListenerCertificates for usage and error information.
func (c *CLB) DescribeNLBListenerCertificates(input *DescribeNLBListenerCertificatesInput) (*DescribeNLBListenerCertificatesOutput, error) {
	req, out := c.DescribeNLBListenerCertificatesRequest(input)
	return out, req.Send()
}

// DescribeNLBListenerCertificatesWithContext is the same as DescribeNLBListenerCertificates with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNLBListenerCertificates for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeNLBListenerCertificatesWithContext(ctx volcengine.Context, input *DescribeNLBListenerCertificatesInput, opts ...request.Option) (*DescribeNLBListenerCertificatesOutput, error) {
	req, out := c.DescribeNLBListenerCertificatesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CertificateForDescribeNLBListenerCertificatesOutput struct {
	_ struct{} `type:"structure"`

	CertificateId *string `type:"string"`

	CertificateType *string `type:"string"`

	Domain *string `type:"string"`

	IsDefault *bool `type:"boolean"`

	Status *string `type:"string"`
}

// String returns the string representation
func (s CertificateForDescribeNLBListenerCertificatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CertificateForDescribeNLBListenerCertificatesOutput) GoString() string {
	return s.String()
}

// SetCertificateId sets the CertificateId field's value.
func (s *CertificateForDescribeNLBListenerCertificatesOutput) SetCertificateId(v string) *CertificateForDescribeNLBListenerCertificatesOutput {
	s.CertificateId = &v
	return s
}

// SetCertificateType sets the CertificateType field's value.
func (s *CertificateForDescribeNLBListenerCertificatesOutput) SetCertificateType(v string) *CertificateForDescribeNLBListenerCertificatesOutput {
	s.CertificateType = &v
	return s
}

// SetDomain sets the Domain field's value.
func (s *CertificateForDescribeNLBListenerCertificatesOutput) SetDomain(v string) *CertificateForDescribeNLBListenerCertificatesOutput {
	s.Domain = &v
	return s
}

// SetIsDefault sets the IsDefault field's value.
func (s *CertificateForDescribeNLBListenerCertificatesOutput) SetIsDefault(v bool) *CertificateForDescribeNLBListenerCertificatesOutput {
	s.IsDefault = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *CertificateForDescribeNLBListenerCertificatesOutput) SetStatus(v string) *CertificateForDescribeNLBListenerCertificatesOutput {
	s.Status = &v
	return s
}

type DescribeNLBListenerCertificatesInput struct {
	_ struct{} `type:"structure"`

	CertificateIds []*string `type:"list"`

	CertificateType *string `type:"string"`

	// ListenerId is a required field
	ListenerId *string `type:"string" required:"true"`

	MaxResults *int64 `type:"integer"`

	NextToken *string `type:"string"`
}

// String returns the string representation
func (s DescribeNLBListenerCertificatesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNLBListenerCertificatesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DescribeNLBListenerCertificatesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DescribeNLBListenerCertificatesInput"}
	if s.ListenerId == nil {
		invalidParams.Add(request.NewErrParamRequired("ListenerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetCertificateIds sets the CertificateIds field's value.
func (s *DescribeNLBListenerCertificatesInput) SetCertificateIds(v []*string) *DescribeNLBListenerCertificatesInput {
	s.CertificateIds = v
	return s
}

// SetCertificateType sets the CertificateType field's value.
func (s *DescribeNLBListenerCertificatesInput) SetCertificateType(v string) *DescribeNLBListenerCertificatesInput {
	s.CertificateType = &v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *DescribeNLBListenerCertificatesInput) SetListenerId(v string) *DescribeNLBListenerCertificatesInput {
	s.ListenerId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeNLBListenerCertificatesInput) SetMaxResults(v int64) *DescribeNLBListenerCertificatesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeNLBListenerCertificatesInput) SetNextToken(v string) *DescribeNLBListenerCertificatesInput {
	s.NextToken = &v
	return s
}

type DescribeNLBListenerCertificatesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Certificates []*CertificateForDescribeNLBListenerCertificatesOutput `type:"list"`

	ListenerId *string `type:"string"`

	NextToken *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DescribeNLBListenerCertificatesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNLBListenerCertificatesOutput) GoString() string {
	return s.String()
}

// SetCertificates sets the Certificates field's value.
func (s *DescribeNLBListenerCertificatesOutput) SetCertificates(v []*CertificateForDescribeNLBListenerCertificatesOutput) *DescribeNLBListenerCertificatesOutput {
	s.Certificates = v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *DescribeNLBListenerCertificatesOutput) SetListenerId(v string) *DescribeNLBListenerCertificatesOutput {
	s.ListenerId = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeNLBListenerCertificatesOutput) SetNextToken(v string) *DescribeNLBListenerCertificatesOutput {
	s.NextToken = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeNLBListenerCertificatesOutput) SetRequestId(v string) *DescribeNLBListenerCertificatesOutput {
	s.RequestId = &v
	return s
}
