// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNetworkLoadBalancerNetworkTypeCommon = "ModifyNetworkLoadBalancerNetworkType"

// ModifyNetworkLoadBalancerNetworkTypeCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNetworkLoadBalancerNetworkTypeCommon operation. The "output" return
// value will be populated with the ModifyNetworkLoadBalancerNetworkTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNetworkLoadBalancerNetworkTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNetworkLoadBalancerNetworkTypeCommon Send returns without error.
//
// See ModifyNetworkLoadBalancerNetworkTypeCommon for more information on using the ModifyNetworkLoadBalancerNetworkTypeCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNetworkLoadBalancerNetworkTypeCommonRequest method.
//    req, resp := client.ModifyNetworkLoadBalancerNetworkTypeCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNetworkLoadBalancerNetworkTypeCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNetworkLoadBalancerNetworkTypeCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNetworkLoadBalancerNetworkTypeCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNetworkLoadBalancerNetworkTypeCommon for usage and error information.
func (c *CLB) ModifyNetworkLoadBalancerNetworkTypeCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNetworkLoadBalancerNetworkTypeCommonRequest(input)
	return out, req.Send()
}

// ModifyNetworkLoadBalancerNetworkTypeCommonWithContext is the same as ModifyNetworkLoadBalancerNetworkTypeCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNetworkLoadBalancerNetworkTypeCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNetworkLoadBalancerNetworkTypeCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNetworkLoadBalancerNetworkTypeCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNetworkLoadBalancerNetworkType = "ModifyNetworkLoadBalancerNetworkType"

// ModifyNetworkLoadBalancerNetworkTypeRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNetworkLoadBalancerNetworkType operation. The "output" return
// value will be populated with the ModifyNetworkLoadBalancerNetworkTypeCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNetworkLoadBalancerNetworkTypeCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNetworkLoadBalancerNetworkTypeCommon Send returns without error.
//
// See ModifyNetworkLoadBalancerNetworkType for more information on using the ModifyNetworkLoadBalancerNetworkType
// API call, and error handling.
//
//    // Example sending a request using the ModifyNetworkLoadBalancerNetworkTypeRequest method.
//    req, resp := client.ModifyNetworkLoadBalancerNetworkTypeRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNetworkLoadBalancerNetworkTypeRequest(input *ModifyNetworkLoadBalancerNetworkTypeInput) (req *request.Request, output *ModifyNetworkLoadBalancerNetworkTypeOutput) {
	op := &request.Operation{
		Name:       opModifyNetworkLoadBalancerNetworkType,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNetworkLoadBalancerNetworkTypeInput{}
	}

	output = &ModifyNetworkLoadBalancerNetworkTypeOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNetworkLoadBalancerNetworkType API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNetworkLoadBalancerNetworkType for usage and error information.
func (c *CLB) ModifyNetworkLoadBalancerNetworkType(input *ModifyNetworkLoadBalancerNetworkTypeInput) (*ModifyNetworkLoadBalancerNetworkTypeOutput, error) {
	req, out := c.ModifyNetworkLoadBalancerNetworkTypeRequest(input)
	return out, req.Send()
}

// ModifyNetworkLoadBalancerNetworkTypeWithContext is the same as ModifyNetworkLoadBalancerNetworkType with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNetworkLoadBalancerNetworkType for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNetworkLoadBalancerNetworkTypeWithContext(ctx volcengine.Context, input *ModifyNetworkLoadBalancerNetworkTypeInput, opts ...request.Option) (*ModifyNetworkLoadBalancerNetworkTypeOutput, error) {
	req, out := c.ModifyNetworkLoadBalancerNetworkTypeRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ModifyNetworkLoadBalancerNetworkTypeInput struct {
	_ struct{} `type:"structure"`

	// LoadBalancerId is a required field
	LoadBalancerId *string `type:"string" required:"true"`

	// NetworkType is a required field
	NetworkType *string `type:"string" required:"true"`

	// Protocol is a required field
	Protocol *string `type:"string" required:"true"`

	ZoneMappings []*ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput `type:"list"`
}

// String returns the string representation
func (s ModifyNetworkLoadBalancerNetworkTypeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNetworkLoadBalancerNetworkTypeInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNetworkLoadBalancerNetworkTypeInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNetworkLoadBalancerNetworkTypeInput"}
	if s.LoadBalancerId == nil {
		invalidParams.Add(request.NewErrParamRequired("LoadBalancerId"))
	}
	if s.NetworkType == nil {
		invalidParams.Add(request.NewErrParamRequired("NetworkType"))
	}
	if s.Protocol == nil {
		invalidParams.Add(request.NewErrParamRequired("Protocol"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *ModifyNetworkLoadBalancerNetworkTypeInput) SetLoadBalancerId(v string) *ModifyNetworkLoadBalancerNetworkTypeInput {
	s.LoadBalancerId = &v
	return s
}

// SetNetworkType sets the NetworkType field's value.
func (s *ModifyNetworkLoadBalancerNetworkTypeInput) SetNetworkType(v string) *ModifyNetworkLoadBalancerNetworkTypeInput {
	s.NetworkType = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ModifyNetworkLoadBalancerNetworkTypeInput) SetProtocol(v string) *ModifyNetworkLoadBalancerNetworkTypeInput {
	s.Protocol = &v
	return s
}

// SetZoneMappings sets the ZoneMappings field's value.
func (s *ModifyNetworkLoadBalancerNetworkTypeInput) SetZoneMappings(v []*ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput) *ModifyNetworkLoadBalancerNetworkTypeInput {
	s.ZoneMappings = v
	return s
}

type ModifyNetworkLoadBalancerNetworkTypeOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNetworkLoadBalancerNetworkTypeOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNetworkLoadBalancerNetworkTypeOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNetworkLoadBalancerNetworkTypeOutput) SetRequestId(v string) *ModifyNetworkLoadBalancerNetworkTypeOutput {
	s.RequestId = &v
	return s
}

type ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput struct {
	_ struct{} `type:"structure"`

	EipId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput) GoString() string {
	return s.String()
}

// SetEipId sets the EipId field's value.
func (s *ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput) SetEipId(v string) *ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput {
	s.EipId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput) SetZoneId(v string) *ZoneMappingForModifyNetworkLoadBalancerNetworkTypeInput {
	s.ZoneId = &v
	return s
}
