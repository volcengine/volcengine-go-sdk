// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListTagsForNLBResourcesCommon = "ListTagsForNLBResources"

// ListTagsForNLBResourcesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsForNLBResourcesCommon operation. The "output" return
// value will be populated with the ListTagsForNLBResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsForNLBResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsForNLBResourcesCommon Send returns without error.
//
// See ListTagsForNLBResourcesCommon for more information on using the ListTagsForNLBResourcesCommon
// API call, and error handling.
//
//    // Example sending a request using the ListTagsForNLBResourcesCommonRequest method.
//    req, resp := client.ListTagsForNLBResourcesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ListTagsForNLBResourcesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListTagsForNLBResourcesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListTagsForNLBResourcesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ListTagsForNLBResourcesCommon for usage and error information.
func (c *CLB) ListTagsForNLBResourcesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListTagsForNLBResourcesCommonRequest(input)
	return out, req.Send()
}

// ListTagsForNLBResourcesCommonWithContext is the same as ListTagsForNLBResourcesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsForNLBResourcesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ListTagsForNLBResourcesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListTagsForNLBResourcesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListTagsForNLBResources = "ListTagsForNLBResources"

// ListTagsForNLBResourcesRequest generates a "volcengine/request.Request" representing the
// client's request for the ListTagsForNLBResources operation. The "output" return
// value will be populated with the ListTagsForNLBResourcesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListTagsForNLBResourcesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListTagsForNLBResourcesCommon Send returns without error.
//
// See ListTagsForNLBResources for more information on using the ListTagsForNLBResources
// API call, and error handling.
//
//    // Example sending a request using the ListTagsForNLBResourcesRequest method.
//    req, resp := client.ListTagsForNLBResourcesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ListTagsForNLBResourcesRequest(input *ListTagsForNLBResourcesInput) (req *request.Request, output *ListTagsForNLBResourcesOutput) {
	op := &request.Operation{
		Name:       opListTagsForNLBResources,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListTagsForNLBResourcesInput{}
	}

	output = &ListTagsForNLBResourcesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListTagsForNLBResources API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ListTagsForNLBResources for usage and error information.
func (c *CLB) ListTagsForNLBResources(input *ListTagsForNLBResourcesInput) (*ListTagsForNLBResourcesOutput, error) {
	req, out := c.ListTagsForNLBResourcesRequest(input)
	return out, req.Send()
}

// ListTagsForNLBResourcesWithContext is the same as ListTagsForNLBResources with the addition of
// the ability to pass a context and additional request options.
//
// See ListTagsForNLBResources for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ListTagsForNLBResourcesWithContext(ctx volcengine.Context, input *ListTagsForNLBResourcesInput, opts ...request.Option) (*ListTagsForNLBResourcesOutput, error) {
	req, out := c.ListTagsForNLBResourcesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListTagsForNLBResourcesInput struct {
	_ struct{} `type:"structure"`

	MaxResults *int64 `type:"integer"`

	NextToken *string `type:"string"`

	ResourceIds []*string `type:"list"`

	// ResourceType is a required field
	ResourceType *string `type:"string" required:"true" enum:"ResourceTypeForListTagsForNLBResourcesInput"`

	TagFilters []*TagFilterForListTagsForNLBResourcesInput `type:"list"`

	TagType *string `type:"string" enum:"TagTypeForListTagsForNLBResourcesInput"`
}

// String returns the string representation
func (s ListTagsForNLBResourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForNLBResourcesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListTagsForNLBResourcesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListTagsForNLBResourcesInput"}
	if s.ResourceType == nil {
		invalidParams.Add(request.NewErrParamRequired("ResourceType"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetMaxResults sets the MaxResults field's value.
func (s *ListTagsForNLBResourcesInput) SetMaxResults(v int64) *ListTagsForNLBResourcesInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsForNLBResourcesInput) SetNextToken(v string) *ListTagsForNLBResourcesInput {
	s.NextToken = &v
	return s
}

// SetResourceIds sets the ResourceIds field's value.
func (s *ListTagsForNLBResourcesInput) SetResourceIds(v []*string) *ListTagsForNLBResourcesInput {
	s.ResourceIds = v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ListTagsForNLBResourcesInput) SetResourceType(v string) *ListTagsForNLBResourcesInput {
	s.ResourceType = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *ListTagsForNLBResourcesInput) SetTagFilters(v []*TagFilterForListTagsForNLBResourcesInput) *ListTagsForNLBResourcesInput {
	s.TagFilters = v
	return s
}

// SetTagType sets the TagType field's value.
func (s *ListTagsForNLBResourcesInput) SetTagType(v string) *ListTagsForNLBResourcesInput {
	s.TagType = &v
	return s
}

type ListTagsForNLBResourcesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	NextToken *string `type:"string"`

	RequestId *string `type:"string"`

	ResourceTags *ResourceTagsForListTagsForNLBResourcesOutput `type:"structure"`
}

// String returns the string representation
func (s ListTagsForNLBResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListTagsForNLBResourcesOutput) GoString() string {
	return s.String()
}

// SetNextToken sets the NextToken field's value.
func (s *ListTagsForNLBResourcesOutput) SetNextToken(v string) *ListTagsForNLBResourcesOutput {
	s.NextToken = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *ListTagsForNLBResourcesOutput) SetRequestId(v string) *ListTagsForNLBResourcesOutput {
	s.RequestId = &v
	return s
}

// SetResourceTags sets the ResourceTags field's value.
func (s *ListTagsForNLBResourcesOutput) SetResourceTags(v *ResourceTagsForListTagsForNLBResourcesOutput) *ListTagsForNLBResourcesOutput {
	s.ResourceTags = v
	return s
}

type ResourceTagsForListTagsForNLBResourcesOutput struct {
	_ struct{} `type:"structure"`

	ResourceId *string `type:"string"`

	ResourceType *string `type:"string"`

	TagKey *string `type:"string"`

	TagValue *string `type:"string"`
}

// String returns the string representation
func (s ResourceTagsForListTagsForNLBResourcesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ResourceTagsForListTagsForNLBResourcesOutput) GoString() string {
	return s.String()
}

// SetResourceId sets the ResourceId field's value.
func (s *ResourceTagsForListTagsForNLBResourcesOutput) SetResourceId(v string) *ResourceTagsForListTagsForNLBResourcesOutput {
	s.ResourceId = &v
	return s
}

// SetResourceType sets the ResourceType field's value.
func (s *ResourceTagsForListTagsForNLBResourcesOutput) SetResourceType(v string) *ResourceTagsForListTagsForNLBResourcesOutput {
	s.ResourceType = &v
	return s
}

// SetTagKey sets the TagKey field's value.
func (s *ResourceTagsForListTagsForNLBResourcesOutput) SetTagKey(v string) *ResourceTagsForListTagsForNLBResourcesOutput {
	s.TagKey = &v
	return s
}

// SetTagValue sets the TagValue field's value.
func (s *ResourceTagsForListTagsForNLBResourcesOutput) SetTagValue(v string) *ResourceTagsForListTagsForNLBResourcesOutput {
	s.TagValue = &v
	return s
}

type TagFilterForListTagsForNLBResourcesInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForListTagsForNLBResourcesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForListTagsForNLBResourcesInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForListTagsForNLBResourcesInput) SetKey(v string) *TagFilterForListTagsForNLBResourcesInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForListTagsForNLBResourcesInput) SetValues(v []*string) *TagFilterForListTagsForNLBResourcesInput {
	s.Values = v
	return s
}

const (
	// ResourceTypeForListTagsForNLBResourcesInputNlb is a ResourceTypeForListTagsForNLBResourcesInput enum value
	ResourceTypeForListTagsForNLBResourcesInputNlb = "nlb"

	// ResourceTypeForListTagsForNLBResourcesInputNlbListener is a ResourceTypeForListTagsForNLBResourcesInput enum value
	ResourceTypeForListTagsForNLBResourcesInputNlbListener = "nlb_listener"

	// ResourceTypeForListTagsForNLBResourcesInputNlbServergroup is a ResourceTypeForListTagsForNLBResourcesInput enum value
	ResourceTypeForListTagsForNLBResourcesInputNlbServergroup = "nlb_servergroup"

	// ResourceTypeForListTagsForNLBResourcesInputNlbSecurityPolicy is a ResourceTypeForListTagsForNLBResourcesInput enum value
	ResourceTypeForListTagsForNLBResourcesInputNlbSecurityPolicy = "nlb_security_policy"
)

const (
	// TagTypeForListTagsForNLBResourcesInputCustom is a TagTypeForListTagsForNLBResourcesInput enum value
	TagTypeForListTagsForNLBResourcesInputCustom = "custom"

	// TagTypeForListTagsForNLBResourcesInputSystem is a TagTypeForListTagsForNLBResourcesInput enum value
	TagTypeForListTagsForNLBResourcesInputSystem = "system"
)
