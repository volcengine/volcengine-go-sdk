// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opModifyNetworkLoadBalancerZonesCommon = "ModifyNetworkLoadBalancerZones"

// ModifyNetworkLoadBalancerZonesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNetworkLoadBalancerZonesCommon operation. The "output" return
// value will be populated with the ModifyNetworkLoadBalancerZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNetworkLoadBalancerZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNetworkLoadBalancerZonesCommon Send returns without error.
//
// See ModifyNetworkLoadBalancerZonesCommon for more information on using the ModifyNetworkLoadBalancerZonesCommon
// API call, and error handling.
//
//    // Example sending a request using the ModifyNetworkLoadBalancerZonesCommonRequest method.
//    req, resp := client.ModifyNetworkLoadBalancerZonesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNetworkLoadBalancerZonesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opModifyNetworkLoadBalancerZonesCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNetworkLoadBalancerZonesCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNetworkLoadBalancerZonesCommon for usage and error information.
func (c *CLB) ModifyNetworkLoadBalancerZonesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ModifyNetworkLoadBalancerZonesCommonRequest(input)
	return out, req.Send()
}

// ModifyNetworkLoadBalancerZonesCommonWithContext is the same as ModifyNetworkLoadBalancerZonesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNetworkLoadBalancerZonesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNetworkLoadBalancerZonesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ModifyNetworkLoadBalancerZonesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opModifyNetworkLoadBalancerZones = "ModifyNetworkLoadBalancerZones"

// ModifyNetworkLoadBalancerZonesRequest generates a "volcengine/request.Request" representing the
// client's request for the ModifyNetworkLoadBalancerZones operation. The "output" return
// value will be populated with the ModifyNetworkLoadBalancerZonesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ModifyNetworkLoadBalancerZonesCommon Request to send the API call to the service.
// the "output" return value is not valid until after ModifyNetworkLoadBalancerZonesCommon Send returns without error.
//
// See ModifyNetworkLoadBalancerZones for more information on using the ModifyNetworkLoadBalancerZones
// API call, and error handling.
//
//    // Example sending a request using the ModifyNetworkLoadBalancerZonesRequest method.
//    req, resp := client.ModifyNetworkLoadBalancerZonesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) ModifyNetworkLoadBalancerZonesRequest(input *ModifyNetworkLoadBalancerZonesInput) (req *request.Request, output *ModifyNetworkLoadBalancerZonesOutput) {
	op := &request.Operation{
		Name:       opModifyNetworkLoadBalancerZones,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ModifyNetworkLoadBalancerZonesInput{}
	}

	output = &ModifyNetworkLoadBalancerZonesOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ModifyNetworkLoadBalancerZones API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation ModifyNetworkLoadBalancerZones for usage and error information.
func (c *CLB) ModifyNetworkLoadBalancerZones(input *ModifyNetworkLoadBalancerZonesInput) (*ModifyNetworkLoadBalancerZonesOutput, error) {
	req, out := c.ModifyNetworkLoadBalancerZonesRequest(input)
	return out, req.Send()
}

// ModifyNetworkLoadBalancerZonesWithContext is the same as ModifyNetworkLoadBalancerZones with the addition of
// the ability to pass a context and additional request options.
//
// See ModifyNetworkLoadBalancerZones for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) ModifyNetworkLoadBalancerZonesWithContext(ctx volcengine.Context, input *ModifyNetworkLoadBalancerZonesInput, opts ...request.Option) (*ModifyNetworkLoadBalancerZonesOutput, error) {
	req, out := c.ModifyNetworkLoadBalancerZonesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AddZoneMappingForModifyNetworkLoadBalancerZonesInput struct {
	_ struct{} `type:"structure"`

	EipId *string `type:"string"`

	Ipv4Address *string `type:"string"`

	SubnetId *string `type:"string"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s AddZoneMappingForModifyNetworkLoadBalancerZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AddZoneMappingForModifyNetworkLoadBalancerZonesInput) GoString() string {
	return s.String()
}

// SetEipId sets the EipId field's value.
func (s *AddZoneMappingForModifyNetworkLoadBalancerZonesInput) SetEipId(v string) *AddZoneMappingForModifyNetworkLoadBalancerZonesInput {
	s.EipId = &v
	return s
}

// SetIpv4Address sets the Ipv4Address field's value.
func (s *AddZoneMappingForModifyNetworkLoadBalancerZonesInput) SetIpv4Address(v string) *AddZoneMappingForModifyNetworkLoadBalancerZonesInput {
	s.Ipv4Address = &v
	return s
}

// SetSubnetId sets the SubnetId field's value.
func (s *AddZoneMappingForModifyNetworkLoadBalancerZonesInput) SetSubnetId(v string) *AddZoneMappingForModifyNetworkLoadBalancerZonesInput {
	s.SubnetId = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *AddZoneMappingForModifyNetworkLoadBalancerZonesInput) SetZoneId(v string) *AddZoneMappingForModifyNetworkLoadBalancerZonesInput {
	s.ZoneId = &v
	return s
}

type ModifyNetworkLoadBalancerZonesInput struct {
	_ struct{} `type:"structure"`

	AddZoneMappings []*AddZoneMappingForModifyNetworkLoadBalancerZonesInput `type:"list"`

	DeleteZoneMappings []*string `type:"list"`

	// LoadBalancerId is a required field
	LoadBalancerId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ModifyNetworkLoadBalancerZonesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNetworkLoadBalancerZonesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ModifyNetworkLoadBalancerZonesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ModifyNetworkLoadBalancerZonesInput"}
	if s.LoadBalancerId == nil {
		invalidParams.Add(request.NewErrParamRequired("LoadBalancerId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAddZoneMappings sets the AddZoneMappings field's value.
func (s *ModifyNetworkLoadBalancerZonesInput) SetAddZoneMappings(v []*AddZoneMappingForModifyNetworkLoadBalancerZonesInput) *ModifyNetworkLoadBalancerZonesInput {
	s.AddZoneMappings = v
	return s
}

// SetDeleteZoneMappings sets the DeleteZoneMappings field's value.
func (s *ModifyNetworkLoadBalancerZonesInput) SetDeleteZoneMappings(v []*string) *ModifyNetworkLoadBalancerZonesInput {
	s.DeleteZoneMappings = v
	return s
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *ModifyNetworkLoadBalancerZonesInput) SetLoadBalancerId(v string) *ModifyNetworkLoadBalancerZonesInput {
	s.LoadBalancerId = &v
	return s
}

type ModifyNetworkLoadBalancerZonesOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s ModifyNetworkLoadBalancerZonesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ModifyNetworkLoadBalancerZonesOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *ModifyNetworkLoadBalancerZonesOutput) SetRequestId(v string) *ModifyNetworkLoadBalancerZonesOutput {
	s.RequestId = &v
	return s
}
