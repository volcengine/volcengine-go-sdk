// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDescribeNLBListenersCommon = "DescribeNLBListeners"

// DescribeNLBListenersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNLBListenersCommon operation. The "output" return
// value will be populated with the DescribeNLBListenersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNLBListenersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNLBListenersCommon Send returns without error.
//
// See DescribeNLBListenersCommon for more information on using the DescribeNLBListenersCommon
// API call, and error handling.
//
//    // Example sending a request using the DescribeNLBListenersCommonRequest method.
//    req, resp := client.DescribeNLBListenersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeNLBListenersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDescribeNLBListenersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNLBListenersCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeNLBListenersCommon for usage and error information.
func (c *CLB) DescribeNLBListenersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DescribeNLBListenersCommonRequest(input)
	return out, req.Send()
}

// DescribeNLBListenersCommonWithContext is the same as DescribeNLBListenersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNLBListenersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeNLBListenersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DescribeNLBListenersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDescribeNLBListeners = "DescribeNLBListeners"

// DescribeNLBListenersRequest generates a "volcengine/request.Request" representing the
// client's request for the DescribeNLBListeners operation. The "output" return
// value will be populated with the DescribeNLBListenersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DescribeNLBListenersCommon Request to send the API call to the service.
// the "output" return value is not valid until after DescribeNLBListenersCommon Send returns without error.
//
// See DescribeNLBListeners for more information on using the DescribeNLBListeners
// API call, and error handling.
//
//    // Example sending a request using the DescribeNLBListenersRequest method.
//    req, resp := client.DescribeNLBListenersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DescribeNLBListenersRequest(input *DescribeNLBListenersInput) (req *request.Request, output *DescribeNLBListenersOutput) {
	op := &request.Operation{
		Name:       opDescribeNLBListeners,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DescribeNLBListenersInput{}
	}

	output = &DescribeNLBListenersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DescribeNLBListeners API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DescribeNLBListeners for usage and error information.
func (c *CLB) DescribeNLBListeners(input *DescribeNLBListenersInput) (*DescribeNLBListenersOutput, error) {
	req, out := c.DescribeNLBListenersRequest(input)
	return out, req.Send()
}

// DescribeNLBListenersWithContext is the same as DescribeNLBListeners with the addition of
// the ability to pass a context and additional request options.
//
// See DescribeNLBListeners for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DescribeNLBListenersWithContext(ctx volcengine.Context, input *DescribeNLBListenersInput, opts ...request.Option) (*DescribeNLBListenersOutput, error) {
	req, out := c.DescribeNLBListenersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DescribeNLBListenersInput struct {
	_ struct{} `type:"structure"`

	ListenerIds []*string `type:"list"`

	ListenerName *string `type:"string"`

	LoadBalancerId *string `type:"string"`

	MaxResults *int64 `type:"integer"`

	NextToken *string `type:"string"`

	Protocol *string `type:"string"`

	TagFilters []*TagFilterForDescribeNLBListenersInput `type:"list"`
}

// String returns the string representation
func (s DescribeNLBListenersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNLBListenersInput) GoString() string {
	return s.String()
}

// SetListenerIds sets the ListenerIds field's value.
func (s *DescribeNLBListenersInput) SetListenerIds(v []*string) *DescribeNLBListenersInput {
	s.ListenerIds = v
	return s
}

// SetListenerName sets the ListenerName field's value.
func (s *DescribeNLBListenersInput) SetListenerName(v string) *DescribeNLBListenersInput {
	s.ListenerName = &v
	return s
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *DescribeNLBListenersInput) SetLoadBalancerId(v string) *DescribeNLBListenersInput {
	s.LoadBalancerId = &v
	return s
}

// SetMaxResults sets the MaxResults field's value.
func (s *DescribeNLBListenersInput) SetMaxResults(v int64) *DescribeNLBListenersInput {
	s.MaxResults = &v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeNLBListenersInput) SetNextToken(v string) *DescribeNLBListenersInput {
	s.NextToken = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *DescribeNLBListenersInput) SetProtocol(v string) *DescribeNLBListenersInput {
	s.Protocol = &v
	return s
}

// SetTagFilters sets the TagFilters field's value.
func (s *DescribeNLBListenersInput) SetTagFilters(v []*TagFilterForDescribeNLBListenersInput) *DescribeNLBListenersInput {
	s.TagFilters = v
	return s
}

type DescribeNLBListenersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	Listeners []*ListenerForDescribeNLBListenersOutput `type:"list"`

	NextToken *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DescribeNLBListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DescribeNLBListenersOutput) GoString() string {
	return s.String()
}

// SetListeners sets the Listeners field's value.
func (s *DescribeNLBListenersOutput) SetListeners(v []*ListenerForDescribeNLBListenersOutput) *DescribeNLBListenersOutput {
	s.Listeners = v
	return s
}

// SetNextToken sets the NextToken field's value.
func (s *DescribeNLBListenersOutput) SetNextToken(v string) *DescribeNLBListenersOutput {
	s.NextToken = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *DescribeNLBListenersOutput) SetRequestId(v string) *DescribeNLBListenersOutput {
	s.RequestId = &v
	return s
}

type ListenerForDescribeNLBListenersOutput struct {
	_ struct{} `type:"structure"`

	AccountId *string `type:"string"`

	CertificateId *string `type:"string"`

	ConnectionTimeout *int64 `type:"integer"`

	CreateTime *string `type:"string"`

	Description *string `type:"string"`

	Enabled *bool `type:"boolean"`

	EndPort *int64 `type:"integer"`

	ListenerId *string `type:"string"`

	ListenerName *string `type:"string"`

	LoadBalancerId *string `type:"string"`

	Port *int64 `type:"integer"`

	Protocol *string `type:"string"`

	SecurityPolicyId *string `type:"string"`

	SecurityPolicyType *string `type:"string"`

	ServerGroupId *string `type:"string"`

	StartPort *int64 `type:"integer"`

	Status *string `type:"string"`

	Tags []*TagForDescribeNLBListenersOutput `type:"list"`

	UpdateTime *string `type:"string"`
}

// String returns the string representation
func (s ListenerForDescribeNLBListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListenerForDescribeNLBListenersOutput) GoString() string {
	return s.String()
}

// SetAccountId sets the AccountId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetAccountId(v string) *ListenerForDescribeNLBListenersOutput {
	s.AccountId = &v
	return s
}

// SetCertificateId sets the CertificateId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetCertificateId(v string) *ListenerForDescribeNLBListenersOutput {
	s.CertificateId = &v
	return s
}

// SetConnectionTimeout sets the ConnectionTimeout field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetConnectionTimeout(v int64) *ListenerForDescribeNLBListenersOutput {
	s.ConnectionTimeout = &v
	return s
}

// SetCreateTime sets the CreateTime field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetCreateTime(v string) *ListenerForDescribeNLBListenersOutput {
	s.CreateTime = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetDescription(v string) *ListenerForDescribeNLBListenersOutput {
	s.Description = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetEnabled(v bool) *ListenerForDescribeNLBListenersOutput {
	s.Enabled = &v
	return s
}

// SetEndPort sets the EndPort field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetEndPort(v int64) *ListenerForDescribeNLBListenersOutput {
	s.EndPort = &v
	return s
}

// SetListenerId sets the ListenerId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetListenerId(v string) *ListenerForDescribeNLBListenersOutput {
	s.ListenerId = &v
	return s
}

// SetListenerName sets the ListenerName field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetListenerName(v string) *ListenerForDescribeNLBListenersOutput {
	s.ListenerName = &v
	return s
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetLoadBalancerId(v string) *ListenerForDescribeNLBListenersOutput {
	s.LoadBalancerId = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetPort(v int64) *ListenerForDescribeNLBListenersOutput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetProtocol(v string) *ListenerForDescribeNLBListenersOutput {
	s.Protocol = &v
	return s
}

// SetSecurityPolicyId sets the SecurityPolicyId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetSecurityPolicyId(v string) *ListenerForDescribeNLBListenersOutput {
	s.SecurityPolicyId = &v
	return s
}

// SetSecurityPolicyType sets the SecurityPolicyType field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetSecurityPolicyType(v string) *ListenerForDescribeNLBListenersOutput {
	s.SecurityPolicyType = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetServerGroupId(v string) *ListenerForDescribeNLBListenersOutput {
	s.ServerGroupId = &v
	return s
}

// SetStartPort sets the StartPort field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetStartPort(v int64) *ListenerForDescribeNLBListenersOutput {
	s.StartPort = &v
	return s
}

// SetStatus sets the Status field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetStatus(v string) *ListenerForDescribeNLBListenersOutput {
	s.Status = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetTags(v []*TagForDescribeNLBListenersOutput) *ListenerForDescribeNLBListenersOutput {
	s.Tags = v
	return s
}

// SetUpdateTime sets the UpdateTime field's value.
func (s *ListenerForDescribeNLBListenersOutput) SetUpdateTime(v string) *ListenerForDescribeNLBListenersOutput {
	s.UpdateTime = &v
	return s
}

type TagFilterForDescribeNLBListenersInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Values []*string `type:"list"`
}

// String returns the string representation
func (s TagFilterForDescribeNLBListenersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagFilterForDescribeNLBListenersInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagFilterForDescribeNLBListenersInput) SetKey(v string) *TagFilterForDescribeNLBListenersInput {
	s.Key = &v
	return s
}

// SetValues sets the Values field's value.
func (s *TagFilterForDescribeNLBListenersInput) SetValues(v []*string) *TagFilterForDescribeNLBListenersInput {
	s.Values = v
	return s
}

type TagForDescribeNLBListenersOutput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForDescribeNLBListenersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForDescribeNLBListenersOutput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForDescribeNLBListenersOutput) SetKey(v string) *TagForDescribeNLBListenersOutput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForDescribeNLBListenersOutput) SetValue(v string) *TagForDescribeNLBListenersOutput {
	s.Value = &v
	return s
}
