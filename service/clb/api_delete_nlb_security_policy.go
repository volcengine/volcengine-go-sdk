// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteNLBSecurityPolicyCommon = "DeleteNLBSecurityPolicy"

// DeleteNLBSecurityPolicyCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNLBSecurityPolicyCommon operation. The "output" return
// value will be populated with the DeleteNLBSecurityPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNLBSecurityPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNLBSecurityPolicyCommon Send returns without error.
//
// See DeleteNLBSecurityPolicyCommon for more information on using the DeleteNLBSecurityPolicyCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteNLBSecurityPolicyCommonRequest method.
//    req, resp := client.DeleteNLBSecurityPolicyCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DeleteNLBSecurityPolicyCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteNLBSecurityPolicyCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteNLBSecurityPolicyCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DeleteNLBSecurityPolicyCommon for usage and error information.
func (c *CLB) DeleteNLBSecurityPolicyCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteNLBSecurityPolicyCommonRequest(input)
	return out, req.Send()
}

// DeleteNLBSecurityPolicyCommonWithContext is the same as DeleteNLBSecurityPolicyCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNLBSecurityPolicyCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DeleteNLBSecurityPolicyCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteNLBSecurityPolicyCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteNLBSecurityPolicy = "DeleteNLBSecurityPolicy"

// DeleteNLBSecurityPolicyRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteNLBSecurityPolicy operation. The "output" return
// value will be populated with the DeleteNLBSecurityPolicyCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteNLBSecurityPolicyCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteNLBSecurityPolicyCommon Send returns without error.
//
// See DeleteNLBSecurityPolicy for more information on using the DeleteNLBSecurityPolicy
// API call, and error handling.
//
//    // Example sending a request using the DeleteNLBSecurityPolicyRequest method.
//    req, resp := client.DeleteNLBSecurityPolicyRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) DeleteNLBSecurityPolicyRequest(input *DeleteNLBSecurityPolicyInput) (req *request.Request, output *DeleteNLBSecurityPolicyOutput) {
	op := &request.Operation{
		Name:       opDeleteNLBSecurityPolicy,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteNLBSecurityPolicyInput{}
	}

	output = &DeleteNLBSecurityPolicyOutput{}
	req = c.newRequest(op, input, output)

	return
}

// DeleteNLBSecurityPolicy API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation DeleteNLBSecurityPolicy for usage and error information.
func (c *CLB) DeleteNLBSecurityPolicy(input *DeleteNLBSecurityPolicyInput) (*DeleteNLBSecurityPolicyOutput, error) {
	req, out := c.DeleteNLBSecurityPolicyRequest(input)
	return out, req.Send()
}

// DeleteNLBSecurityPolicyWithContext is the same as DeleteNLBSecurityPolicy with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteNLBSecurityPolicy for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) DeleteNLBSecurityPolicyWithContext(ctx volcengine.Context, input *DeleteNLBSecurityPolicyInput, opts ...request.Option) (*DeleteNLBSecurityPolicyOutput, error) {
	req, out := c.DeleteNLBSecurityPolicyRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteNLBSecurityPolicyInput struct {
	_ struct{} `type:"structure"`

	ClientToken *string `type:"string"`

	// SecurityPolicyId is a required field
	SecurityPolicyId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s DeleteNLBSecurityPolicyInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNLBSecurityPolicyInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteNLBSecurityPolicyInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteNLBSecurityPolicyInput"}
	if s.SecurityPolicyId == nil {
		invalidParams.Add(request.NewErrParamRequired("SecurityPolicyId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetClientToken sets the ClientToken field's value.
func (s *DeleteNLBSecurityPolicyInput) SetClientToken(v string) *DeleteNLBSecurityPolicyInput {
	s.ClientToken = &v
	return s
}

// SetSecurityPolicyId sets the SecurityPolicyId field's value.
func (s *DeleteNLBSecurityPolicyInput) SetSecurityPolicyId(v string) *DeleteNLBSecurityPolicyInput {
	s.SecurityPolicyId = &v
	return s
}

type DeleteNLBSecurityPolicyOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s DeleteNLBSecurityPolicyOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteNLBSecurityPolicyOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *DeleteNLBSecurityPolicyOutput) SetRequestId(v string) *DeleteNLBSecurityPolicyOutput {
	s.RequestId = &v
	return s
}
