// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateNLBServerGroupCommon = "CreateNLBServerGroup"

// CreateNLBServerGroupCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateNLBServerGroupCommon operation. The "output" return
// value will be populated with the CreateNLBServerGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateNLBServerGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateNLBServerGroupCommon Send returns without error.
//
// See CreateNLBServerGroupCommon for more information on using the CreateNLBServerGroupCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateNLBServerGroupCommonRequest method.
//    req, resp := client.CreateNLBServerGroupCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateNLBServerGroupCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateNLBServerGroupCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateNLBServerGroupCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateNLBServerGroupCommon for usage and error information.
func (c *CLB) CreateNLBServerGroupCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateNLBServerGroupCommonRequest(input)
	return out, req.Send()
}

// CreateNLBServerGroupCommonWithContext is the same as CreateNLBServerGroupCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateNLBServerGroupCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateNLBServerGroupCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateNLBServerGroupCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateNLBServerGroup = "CreateNLBServerGroup"

// CreateNLBServerGroupRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateNLBServerGroup operation. The "output" return
// value will be populated with the CreateNLBServerGroupCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateNLBServerGroupCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateNLBServerGroupCommon Send returns without error.
//
// See CreateNLBServerGroup for more information on using the CreateNLBServerGroup
// API call, and error handling.
//
//    // Example sending a request using the CreateNLBServerGroupRequest method.
//    req, resp := client.CreateNLBServerGroupRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateNLBServerGroupRequest(input *CreateNLBServerGroupInput) (req *request.Request, output *CreateNLBServerGroupOutput) {
	op := &request.Operation{
		Name:       opCreateNLBServerGroup,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateNLBServerGroupInput{}
	}

	output = &CreateNLBServerGroupOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateNLBServerGroup API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateNLBServerGroup for usage and error information.
func (c *CLB) CreateNLBServerGroup(input *CreateNLBServerGroupInput) (*CreateNLBServerGroupOutput, error) {
	req, out := c.CreateNLBServerGroupRequest(input)
	return out, req.Send()
}

// CreateNLBServerGroupWithContext is the same as CreateNLBServerGroup with the addition of
// the ability to pass a context and additional request options.
//
// See CreateNLBServerGroup for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateNLBServerGroupWithContext(ctx volcengine.Context, input *CreateNLBServerGroupInput, opts ...request.Option) (*CreateNLBServerGroupOutput, error) {
	req, out := c.CreateNLBServerGroupRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateNLBServerGroupInput struct {
	_ struct{} `type:"structure"`

	AnyPortEnabled *bool `type:"boolean"`

	BypassSecurityGroupEnabled *bool `type:"boolean"`

	ConnectionDrainEnabled *bool `type:"boolean"`

	ConnectionDrainTimeout *int64 `type:"integer"`

	Description *string `type:"string"`

	HealthCheck *HealthCheckForCreateNLBServerGroupInput `type:"structure"`

	IpAddressVersion *string `type:"string"`

	PreserveClientIpEnabled *bool `type:"boolean"`

	ProjectName *string `type:"string"`

	// Protocol is a required field
	Protocol *string `type:"string" required:"true"`

	ProxyProtocolType *string `type:"string"`

	Scheduler *string `type:"string"`

	ServerGroupName *string `type:"string"`

	Servers []*ServerForCreateNLBServerGroupInput `type:"list"`

	SessionPersistenceEnabled *bool `type:"boolean"`

	SessionPersistenceTimeout *int64 `type:"integer"`

	Tags []*TagForCreateNLBServerGroupInput `type:"list"`

	TimestampRemoveEnabled *bool `type:"boolean"`

	Type *string `type:"string"`

	// VpcId is a required field
	VpcId *string `type:"string" required:"true"`
}

// String returns the string representation
func (s CreateNLBServerGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNLBServerGroupInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateNLBServerGroupInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateNLBServerGroupInput"}
	if s.Protocol == nil {
		invalidParams.Add(request.NewErrParamRequired("Protocol"))
	}
	if s.VpcId == nil {
		invalidParams.Add(request.NewErrParamRequired("VpcId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAnyPortEnabled sets the AnyPortEnabled field's value.
func (s *CreateNLBServerGroupInput) SetAnyPortEnabled(v bool) *CreateNLBServerGroupInput {
	s.AnyPortEnabled = &v
	return s
}

// SetBypassSecurityGroupEnabled sets the BypassSecurityGroupEnabled field's value.
func (s *CreateNLBServerGroupInput) SetBypassSecurityGroupEnabled(v bool) *CreateNLBServerGroupInput {
	s.BypassSecurityGroupEnabled = &v
	return s
}

// SetConnectionDrainEnabled sets the ConnectionDrainEnabled field's value.
func (s *CreateNLBServerGroupInput) SetConnectionDrainEnabled(v bool) *CreateNLBServerGroupInput {
	s.ConnectionDrainEnabled = &v
	return s
}

// SetConnectionDrainTimeout sets the ConnectionDrainTimeout field's value.
func (s *CreateNLBServerGroupInput) SetConnectionDrainTimeout(v int64) *CreateNLBServerGroupInput {
	s.ConnectionDrainTimeout = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateNLBServerGroupInput) SetDescription(v string) *CreateNLBServerGroupInput {
	s.Description = &v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *CreateNLBServerGroupInput) SetHealthCheck(v *HealthCheckForCreateNLBServerGroupInput) *CreateNLBServerGroupInput {
	s.HealthCheck = v
	return s
}

// SetIpAddressVersion sets the IpAddressVersion field's value.
func (s *CreateNLBServerGroupInput) SetIpAddressVersion(v string) *CreateNLBServerGroupInput {
	s.IpAddressVersion = &v
	return s
}

// SetPreserveClientIpEnabled sets the PreserveClientIpEnabled field's value.
func (s *CreateNLBServerGroupInput) SetPreserveClientIpEnabled(v bool) *CreateNLBServerGroupInput {
	s.PreserveClientIpEnabled = &v
	return s
}

// SetProjectName sets the ProjectName field's value.
func (s *CreateNLBServerGroupInput) SetProjectName(v string) *CreateNLBServerGroupInput {
	s.ProjectName = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CreateNLBServerGroupInput) SetProtocol(v string) *CreateNLBServerGroupInput {
	s.Protocol = &v
	return s
}

// SetProxyProtocolType sets the ProxyProtocolType field's value.
func (s *CreateNLBServerGroupInput) SetProxyProtocolType(v string) *CreateNLBServerGroupInput {
	s.ProxyProtocolType = &v
	return s
}

// SetScheduler sets the Scheduler field's value.
func (s *CreateNLBServerGroupInput) SetScheduler(v string) *CreateNLBServerGroupInput {
	s.Scheduler = &v
	return s
}

// SetServerGroupName sets the ServerGroupName field's value.
func (s *CreateNLBServerGroupInput) SetServerGroupName(v string) *CreateNLBServerGroupInput {
	s.ServerGroupName = &v
	return s
}

// SetServers sets the Servers field's value.
func (s *CreateNLBServerGroupInput) SetServers(v []*ServerForCreateNLBServerGroupInput) *CreateNLBServerGroupInput {
	s.Servers = v
	return s
}

// SetSessionPersistenceEnabled sets the SessionPersistenceEnabled field's value.
func (s *CreateNLBServerGroupInput) SetSessionPersistenceEnabled(v bool) *CreateNLBServerGroupInput {
	s.SessionPersistenceEnabled = &v
	return s
}

// SetSessionPersistenceTimeout sets the SessionPersistenceTimeout field's value.
func (s *CreateNLBServerGroupInput) SetSessionPersistenceTimeout(v int64) *CreateNLBServerGroupInput {
	s.SessionPersistenceTimeout = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateNLBServerGroupInput) SetTags(v []*TagForCreateNLBServerGroupInput) *CreateNLBServerGroupInput {
	s.Tags = v
	return s
}

// SetTimestampRemoveEnabled sets the TimestampRemoveEnabled field's value.
func (s *CreateNLBServerGroupInput) SetTimestampRemoveEnabled(v bool) *CreateNLBServerGroupInput {
	s.TimestampRemoveEnabled = &v
	return s
}

// SetType sets the Type field's value.
func (s *CreateNLBServerGroupInput) SetType(v string) *CreateNLBServerGroupInput {
	s.Type = &v
	return s
}

// SetVpcId sets the VpcId field's value.
func (s *CreateNLBServerGroupInput) SetVpcId(v string) *CreateNLBServerGroupInput {
	s.VpcId = &v
	return s
}

type CreateNLBServerGroupOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`

	ServerGroupId *string `type:"string"`

	ServerIds []*string `type:"list"`
}

// String returns the string representation
func (s CreateNLBServerGroupOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateNLBServerGroupOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *CreateNLBServerGroupOutput) SetRequestId(v string) *CreateNLBServerGroupOutput {
	s.RequestId = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *CreateNLBServerGroupOutput) SetServerGroupId(v string) *CreateNLBServerGroupOutput {
	s.ServerGroupId = &v
	return s
}

// SetServerIds sets the ServerIds field's value.
func (s *CreateNLBServerGroupOutput) SetServerIds(v []*string) *CreateNLBServerGroupOutput {
	s.ServerIds = v
	return s
}

type HealthCheckForCreateNLBServerGroupInput struct {
	_ struct{} `type:"structure"`

	Domain *string `type:"string"`

	Enabled *bool `type:"boolean"`

	HealthyThreshold *int64 `type:"integer"`

	HttpCode *string `type:"string"`

	Interval *int64 `type:"integer"`

	Method *string `type:"string"`

	Port *int64 `type:"integer"`

	Timeout *int64 `type:"integer"`

	Type *string `type:"string"`

	URI *string `type:"string"`

	UdpExpect *string `type:"string"`

	UdpRequest *string `type:"string"`

	UnhealthyThreshold *int64 `type:"integer"`
}

// String returns the string representation
func (s HealthCheckForCreateNLBServerGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthCheckForCreateNLBServerGroupInput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetDomain(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.Domain = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetEnabled(v bool) *HealthCheckForCreateNLBServerGroupInput {
	s.Enabled = &v
	return s
}

// SetHealthyThreshold sets the HealthyThreshold field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetHealthyThreshold(v int64) *HealthCheckForCreateNLBServerGroupInput {
	s.HealthyThreshold = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetHttpCode(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.HttpCode = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetInterval(v int64) *HealthCheckForCreateNLBServerGroupInput {
	s.Interval = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetMethod(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.Method = &v
	return s
}

// SetPort sets the Port field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetPort(v int64) *HealthCheckForCreateNLBServerGroupInput {
	s.Port = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetTimeout(v int64) *HealthCheckForCreateNLBServerGroupInput {
	s.Timeout = &v
	return s
}

// SetType sets the Type field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetType(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.Type = &v
	return s
}

// SetURI sets the URI field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetURI(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.URI = &v
	return s
}

// SetUdpExpect sets the UdpExpect field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetUdpExpect(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.UdpExpect = &v
	return s
}

// SetUdpRequest sets the UdpRequest field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetUdpRequest(v string) *HealthCheckForCreateNLBServerGroupInput {
	s.UdpRequest = &v
	return s
}

// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
func (s *HealthCheckForCreateNLBServerGroupInput) SetUnhealthyThreshold(v int64) *HealthCheckForCreateNLBServerGroupInput {
	s.UnhealthyThreshold = &v
	return s
}

type ServerForCreateNLBServerGroupInput struct {
	_ struct{} `type:"structure"`

	Description *string `type:"string"`

	InstanceId *string `type:"string"`

	Ip *string `type:"string"`

	Port *int64 `type:"integer"`

	Type *string `type:"string"`

	Weight *int64 `type:"integer"`

	ZoneId *string `type:"string"`
}

// String returns the string representation
func (s ServerForCreateNLBServerGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ServerForCreateNLBServerGroupInput) GoString() string {
	return s.String()
}

// SetDescription sets the Description field's value.
func (s *ServerForCreateNLBServerGroupInput) SetDescription(v string) *ServerForCreateNLBServerGroupInput {
	s.Description = &v
	return s
}

// SetInstanceId sets the InstanceId field's value.
func (s *ServerForCreateNLBServerGroupInput) SetInstanceId(v string) *ServerForCreateNLBServerGroupInput {
	s.InstanceId = &v
	return s
}

// SetIp sets the Ip field's value.
func (s *ServerForCreateNLBServerGroupInput) SetIp(v string) *ServerForCreateNLBServerGroupInput {
	s.Ip = &v
	return s
}

// SetPort sets the Port field's value.
func (s *ServerForCreateNLBServerGroupInput) SetPort(v int64) *ServerForCreateNLBServerGroupInput {
	s.Port = &v
	return s
}

// SetType sets the Type field's value.
func (s *ServerForCreateNLBServerGroupInput) SetType(v string) *ServerForCreateNLBServerGroupInput {
	s.Type = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *ServerForCreateNLBServerGroupInput) SetWeight(v int64) *ServerForCreateNLBServerGroupInput {
	s.Weight = &v
	return s
}

// SetZoneId sets the ZoneId field's value.
func (s *ServerForCreateNLBServerGroupInput) SetZoneId(v string) *ServerForCreateNLBServerGroupInput {
	s.ZoneId = &v
	return s
}

type TagForCreateNLBServerGroupInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateNLBServerGroupInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateNLBServerGroupInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateNLBServerGroupInput) SetKey(v string) *TagForCreateNLBServerGroupInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateNLBServerGroupInput) SetValue(v string) *TagForCreateNLBServerGroupInput {
	s.Value = &v
	return s
}
