// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opRemoveNLBBackendServersCommon = "RemoveNLBBackendServers"

// RemoveNLBBackendServersCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the RemoveNLBBackendServersCommon operation. The "output" return
// value will be populated with the RemoveNLBBackendServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RemoveNLBBackendServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after RemoveNLBBackendServersCommon Send returns without error.
//
// See RemoveNLBBackendServersCommon for more information on using the RemoveNLBBackendServersCommon
// API call, and error handling.
//
//    // Example sending a request using the RemoveNLBBackendServersCommonRequest method.
//    req, resp := client.RemoveNLBBackendServersCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) RemoveNLBBackendServersCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opRemoveNLBBackendServersCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveNLBBackendServersCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation RemoveNLBBackendServersCommon for usage and error information.
func (c *CLB) RemoveNLBBackendServersCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.RemoveNLBBackendServersCommonRequest(input)
	return out, req.Send()
}

// RemoveNLBBackendServersCommonWithContext is the same as RemoveNLBBackendServersCommon with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveNLBBackendServersCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) RemoveNLBBackendServersCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.RemoveNLBBackendServersCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opRemoveNLBBackendServers = "RemoveNLBBackendServers"

// RemoveNLBBackendServersRequest generates a "volcengine/request.Request" representing the
// client's request for the RemoveNLBBackendServers operation. The "output" return
// value will be populated with the RemoveNLBBackendServersCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned RemoveNLBBackendServersCommon Request to send the API call to the service.
// the "output" return value is not valid until after RemoveNLBBackendServersCommon Send returns without error.
//
// See RemoveNLBBackendServers for more information on using the RemoveNLBBackendServers
// API call, and error handling.
//
//    // Example sending a request using the RemoveNLBBackendServersRequest method.
//    req, resp := client.RemoveNLBBackendServersRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) RemoveNLBBackendServersRequest(input *RemoveNLBBackendServersInput) (req *request.Request, output *RemoveNLBBackendServersOutput) {
	op := &request.Operation{
		Name:       opRemoveNLBBackendServers,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &RemoveNLBBackendServersInput{}
	}

	output = &RemoveNLBBackendServersOutput{}
	req = c.newRequest(op, input, output)

	return
}

// RemoveNLBBackendServers API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation RemoveNLBBackendServers for usage and error information.
func (c *CLB) RemoveNLBBackendServers(input *RemoveNLBBackendServersInput) (*RemoveNLBBackendServersOutput, error) {
	req, out := c.RemoveNLBBackendServersRequest(input)
	return out, req.Send()
}

// RemoveNLBBackendServersWithContext is the same as RemoveNLBBackendServers with the addition of
// the ability to pass a context and additional request options.
//
// See RemoveNLBBackendServers for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) RemoveNLBBackendServersWithContext(ctx volcengine.Context, input *RemoveNLBBackendServersInput, opts ...request.Option) (*RemoveNLBBackendServersOutput, error) {
	req, out := c.RemoveNLBBackendServersRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type RemoveNLBBackendServersInput struct {
	_ struct{} `type:"structure"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`

	// ServerIds is a required field
	ServerIds []*string `type:"list" required:"true"`
}

// String returns the string representation
func (s RemoveNLBBackendServersInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveNLBBackendServersInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *RemoveNLBBackendServersInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "RemoveNLBBackendServersInput"}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}
	if s.ServerIds == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerIds"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *RemoveNLBBackendServersInput) SetServerGroupId(v string) *RemoveNLBBackendServersInput {
	s.ServerGroupId = &v
	return s
}

// SetServerIds sets the ServerIds field's value.
func (s *RemoveNLBBackendServersInput) SetServerIds(v []*string) *RemoveNLBBackendServersInput {
	s.ServerIds = v
	return s
}

type RemoveNLBBackendServersOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s RemoveNLBBackendServersOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RemoveNLBBackendServersOutput) GoString() string {
	return s.String()
}

// SetRequestId sets the RequestId field's value.
func (s *RemoveNLBBackendServersOutput) SetRequestId(v string) *RemoveNLBBackendServersOutput {
	s.RequestId = &v
	return s
}
