// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package clb

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateListenerCommon = "CreateListener"

// CreateListenerCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateListenerCommon operation. The "output" return
// value will be populated with the CreateListenerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateListenerCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateListenerCommon Send returns without error.
//
// See CreateListenerCommon for more information on using the CreateListenerCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateListenerCommonRequest method.
//    req, resp := client.CreateListenerCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateListenerCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateListenerCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// CreateListenerCommon API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateListenerCommon for usage and error information.
func (c *CLB) CreateListenerCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateListenerCommonRequest(input)
	return out, req.Send()
}

// CreateListenerCommonWithContext is the same as CreateListenerCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateListenerCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateListenerCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateListenerCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateListener = "CreateListener"

// CreateListenerRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateListener operation. The "output" return
// value will be populated with the CreateListenerCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateListenerCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateListenerCommon Send returns without error.
//
// See CreateListener for more information on using the CreateListener
// API call, and error handling.
//
//    // Example sending a request using the CreateListenerRequest method.
//    req, resp := client.CreateListenerRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *CLB) CreateListenerRequest(input *CreateListenerInput) (req *request.Request, output *CreateListenerOutput) {
	op := &request.Operation{
		Name:       opCreateListener,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateListenerInput{}
	}

	output = &CreateListenerOutput{}
	req = c.newRequest(op, input, output)

	return
}

// CreateListener API operation for CLB.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for CLB's
// API operation CreateListener for usage and error information.
func (c *CLB) CreateListener(input *CreateListenerInput) (*CreateListenerOutput, error) {
	req, out := c.CreateListenerRequest(input)
	return out, req.Send()
}

// CreateListenerWithContext is the same as CreateListener with the addition of
// the ability to pass a context and additional request options.
//
// See CreateListener for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *CLB) CreateListenerWithContext(ctx volcengine.Context, input *CreateListenerInput, opts ...request.Option) (*CreateListenerOutput, error) {
	req, out := c.CreateListenerRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateListenerInput struct {
	_ struct{} `type:"structure"`

	AclIds []*string `type:"list"`

	AclStatus *string `type:"string"`

	AclType *string `type:"string"`

	Bandwidth *int64 `type:"integer"`

	CACertificateId *string `type:"string"`

	CAEnabled *string `type:"string"`

	CertCenterCertificateId *string `type:"string"`

	CertificateId *string `type:"string"`

	CertificateSource *string `type:"string"`

	ClientBodyTimeout *int64 `type:"integer"`

	ClientHeaderTimeout *int64 `type:"integer"`

	ConnectionDrainEnabled *string `type:"string"`

	ConnectionDrainTimeout *int64 `type:"integer"`

	Cookie *string `type:"string"`

	Cps *int64 `type:"integer"`

	Description *string `type:"string"`

	Enabled *string `type:"string"`

	EndPort *int64 `type:"integer"`

	EnhancedSchedulerEnable *string `type:"string"`

	EstablishedTimeout *int64 `type:"integer"`

	HealthCheck *HealthCheckForCreateListenerInput `type:"structure"`

	Http2Enabled *string `type:"string"`

	KeepaliveTimeout *int64 `type:"integer"`

	ListenerName *string `type:"string"`

	// LoadBalancerId is a required field
	LoadBalancerId *string `type:"string" required:"true"`

	LoadType *string `type:"string"`

	MaxConnections *int64 `type:"integer"`

	PersistenceTimeout *int64 `type:"integer"`

	PersistenceType *string `type:"string"`

	// Port is a required field
	Port *int64 `type:"integer" required:"true"`

	// Protocol is a required field
	Protocol *string `type:"string" required:"true"`

	ProxyConnectTimeout *int64 `type:"integer"`

	ProxyProtocolType *string `type:"string"`

	ProxyReadTimeout *int64 `type:"integer"`

	ProxySendTimeout *int64 `type:"integer"`

	Scheduler *string `type:"string"`

	SecurityPolicyId *string `type:"string"`

	SendTimeout *int64 `type:"integer"`

	// ServerGroupId is a required field
	ServerGroupId *string `type:"string" required:"true"`

	StartPort *int64 `type:"integer"`

	Tags []*TagForCreateListenerInput `type:"list"`
}

// String returns the string representation
func (s CreateListenerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateListenerInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateListenerInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateListenerInput"}
	if s.LoadBalancerId == nil {
		invalidParams.Add(request.NewErrParamRequired("LoadBalancerId"))
	}
	if s.Port == nil {
		invalidParams.Add(request.NewErrParamRequired("Port"))
	}
	if s.Protocol == nil {
		invalidParams.Add(request.NewErrParamRequired("Protocol"))
	}
	if s.ServerGroupId == nil {
		invalidParams.Add(request.NewErrParamRequired("ServerGroupId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAclIds sets the AclIds field's value.
func (s *CreateListenerInput) SetAclIds(v []*string) *CreateListenerInput {
	s.AclIds = v
	return s
}

// SetAclStatus sets the AclStatus field's value.
func (s *CreateListenerInput) SetAclStatus(v string) *CreateListenerInput {
	s.AclStatus = &v
	return s
}

// SetAclType sets the AclType field's value.
func (s *CreateListenerInput) SetAclType(v string) *CreateListenerInput {
	s.AclType = &v
	return s
}

// SetBandwidth sets the Bandwidth field's value.
func (s *CreateListenerInput) SetBandwidth(v int64) *CreateListenerInput {
	s.Bandwidth = &v
	return s
}

// SetCACertificateId sets the CACertificateId field's value.
func (s *CreateListenerInput) SetCACertificateId(v string) *CreateListenerInput {
	s.CACertificateId = &v
	return s
}

// SetCAEnabled sets the CAEnabled field's value.
func (s *CreateListenerInput) SetCAEnabled(v string) *CreateListenerInput {
	s.CAEnabled = &v
	return s
}

// SetCertCenterCertificateId sets the CertCenterCertificateId field's value.
func (s *CreateListenerInput) SetCertCenterCertificateId(v string) *CreateListenerInput {
	s.CertCenterCertificateId = &v
	return s
}

// SetCertificateId sets the CertificateId field's value.
func (s *CreateListenerInput) SetCertificateId(v string) *CreateListenerInput {
	s.CertificateId = &v
	return s
}

// SetCertificateSource sets the CertificateSource field's value.
func (s *CreateListenerInput) SetCertificateSource(v string) *CreateListenerInput {
	s.CertificateSource = &v
	return s
}

// SetClientBodyTimeout sets the ClientBodyTimeout field's value.
func (s *CreateListenerInput) SetClientBodyTimeout(v int64) *CreateListenerInput {
	s.ClientBodyTimeout = &v
	return s
}

// SetClientHeaderTimeout sets the ClientHeaderTimeout field's value.
func (s *CreateListenerInput) SetClientHeaderTimeout(v int64) *CreateListenerInput {
	s.ClientHeaderTimeout = &v
	return s
}

// SetConnectionDrainEnabled sets the ConnectionDrainEnabled field's value.
func (s *CreateListenerInput) SetConnectionDrainEnabled(v string) *CreateListenerInput {
	s.ConnectionDrainEnabled = &v
	return s
}

// SetConnectionDrainTimeout sets the ConnectionDrainTimeout field's value.
func (s *CreateListenerInput) SetConnectionDrainTimeout(v int64) *CreateListenerInput {
	s.ConnectionDrainTimeout = &v
	return s
}

// SetCookie sets the Cookie field's value.
func (s *CreateListenerInput) SetCookie(v string) *CreateListenerInput {
	s.Cookie = &v
	return s
}

// SetCps sets the Cps field's value.
func (s *CreateListenerInput) SetCps(v int64) *CreateListenerInput {
	s.Cps = &v
	return s
}

// SetDescription sets the Description field's value.
func (s *CreateListenerInput) SetDescription(v string) *CreateListenerInput {
	s.Description = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *CreateListenerInput) SetEnabled(v string) *CreateListenerInput {
	s.Enabled = &v
	return s
}

// SetEndPort sets the EndPort field's value.
func (s *CreateListenerInput) SetEndPort(v int64) *CreateListenerInput {
	s.EndPort = &v
	return s
}

// SetEnhancedSchedulerEnable sets the EnhancedSchedulerEnable field's value.
func (s *CreateListenerInput) SetEnhancedSchedulerEnable(v string) *CreateListenerInput {
	s.EnhancedSchedulerEnable = &v
	return s
}

// SetEstablishedTimeout sets the EstablishedTimeout field's value.
func (s *CreateListenerInput) SetEstablishedTimeout(v int64) *CreateListenerInput {
	s.EstablishedTimeout = &v
	return s
}

// SetHealthCheck sets the HealthCheck field's value.
func (s *CreateListenerInput) SetHealthCheck(v *HealthCheckForCreateListenerInput) *CreateListenerInput {
	s.HealthCheck = v
	return s
}

// SetHttp2Enabled sets the Http2Enabled field's value.
func (s *CreateListenerInput) SetHttp2Enabled(v string) *CreateListenerInput {
	s.Http2Enabled = &v
	return s
}

// SetKeepaliveTimeout sets the KeepaliveTimeout field's value.
func (s *CreateListenerInput) SetKeepaliveTimeout(v int64) *CreateListenerInput {
	s.KeepaliveTimeout = &v
	return s
}

// SetListenerName sets the ListenerName field's value.
func (s *CreateListenerInput) SetListenerName(v string) *CreateListenerInput {
	s.ListenerName = &v
	return s
}

// SetLoadBalancerId sets the LoadBalancerId field's value.
func (s *CreateListenerInput) SetLoadBalancerId(v string) *CreateListenerInput {
	s.LoadBalancerId = &v
	return s
}

// SetLoadType sets the LoadType field's value.
func (s *CreateListenerInput) SetLoadType(v string) *CreateListenerInput {
	s.LoadType = &v
	return s
}

// SetMaxConnections sets the MaxConnections field's value.
func (s *CreateListenerInput) SetMaxConnections(v int64) *CreateListenerInput {
	s.MaxConnections = &v
	return s
}

// SetPersistenceTimeout sets the PersistenceTimeout field's value.
func (s *CreateListenerInput) SetPersistenceTimeout(v int64) *CreateListenerInput {
	s.PersistenceTimeout = &v
	return s
}

// SetPersistenceType sets the PersistenceType field's value.
func (s *CreateListenerInput) SetPersistenceType(v string) *CreateListenerInput {
	s.PersistenceType = &v
	return s
}

// SetPort sets the Port field's value.
func (s *CreateListenerInput) SetPort(v int64) *CreateListenerInput {
	s.Port = &v
	return s
}

// SetProtocol sets the Protocol field's value.
func (s *CreateListenerInput) SetProtocol(v string) *CreateListenerInput {
	s.Protocol = &v
	return s
}

// SetProxyConnectTimeout sets the ProxyConnectTimeout field's value.
func (s *CreateListenerInput) SetProxyConnectTimeout(v int64) *CreateListenerInput {
	s.ProxyConnectTimeout = &v
	return s
}

// SetProxyProtocolType sets the ProxyProtocolType field's value.
func (s *CreateListenerInput) SetProxyProtocolType(v string) *CreateListenerInput {
	s.ProxyProtocolType = &v
	return s
}

// SetProxyReadTimeout sets the ProxyReadTimeout field's value.
func (s *CreateListenerInput) SetProxyReadTimeout(v int64) *CreateListenerInput {
	s.ProxyReadTimeout = &v
	return s
}

// SetProxySendTimeout sets the ProxySendTimeout field's value.
func (s *CreateListenerInput) SetProxySendTimeout(v int64) *CreateListenerInput {
	s.ProxySendTimeout = &v
	return s
}

// SetScheduler sets the Scheduler field's value.
func (s *CreateListenerInput) SetScheduler(v string) *CreateListenerInput {
	s.Scheduler = &v
	return s
}

// SetSecurityPolicyId sets the SecurityPolicyId field's value.
func (s *CreateListenerInput) SetSecurityPolicyId(v string) *CreateListenerInput {
	s.SecurityPolicyId = &v
	return s
}

// SetSendTimeout sets the SendTimeout field's value.
func (s *CreateListenerInput) SetSendTimeout(v int64) *CreateListenerInput {
	s.SendTimeout = &v
	return s
}

// SetServerGroupId sets the ServerGroupId field's value.
func (s *CreateListenerInput) SetServerGroupId(v string) *CreateListenerInput {
	s.ServerGroupId = &v
	return s
}

// SetStartPort sets the StartPort field's value.
func (s *CreateListenerInput) SetStartPort(v int64) *CreateListenerInput {
	s.StartPort = &v
	return s
}

// SetTags sets the Tags field's value.
func (s *CreateListenerInput) SetTags(v []*TagForCreateListenerInput) *CreateListenerInput {
	s.Tags = v
	return s
}

type CreateListenerOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	ListenerId *string `type:"string"`

	RequestId *string `type:"string"`
}

// String returns the string representation
func (s CreateListenerOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateListenerOutput) GoString() string {
	return s.String()
}

// SetListenerId sets the ListenerId field's value.
func (s *CreateListenerOutput) SetListenerId(v string) *CreateListenerOutput {
	s.ListenerId = &v
	return s
}

// SetRequestId sets the RequestId field's value.
func (s *CreateListenerOutput) SetRequestId(v string) *CreateListenerOutput {
	s.RequestId = &v
	return s
}

type HealthCheckForCreateListenerInput struct {
	_ struct{} `type:"structure"`

	Domain *string `type:"string"`

	Enabled *string `type:"string"`

	HealthyThreshold *int64 `type:"integer"`

	HttpCode *string `type:"string"`

	Interval *int64 `type:"integer"`

	Method *string `type:"string"`

	Port *int64 `type:"integer"`

	Timeout *int64 `type:"integer"`

	URI *string `type:"string"`

	UdpExpect *string `type:"string"`

	UdpRequest *string `type:"string"`

	UnhealthyThreshold *int64 `type:"integer"`
}

// String returns the string representation
func (s HealthCheckForCreateListenerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HealthCheckForCreateListenerInput) GoString() string {
	return s.String()
}

// SetDomain sets the Domain field's value.
func (s *HealthCheckForCreateListenerInput) SetDomain(v string) *HealthCheckForCreateListenerInput {
	s.Domain = &v
	return s
}

// SetEnabled sets the Enabled field's value.
func (s *HealthCheckForCreateListenerInput) SetEnabled(v string) *HealthCheckForCreateListenerInput {
	s.Enabled = &v
	return s
}

// SetHealthyThreshold sets the HealthyThreshold field's value.
func (s *HealthCheckForCreateListenerInput) SetHealthyThreshold(v int64) *HealthCheckForCreateListenerInput {
	s.HealthyThreshold = &v
	return s
}

// SetHttpCode sets the HttpCode field's value.
func (s *HealthCheckForCreateListenerInput) SetHttpCode(v string) *HealthCheckForCreateListenerInput {
	s.HttpCode = &v
	return s
}

// SetInterval sets the Interval field's value.
func (s *HealthCheckForCreateListenerInput) SetInterval(v int64) *HealthCheckForCreateListenerInput {
	s.Interval = &v
	return s
}

// SetMethod sets the Method field's value.
func (s *HealthCheckForCreateListenerInput) SetMethod(v string) *HealthCheckForCreateListenerInput {
	s.Method = &v
	return s
}

// SetPort sets the Port field's value.
func (s *HealthCheckForCreateListenerInput) SetPort(v int64) *HealthCheckForCreateListenerInput {
	s.Port = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *HealthCheckForCreateListenerInput) SetTimeout(v int64) *HealthCheckForCreateListenerInput {
	s.Timeout = &v
	return s
}

// SetURI sets the URI field's value.
func (s *HealthCheckForCreateListenerInput) SetURI(v string) *HealthCheckForCreateListenerInput {
	s.URI = &v
	return s
}

// SetUdpExpect sets the UdpExpect field's value.
func (s *HealthCheckForCreateListenerInput) SetUdpExpect(v string) *HealthCheckForCreateListenerInput {
	s.UdpExpect = &v
	return s
}

// SetUdpRequest sets the UdpRequest field's value.
func (s *HealthCheckForCreateListenerInput) SetUdpRequest(v string) *HealthCheckForCreateListenerInput {
	s.UdpRequest = &v
	return s
}

// SetUnhealthyThreshold sets the UnhealthyThreshold field's value.
func (s *HealthCheckForCreateListenerInput) SetUnhealthyThreshold(v int64) *HealthCheckForCreateListenerInput {
	s.UnhealthyThreshold = &v
	return s
}

type TagForCreateListenerInput struct {
	_ struct{} `type:"structure"`

	Key *string `type:"string"`

	Value *string `type:"string"`
}

// String returns the string representation
func (s TagForCreateListenerInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TagForCreateListenerInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *TagForCreateListenerInput) SetKey(v string) *TagForCreateListenerInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *TagForCreateListenerInput) SetValue(v string) *TagForCreateListenerInput {
	s.Value = &v
	return s
}
