// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package apig20221112

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateRouteCommon = "UpdateRoute"

// UpdateRouteCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateRouteCommon operation. The "output" return
// value will be populated with the UpdateRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRouteCommon Send returns without error.
//
// See UpdateRouteCommon for more information on using the UpdateRouteCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateRouteCommonRequest method.
//    req, resp := client.UpdateRouteCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG20221112) UpdateRouteCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateRouteCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRouteCommon API operation for APIG20221112.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG20221112's
// API operation UpdateRouteCommon for usage and error information.
func (c *APIG20221112) UpdateRouteCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateRouteCommonRequest(input)
	return out, req.Send()
}

// UpdateRouteCommonWithContext is the same as UpdateRouteCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRouteCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG20221112) UpdateRouteCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateRouteCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateRoute = "UpdateRoute"

// UpdateRouteRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateRoute operation. The "output" return
// value will be populated with the UpdateRouteCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateRouteCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateRouteCommon Send returns without error.
//
// See UpdateRoute for more information on using the UpdateRoute
// API call, and error handling.
//
//    // Example sending a request using the UpdateRouteRequest method.
//    req, resp := client.UpdateRouteRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *APIG20221112) UpdateRouteRequest(input *UpdateRouteInput) (req *request.Request, output *UpdateRouteOutput) {
	op := &request.Operation{
		Name:       opUpdateRoute,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateRouteInput{}
	}

	output = &UpdateRouteOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateRoute API operation for APIG20221112.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for APIG20221112's
// API operation UpdateRoute for usage and error information.
func (c *APIG20221112) UpdateRoute(input *UpdateRouteInput) (*UpdateRouteOutput, error) {
	req, out := c.UpdateRouteRequest(input)
	return out, req.Send()
}

// UpdateRouteWithContext is the same as UpdateRoute with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateRoute for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *APIG20221112) UpdateRouteWithContext(ctx volcengine.Context, input *UpdateRouteInput, opts ...request.Option) (*UpdateRouteOutput, error) {
	req, out := c.UpdateRouteRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type AIProviderSettingsForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Model *string `type:"string" json:",omitempty"`

	TargetPath *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s AIProviderSettingsForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AIProviderSettingsForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetModel sets the Model field's value.
func (s *AIProviderSettingsForUpdateRouteInput) SetModel(v string) *AIProviderSettingsForUpdateRouteInput {
	s.Model = &v
	return s
}

// SetTargetPath sets the TargetPath field's value.
func (s *AIProviderSettingsForUpdateRouteInput) SetTargetPath(v string) *AIProviderSettingsForUpdateRouteInput {
	s.TargetPath = &v
	return s
}

type AdvancedSettingForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	CorsPolicySetting *CorsPolicySettingForUpdateRouteInput `type:"structure" json:",omitempty"`

	HeaderOperations []*HeaderOperationForUpdateRouteInput `type:"list" json:",omitempty"`

	MirrorPolicies []*MirrorPolicyForUpdateRouteInput `type:"list" json:",omitempty"`

	RetryPolicySetting *RetryPolicySettingForUpdateRouteInput `type:"structure" json:",omitempty"`

	TimeoutSetting *TimeoutSettingForUpdateRouteInput `type:"structure" json:",omitempty"`

	URLRewriteSetting *URLRewriteSettingForUpdateRouteInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s AdvancedSettingForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s AdvancedSettingForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetCorsPolicySetting sets the CorsPolicySetting field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetCorsPolicySetting(v *CorsPolicySettingForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.CorsPolicySetting = v
	return s
}

// SetHeaderOperations sets the HeaderOperations field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetHeaderOperations(v []*HeaderOperationForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.HeaderOperations = v
	return s
}

// SetMirrorPolicies sets the MirrorPolicies field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetMirrorPolicies(v []*MirrorPolicyForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.MirrorPolicies = v
	return s
}

// SetRetryPolicySetting sets the RetryPolicySetting field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetRetryPolicySetting(v *RetryPolicySettingForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.RetryPolicySetting = v
	return s
}

// SetTimeoutSetting sets the TimeoutSetting field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetTimeoutSetting(v *TimeoutSettingForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.TimeoutSetting = v
	return s
}

// SetURLRewriteSetting sets the URLRewriteSetting field's value.
func (s *AdvancedSettingForUpdateRouteInput) SetURLRewriteSetting(v *URLRewriteSettingForUpdateRouteInput) *AdvancedSettingForUpdateRouteInput {
	s.URLRewriteSetting = v
	return s
}

type CorsPolicySettingForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`
}

// String returns the string representation
func (s CorsPolicySettingForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CorsPolicySettingForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *CorsPolicySettingForUpdateRouteInput) SetEnable(v bool) *CorsPolicySettingForUpdateRouteInput {
	s.Enable = &v
	return s
}

type HeaderForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *ValueForUpdateRouteInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s HeaderForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HeaderForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *HeaderForUpdateRouteInput) SetKey(v string) *HeaderForUpdateRouteInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *HeaderForUpdateRouteInput) SetValue(v *ValueForUpdateRouteInput) *HeaderForUpdateRouteInput {
	s.Value = v
	return s
}

type HeaderOperationForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DirectionType *string `type:"string" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Operation *string `type:"string" json:",omitempty"`

	Value *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s HeaderOperationForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s HeaderOperationForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetDirectionType sets the DirectionType field's value.
func (s *HeaderOperationForUpdateRouteInput) SetDirectionType(v string) *HeaderOperationForUpdateRouteInput {
	s.DirectionType = &v
	return s
}

// SetKey sets the Key field's value.
func (s *HeaderOperationForUpdateRouteInput) SetKey(v string) *HeaderOperationForUpdateRouteInput {
	s.Key = &v
	return s
}

// SetOperation sets the Operation field's value.
func (s *HeaderOperationForUpdateRouteInput) SetOperation(v string) *HeaderOperationForUpdateRouteInput {
	s.Operation = &v
	return s
}

// SetValue sets the Value field's value.
func (s *HeaderOperationForUpdateRouteInput) SetValue(v string) *HeaderOperationForUpdateRouteInput {
	s.Value = &v
	return s
}

type MatchRuleForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Header []*HeaderForUpdateRouteInput `type:"list" json:",omitempty"`

	Method []*string `type:"list" json:",omitempty"`

	Path *PathForUpdateRouteInput `type:"structure" json:",omitempty"`

	QueryString []*QueryStringForUpdateRouteInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s MatchRuleForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MatchRuleForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetHeader sets the Header field's value.
func (s *MatchRuleForUpdateRouteInput) SetHeader(v []*HeaderForUpdateRouteInput) *MatchRuleForUpdateRouteInput {
	s.Header = v
	return s
}

// SetMethod sets the Method field's value.
func (s *MatchRuleForUpdateRouteInput) SetMethod(v []*string) *MatchRuleForUpdateRouteInput {
	s.Method = v
	return s
}

// SetPath sets the Path field's value.
func (s *MatchRuleForUpdateRouteInput) SetPath(v *PathForUpdateRouteInput) *MatchRuleForUpdateRouteInput {
	s.Path = v
	return s
}

// SetQueryString sets the QueryString field's value.
func (s *MatchRuleForUpdateRouteInput) SetQueryString(v []*QueryStringForUpdateRouteInput) *MatchRuleForUpdateRouteInput {
	s.QueryString = v
	return s
}

type MirrorPolicyForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Percent *PercentForUpdateRouteInput `type:"structure" json:",omitempty"`

	Upstream *UpstreamForUpdateRouteInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s MirrorPolicyForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s MirrorPolicyForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetPercent sets the Percent field's value.
func (s *MirrorPolicyForUpdateRouteInput) SetPercent(v *PercentForUpdateRouteInput) *MirrorPolicyForUpdateRouteInput {
	s.Percent = v
	return s
}

// SetUpstream sets the Upstream field's value.
func (s *MirrorPolicyForUpdateRouteInput) SetUpstream(v *UpstreamForUpdateRouteInput) *MirrorPolicyForUpdateRouteInput {
	s.Upstream = v
	return s
}

type PathForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MatchContent *string `type:"string" json:",omitempty"`

	MatchType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s PathForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PathForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetMatchContent sets the MatchContent field's value.
func (s *PathForUpdateRouteInput) SetMatchContent(v string) *PathForUpdateRouteInput {
	s.MatchContent = &v
	return s
}

// SetMatchType sets the MatchType field's value.
func (s *PathForUpdateRouteInput) SetMatchType(v string) *PathForUpdateRouteInput {
	s.MatchType = &v
	return s
}

type PercentForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Value *float64 `type:"double" json:",omitempty"`
}

// String returns the string representation
func (s PercentForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PercentForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetValue sets the Value field's value.
func (s *PercentForUpdateRouteInput) SetValue(v float64) *PercentForUpdateRouteInput {
	s.Value = &v
	return s
}

type QueryStringForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Key *string `type:"string" json:",omitempty"`

	Value *PathForUpdateRouteInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s QueryStringForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s QueryStringForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetKey sets the Key field's value.
func (s *QueryStringForUpdateRouteInput) SetKey(v string) *QueryStringForUpdateRouteInput {
	s.Key = &v
	return s
}

// SetValue sets the Value field's value.
func (s *QueryStringForUpdateRouteInput) SetValue(v *PathForUpdateRouteInput) *QueryStringForUpdateRouteInput {
	s.Value = v
	return s
}

type RetryPolicySettingForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Attempts *int64 `type:"int64" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	HttpCodes []*string `type:"list" json:",omitempty"`

	PerTryTimeout *int64 `type:"int64" json:",omitempty"`

	RetryOn []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s RetryPolicySettingForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s RetryPolicySettingForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetAttempts sets the Attempts field's value.
func (s *RetryPolicySettingForUpdateRouteInput) SetAttempts(v int64) *RetryPolicySettingForUpdateRouteInput {
	s.Attempts = &v
	return s
}

// SetEnable sets the Enable field's value.
func (s *RetryPolicySettingForUpdateRouteInput) SetEnable(v bool) *RetryPolicySettingForUpdateRouteInput {
	s.Enable = &v
	return s
}

// SetHttpCodes sets the HttpCodes field's value.
func (s *RetryPolicySettingForUpdateRouteInput) SetHttpCodes(v []*string) *RetryPolicySettingForUpdateRouteInput {
	s.HttpCodes = v
	return s
}

// SetPerTryTimeout sets the PerTryTimeout field's value.
func (s *RetryPolicySettingForUpdateRouteInput) SetPerTryTimeout(v int64) *RetryPolicySettingForUpdateRouteInput {
	s.PerTryTimeout = &v
	return s
}

// SetRetryOn sets the RetryOn field's value.
func (s *RetryPolicySettingForUpdateRouteInput) SetRetryOn(v []*string) *RetryPolicySettingForUpdateRouteInput {
	s.RetryOn = v
	return s
}

type TimeoutSettingForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	Timeout *int64 `type:"int64" json:",omitempty"`
}

// String returns the string representation
func (s TimeoutSettingForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TimeoutSettingForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *TimeoutSettingForUpdateRouteInput) SetEnable(v bool) *TimeoutSettingForUpdateRouteInput {
	s.Enable = &v
	return s
}

// SetTimeout sets the Timeout field's value.
func (s *TimeoutSettingForUpdateRouteInput) SetTimeout(v int64) *TimeoutSettingForUpdateRouteInput {
	s.Timeout = &v
	return s
}

type URLRewriteSettingForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	URLRewrite *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s URLRewriteSettingForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s URLRewriteSettingForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetEnable sets the Enable field's value.
func (s *URLRewriteSettingForUpdateRouteInput) SetEnable(v bool) *URLRewriteSettingForUpdateRouteInput {
	s.Enable = &v
	return s
}

// SetURLRewrite sets the URLRewrite field's value.
func (s *URLRewriteSettingForUpdateRouteInput) SetURLRewrite(v string) *URLRewriteSettingForUpdateRouteInput {
	s.URLRewrite = &v
	return s
}

type UpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AdvancedSetting *AdvancedSettingForUpdateRouteInput `type:"structure" json:",omitempty"`

	Enable *bool `type:"boolean" json:",omitempty"`

	// Id is a required field
	Id *string `type:"string" json:",omitempty" required:"true"`

	MatchRule *MatchRuleForUpdateRouteInput `type:"structure" json:",omitempty"`

	// Name is a required field
	Name *string `type:"string" json:",omitempty" required:"true"`

	Priority *int64 `type:"int64" json:",omitempty"`

	UpstreamList []*UpstreamListForUpdateRouteInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRouteInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateRouteInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateRouteInput"}
	if s.Id == nil {
		invalidParams.Add(request.NewErrParamRequired("Id"))
	}
	if s.Name == nil {
		invalidParams.Add(request.NewErrParamRequired("Name"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAdvancedSetting sets the AdvancedSetting field's value.
func (s *UpdateRouteInput) SetAdvancedSetting(v *AdvancedSettingForUpdateRouteInput) *UpdateRouteInput {
	s.AdvancedSetting = v
	return s
}

// SetEnable sets the Enable field's value.
func (s *UpdateRouteInput) SetEnable(v bool) *UpdateRouteInput {
	s.Enable = &v
	return s
}

// SetId sets the Id field's value.
func (s *UpdateRouteInput) SetId(v string) *UpdateRouteInput {
	s.Id = &v
	return s
}

// SetMatchRule sets the MatchRule field's value.
func (s *UpdateRouteInput) SetMatchRule(v *MatchRuleForUpdateRouteInput) *UpdateRouteInput {
	s.MatchRule = v
	return s
}

// SetName sets the Name field's value.
func (s *UpdateRouteInput) SetName(v string) *UpdateRouteInput {
	s.Name = &v
	return s
}

// SetPriority sets the Priority field's value.
func (s *UpdateRouteInput) SetPriority(v int64) *UpdateRouteInput {
	s.Priority = &v
	return s
}

// SetUpstreamList sets the UpstreamList field's value.
func (s *UpdateRouteInput) SetUpstreamList(v []*UpstreamListForUpdateRouteInput) *UpdateRouteInput {
	s.UpstreamList = v
	return s
}

type UpdateRouteOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Id *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpdateRouteOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateRouteOutput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *UpdateRouteOutput) SetId(v string) *UpdateRouteOutput {
	s.Id = &v
	return s
}

type UpstreamForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Type *string `type:"string" json:",omitempty"`

	UpstreamId *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s UpstreamForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpstreamForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetType sets the Type field's value.
func (s *UpstreamForUpdateRouteInput) SetType(v string) *UpstreamForUpdateRouteInput {
	s.Type = &v
	return s
}

// SetUpstreamId sets the UpstreamId field's value.
func (s *UpstreamForUpdateRouteInput) SetUpstreamId(v string) *UpstreamForUpdateRouteInput {
	s.UpstreamId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *UpstreamForUpdateRouteInput) SetVersion(v string) *UpstreamForUpdateRouteInput {
	s.Version = &v
	return s
}

type UpstreamListForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AIProviderSettings *AIProviderSettingsForUpdateRouteInput `type:"structure" json:",omitempty"`

	UpstreamId *string `type:"string" json:",omitempty"`

	Version *string `type:"string" json:",omitempty"`

	Weight *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s UpstreamListForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpstreamListForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetAIProviderSettings sets the AIProviderSettings field's value.
func (s *UpstreamListForUpdateRouteInput) SetAIProviderSettings(v *AIProviderSettingsForUpdateRouteInput) *UpstreamListForUpdateRouteInput {
	s.AIProviderSettings = v
	return s
}

// SetUpstreamId sets the UpstreamId field's value.
func (s *UpstreamListForUpdateRouteInput) SetUpstreamId(v string) *UpstreamListForUpdateRouteInput {
	s.UpstreamId = &v
	return s
}

// SetVersion sets the Version field's value.
func (s *UpstreamListForUpdateRouteInput) SetVersion(v string) *UpstreamListForUpdateRouteInput {
	s.Version = &v
	return s
}

// SetWeight sets the Weight field's value.
func (s *UpstreamListForUpdateRouteInput) SetWeight(v int32) *UpstreamListForUpdateRouteInput {
	s.Weight = &v
	return s
}

type ValueForUpdateRouteInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	MatchContent *string `type:"string" json:",omitempty"`

	MatchType *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ValueForUpdateRouteInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ValueForUpdateRouteInput) GoString() string {
	return s.String()
}

// SetMatchContent sets the MatchContent field's value.
func (s *ValueForUpdateRouteInput) SetMatchContent(v string) *ValueForUpdateRouteInput {
	s.MatchContent = &v
	return s
}

// SetMatchType sets the MatchType field's value.
func (s *ValueForUpdateRouteInput) SetMatchType(v string) *ValueForUpdateRouteInput {
	s.MatchType = &v
	return s
}
