// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opListAITranslationSpeechCommon = "ListAITranslationSpeech"

// ListAITranslationSpeechCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAITranslationSpeechCommon operation. The "output" return
// value will be populated with the ListAITranslationSpeechCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAITranslationSpeechCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAITranslationSpeechCommon Send returns without error.
//
// See ListAITranslationSpeechCommon for more information on using the ListAITranslationSpeechCommon
// API call, and error handling.
//
//    // Example sending a request using the ListAITranslationSpeechCommonRequest method.
//    req, resp := client.ListAITranslationSpeechCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) ListAITranslationSpeechCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opListAITranslationSpeechCommon,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	return
}

// ListAITranslationSpeechCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation ListAITranslationSpeechCommon for usage and error information.
func (c *VOD20250101) ListAITranslationSpeechCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ListAITranslationSpeechCommonRequest(input)
	return out, req.Send()
}

// ListAITranslationSpeechCommonWithContext is the same as ListAITranslationSpeechCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ListAITranslationSpeechCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) ListAITranslationSpeechCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ListAITranslationSpeechCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opListAITranslationSpeech = "ListAITranslationSpeech"

// ListAITranslationSpeechRequest generates a "volcengine/request.Request" representing the
// client's request for the ListAITranslationSpeech operation. The "output" return
// value will be populated with the ListAITranslationSpeechCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ListAITranslationSpeechCommon Request to send the API call to the service.
// the "output" return value is not valid until after ListAITranslationSpeechCommon Send returns without error.
//
// See ListAITranslationSpeech for more information on using the ListAITranslationSpeech
// API call, and error handling.
//
//    // Example sending a request using the ListAITranslationSpeechRequest method.
//    req, resp := client.ListAITranslationSpeechRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) ListAITranslationSpeechRequest(input *ListAITranslationSpeechInput) (req *request.Request, output *ListAITranslationSpeechOutput) {
	op := &request.Operation{
		Name:       opListAITranslationSpeech,
		HTTPMethod: "GET",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ListAITranslationSpeechInput{}
	}

	output = &ListAITranslationSpeechOutput{}
	req = c.newRequest(op, input, output)

	return
}

// ListAITranslationSpeech API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation ListAITranslationSpeech for usage and error information.
func (c *VOD20250101) ListAITranslationSpeech(input *ListAITranslationSpeechInput) (*ListAITranslationSpeechOutput, error) {
	req, out := c.ListAITranslationSpeechRequest(input)
	return out, req.Send()
}

// ListAITranslationSpeechWithContext is the same as ListAITranslationSpeech with the addition of
// the ability to pass a context and additional request options.
//
// See ListAITranslationSpeech for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) ListAITranslationSpeechWithContext(ctx volcengine.Context, input *ListAITranslationSpeechInput, opts ...request.Option) (*ListAITranslationSpeechOutput, error) {
	req, out := c.ListAITranslationSpeechRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ListAITranslationSpeechInput struct {
	_ struct{} `type:"structure"`

	// Language is a required field
	Language *string `type:"string" required:"true"`

	// SpaceName is a required field
	SpaceName *string `type:"string" required:"true"`

	// SpeechTypeFilter is a required field
	SpeechTypeFilter *string `type:"string" required:"true"`
}

// String returns the string representation
func (s ListAITranslationSpeechInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAITranslationSpeechInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ListAITranslationSpeechInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ListAITranslationSpeechInput"}
	if s.Language == nil {
		invalidParams.Add(request.NewErrParamRequired("Language"))
	}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}
	if s.SpeechTypeFilter == nil {
		invalidParams.Add(request.NewErrParamRequired("SpeechTypeFilter"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetLanguage sets the Language field's value.
func (s *ListAITranslationSpeechInput) SetLanguage(v string) *ListAITranslationSpeechInput {
	s.Language = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *ListAITranslationSpeechInput) SetSpaceName(v string) *ListAITranslationSpeechInput {
	s.SpaceName = &v
	return s
}

// SetSpeechTypeFilter sets the SpeechTypeFilter field's value.
func (s *ListAITranslationSpeechInput) SetSpeechTypeFilter(v string) *ListAITranslationSpeechInput {
	s.SpeechTypeFilter = &v
	return s
}

type ListAITranslationSpeechOutput struct {
	_ struct{} `type:"structure"`

	Metadata *response.ResponseMetadata

	PresetSpeeches []*PresetSpeechForListAITranslationSpeechOutput `type:"list"`

	UserSpeeches []*UserSpeechForListAITranslationSpeechOutput `type:"list"`
}

// String returns the string representation
func (s ListAITranslationSpeechOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ListAITranslationSpeechOutput) GoString() string {
	return s.String()
}

// SetPresetSpeeches sets the PresetSpeeches field's value.
func (s *ListAITranslationSpeechOutput) SetPresetSpeeches(v []*PresetSpeechForListAITranslationSpeechOutput) *ListAITranslationSpeechOutput {
	s.PresetSpeeches = v
	return s
}

// SetUserSpeeches sets the UserSpeeches field's value.
func (s *ListAITranslationSpeechOutput) SetUserSpeeches(v []*UserSpeechForListAITranslationSpeechOutput) *ListAITranslationSpeechOutput {
	s.UserSpeeches = v
	return s
}

type PresetSpeechForListAITranslationSpeechOutput struct {
	_ struct{} `type:"structure"`

	AudioUrl *string `type:"string"`

	Gender *string `type:"string"`

	Id *string `type:"string"`

	Language *string `type:"string"`

	Name *string `type:"string"`

	Voice *string `type:"string"`
}

// String returns the string representation
func (s PresetSpeechForListAITranslationSpeechOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s PresetSpeechForListAITranslationSpeechOutput) GoString() string {
	return s.String()
}

// SetAudioUrl sets the AudioUrl field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetAudioUrl(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.AudioUrl = &v
	return s
}

// SetGender sets the Gender field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetGender(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.Gender = &v
	return s
}

// SetId sets the Id field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetId(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.Id = &v
	return s
}

// SetLanguage sets the Language field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetLanguage(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.Language = &v
	return s
}

// SetName sets the Name field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetName(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.Name = &v
	return s
}

// SetVoice sets the Voice field's value.
func (s *PresetSpeechForListAITranslationSpeechOutput) SetVoice(v string) *PresetSpeechForListAITranslationSpeechOutput {
	s.Voice = &v
	return s
}

type UserSpeechForListAITranslationSpeechOutput struct {
	_ struct{} `type:"structure"`

	AudioUrl *string `type:"string"`

	Gender *string `type:"string"`

	Id *string `type:"string"`

	Language *string `type:"string"`

	Name *string `type:"string"`

	Voice *string `type:"string"`
}

// String returns the string representation
func (s UserSpeechForListAITranslationSpeechOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UserSpeechForListAITranslationSpeechOutput) GoString() string {
	return s.String()
}

// SetAudioUrl sets the AudioUrl field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetAudioUrl(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.AudioUrl = &v
	return s
}

// SetGender sets the Gender field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetGender(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.Gender = &v
	return s
}

// SetId sets the Id field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetId(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.Id = &v
	return s
}

// SetLanguage sets the Language field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetLanguage(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.Language = &v
	return s
}

// SetName sets the Name field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetName(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.Name = &v
	return s
}

// SetVoice sets the Voice field's value.
func (s *UserSpeechForListAITranslationSpeechOutput) SetVoice(v string) *UserSpeechForListAITranslationSpeechOutput {
	s.Voice = &v
	return s
}
