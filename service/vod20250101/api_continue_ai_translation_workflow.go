// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opContinueAITranslationWorkflowCommon = "ContinueAITranslationWorkflow"

// ContinueAITranslationWorkflowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the ContinueAITranslationWorkflowCommon operation. The "output" return
// value will be populated with the ContinueAITranslationWorkflowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ContinueAITranslationWorkflowCommon Request to send the API call to the service.
// the "output" return value is not valid until after ContinueAITranslationWorkflowCommon Send returns without error.
//
// See ContinueAITranslationWorkflowCommon for more information on using the ContinueAITranslationWorkflowCommon
// API call, and error handling.
//
//    // Example sending a request using the ContinueAITranslationWorkflowCommonRequest method.
//    req, resp := client.ContinueAITranslationWorkflowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) ContinueAITranslationWorkflowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opContinueAITranslationWorkflowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ContinueAITranslationWorkflowCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation ContinueAITranslationWorkflowCommon for usage and error information.
func (c *VOD20250101) ContinueAITranslationWorkflowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.ContinueAITranslationWorkflowCommonRequest(input)
	return out, req.Send()
}

// ContinueAITranslationWorkflowCommonWithContext is the same as ContinueAITranslationWorkflowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See ContinueAITranslationWorkflowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) ContinueAITranslationWorkflowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.ContinueAITranslationWorkflowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opContinueAITranslationWorkflow = "ContinueAITranslationWorkflow"

// ContinueAITranslationWorkflowRequest generates a "volcengine/request.Request" representing the
// client's request for the ContinueAITranslationWorkflow operation. The "output" return
// value will be populated with the ContinueAITranslationWorkflowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned ContinueAITranslationWorkflowCommon Request to send the API call to the service.
// the "output" return value is not valid until after ContinueAITranslationWorkflowCommon Send returns without error.
//
// See ContinueAITranslationWorkflow for more information on using the ContinueAITranslationWorkflow
// API call, and error handling.
//
//    // Example sending a request using the ContinueAITranslationWorkflowRequest method.
//    req, resp := client.ContinueAITranslationWorkflowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) ContinueAITranslationWorkflowRequest(input *ContinueAITranslationWorkflowInput) (req *request.Request, output *ContinueAITranslationWorkflowOutput) {
	op := &request.Operation{
		Name:       opContinueAITranslationWorkflow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &ContinueAITranslationWorkflowInput{}
	}

	output = &ContinueAITranslationWorkflowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// ContinueAITranslationWorkflow API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation ContinueAITranslationWorkflow for usage and error information.
func (c *VOD20250101) ContinueAITranslationWorkflow(input *ContinueAITranslationWorkflowInput) (*ContinueAITranslationWorkflowOutput, error) {
	req, out := c.ContinueAITranslationWorkflowRequest(input)
	return out, req.Send()
}

// ContinueAITranslationWorkflowWithContext is the same as ContinueAITranslationWorkflow with the addition of
// the ability to pass a context and additional request options.
//
// See ContinueAITranslationWorkflow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) ContinueAITranslationWorkflowWithContext(ctx volcengine.Context, input *ContinueAITranslationWorkflowInput, opts ...request.Option) (*ContinueAITranslationWorkflowOutput, error) {
	req, out := c.ContinueAITranslationWorkflowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type ContinueAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// ProjectId is a required field
	ProjectId *string `type:"string" json:",omitempty" required:"true"`

	// SpaceName is a required field
	SpaceName *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s ContinueAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContinueAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *ContinueAITranslationWorkflowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "ContinueAITranslationWorkflowInput"}
	if s.ProjectId == nil {
		invalidParams.Add(request.NewErrParamRequired("ProjectId"))
	}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetProjectId sets the ProjectId field's value.
func (s *ContinueAITranslationWorkflowInput) SetProjectId(v string) *ContinueAITranslationWorkflowInput {
	s.ProjectId = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *ContinueAITranslationWorkflowInput) SetSpaceName(v string) *ContinueAITranslationWorkflowInput {
	s.SpaceName = &v
	return s
}

type ContinueAITranslationWorkflowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ProjectBaseInfo *ProjectBaseInfoForContinueAITranslationWorkflowOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s ContinueAITranslationWorkflowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ContinueAITranslationWorkflowOutput) GoString() string {
	return s.String()
}

// SetProjectBaseInfo sets the ProjectBaseInfo field's value.
func (s *ContinueAITranslationWorkflowOutput) SetProjectBaseInfo(v *ProjectBaseInfoForContinueAITranslationWorkflowOutput) *ContinueAITranslationWorkflowOutput {
	s.ProjectBaseInfo = v
	return s
}

type ProjectBaseInfoForContinueAITranslationWorkflowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectId *string `type:"string" json:",omitempty"`

	ProjectVersion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ProjectBaseInfoForContinueAITranslationWorkflowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProjectBaseInfoForContinueAITranslationWorkflowOutput) GoString() string {
	return s.String()
}

// SetProjectId sets the ProjectId field's value.
func (s *ProjectBaseInfoForContinueAITranslationWorkflowOutput) SetProjectId(v string) *ProjectBaseInfoForContinueAITranslationWorkflowOutput {
	s.ProjectId = &v
	return s
}

// SetProjectVersion sets the ProjectVersion field's value.
func (s *ProjectBaseInfoForContinueAITranslationWorkflowOutput) SetProjectVersion(v string) *ProjectBaseInfoForContinueAITranslationWorkflowOutput {
	s.ProjectVersion = &v
	return s
}
