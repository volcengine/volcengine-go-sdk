// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opCreateAITranslationSpeechCommon = "CreateAITranslationSpeech"

// CreateAITranslationSpeechCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAITranslationSpeechCommon operation. The "output" return
// value will be populated with the CreateAITranslationSpeechCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAITranslationSpeechCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAITranslationSpeechCommon Send returns without error.
//
// See CreateAITranslationSpeechCommon for more information on using the CreateAITranslationSpeechCommon
// API call, and error handling.
//
//    // Example sending a request using the CreateAITranslationSpeechCommonRequest method.
//    req, resp := client.CreateAITranslationSpeechCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) CreateAITranslationSpeechCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opCreateAITranslationSpeechCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAITranslationSpeechCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation CreateAITranslationSpeechCommon for usage and error information.
func (c *VOD20250101) CreateAITranslationSpeechCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.CreateAITranslationSpeechCommonRequest(input)
	return out, req.Send()
}

// CreateAITranslationSpeechCommonWithContext is the same as CreateAITranslationSpeechCommon with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAITranslationSpeechCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) CreateAITranslationSpeechCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.CreateAITranslationSpeechCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opCreateAITranslationSpeech = "CreateAITranslationSpeech"

// CreateAITranslationSpeechRequest generates a "volcengine/request.Request" representing the
// client's request for the CreateAITranslationSpeech operation. The "output" return
// value will be populated with the CreateAITranslationSpeechCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned CreateAITranslationSpeechCommon Request to send the API call to the service.
// the "output" return value is not valid until after CreateAITranslationSpeechCommon Send returns without error.
//
// See CreateAITranslationSpeech for more information on using the CreateAITranslationSpeech
// API call, and error handling.
//
//    // Example sending a request using the CreateAITranslationSpeechRequest method.
//    req, resp := client.CreateAITranslationSpeechRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) CreateAITranslationSpeechRequest(input *CreateAITranslationSpeechInput) (req *request.Request, output *CreateAITranslationSpeechOutput) {
	op := &request.Operation{
		Name:       opCreateAITranslationSpeech,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &CreateAITranslationSpeechInput{}
	}

	output = &CreateAITranslationSpeechOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// CreateAITranslationSpeech API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation CreateAITranslationSpeech for usage and error information.
func (c *VOD20250101) CreateAITranslationSpeech(input *CreateAITranslationSpeechInput) (*CreateAITranslationSpeechOutput, error) {
	req, out := c.CreateAITranslationSpeechRequest(input)
	return out, req.Send()
}

// CreateAITranslationSpeechWithContext is the same as CreateAITranslationSpeech with the addition of
// the ability to pass a context and additional request options.
//
// See CreateAITranslationSpeech for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) CreateAITranslationSpeechWithContext(ctx volcengine.Context, input *CreateAITranslationSpeechInput, opts ...request.Option) (*CreateAITranslationSpeechOutput, error) {
	req, out := c.CreateAITranslationSpeechRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type CreateAITranslationSpeechInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// AudioFileName is a required field
	AudioFileName *string `type:"string" json:",omitempty" required:"true"`

	// SourceLanguage is a required field
	SourceLanguage *string `type:"string" json:",omitempty" required:"true"`

	// SpaceName is a required field
	SpaceName *string `type:"string" json:",omitempty" required:"true"`

	// SpeechName is a required field
	SpeechName *string `type:"string" json:",omitempty" required:"true"`

	// TargetLanguage is a required field
	TargetLanguage *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s CreateAITranslationSpeechInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAITranslationSpeechInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *CreateAITranslationSpeechInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "CreateAITranslationSpeechInput"}
	if s.AudioFileName == nil {
		invalidParams.Add(request.NewErrParamRequired("AudioFileName"))
	}
	if s.SourceLanguage == nil {
		invalidParams.Add(request.NewErrParamRequired("SourceLanguage"))
	}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}
	if s.SpeechName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpeechName"))
	}
	if s.TargetLanguage == nil {
		invalidParams.Add(request.NewErrParamRequired("TargetLanguage"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetAudioFileName sets the AudioFileName field's value.
func (s *CreateAITranslationSpeechInput) SetAudioFileName(v string) *CreateAITranslationSpeechInput {
	s.AudioFileName = &v
	return s
}

// SetSourceLanguage sets the SourceLanguage field's value.
func (s *CreateAITranslationSpeechInput) SetSourceLanguage(v string) *CreateAITranslationSpeechInput {
	s.SourceLanguage = &v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *CreateAITranslationSpeechInput) SetSpaceName(v string) *CreateAITranslationSpeechInput {
	s.SpaceName = &v
	return s
}

// SetSpeechName sets the SpeechName field's value.
func (s *CreateAITranslationSpeechInput) SetSpeechName(v string) *CreateAITranslationSpeechInput {
	s.SpeechName = &v
	return s
}

// SetTargetLanguage sets the TargetLanguage field's value.
func (s *CreateAITranslationSpeechInput) SetTargetLanguage(v string) *CreateAITranslationSpeechInput {
	s.TargetLanguage = &v
	return s
}

type CreateAITranslationSpeechOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	Speech *SpeechForCreateAITranslationSpeechOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s CreateAITranslationSpeechOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s CreateAITranslationSpeechOutput) GoString() string {
	return s.String()
}

// SetSpeech sets the Speech field's value.
func (s *CreateAITranslationSpeechOutput) SetSpeech(v *SpeechForCreateAITranslationSpeechOutput) *CreateAITranslationSpeechOutput {
	s.Speech = v
	return s
}

type SpeechForCreateAITranslationSpeechOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	AudioUrl *string `type:"string" json:",omitempty"`

	Gender *string `type:"string" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	Language *string `type:"string" json:",omitempty"`

	Name *string `type:"string" json:",omitempty"`

	Voice *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SpeechForCreateAITranslationSpeechOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SpeechForCreateAITranslationSpeechOutput) GoString() string {
	return s.String()
}

// SetAudioUrl sets the AudioUrl field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetAudioUrl(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.AudioUrl = &v
	return s
}

// SetGender sets the Gender field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetGender(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.Gender = &v
	return s
}

// SetId sets the Id field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetId(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.Id = &v
	return s
}

// SetLanguage sets the Language field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetLanguage(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.Language = &v
	return s
}

// SetName sets the Name field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetName(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.Name = &v
	return s
}

// SetVoice sets the Voice field's value.
func (s *SpeechForCreateAITranslationSpeechOutput) SetVoice(v string) *SpeechForCreateAITranslationSpeechOutput {
	s.Voice = &v
	return s
}
