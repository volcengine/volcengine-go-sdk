// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opDeleteAITermItemCommon = "DeleteAITermItem"

// DeleteAITermItemCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAITermItemCommon operation. The "output" return
// value will be populated with the DeleteAITermItemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAITermItemCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAITermItemCommon Send returns without error.
//
// See DeleteAITermItemCommon for more information on using the DeleteAITermItemCommon
// API call, and error handling.
//
//    // Example sending a request using the DeleteAITermItemCommonRequest method.
//    req, resp := client.DeleteAITermItemCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) DeleteAITermItemCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opDeleteAITermItemCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAITermItemCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation DeleteAITermItemCommon for usage and error information.
func (c *VOD20250101) DeleteAITermItemCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.DeleteAITermItemCommonRequest(input)
	return out, req.Send()
}

// DeleteAITermItemCommonWithContext is the same as DeleteAITermItemCommon with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAITermItemCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) DeleteAITermItemCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.DeleteAITermItemCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opDeleteAITermItem = "DeleteAITermItem"

// DeleteAITermItemRequest generates a "volcengine/request.Request" representing the
// client's request for the DeleteAITermItem operation. The "output" return
// value will be populated with the DeleteAITermItemCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned DeleteAITermItemCommon Request to send the API call to the service.
// the "output" return value is not valid until after DeleteAITermItemCommon Send returns without error.
//
// See DeleteAITermItem for more information on using the DeleteAITermItem
// API call, and error handling.
//
//    // Example sending a request using the DeleteAITermItemRequest method.
//    req, resp := client.DeleteAITermItemRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) DeleteAITermItemRequest(input *DeleteAITermItemInput) (req *request.Request, output *DeleteAITermItemOutput) {
	op := &request.Operation{
		Name:       opDeleteAITermItem,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &DeleteAITermItemInput{}
	}

	output = &DeleteAITermItemOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// DeleteAITermItem API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation DeleteAITermItem for usage and error information.
func (c *VOD20250101) DeleteAITermItem(input *DeleteAITermItemInput) (*DeleteAITermItemOutput, error) {
	req, out := c.DeleteAITermItemRequest(input)
	return out, req.Send()
}

// DeleteAITermItemWithContext is the same as DeleteAITermItem with the addition of
// the ability to pass a context and additional request options.
//
// See DeleteAITermItem for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) DeleteAITermItemWithContext(ctx volcengine.Context, input *DeleteAITermItemInput, opts ...request.Option) (*DeleteAITermItemOutput, error) {
	req, out := c.DeleteAITermItemRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type DeleteAITermItemInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// SpaceName is a required field
	SpaceName *string `type:"string" json:",omitempty" required:"true"`

	TermItemSourceTexts []*string `type:"list" json:",omitempty"`

	// TermbaseId is a required field
	TermbaseId *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s DeleteAITermItemInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAITermItemInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *DeleteAITermItemInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "DeleteAITermItemInput"}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}
	if s.TermbaseId == nil {
		invalidParams.Add(request.NewErrParamRequired("TermbaseId"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetSpaceName sets the SpaceName field's value.
func (s *DeleteAITermItemInput) SetSpaceName(v string) *DeleteAITermItemInput {
	s.SpaceName = &v
	return s
}

// SetTermItemSourceTexts sets the TermItemSourceTexts field's value.
func (s *DeleteAITermItemInput) SetTermItemSourceTexts(v []*string) *DeleteAITermItemInput {
	s.TermItemSourceTexts = v
	return s
}

// SetTermbaseId sets the TermbaseId field's value.
func (s *DeleteAITermItemInput) SetTermbaseId(v string) *DeleteAITermItemInput {
	s.TermbaseId = &v
	return s
}

type DeleteAITermItemOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s DeleteAITermItemOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s DeleteAITermItemOutput) GoString() string {
	return s.String()
}
