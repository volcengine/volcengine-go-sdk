// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opSubmitAITranslationWorkflowCommon = "SubmitAITranslationWorkflow"

// SubmitAITranslationWorkflowCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the SubmitAITranslationWorkflowCommon operation. The "output" return
// value will be populated with the SubmitAITranslationWorkflowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SubmitAITranslationWorkflowCommon Request to send the API call to the service.
// the "output" return value is not valid until after SubmitAITranslationWorkflowCommon Send returns without error.
//
// See SubmitAITranslationWorkflowCommon for more information on using the SubmitAITranslationWorkflowCommon
// API call, and error handling.
//
//    // Example sending a request using the SubmitAITranslationWorkflowCommonRequest method.
//    req, resp := client.SubmitAITranslationWorkflowCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) SubmitAITranslationWorkflowCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opSubmitAITranslationWorkflowCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SubmitAITranslationWorkflowCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation SubmitAITranslationWorkflowCommon for usage and error information.
func (c *VOD20250101) SubmitAITranslationWorkflowCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.SubmitAITranslationWorkflowCommonRequest(input)
	return out, req.Send()
}

// SubmitAITranslationWorkflowCommonWithContext is the same as SubmitAITranslationWorkflowCommon with the addition of
// the ability to pass a context and additional request options.
//
// See SubmitAITranslationWorkflowCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) SubmitAITranslationWorkflowCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.SubmitAITranslationWorkflowCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opSubmitAITranslationWorkflow = "SubmitAITranslationWorkflow"

// SubmitAITranslationWorkflowRequest generates a "volcengine/request.Request" representing the
// client's request for the SubmitAITranslationWorkflow operation. The "output" return
// value will be populated with the SubmitAITranslationWorkflowCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned SubmitAITranslationWorkflowCommon Request to send the API call to the service.
// the "output" return value is not valid until after SubmitAITranslationWorkflowCommon Send returns without error.
//
// See SubmitAITranslationWorkflow for more information on using the SubmitAITranslationWorkflow
// API call, and error handling.
//
//    // Example sending a request using the SubmitAITranslationWorkflowRequest method.
//    req, resp := client.SubmitAITranslationWorkflowRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) SubmitAITranslationWorkflowRequest(input *SubmitAITranslationWorkflowInput) (req *request.Request, output *SubmitAITranslationWorkflowOutput) {
	op := &request.Operation{
		Name:       opSubmitAITranslationWorkflow,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &SubmitAITranslationWorkflowInput{}
	}

	output = &SubmitAITranslationWorkflowOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// SubmitAITranslationWorkflow API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation SubmitAITranslationWorkflow for usage and error information.
func (c *VOD20250101) SubmitAITranslationWorkflow(input *SubmitAITranslationWorkflowInput) (*SubmitAITranslationWorkflowOutput, error) {
	req, out := c.SubmitAITranslationWorkflowRequest(input)
	return out, req.Send()
}

// SubmitAITranslationWorkflowWithContext is the same as SubmitAITranslationWorkflow with the addition of
// the ability to pass a context and additional request options.
//
// See SubmitAITranslationWorkflow for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) SubmitAITranslationWorkflowWithContext(ctx volcengine.Context, input *SubmitAITranslationWorkflowInput, opts ...request.Option) (*SubmitAITranslationWorkflowOutput, error) {
	req, out := c.SubmitAITranslationWorkflowRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type OperatorConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SubtitleRecognitionConfig *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s OperatorConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s OperatorConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetSubtitleRecognitionConfig sets the SubtitleRecognitionConfig field's value.
func (s *OperatorConfigForSubmitAITranslationWorkflowInput) SetSubtitleRecognitionConfig(v *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) *OperatorConfigForSubmitAITranslationWorkflowInput {
	s.SubtitleRecognitionConfig = v
	return s
}

type ProcessConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	DisableSmartSubtitleRewrite *bool `type:"boolean" json:",omitempty"`

	DisableSubtitlePunctSplit *bool `type:"boolean" json:",omitempty"`

	SuspensionStageList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s ProcessConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProcessConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetDisableSmartSubtitleRewrite sets the DisableSmartSubtitleRewrite field's value.
func (s *ProcessConfigForSubmitAITranslationWorkflowInput) SetDisableSmartSubtitleRewrite(v bool) *ProcessConfigForSubmitAITranslationWorkflowInput {
	s.DisableSmartSubtitleRewrite = &v
	return s
}

// SetDisableSubtitlePunctSplit sets the DisableSubtitlePunctSplit field's value.
func (s *ProcessConfigForSubmitAITranslationWorkflowInput) SetDisableSubtitlePunctSplit(v bool) *ProcessConfigForSubmitAITranslationWorkflowInput {
	s.DisableSubtitlePunctSplit = &v
	return s
}

// SetSuspensionStageList sets the SuspensionStageList field's value.
func (s *ProcessConfigForSubmitAITranslationWorkflowInput) SetSuspensionStageList(v []*string) *ProcessConfigForSubmitAITranslationWorkflowInput {
	s.SuspensionStageList = v
	return s
}

type ProjectBaseInfoForSubmitAITranslationWorkflowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	ProjectId *string `type:"string" json:",omitempty"`

	ProjectVersion *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s ProjectBaseInfoForSubmitAITranslationWorkflowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s ProjectBaseInfoForSubmitAITranslationWorkflowOutput) GoString() string {
	return s.String()
}

// SetProjectId sets the ProjectId field's value.
func (s *ProjectBaseInfoForSubmitAITranslationWorkflowOutput) SetProjectId(v string) *ProjectBaseInfoForSubmitAITranslationWorkflowOutput {
	s.ProjectId = &v
	return s
}

// SetProjectVersion sets the ProjectVersion field's value.
func (s *ProjectBaseInfoForSubmitAITranslationWorkflowOutput) SetProjectVersion(v string) *ProjectBaseInfoForSubmitAITranslationWorkflowOutput {
	s.ProjectVersion = &v
	return s
}

type SubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	OperatorConfig *OperatorConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`

	ProcessConfig *ProcessConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`

	// SpaceName is a required field
	SpaceName *string `type:"string" json:",omitempty" required:"true"`

	SubtitleConfig *SubtitleConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`

	TranslationConfig *TranslationConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`

	// Vid is a required field
	Vid *string `type:"string" json:",omitempty" required:"true"`
}

// String returns the string representation
func (s SubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *SubmitAITranslationWorkflowInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "SubmitAITranslationWorkflowInput"}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}
	if s.Vid == nil {
		invalidParams.Add(request.NewErrParamRequired("Vid"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetOperatorConfig sets the OperatorConfig field's value.
func (s *SubmitAITranslationWorkflowInput) SetOperatorConfig(v *OperatorConfigForSubmitAITranslationWorkflowInput) *SubmitAITranslationWorkflowInput {
	s.OperatorConfig = v
	return s
}

// SetProcessConfig sets the ProcessConfig field's value.
func (s *SubmitAITranslationWorkflowInput) SetProcessConfig(v *ProcessConfigForSubmitAITranslationWorkflowInput) *SubmitAITranslationWorkflowInput {
	s.ProcessConfig = v
	return s
}

// SetSpaceName sets the SpaceName field's value.
func (s *SubmitAITranslationWorkflowInput) SetSpaceName(v string) *SubmitAITranslationWorkflowInput {
	s.SpaceName = &v
	return s
}

// SetSubtitleConfig sets the SubtitleConfig field's value.
func (s *SubmitAITranslationWorkflowInput) SetSubtitleConfig(v *SubtitleConfigForSubmitAITranslationWorkflowInput) *SubmitAITranslationWorkflowInput {
	s.SubtitleConfig = v
	return s
}

// SetTranslationConfig sets the TranslationConfig field's value.
func (s *SubmitAITranslationWorkflowInput) SetTranslationConfig(v *TranslationConfigForSubmitAITranslationWorkflowInput) *SubmitAITranslationWorkflowInput {
	s.TranslationConfig = v
	return s
}

// SetVid sets the Vid field's value.
func (s *SubmitAITranslationWorkflowInput) SetVid(v string) *SubmitAITranslationWorkflowInput {
	s.Vid = &v
	return s
}

type SubmitAITranslationWorkflowOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata

	ProjectBaseInfo *ProjectBaseInfoForSubmitAITranslationWorkflowOutput `type:"structure" json:",omitempty"`
}

// String returns the string representation
func (s SubmitAITranslationWorkflowOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubmitAITranslationWorkflowOutput) GoString() string {
	return s.String()
}

// SetProjectBaseInfo sets the ProjectBaseInfo field's value.
func (s *SubmitAITranslationWorkflowOutput) SetProjectBaseInfo(v *ProjectBaseInfoForSubmitAITranslationWorkflowOutput) *SubmitAITranslationWorkflowOutput {
	s.ProjectBaseInfo = v
	return s
}

type SubtitleConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	FontSize *int32 `type:"int32" json:",omitempty"`

	IsEraseSource *bool `type:"boolean" json:",omitempty"`

	IsHardSubtitle *bool `type:"boolean" json:",omitempty"`

	MarginL *float64 `type:"double" json:",omitempty"`

	MarginR *float64 `type:"double" json:",omitempty"`

	MarginV *float64 `type:"double" json:",omitempty"`

	ShowLines *int32 `type:"int32" json:",omitempty"`
}

// String returns the string representation
func (s SubtitleConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubtitleConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetFontSize sets the FontSize field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetFontSize(v int32) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.FontSize = &v
	return s
}

// SetIsEraseSource sets the IsEraseSource field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetIsEraseSource(v bool) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.IsEraseSource = &v
	return s
}

// SetIsHardSubtitle sets the IsHardSubtitle field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetIsHardSubtitle(v bool) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.IsHardSubtitle = &v
	return s
}

// SetMarginL sets the MarginL field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetMarginL(v float64) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.MarginL = &v
	return s
}

// SetMarginR sets the MarginR field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetMarginR(v float64) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.MarginR = &v
	return s
}

// SetMarginV sets the MarginV field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetMarginV(v float64) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.MarginV = &v
	return s
}

// SetShowLines sets the ShowLines field's value.
func (s *SubtitleConfigForSubmitAITranslationWorkflowInput) SetShowLines(v int32) *SubtitleConfigForSubmitAITranslationWorkflowInput {
	s.ShowLines = &v
	return s
}

type SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	BilingualSubtitleFileName *string `type:"string" json:",omitempty"`

	RecognitionType *string `type:"string" json:",omitempty"`

	SourceSubtitleFileName *string `type:"string" json:",omitempty"`

	SubtitleFileName *string `type:"string" json:",omitempty"`

	TargetSubtitleFileName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetBilingualSubtitleFileName sets the BilingualSubtitleFileName field's value.
func (s *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) SetBilingualSubtitleFileName(v string) *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput {
	s.BilingualSubtitleFileName = &v
	return s
}

// SetRecognitionType sets the RecognitionType field's value.
func (s *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) SetRecognitionType(v string) *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput {
	s.RecognitionType = &v
	return s
}

// SetSourceSubtitleFileName sets the SourceSubtitleFileName field's value.
func (s *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) SetSourceSubtitleFileName(v string) *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput {
	s.SourceSubtitleFileName = &v
	return s
}

// SetSubtitleFileName sets the SubtitleFileName field's value.
func (s *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) SetSubtitleFileName(v string) *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput {
	s.SubtitleFileName = &v
	return s
}

// SetTargetSubtitleFileName sets the TargetSubtitleFileName field's value.
func (s *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput) SetTargetSubtitleFileName(v string) *SubtitleRecognitionConfigForSubmitAITranslationWorkflowInput {
	s.TargetSubtitleFileName = &v
	return s
}

type TermbaseConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	TranslationTermbaseIds []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TermbaseConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TermbaseConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetTranslationTermbaseIds sets the TranslationTermbaseIds field's value.
func (s *TermbaseConfigForSubmitAITranslationWorkflowInput) SetTranslationTermbaseIds(v []*string) *TermbaseConfigForSubmitAITranslationWorkflowInput {
	s.TranslationTermbaseIds = v
	return s
}

type TranslationConfigForSubmitAITranslationWorkflowInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	SourceLanguage *string `type:"string" json:",omitempty"`

	TargetLanguage *string `type:"string" json:",omitempty"`

	TermbaseConfig *TermbaseConfigForSubmitAITranslationWorkflowInput `type:"structure" json:",omitempty"`

	TranslationTypeList []*string `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s TranslationConfigForSubmitAITranslationWorkflowInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s TranslationConfigForSubmitAITranslationWorkflowInput) GoString() string {
	return s.String()
}

// SetSourceLanguage sets the SourceLanguage field's value.
func (s *TranslationConfigForSubmitAITranslationWorkflowInput) SetSourceLanguage(v string) *TranslationConfigForSubmitAITranslationWorkflowInput {
	s.SourceLanguage = &v
	return s
}

// SetTargetLanguage sets the TargetLanguage field's value.
func (s *TranslationConfigForSubmitAITranslationWorkflowInput) SetTargetLanguage(v string) *TranslationConfigForSubmitAITranslationWorkflowInput {
	s.TargetLanguage = &v
	return s
}

// SetTermbaseConfig sets the TermbaseConfig field's value.
func (s *TranslationConfigForSubmitAITranslationWorkflowInput) SetTermbaseConfig(v *TermbaseConfigForSubmitAITranslationWorkflowInput) *TranslationConfigForSubmitAITranslationWorkflowInput {
	s.TermbaseConfig = v
	return s
}

// SetTranslationTypeList sets the TranslationTypeList field's value.
func (s *TranslationConfigForSubmitAITranslationWorkflowInput) SetTranslationTypeList(v []*string) *TranslationConfigForSubmitAITranslationWorkflowInput {
	s.TranslationTypeList = v
	return s
}
