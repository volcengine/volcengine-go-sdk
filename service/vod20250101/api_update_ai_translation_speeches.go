// Code generated by volcengine with private/model/cli/gen-api/main.go. DO NOT EDIT.

package vod20250101

import (
	"github.com/volcengine/volcengine-go-sdk/volcengine"
	"github.com/volcengine/volcengine-go-sdk/volcengine/request"
	"github.com/volcengine/volcengine-go-sdk/volcengine/response"
	"github.com/volcengine/volcengine-go-sdk/volcengine/volcengineutil"
)

const opUpdateAITranslationSpeechesCommon = "UpdateAITranslationSpeeches"

// UpdateAITranslationSpeechesCommonRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAITranslationSpeechesCommon operation. The "output" return
// value will be populated with the UpdateAITranslationSpeechesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAITranslationSpeechesCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAITranslationSpeechesCommon Send returns without error.
//
// See UpdateAITranslationSpeechesCommon for more information on using the UpdateAITranslationSpeechesCommon
// API call, and error handling.
//
//    // Example sending a request using the UpdateAITranslationSpeechesCommonRequest method.
//    req, resp := client.UpdateAITranslationSpeechesCommonRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) UpdateAITranslationSpeechesCommonRequest(input *map[string]interface{}) (req *request.Request, output *map[string]interface{}) {
	op := &request.Operation{
		Name:       opUpdateAITranslationSpeechesCommon,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &map[string]interface{}{}
	}

	output = &map[string]interface{}{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAITranslationSpeechesCommon API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation UpdateAITranslationSpeechesCommon for usage and error information.
func (c *VOD20250101) UpdateAITranslationSpeechesCommon(input *map[string]interface{}) (*map[string]interface{}, error) {
	req, out := c.UpdateAITranslationSpeechesCommonRequest(input)
	return out, req.Send()
}

// UpdateAITranslationSpeechesCommonWithContext is the same as UpdateAITranslationSpeechesCommon with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAITranslationSpeechesCommon for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. If the context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) UpdateAITranslationSpeechesCommonWithContext(ctx volcengine.Context, input *map[string]interface{}, opts ...request.Option) (*map[string]interface{}, error) {
	req, out := c.UpdateAITranslationSpeechesCommonRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

const opUpdateAITranslationSpeeches = "UpdateAITranslationSpeeches"

// UpdateAITranslationSpeechesRequest generates a "volcengine/request.Request" representing the
// client's request for the UpdateAITranslationSpeeches operation. The "output" return
// value will be populated with the UpdateAITranslationSpeechesCommon request's response once the request completes
// successfully.
//
// Use "Send" method on the returned UpdateAITranslationSpeechesCommon Request to send the API call to the service.
// the "output" return value is not valid until after UpdateAITranslationSpeechesCommon Send returns without error.
//
// See UpdateAITranslationSpeeches for more information on using the UpdateAITranslationSpeeches
// API call, and error handling.
//
//    // Example sending a request using the UpdateAITranslationSpeechesRequest method.
//    req, resp := client.UpdateAITranslationSpeechesRequest(params)
//
//    err := req.Send()
//    if err == nil { // resp is now filled
//        fmt.Println(resp)
//    }
func (c *VOD20250101) UpdateAITranslationSpeechesRequest(input *UpdateAITranslationSpeechesInput) (req *request.Request, output *UpdateAITranslationSpeechesOutput) {
	op := &request.Operation{
		Name:       opUpdateAITranslationSpeeches,
		HTTPMethod: "POST",
		HTTPPath:   "/",
	}

	if input == nil {
		input = &UpdateAITranslationSpeechesInput{}
	}

	output = &UpdateAITranslationSpeechesOutput{}
	req = c.newRequest(op, input, output)

	req.HTTPRequest.Header.Set("Content-Type", "application/json; charset=utf-8")

	return
}

// UpdateAITranslationSpeeches API operation for VOD20250101.
//
// Returns volcengineerr.Error for service API and SDK errors. Use runtime type assertions
// with volcengineerr.Error's Code and Message methods to get detailed information about
// the error.
//
// See the VOLCENGINE API reference guide for VOD20250101's
// API operation UpdateAITranslationSpeeches for usage and error information.
func (c *VOD20250101) UpdateAITranslationSpeeches(input *UpdateAITranslationSpeechesInput) (*UpdateAITranslationSpeechesOutput, error) {
	req, out := c.UpdateAITranslationSpeechesRequest(input)
	return out, req.Send()
}

// UpdateAITranslationSpeechesWithContext is the same as UpdateAITranslationSpeeches with the addition of
// the ability to pass a context and additional request options.
//
// See UpdateAITranslationSpeeches for details on how to use this API operation.
//
// The context must be non-nil and will be used for request cancellation. Ifthe context is nil a panic will occur.
// In the future the SDK may create sub-contexts for http.Requests. See https://golang.org/pkg/context/
// for more information on using Contexts.
func (c *VOD20250101) UpdateAITranslationSpeechesWithContext(ctx volcengine.Context, input *UpdateAITranslationSpeechesInput, opts ...request.Option) (*UpdateAITranslationSpeechesOutput, error) {
	req, out := c.UpdateAITranslationSpeechesRequest(input)
	req.SetContext(ctx)
	req.ApplyOptions(opts...)
	return out, req.Send()
}

type SpeechForUpdateAITranslationSpeechesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Id *string `type:"string" json:",omitempty"`

	SpeechName *string `type:"string" json:",omitempty"`
}

// String returns the string representation
func (s SpeechForUpdateAITranslationSpeechesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s SpeechForUpdateAITranslationSpeechesInput) GoString() string {
	return s.String()
}

// SetId sets the Id field's value.
func (s *SpeechForUpdateAITranslationSpeechesInput) SetId(v string) *SpeechForUpdateAITranslationSpeechesInput {
	s.Id = &v
	return s
}

// SetSpeechName sets the SpeechName field's value.
func (s *SpeechForUpdateAITranslationSpeechesInput) SetSpeechName(v string) *SpeechForUpdateAITranslationSpeechesInput {
	s.SpeechName = &v
	return s
}

type UpdateAITranslationSpeechesInput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	// SpaceName is a required field
	SpaceName *string `type:"string" json:",omitempty" required:"true"`

	Speeches []*SpeechForUpdateAITranslationSpeechesInput `type:"list" json:",omitempty"`
}

// String returns the string representation
func (s UpdateAITranslationSpeechesInput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAITranslationSpeechesInput) GoString() string {
	return s.String()
}

// Validate inspects the fields of the type to determine if they are valid.
func (s *UpdateAITranslationSpeechesInput) Validate() error {
	invalidParams := request.ErrInvalidParams{Context: "UpdateAITranslationSpeechesInput"}
	if s.SpaceName == nil {
		invalidParams.Add(request.NewErrParamRequired("SpaceName"))
	}

	if invalidParams.Len() > 0 {
		return invalidParams
	}
	return nil
}

// SetSpaceName sets the SpaceName field's value.
func (s *UpdateAITranslationSpeechesInput) SetSpaceName(v string) *UpdateAITranslationSpeechesInput {
	s.SpaceName = &v
	return s
}

// SetSpeeches sets the Speeches field's value.
func (s *UpdateAITranslationSpeechesInput) SetSpeeches(v []*SpeechForUpdateAITranslationSpeechesInput) *UpdateAITranslationSpeechesInput {
	s.Speeches = v
	return s
}

type UpdateAITranslationSpeechesOutput struct {
	_ struct{} `type:"structure" json:",omitempty"`

	Metadata *response.ResponseMetadata
}

// String returns the string representation
func (s UpdateAITranslationSpeechesOutput) String() string {
	return volcengineutil.Prettify(s)
}

// GoString returns the string representation
func (s UpdateAITranslationSpeechesOutput) GoString() string {
	return s.String()
}
